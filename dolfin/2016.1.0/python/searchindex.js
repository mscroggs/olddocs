Search.setIndex({docnames:["demo/documented/auto-adaptive-poisson/python/documentation","demo/documented/bcs/python/documentation","demo/documented/biharmonic/python/documentation","demo/documented/built-in-meshes/python/documentation","demo/documented/cahn-hilliard/python/documentation","demo/documented/eigenvalue/python/documentation","demo/documented/hyperelasticity/python/documentation","demo/documented/mixed-poisson-dual/python/documentation","demo/documented/mixed-poisson/python/documentation","demo/documented/navier-stokes/python/documentation","demo/documented/neumann-poisson/python/documentation","demo/documented/nonlinear-poisson/python/documentation","demo/documented/periodic/python/documentation","demo/documented/poisson/python/documentation","demo/documented/singular-poisson/python/documentation","demo/documented/stokes-iterative/python/documentation","demo/documented/stokes-mini/python/documentation","demo/documented/stokes-taylor-hood/python/documentation","demo/documented/subdomains-poisson/python/documentation","demo/documented/subdomains/python/documentation","demo/documented/tensor-weighted-poisson/python/documentation","demo/index","index","programmers-reference/common/constants/index","programmers-reference/common/globalparameters/index","programmers-reference/common/index","programmers-reference/common/math/index","programmers-reference/common/math/sqr","programmers-reference/common/memory/index","programmers-reference/common/memory/memory_usage","programmers-reference/common/plotting/index","programmers-reference/common/plotting/plot","programmers-reference/common/time/index","programmers-reference/compilemodules/compilemodule/compile_extension_module","programmers-reference/compilemodules/compilemodule/expression_to_code_fragments","programmers-reference/compilemodules/compilemodule/index","programmers-reference/compilemodules/expressions/compile_expressions","programmers-reference/compilemodules/expressions/index","programmers-reference/compilemodules/index","programmers-reference/compilemodules/jit/index","programmers-reference/compilemodules/jit/jit","programmers-reference/compilemodules/subdomains/CompiledSubDomain","programmers-reference/compilemodules/subdomains/index","programmers-reference/compilemodules/swigimportinfo/index","programmers-reference/cpp/common/BoolParameter","programmers-reference/cpp/common/DoubleArray","programmers-reference/cpp/common/DoubleParameter","programmers-reference/cpp/common/Event","programmers-reference/cpp/common/GlobalParameters","programmers-reference/cpp/common/GlobalParameters_default_parameters","programmers-reference/cpp/common/IndexSet","programmers-reference/cpp/common/IntArray","programmers-reference/cpp/common/IntParameter","programmers-reference/cpp/common/MPI","programmers-reference/cpp/common/MPIInfo","programmers-reference/cpp/common/MPI_Comm","programmers-reference/cpp/common/MPI_MPI_AVG","programmers-reference/cpp/common/MPI_avg","programmers-reference/cpp/common/MPI_barrier","programmers-reference/cpp/common/MPI_compute_local_range","programmers-reference/cpp/common/MPI_gather","programmers-reference/cpp/common/MPI_global_offset","programmers-reference/cpp/common/MPI_index_owner","programmers-reference/cpp/common/MPI_is_broadcaster","programmers-reference/cpp/common/MPI_is_receiver","programmers-reference/cpp/common/MPI_local_range","programmers-reference/cpp/common/MPI_max","programmers-reference/cpp/common/MPI_min","programmers-reference/cpp/common/MPI_rank","programmers-reference/cpp/common/MPI_size","programmers-reference/cpp/common/MPI_sum","programmers-reference/cpp/common/ParameterValue","programmers-reference/cpp/common/Parameters","programmers-reference/cpp/common/Progress","programmers-reference/cpp/common/StringParameter","programmers-reference/cpp/common/SubSystemsManager","programmers-reference/cpp/common/SubSystemsManager_finalize","programmers-reference/cpp/common/SubSystemsManager_init_mpi","programmers-reference/cpp/common/SubSystemsManager_init_petsc","programmers-reference/cpp/common/SubSystemsManager_mpi_finalized","programmers-reference/cpp/common/SubSystemsManager_mpi_initialized","programmers-reference/cpp/common/SubSystemsManager_responsible_mpi","programmers-reference/cpp/common/SubSystemsManager_responsible_petsc","programmers-reference/cpp/common/SubSystemsManager_singleton","programmers-reference/cpp/common/Table","programmers-reference/cpp/common/TableEntry","programmers-reference/cpp/common/Timer","programmers-reference/cpp/common/UIntArray","programmers-reference/cpp/common/Variable","programmers-reference/cpp/common/begin","programmers-reference/cpp/common/debug","programmers-reference/cpp/common/deprecation","programmers-reference/cpp/common/dolfin_error","programmers-reference/cpp/common/dolfin_version","programmers-reference/cpp/common/dump_timings_to_xml","programmers-reference/cpp/common/end","programmers-reference/cpp/common/error","programmers-reference/cpp/common/get_log_level","programmers-reference/cpp/common/git_commit_hash","programmers-reference/cpp/common/has_cholmod","programmers-reference/cpp/common/has_hdf5","programmers-reference/cpp/common/has_mpi","programmers-reference/cpp/common/has_openmp","programmers-reference/cpp/common/has_parmetis","programmers-reference/cpp/common/has_petsc","programmers-reference/cpp/common/has_scotch","programmers-reference/cpp/common/has_slepc","programmers-reference/cpp/common/has_umfpack","programmers-reference/cpp/common/has_vtk","programmers-reference/cpp/common/has_zlib","programmers-reference/cpp/common/index","programmers-reference/cpp/common/info","programmers-reference/cpp/common/info_stream","programmers-reference/cpp/common/info_underline","programmers-reference/cpp/common/init","programmers-reference/cpp/common/list_timings","programmers-reference/cpp/common/log","programmers-reference/cpp/common/monitor_memory_usage","programmers-reference/cpp/common/not_working_in_parallel","programmers-reference/cpp/common/set_log_active","programmers-reference/cpp/common/set_log_level","programmers-reference/cpp/common/set_output_stream","programmers-reference/cpp/common/sizeof_la_index","programmers-reference/cpp/common/tic","programmers-reference/cpp/common/time","programmers-reference/cpp/common/timing","programmers-reference/cpp/common/timings","programmers-reference/cpp/common/toc","programmers-reference/cpp/common/ufc_cell","programmers-reference/cpp/common/ufc_dofmap","programmers-reference/cpp/common/ufc_finite_element","programmers-reference/cpp/common/ufc_form","programmers-reference/cpp/common/ufc_function","programmers-reference/cpp/common/ufc_signature","programmers-reference/cpp/common/warning","programmers-reference/cpp/fem/AdaptiveLinearVariationalSolver","programmers-reference/cpp/fem/AdaptiveNonlinearVariationalSolver","programmers-reference/cpp/fem/Assembler","programmers-reference/cpp/fem/AssemblerBase","programmers-reference/cpp/fem/BasisFunction","programmers-reference/cpp/fem/DirichletBC","programmers-reference/cpp/fem/DirichletBC_default_parameters","programmers-reference/cpp/fem/DiscreteOperators","programmers-reference/cpp/fem/DiscreteOperators_build_gradient","programmers-reference/cpp/fem/DofMap","programmers-reference/cpp/fem/Equation","programmers-reference/cpp/fem/ErrorControl","programmers-reference/cpp/fem/ErrorControl_default_parameters","programmers-reference/cpp/fem/Extrapolation","programmers-reference/cpp/fem/Extrapolation_extrapolate","programmers-reference/cpp/fem/FiniteElement","programmers-reference/cpp/fem/Form","programmers-reference/cpp/fem/GenericAdaptiveVariationalSolver","programmers-reference/cpp/fem/GenericAdaptiveVariationalSolver_default_parameters","programmers-reference/cpp/fem/GenericDofMap","programmers-reference/cpp/fem/HierarchicalDirichletBC","programmers-reference/cpp/fem/HierarchicalErrorControl","programmers-reference/cpp/fem/HierarchicalForm","programmers-reference/cpp/fem/HierarchicalFunction","programmers-reference/cpp/fem/HierarchicalFunctionSpace","programmers-reference/cpp/fem/HierarchicalLinearVariationalProblem","programmers-reference/cpp/fem/HierarchicalMesh","programmers-reference/cpp/fem/HierarchicalNonlinearVariationalProblem","programmers-reference/cpp/fem/LinearVariationalProblem","programmers-reference/cpp/fem/LinearVariationalSolver","programmers-reference/cpp/fem/LinearVariationalSolver_default_parameters","programmers-reference/cpp/fem/LocalAssembler","programmers-reference/cpp/fem/LocalAssembler_assemble","programmers-reference/cpp/fem/LocalAssembler_assemble_cell","programmers-reference/cpp/fem/LocalAssembler_assemble_exterior_facet","programmers-reference/cpp/fem/LocalAssembler_assemble_interior_facet","programmers-reference/cpp/fem/LocalSolver","programmers-reference/cpp/fem/MultiMeshAssembler","programmers-reference/cpp/fem/MultiMeshDirichletBC","programmers-reference/cpp/fem/MultiMeshDofMap","programmers-reference/cpp/fem/MultiMeshForm","programmers-reference/cpp/fem/MultiStageScheme","programmers-reference/cpp/fem/NonlinearVariationalProblem","programmers-reference/cpp/fem/NonlinearVariationalSolver","programmers-reference/cpp/fem/NonlinearVariationalSolver_default_parameters","programmers-reference/cpp/fem/OpenMpAssembler","programmers-reference/cpp/fem/PointIntegralSolver","programmers-reference/cpp/fem/PointIntegralSolver_default_parameters","programmers-reference/cpp/fem/PointSource","programmers-reference/cpp/fem/RKSolver","programmers-reference/cpp/fem/SparsityPatternBuilder","programmers-reference/cpp/fem/SparsityPatternBuilder_build","programmers-reference/cpp/fem/SparsityPatternBuilder_build_multimesh_sparsity_pattern","programmers-reference/cpp/fem/SystemAssembler","programmers-reference/cpp/fem/TimeSeries","programmers-reference/cpp/fem/TimeSeries_default_parameters","programmers-reference/cpp/fem/adapt","programmers-reference/cpp/fem/adapt_markers","programmers-reference/cpp/fem/assemble","programmers-reference/cpp/fem/assemble_local","programmers-reference/cpp/fem/assemble_multimesh","programmers-reference/cpp/fem/assemble_system","programmers-reference/cpp/fem/create_mesh","programmers-reference/cpp/fem/dof_to_vertex_map","programmers-reference/cpp/fem/dorfler_mark","programmers-reference/cpp/fem/fem_solve","programmers-reference/cpp/fem/get_coordinates","programmers-reference/cpp/fem/index","programmers-reference/cpp/fem/mark","programmers-reference/cpp/fem/set_coordinates","programmers-reference/cpp/fem/ufc_cell","programmers-reference/cpp/fem/ufc_dofmap","programmers-reference/cpp/fem/ufc_finite_element","programmers-reference/cpp/fem/ufc_form","programmers-reference/cpp/fem/ufc_function","programmers-reference/cpp/fem/vertex_to_dof_map","programmers-reference/cpp/function/ALE","programmers-reference/cpp/function/ALE_move","programmers-reference/cpp/function/Constant","programmers-reference/cpp/function/Expression","programmers-reference/cpp/function/FacetArea","programmers-reference/cpp/function/Function","programmers-reference/cpp/function/FunctionAXPY","programmers-reference/cpp/function/FunctionAssigner","programmers-reference/cpp/function/FunctionSpace","programmers-reference/cpp/function/GenericFunction","programmers-reference/cpp/function/HierarchicalFunction","programmers-reference/cpp/function/HierarchicalFunctionSpace","programmers-reference/cpp/function/HierarchicalMesh","programmers-reference/cpp/function/Lagrange","programmers-reference/cpp/function/LagrangeInterpolator","programmers-reference/cpp/function/LagrangeInterpolator_interpolate","programmers-reference/cpp/function/Legendre","programmers-reference/cpp/function/Legendre_d2dx","programmers-reference/cpp/function/Legendre_ddx","programmers-reference/cpp/function/Legendre_eval","programmers-reference/cpp/function/MeshCoordinates","programmers-reference/cpp/function/MeshDisplacement","programmers-reference/cpp/function/MultiMeshFunction","programmers-reference/cpp/function/MultiMeshFunctionSpace","programmers-reference/cpp/function/MultiMeshSubSpace","programmers-reference/cpp/function/SpecialFacetFunction","programmers-reference/cpp/function/assign","programmers-reference/cpp/function/between","programmers-reference/cpp/function/index","programmers-reference/cpp/function/ipow","programmers-reference/cpp/function/near","programmers-reference/cpp/function/rand","programmers-reference/cpp/function/seed","programmers-reference/cpp/function/ufc_cell","programmers-reference/cpp/function/ufc_dofmap","programmers-reference/cpp/function/ufc_finite_element","programmers-reference/cpp/function/ufc_form","programmers-reference/cpp/function/ufc_function","programmers-reference/cpp/index","programmers-reference/cpp/io/File","programmers-reference/cpp/io/File_create_parent_path","programmers-reference/cpp/io/File_exists","programmers-reference/cpp/io/GenericFile","programmers-reference/cpp/io/HDF5Attribute","programmers-reference/cpp/io/HDF5File","programmers-reference/cpp/io/HierarchicalFunction","programmers-reference/cpp/io/HierarchicalFunctionSpace","programmers-reference/cpp/io/HierarchicalMesh","programmers-reference/cpp/io/VTKPlotter","programmers-reference/cpp/io/VTKPlotter_all_interactive","programmers-reference/cpp/io/VTKPlotter_default_parameters","programmers-reference/cpp/io/VTKPlotter_to_key","programmers-reference/cpp/io/X3DOM","programmers-reference/cpp/io/X3DOMParameters","programmers-reference/cpp/io/X3DOM_html","programmers-reference/cpp/io/X3DOM_str","programmers-reference/cpp/io/XDMFFile","programmers-reference/cpp/io/index","programmers-reference/cpp/io/interactive","programmers-reference/cpp/io/plot","programmers-reference/cpp/io/ufc_cell","programmers-reference/cpp/io/ufc_dofmap","programmers-reference/cpp/io/ufc_finite_element","programmers-reference/cpp/io/ufc_form","programmers-reference/cpp/io/ufc_function","programmers-reference/cpp/la/BelosKrylovSolver","programmers-reference/cpp/la/BelosKrylovSolver_default_parameters","programmers-reference/cpp/la/BelosKrylovSolver_methods","programmers-reference/cpp/la/BelosKrylovSolver_preconditioners","programmers-reference/cpp/la/BlockMatrix","programmers-reference/cpp/la/BlockVector","programmers-reference/cpp/la/CoordinateMatrix","programmers-reference/cpp/la/DefaultFactory","programmers-reference/cpp/la/DefaultFactory_factory","programmers-reference/cpp/la/EigenFactory","programmers-reference/cpp/la/EigenFactory_instance","programmers-reference/cpp/la/EigenKrylovSolver","programmers-reference/cpp/la/EigenKrylovSolver_default_parameters","programmers-reference/cpp/la/EigenKrylovSolver_methods","programmers-reference/cpp/la/EigenKrylovSolver_preconditioners","programmers-reference/cpp/la/EigenLUSolver","programmers-reference/cpp/la/EigenLUSolver_default_parameters","programmers-reference/cpp/la/EigenLUSolver_methods","programmers-reference/cpp/la/EigenMatrix","programmers-reference/cpp/la/EigenVector","programmers-reference/cpp/la/GenericLUSolver","programmers-reference/cpp/la/GenericLinearAlgebraFactory","programmers-reference/cpp/la/GenericLinearOperator","programmers-reference/cpp/la/GenericLinearSolver","programmers-reference/cpp/la/GenericMatrix","programmers-reference/cpp/la/GenericTensor","programmers-reference/cpp/la/GenericVector","programmers-reference/cpp/la/Ifpack2Preconditioner","programmers-reference/cpp/la/Ifpack2Preconditioner_default_parameters","programmers-reference/cpp/la/Ifpack2Preconditioner_preconditioners","programmers-reference/cpp/la/IndexMap","programmers-reference/cpp/la/KrylovSolver","programmers-reference/cpp/la/KrylovSolver_default_parameters","programmers-reference/cpp/la/LUSolver","programmers-reference/cpp/la/LUSolver_default_parameters","programmers-reference/cpp/la/LinearAlgebraObject","programmers-reference/cpp/la/LinearOperator","programmers-reference/cpp/la/LinearSolver","programmers-reference/cpp/la/LinearSolver_default_parameters","programmers-reference/cpp/la/Matrix","programmers-reference/cpp/la/MueluPreconditioner","programmers-reference/cpp/la/MueluPreconditioner_default_parameters","programmers-reference/cpp/la/NewtonSolver","programmers-reference/cpp/la/NewtonSolver_default_parameters","programmers-reference/cpp/la/NonlinearProblem","programmers-reference/cpp/la/OptimisationProblem","programmers-reference/cpp/la/PETScBaseMatrix","programmers-reference/cpp/la/PETScFactory","programmers-reference/cpp/la/PETScFactory_instance","programmers-reference/cpp/la/PETScKrylovSolver","programmers-reference/cpp/la/PETScKrylovSolver_default_parameters","programmers-reference/cpp/la/PETScKrylovSolver_methods","programmers-reference/cpp/la/PETScKrylovSolver_preconditioners","programmers-reference/cpp/la/PETScLUSolver","programmers-reference/cpp/la/PETScLUSolver_default_parameters","programmers-reference/cpp/la/PETScLUSolver_methods","programmers-reference/cpp/la/PETScLinearOperator","programmers-reference/cpp/la/PETScMatrix","programmers-reference/cpp/la/PETScObject","programmers-reference/cpp/la/PETScObject_petsc_error","programmers-reference/cpp/la/PETScOptions","programmers-reference/cpp/la/PETScOptions_clear","programmers-reference/cpp/la/PETScOptions_set","programmers-reference/cpp/la/PETScPreconditioner","programmers-reference/cpp/la/PETScPreconditioner_preconditioners","programmers-reference/cpp/la/PETScSNESSolver","programmers-reference/cpp/la/PETScSNESSolver_default_parameters","programmers-reference/cpp/la/PETScSNESSolver_methods","programmers-reference/cpp/la/PETScTAOSolver","programmers-reference/cpp/la/PETScTAOSolver_default_parameters","programmers-reference/cpp/la/PETScTAOSolver_methods","programmers-reference/cpp/la/PETScUserPreconditioner","programmers-reference/cpp/la/PETScVector","programmers-reference/cpp/la/SLEPcEigenSolver","programmers-reference/cpp/la/SLEPcEigenSolver_default_parameters","programmers-reference/cpp/la/Scalar","programmers-reference/cpp/la/SparsityPattern","programmers-reference/cpp/la/TAOLinearBoundSolver","programmers-reference/cpp/la/TAOLinearBoundSolver_default_parameters","programmers-reference/cpp/la/TAOLinearBoundSolver_krylov_solvers","programmers-reference/cpp/la/TAOLinearBoundSolver_methods","programmers-reference/cpp/la/TAOLinearBoundSolver_preconditioners","programmers-reference/cpp/la/TensorLayout","programmers-reference/cpp/la/TpetraFactory","programmers-reference/cpp/la/TpetraFactory_instance","programmers-reference/cpp/la/TpetraMatrix","programmers-reference/cpp/la/TpetraVector","programmers-reference/cpp/la/TrilinosPreconditioner","programmers-reference/cpp/la/Vector","programmers-reference/cpp/la/VectorSpaceBasis","programmers-reference/cpp/la/as_backend_type","programmers-reference/cpp/la/get_tensor_type","programmers-reference/cpp/la/has_krylov_solver_method","programmers-reference/cpp/la/has_krylov_solver_preconditioner","programmers-reference/cpp/la/has_lu_solver_method","programmers-reference/cpp/la/has_type","programmers-reference/cpp/la/in_nullspace","programmers-reference/cpp/la/index","programmers-reference/cpp/la/krylov_solver_methods","programmers-reference/cpp/la/krylov_solver_preconditioners","programmers-reference/cpp/la/la_index_dtype","programmers-reference/cpp/la/la_solve","programmers-reference/cpp/la/linear_algebra_backends","programmers-reference/cpp/la/linear_solver_methods","programmers-reference/cpp/la/list_krylov_solver_methods","programmers-reference/cpp/la/list_krylov_solver_preconditioners","programmers-reference/cpp/la/list_linear_algebra_backends","programmers-reference/cpp/la/list_linear_solver_methods","programmers-reference/cpp/la/list_lu_solver_methods","programmers-reference/cpp/la/lu_solver_methods","programmers-reference/cpp/la/normalize","programmers-reference/cpp/la/residual","programmers-reference/cpp/la/ufc_cell","programmers-reference/cpp/la/ufc_dofmap","programmers-reference/cpp/la/ufc_finite_element","programmers-reference/cpp/la/ufc_form","programmers-reference/cpp/la/ufc_function","programmers-reference/cpp/mesh/BoostGraphOrdering","programmers-reference/cpp/mesh/BoostGraphOrdering_compute_cuthill_mckee","programmers-reference/cpp/mesh/BoundaryMesh","programmers-reference/cpp/mesh/BoundingBoxTree","programmers-reference/cpp/mesh/BoundingBoxTree3D","programmers-reference/cpp/mesh/BoxMesh","programmers-reference/cpp/mesh/Cell","programmers-reference/cpp/mesh/CellFunction","programmers-reference/cpp/mesh/CellFunctionBool","programmers-reference/cpp/mesh/CellFunctionDouble","programmers-reference/cpp/mesh/CellFunctionInt","programmers-reference/cpp/mesh/CellFunctionSizet","programmers-reference/cpp/mesh/CellType","programmers-reference/cpp/mesh/CellType_create","programmers-reference/cpp/mesh/CellType_string2type","programmers-reference/cpp/mesh/CellType_type2string","programmers-reference/cpp/mesh/DomainBoundary","programmers-reference/cpp/mesh/DynamicMeshEditor","programmers-reference/cpp/mesh/Edge","programmers-reference/cpp/mesh/EdgeFunction","programmers-reference/cpp/mesh/EdgeFunctionBool","programmers-reference/cpp/mesh/EdgeFunctionDouble","programmers-reference/cpp/mesh/EdgeFunctionInt","programmers-reference/cpp/mesh/EdgeFunctionSizet","programmers-reference/cpp/mesh/Face","programmers-reference/cpp/mesh/FaceFunction","programmers-reference/cpp/mesh/FaceFunctionBool","programmers-reference/cpp/mesh/FaceFunctionDouble","programmers-reference/cpp/mesh/FaceFunctionInt","programmers-reference/cpp/mesh/FaceFunctionSizet","programmers-reference/cpp/mesh/Facet","programmers-reference/cpp/mesh/FacetCell","programmers-reference/cpp/mesh/FacetFunction","programmers-reference/cpp/mesh/FacetFunctionBool","programmers-reference/cpp/mesh/FacetFunctionDouble","programmers-reference/cpp/mesh/FacetFunctionInt","programmers-reference/cpp/mesh/FacetFunctionSizet","programmers-reference/cpp/mesh/GenericBoundingBoxTree","programmers-reference/cpp/mesh/GenericBoundingBoxTree_create","programmers-reference/cpp/mesh/Graph","programmers-reference/cpp/mesh/GraphBuilder","programmers-reference/cpp/mesh/GraphBuilder_local_graph","programmers-reference/cpp/mesh/HierarchicalFunction","programmers-reference/cpp/mesh/HierarchicalFunctionSpace","programmers-reference/cpp/mesh/HierarchicalMesh","programmers-reference/cpp/mesh/HierarchicalMeshFunctionBool","programmers-reference/cpp/mesh/HierarchicalMeshFunctionDouble","programmers-reference/cpp/mesh/HierarchicalMeshFunctionInt","programmers-reference/cpp/mesh/HierarchicalMeshFunctionSizet","programmers-reference/cpp/mesh/HierarchicalMeshFunctionUInt","programmers-reference/cpp/mesh/IntervalMesh","programmers-reference/cpp/mesh/LocalMeshData","programmers-reference/cpp/mesh/Mesh","programmers-reference/cpp/mesh/MeshColoring","programmers-reference/cpp/mesh/MeshColoring_cell_colors","programmers-reference/cpp/mesh/MeshColoring_color","programmers-reference/cpp/mesh/MeshColoring_color_cells","programmers-reference/cpp/mesh/MeshColoring_compute_colors","programmers-reference/cpp/mesh/MeshColoring_type_to_dim","programmers-reference/cpp/mesh/MeshConnectivity","programmers-reference/cpp/mesh/MeshData","programmers-reference/cpp/mesh/MeshDomains","programmers-reference/cpp/mesh/MeshEditor","programmers-reference/cpp/mesh/MeshEntity","programmers-reference/cpp/mesh/MeshFunction","programmers-reference/cpp/mesh/MeshFunctionBool","programmers-reference/cpp/mesh/MeshFunctionDouble","programmers-reference/cpp/mesh/MeshFunctionInt","programmers-reference/cpp/mesh/MeshFunctionSizet","programmers-reference/cpp/mesh/MeshGeometry","programmers-reference/cpp/mesh/MeshHierarchy","programmers-reference/cpp/mesh/MeshPartitioning","programmers-reference/cpp/mesh/MeshPartitioning_build_distributed_mesh","programmers-reference/cpp/mesh/MeshPointIntersection","programmers-reference/cpp/mesh/MeshQuality","programmers-reference/cpp/mesh/MeshQuality_dihedral_angles","programmers-reference/cpp/mesh/MeshQuality_dihedral_angles_histogram_data","programmers-reference/cpp/mesh/MeshQuality_dihedral_angles_matplotlib_histogram","programmers-reference/cpp/mesh/MeshQuality_dihedral_angles_min_max","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_histogram_data","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_matplotlib_histogram","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_min_max","programmers-reference/cpp/mesh/MeshQuality_radius_ratios","programmers-reference/cpp/mesh/MeshRenumbering","programmers-reference/cpp/mesh/MeshRenumbering_renumber_by_color","programmers-reference/cpp/mesh/MeshTopology","programmers-reference/cpp/mesh/MeshTransformation","programmers-reference/cpp/mesh/MeshValueCollection","programmers-reference/cpp/mesh/MeshValueCollectionBool","programmers-reference/cpp/mesh/MeshValueCollectionDouble","programmers-reference/cpp/mesh/MeshValueCollectionInt","programmers-reference/cpp/mesh/MeshValueCollectionSizet","programmers-reference/cpp/mesh/MultiMesh","programmers-reference/cpp/mesh/PeriodicBoundaryComputation","programmers-reference/cpp/mesh/PeriodicBoundaryComputation_compute_periodic_pairs","programmers-reference/cpp/mesh/PeriodicBoundaryComputation_masters_slaves","programmers-reference/cpp/mesh/Point","programmers-reference/cpp/mesh/RectangleMesh","programmers-reference/cpp/mesh/SCOTCH","programmers-reference/cpp/mesh/SCOTCH_compute_gps","programmers-reference/cpp/mesh/SphericalShellMesh","programmers-reference/cpp/mesh/SubDomain","programmers-reference/cpp/mesh/SubMesh","programmers-reference/cpp/mesh/SubsetIterator","programmers-reference/cpp/mesh/UnitCubeMesh","programmers-reference/cpp/mesh/UnitDiscMesh","programmers-reference/cpp/mesh/UnitHexMesh","programmers-reference/cpp/mesh/UnitIntervalMesh","programmers-reference/cpp/mesh/UnitQuadMesh","programmers-reference/cpp/mesh/UnitSquareMesh","programmers-reference/cpp/mesh/UnitTetrahedronMesh","programmers-reference/cpp/mesh/UnitTriangleMesh","programmers-reference/cpp/mesh/Vertex","programmers-reference/cpp/mesh/VertexFunction","programmers-reference/cpp/mesh/VertexFunctionBool","programmers-reference/cpp/mesh/VertexFunctionDouble","programmers-reference/cpp/mesh/VertexFunctionInt","programmers-reference/cpp/mesh/VertexFunctionSizet","programmers-reference/cpp/mesh/cells","programmers-reference/cpp/mesh/edges","programmers-reference/cpp/mesh/entities","programmers-reference/cpp/mesh/faces","programmers-reference/cpp/mesh/facets","programmers-reference/cpp/mesh/index","programmers-reference/cpp/mesh/intersect","programmers-reference/cpp/mesh/p_refine","programmers-reference/cpp/mesh/refine","programmers-reference/cpp/mesh/ufc_cell","programmers-reference/cpp/mesh/ufc_dofmap","programmers-reference/cpp/mesh/ufc_finite_element","programmers-reference/cpp/mesh/ufc_form","programmers-reference/cpp/mesh/ufc_function","programmers-reference/cpp/mesh/vertices","programmers-reference/deprecation/down_cast","programmers-reference/deprecation/index","programmers-reference/fem/adaptivesolving/AdaptiveLinearVariationalSolver","programmers-reference/fem/adaptivesolving/AdaptiveNonlinearVariationalSolver","programmers-reference/fem/adaptivesolving/generate_error_control","programmers-reference/fem/adaptivesolving/generate_error_control_forms","programmers-reference/fem/adaptivesolving/index","programmers-reference/fem/assembling/SystemAssembler","programmers-reference/fem/assembling/assemble","programmers-reference/fem/assembling/assemble_multimesh","programmers-reference/fem/assembling/assemble_system","programmers-reference/fem/assembling/index","programmers-reference/fem/assembling_local/assemble_local","programmers-reference/fem/assembling_local/index","programmers-reference/fem/bcs/AutoSubDomain","programmers-reference/fem/bcs/DirichletBC","programmers-reference/fem/bcs/index","programmers-reference/fem/errorcontrolgenerator/index","programmers-reference/fem/form/Form","programmers-reference/fem/form/index","programmers-reference/fem/formmanipulations/adjoint","programmers-reference/fem/formmanipulations/derivative","programmers-reference/fem/formmanipulations/increase_order","programmers-reference/fem/formmanipulations/index","programmers-reference/fem/formmanipulations/tear","programmers-reference/fem/index","programmers-reference/fem/interpolation/index","programmers-reference/fem/interpolation/interpolate","programmers-reference/fem/norms/errornorm","programmers-reference/fem/norms/index","programmers-reference/fem/norms/norm","programmers-reference/fem/projection/index","programmers-reference/fem/projection/project","programmers-reference/fem/solving/LinearVariationalProblem","programmers-reference/fem/solving/LinearVariationalSolver","programmers-reference/fem/solving/LocalSolver","programmers-reference/fem/solving/NonlinearVariationalProblem","programmers-reference/fem/solving/NonlinearVariationalSolver","programmers-reference/fem/solving/index","programmers-reference/fem/solving/solve","programmers-reference/functions/constant/Constant","programmers-reference/functions/constant/index","programmers-reference/functions/expression/Expression","programmers-reference/functions/expression/index","programmers-reference/functions/function/Argument","programmers-reference/functions/function/Function","programmers-reference/functions/function/TestFunction","programmers-reference/functions/function/TestFunctions","programmers-reference/functions/function/TrialFunction","programmers-reference/functions/function/TrialFunctions","programmers-reference/functions/function/index","programmers-reference/functions/functionspace/EnrichedFunctionSpace","programmers-reference/functions/functionspace/FunctionSpace","programmers-reference/functions/functionspace/FunctionSpaceBase","programmers-reference/functions/functionspace/FunctionSpaceFromCpp","programmers-reference/functions/functionspace/MixedFunctionSpace","programmers-reference/functions/functionspace/MultiMeshFunctionSpace","programmers-reference/functions/functionspace/TensorFunctionSpace","programmers-reference/functions/functionspace/VectorFunctionSpace","programmers-reference/functions/functionspace/index","programmers-reference/functions/index","programmers-reference/functions/specialfunctions/CellNormal","programmers-reference/functions/specialfunctions/CellSize","programmers-reference/functions/specialfunctions/CellVolume","programmers-reference/functions/specialfunctions/Circumradius","programmers-reference/functions/specialfunctions/FacetArea","programmers-reference/functions/specialfunctions/FacetNormal","programmers-reference/functions/specialfunctions/MaxFacetEdgeLength","programmers-reference/functions/specialfunctions/MeshCoordinates","programmers-reference/functions/specialfunctions/MinFacetEdgeLength","programmers-reference/functions/specialfunctions/SpatialCoordinate","programmers-reference/functions/specialfunctions/index","programmers-reference/importhandler/index","programmers-reference/index","programmers-reference/mesh/ale/compute_edge_map","programmers-reference/mesh/ale/compute_vertex_map","programmers-reference/mesh/ale/index","programmers-reference/mesh/ale/init_parent_edge_indices","programmers-reference/mesh/boundarysubdomainfinder/create_maps","programmers-reference/mesh/boundarysubdomainfinder/find_all_subdomains","programmers-reference/mesh/boundarysubdomainfinder/find_keys_on_one_subdomain","programmers-reference/mesh/boundarysubdomainfinder/find_new_cell_key","programmers-reference/mesh/boundarysubdomainfinder/find_subdomain","programmers-reference/mesh/boundarysubdomainfinder/index","programmers-reference/mesh/boundarysubdomainfinder/main","programmers-reference/mesh/boundarysubdomainfinder/usage","programmers-reference/mesh/boundarysubdomainfinder/write_file","programmers-reference/mesh/index","programmers-reference/mesh/meshes/index","programmers-reference/mesh/refinement/index","programmers-reference/mesh/refinement/refine","programmers-reference/mesh/svgtools/index","programmers-reference/mesh/svgtools/mesh2svg","programmers-reference/multistage/factorize/extract_tested_expressions","programmers-reference/multistage/factorize/index","programmers-reference/multistage/index","programmers-reference/multistage/multistagescheme/BDF1","programmers-reference/multistage/multistagescheme/BackwardEuler","programmers-reference/multistage/multistagescheme/ButcherMultiStageScheme","programmers-reference/multistage/multistagescheme/CN2","programmers-reference/multistage/multistagescheme/CrankNicolson","programmers-reference/multistage/multistagescheme/ERK","programmers-reference/multistage/multistagescheme/ERK1","programmers-reference/multistage/multistagescheme/ERK4","programmers-reference/multistage/multistagescheme/ESDIRK3","programmers-reference/multistage/multistagescheme/ESDIRK4","programmers-reference/multistage/multistagescheme/ExplicitEuler","programmers-reference/multistage/multistagescheme/ExplicitMidPoint","programmers-reference/multistage/multistagescheme/ForwardEuler","programmers-reference/multistage/multistagescheme/ImplicitEuler","programmers-reference/multistage/multistagescheme/MultiStageScheme","programmers-reference/multistage/multistagescheme/RK4","programmers-reference/multistage/multistagescheme/index","programmers-reference/multistage/multistagesolvers/PointIntegralSolver","programmers-reference/multistage/multistagesolvers/RKSolver","programmers-reference/multistage/multistagesolvers/index","programmers-reference/multistage/rushlarsenschemes/GRL1","programmers-reference/multistage/rushlarsenschemes/GRL2","programmers-reference/multistage/rushlarsenschemes/MultiStageScheme","programmers-reference/multistage/rushlarsenschemes/RL1","programmers-reference/multistage/rushlarsenschemes/RL2","programmers-reference/multistage/rushlarsenschemes/RushLarsenScheme","programmers-reference/multistage/rushlarsenschemes/index","quick_reference"],envversion:50,filenames:["demo/documented/auto-adaptive-poisson/python/documentation.rst","demo/documented/bcs/python/documentation.rst","demo/documented/biharmonic/python/documentation.rst","demo/documented/built-in-meshes/python/documentation.rst","demo/documented/cahn-hilliard/python/documentation.rst","demo/documented/eigenvalue/python/documentation.rst","demo/documented/hyperelasticity/python/documentation.rst","demo/documented/mixed-poisson-dual/python/documentation.rst","demo/documented/mixed-poisson/python/documentation.rst","demo/documented/navier-stokes/python/documentation.rst","demo/documented/neumann-poisson/python/documentation.rst","demo/documented/nonlinear-poisson/python/documentation.rst","demo/documented/periodic/python/documentation.rst","demo/documented/poisson/python/documentation.rst","demo/documented/singular-poisson/python/documentation.rst","demo/documented/stokes-iterative/python/documentation.rst","demo/documented/stokes-mini/python/documentation.rst","demo/documented/stokes-taylor-hood/python/documentation.rst","demo/documented/subdomains-poisson/python/documentation.rst","demo/documented/subdomains/python/documentation.rst","demo/documented/tensor-weighted-poisson/python/documentation.rst","demo/index.rst","index.rst","programmers-reference/common/constants/index.rst","programmers-reference/common/globalparameters/index.rst","programmers-reference/common/index.rst","programmers-reference/common/math/index.rst","programmers-reference/common/math/sqr.rst","programmers-reference/common/memory/index.rst","programmers-reference/common/memory/memory_usage.rst","programmers-reference/common/plotting/index.rst","programmers-reference/common/plotting/plot.rst","programmers-reference/common/time/index.rst","programmers-reference/compilemodules/compilemodule/compile_extension_module.rst","programmers-reference/compilemodules/compilemodule/expression_to_code_fragments.rst","programmers-reference/compilemodules/compilemodule/index.rst","programmers-reference/compilemodules/expressions/compile_expressions.rst","programmers-reference/compilemodules/expressions/index.rst","programmers-reference/compilemodules/index.rst","programmers-reference/compilemodules/jit/index.rst","programmers-reference/compilemodules/jit/jit.rst","programmers-reference/compilemodules/subdomains/CompiledSubDomain.rst","programmers-reference/compilemodules/subdomains/index.rst","programmers-reference/compilemodules/swigimportinfo/index.rst","programmers-reference/cpp/common/BoolParameter.rst","programmers-reference/cpp/common/DoubleArray.rst","programmers-reference/cpp/common/DoubleParameter.rst","programmers-reference/cpp/common/Event.rst","programmers-reference/cpp/common/GlobalParameters.rst","programmers-reference/cpp/common/GlobalParameters_default_parameters.rst","programmers-reference/cpp/common/IndexSet.rst","programmers-reference/cpp/common/IntArray.rst","programmers-reference/cpp/common/IntParameter.rst","programmers-reference/cpp/common/MPI.rst","programmers-reference/cpp/common/MPIInfo.rst","programmers-reference/cpp/common/MPI_Comm.rst","programmers-reference/cpp/common/MPI_MPI_AVG.rst","programmers-reference/cpp/common/MPI_avg.rst","programmers-reference/cpp/common/MPI_barrier.rst","programmers-reference/cpp/common/MPI_compute_local_range.rst","programmers-reference/cpp/common/MPI_gather.rst","programmers-reference/cpp/common/MPI_global_offset.rst","programmers-reference/cpp/common/MPI_index_owner.rst","programmers-reference/cpp/common/MPI_is_broadcaster.rst","programmers-reference/cpp/common/MPI_is_receiver.rst","programmers-reference/cpp/common/MPI_local_range.rst","programmers-reference/cpp/common/MPI_max.rst","programmers-reference/cpp/common/MPI_min.rst","programmers-reference/cpp/common/MPI_rank.rst","programmers-reference/cpp/common/MPI_size.rst","programmers-reference/cpp/common/MPI_sum.rst","programmers-reference/cpp/common/ParameterValue.rst","programmers-reference/cpp/common/Parameters.rst","programmers-reference/cpp/common/Progress.rst","programmers-reference/cpp/common/StringParameter.rst","programmers-reference/cpp/common/SubSystemsManager.rst","programmers-reference/cpp/common/SubSystemsManager_finalize.rst","programmers-reference/cpp/common/SubSystemsManager_init_mpi.rst","programmers-reference/cpp/common/SubSystemsManager_init_petsc.rst","programmers-reference/cpp/common/SubSystemsManager_mpi_finalized.rst","programmers-reference/cpp/common/SubSystemsManager_mpi_initialized.rst","programmers-reference/cpp/common/SubSystemsManager_responsible_mpi.rst","programmers-reference/cpp/common/SubSystemsManager_responsible_petsc.rst","programmers-reference/cpp/common/SubSystemsManager_singleton.rst","programmers-reference/cpp/common/Table.rst","programmers-reference/cpp/common/TableEntry.rst","programmers-reference/cpp/common/Timer.rst","programmers-reference/cpp/common/UIntArray.rst","programmers-reference/cpp/common/Variable.rst","programmers-reference/cpp/common/begin.rst","programmers-reference/cpp/common/debug.rst","programmers-reference/cpp/common/deprecation.rst","programmers-reference/cpp/common/dolfin_error.rst","programmers-reference/cpp/common/dolfin_version.rst","programmers-reference/cpp/common/dump_timings_to_xml.rst","programmers-reference/cpp/common/end.rst","programmers-reference/cpp/common/error.rst","programmers-reference/cpp/common/get_log_level.rst","programmers-reference/cpp/common/git_commit_hash.rst","programmers-reference/cpp/common/has_cholmod.rst","programmers-reference/cpp/common/has_hdf5.rst","programmers-reference/cpp/common/has_mpi.rst","programmers-reference/cpp/common/has_openmp.rst","programmers-reference/cpp/common/has_parmetis.rst","programmers-reference/cpp/common/has_petsc.rst","programmers-reference/cpp/common/has_scotch.rst","programmers-reference/cpp/common/has_slepc.rst","programmers-reference/cpp/common/has_umfpack.rst","programmers-reference/cpp/common/has_vtk.rst","programmers-reference/cpp/common/has_zlib.rst","programmers-reference/cpp/common/index.rst","programmers-reference/cpp/common/info.rst","programmers-reference/cpp/common/info_stream.rst","programmers-reference/cpp/common/info_underline.rst","programmers-reference/cpp/common/init.rst","programmers-reference/cpp/common/list_timings.rst","programmers-reference/cpp/common/log.rst","programmers-reference/cpp/common/monitor_memory_usage.rst","programmers-reference/cpp/common/not_working_in_parallel.rst","programmers-reference/cpp/common/set_log_active.rst","programmers-reference/cpp/common/set_log_level.rst","programmers-reference/cpp/common/set_output_stream.rst","programmers-reference/cpp/common/sizeof_la_index.rst","programmers-reference/cpp/common/tic.rst","programmers-reference/cpp/common/time.rst","programmers-reference/cpp/common/timing.rst","programmers-reference/cpp/common/timings.rst","programmers-reference/cpp/common/toc.rst","programmers-reference/cpp/common/ufc_cell.rst","programmers-reference/cpp/common/ufc_dofmap.rst","programmers-reference/cpp/common/ufc_finite_element.rst","programmers-reference/cpp/common/ufc_form.rst","programmers-reference/cpp/common/ufc_function.rst","programmers-reference/cpp/common/ufc_signature.rst","programmers-reference/cpp/common/warning.rst","programmers-reference/cpp/fem/AdaptiveLinearVariationalSolver.rst","programmers-reference/cpp/fem/AdaptiveNonlinearVariationalSolver.rst","programmers-reference/cpp/fem/Assembler.rst","programmers-reference/cpp/fem/AssemblerBase.rst","programmers-reference/cpp/fem/BasisFunction.rst","programmers-reference/cpp/fem/DirichletBC.rst","programmers-reference/cpp/fem/DirichletBC_default_parameters.rst","programmers-reference/cpp/fem/DiscreteOperators.rst","programmers-reference/cpp/fem/DiscreteOperators_build_gradient.rst","programmers-reference/cpp/fem/DofMap.rst","programmers-reference/cpp/fem/Equation.rst","programmers-reference/cpp/fem/ErrorControl.rst","programmers-reference/cpp/fem/ErrorControl_default_parameters.rst","programmers-reference/cpp/fem/Extrapolation.rst","programmers-reference/cpp/fem/Extrapolation_extrapolate.rst","programmers-reference/cpp/fem/FiniteElement.rst","programmers-reference/cpp/fem/Form.rst","programmers-reference/cpp/fem/GenericAdaptiveVariationalSolver.rst","programmers-reference/cpp/fem/GenericAdaptiveVariationalSolver_default_parameters.rst","programmers-reference/cpp/fem/GenericDofMap.rst","programmers-reference/cpp/fem/HierarchicalDirichletBC.rst","programmers-reference/cpp/fem/HierarchicalErrorControl.rst","programmers-reference/cpp/fem/HierarchicalForm.rst","programmers-reference/cpp/fem/HierarchicalFunction.rst","programmers-reference/cpp/fem/HierarchicalFunctionSpace.rst","programmers-reference/cpp/fem/HierarchicalLinearVariationalProblem.rst","programmers-reference/cpp/fem/HierarchicalMesh.rst","programmers-reference/cpp/fem/HierarchicalNonlinearVariationalProblem.rst","programmers-reference/cpp/fem/LinearVariationalProblem.rst","programmers-reference/cpp/fem/LinearVariationalSolver.rst","programmers-reference/cpp/fem/LinearVariationalSolver_default_parameters.rst","programmers-reference/cpp/fem/LocalAssembler.rst","programmers-reference/cpp/fem/LocalAssembler_assemble.rst","programmers-reference/cpp/fem/LocalAssembler_assemble_cell.rst","programmers-reference/cpp/fem/LocalAssembler_assemble_exterior_facet.rst","programmers-reference/cpp/fem/LocalAssembler_assemble_interior_facet.rst","programmers-reference/cpp/fem/LocalSolver.rst","programmers-reference/cpp/fem/MultiMeshAssembler.rst","programmers-reference/cpp/fem/MultiMeshDirichletBC.rst","programmers-reference/cpp/fem/MultiMeshDofMap.rst","programmers-reference/cpp/fem/MultiMeshForm.rst","programmers-reference/cpp/fem/MultiStageScheme.rst","programmers-reference/cpp/fem/NonlinearVariationalProblem.rst","programmers-reference/cpp/fem/NonlinearVariationalSolver.rst","programmers-reference/cpp/fem/NonlinearVariationalSolver_default_parameters.rst","programmers-reference/cpp/fem/OpenMpAssembler.rst","programmers-reference/cpp/fem/PointIntegralSolver.rst","programmers-reference/cpp/fem/PointIntegralSolver_default_parameters.rst","programmers-reference/cpp/fem/PointSource.rst","programmers-reference/cpp/fem/RKSolver.rst","programmers-reference/cpp/fem/SparsityPatternBuilder.rst","programmers-reference/cpp/fem/SparsityPatternBuilder_build.rst","programmers-reference/cpp/fem/SparsityPatternBuilder_build_multimesh_sparsity_pattern.rst","programmers-reference/cpp/fem/SystemAssembler.rst","programmers-reference/cpp/fem/TimeSeries.rst","programmers-reference/cpp/fem/TimeSeries_default_parameters.rst","programmers-reference/cpp/fem/adapt.rst","programmers-reference/cpp/fem/adapt_markers.rst","programmers-reference/cpp/fem/assemble.rst","programmers-reference/cpp/fem/assemble_local.rst","programmers-reference/cpp/fem/assemble_multimesh.rst","programmers-reference/cpp/fem/assemble_system.rst","programmers-reference/cpp/fem/create_mesh.rst","programmers-reference/cpp/fem/dof_to_vertex_map.rst","programmers-reference/cpp/fem/dorfler_mark.rst","programmers-reference/cpp/fem/fem_solve.rst","programmers-reference/cpp/fem/get_coordinates.rst","programmers-reference/cpp/fem/index.rst","programmers-reference/cpp/fem/mark.rst","programmers-reference/cpp/fem/set_coordinates.rst","programmers-reference/cpp/fem/ufc_cell.rst","programmers-reference/cpp/fem/ufc_dofmap.rst","programmers-reference/cpp/fem/ufc_finite_element.rst","programmers-reference/cpp/fem/ufc_form.rst","programmers-reference/cpp/fem/ufc_function.rst","programmers-reference/cpp/fem/vertex_to_dof_map.rst","programmers-reference/cpp/function/ALE.rst","programmers-reference/cpp/function/ALE_move.rst","programmers-reference/cpp/function/Constant.rst","programmers-reference/cpp/function/Expression.rst","programmers-reference/cpp/function/FacetArea.rst","programmers-reference/cpp/function/Function.rst","programmers-reference/cpp/function/FunctionAXPY.rst","programmers-reference/cpp/function/FunctionAssigner.rst","programmers-reference/cpp/function/FunctionSpace.rst","programmers-reference/cpp/function/GenericFunction.rst","programmers-reference/cpp/function/HierarchicalFunction.rst","programmers-reference/cpp/function/HierarchicalFunctionSpace.rst","programmers-reference/cpp/function/HierarchicalMesh.rst","programmers-reference/cpp/function/Lagrange.rst","programmers-reference/cpp/function/LagrangeInterpolator.rst","programmers-reference/cpp/function/LagrangeInterpolator_interpolate.rst","programmers-reference/cpp/function/Legendre.rst","programmers-reference/cpp/function/Legendre_d2dx.rst","programmers-reference/cpp/function/Legendre_ddx.rst","programmers-reference/cpp/function/Legendre_eval.rst","programmers-reference/cpp/function/MeshCoordinates.rst","programmers-reference/cpp/function/MeshDisplacement.rst","programmers-reference/cpp/function/MultiMeshFunction.rst","programmers-reference/cpp/function/MultiMeshFunctionSpace.rst","programmers-reference/cpp/function/MultiMeshSubSpace.rst","programmers-reference/cpp/function/SpecialFacetFunction.rst","programmers-reference/cpp/function/assign.rst","programmers-reference/cpp/function/between.rst","programmers-reference/cpp/function/index.rst","programmers-reference/cpp/function/ipow.rst","programmers-reference/cpp/function/near.rst","programmers-reference/cpp/function/rand.rst","programmers-reference/cpp/function/seed.rst","programmers-reference/cpp/function/ufc_cell.rst","programmers-reference/cpp/function/ufc_dofmap.rst","programmers-reference/cpp/function/ufc_finite_element.rst","programmers-reference/cpp/function/ufc_form.rst","programmers-reference/cpp/function/ufc_function.rst","programmers-reference/cpp/index.rst","programmers-reference/cpp/io/File.rst","programmers-reference/cpp/io/File_create_parent_path.rst","programmers-reference/cpp/io/File_exists.rst","programmers-reference/cpp/io/GenericFile.rst","programmers-reference/cpp/io/HDF5Attribute.rst","programmers-reference/cpp/io/HDF5File.rst","programmers-reference/cpp/io/HierarchicalFunction.rst","programmers-reference/cpp/io/HierarchicalFunctionSpace.rst","programmers-reference/cpp/io/HierarchicalMesh.rst","programmers-reference/cpp/io/VTKPlotter.rst","programmers-reference/cpp/io/VTKPlotter_all_interactive.rst","programmers-reference/cpp/io/VTKPlotter_default_parameters.rst","programmers-reference/cpp/io/VTKPlotter_to_key.rst","programmers-reference/cpp/io/X3DOM.rst","programmers-reference/cpp/io/X3DOMParameters.rst","programmers-reference/cpp/io/X3DOM_html.rst","programmers-reference/cpp/io/X3DOM_str.rst","programmers-reference/cpp/io/XDMFFile.rst","programmers-reference/cpp/io/index.rst","programmers-reference/cpp/io/interactive.rst","programmers-reference/cpp/io/plot.rst","programmers-reference/cpp/io/ufc_cell.rst","programmers-reference/cpp/io/ufc_dofmap.rst","programmers-reference/cpp/io/ufc_finite_element.rst","programmers-reference/cpp/io/ufc_form.rst","programmers-reference/cpp/io/ufc_function.rst","programmers-reference/cpp/la/BelosKrylovSolver.rst","programmers-reference/cpp/la/BelosKrylovSolver_default_parameters.rst","programmers-reference/cpp/la/BelosKrylovSolver_methods.rst","programmers-reference/cpp/la/BelosKrylovSolver_preconditioners.rst","programmers-reference/cpp/la/BlockMatrix.rst","programmers-reference/cpp/la/BlockVector.rst","programmers-reference/cpp/la/CoordinateMatrix.rst","programmers-reference/cpp/la/DefaultFactory.rst","programmers-reference/cpp/la/DefaultFactory_factory.rst","programmers-reference/cpp/la/EigenFactory.rst","programmers-reference/cpp/la/EigenFactory_instance.rst","programmers-reference/cpp/la/EigenKrylovSolver.rst","programmers-reference/cpp/la/EigenKrylovSolver_default_parameters.rst","programmers-reference/cpp/la/EigenKrylovSolver_methods.rst","programmers-reference/cpp/la/EigenKrylovSolver_preconditioners.rst","programmers-reference/cpp/la/EigenLUSolver.rst","programmers-reference/cpp/la/EigenLUSolver_default_parameters.rst","programmers-reference/cpp/la/EigenLUSolver_methods.rst","programmers-reference/cpp/la/EigenMatrix.rst","programmers-reference/cpp/la/EigenVector.rst","programmers-reference/cpp/la/GenericLUSolver.rst","programmers-reference/cpp/la/GenericLinearAlgebraFactory.rst","programmers-reference/cpp/la/GenericLinearOperator.rst","programmers-reference/cpp/la/GenericLinearSolver.rst","programmers-reference/cpp/la/GenericMatrix.rst","programmers-reference/cpp/la/GenericTensor.rst","programmers-reference/cpp/la/GenericVector.rst","programmers-reference/cpp/la/Ifpack2Preconditioner.rst","programmers-reference/cpp/la/Ifpack2Preconditioner_default_parameters.rst","programmers-reference/cpp/la/Ifpack2Preconditioner_preconditioners.rst","programmers-reference/cpp/la/IndexMap.rst","programmers-reference/cpp/la/KrylovSolver.rst","programmers-reference/cpp/la/KrylovSolver_default_parameters.rst","programmers-reference/cpp/la/LUSolver.rst","programmers-reference/cpp/la/LUSolver_default_parameters.rst","programmers-reference/cpp/la/LinearAlgebraObject.rst","programmers-reference/cpp/la/LinearOperator.rst","programmers-reference/cpp/la/LinearSolver.rst","programmers-reference/cpp/la/LinearSolver_default_parameters.rst","programmers-reference/cpp/la/Matrix.rst","programmers-reference/cpp/la/MueluPreconditioner.rst","programmers-reference/cpp/la/MueluPreconditioner_default_parameters.rst","programmers-reference/cpp/la/NewtonSolver.rst","programmers-reference/cpp/la/NewtonSolver_default_parameters.rst","programmers-reference/cpp/la/NonlinearProblem.rst","programmers-reference/cpp/la/OptimisationProblem.rst","programmers-reference/cpp/la/PETScBaseMatrix.rst","programmers-reference/cpp/la/PETScFactory.rst","programmers-reference/cpp/la/PETScFactory_instance.rst","programmers-reference/cpp/la/PETScKrylovSolver.rst","programmers-reference/cpp/la/PETScKrylovSolver_default_parameters.rst","programmers-reference/cpp/la/PETScKrylovSolver_methods.rst","programmers-reference/cpp/la/PETScKrylovSolver_preconditioners.rst","programmers-reference/cpp/la/PETScLUSolver.rst","programmers-reference/cpp/la/PETScLUSolver_default_parameters.rst","programmers-reference/cpp/la/PETScLUSolver_methods.rst","programmers-reference/cpp/la/PETScLinearOperator.rst","programmers-reference/cpp/la/PETScMatrix.rst","programmers-reference/cpp/la/PETScObject.rst","programmers-reference/cpp/la/PETScObject_petsc_error.rst","programmers-reference/cpp/la/PETScOptions.rst","programmers-reference/cpp/la/PETScOptions_clear.rst","programmers-reference/cpp/la/PETScOptions_set.rst","programmers-reference/cpp/la/PETScPreconditioner.rst","programmers-reference/cpp/la/PETScPreconditioner_preconditioners.rst","programmers-reference/cpp/la/PETScSNESSolver.rst","programmers-reference/cpp/la/PETScSNESSolver_default_parameters.rst","programmers-reference/cpp/la/PETScSNESSolver_methods.rst","programmers-reference/cpp/la/PETScTAOSolver.rst","programmers-reference/cpp/la/PETScTAOSolver_default_parameters.rst","programmers-reference/cpp/la/PETScTAOSolver_methods.rst","programmers-reference/cpp/la/PETScUserPreconditioner.rst","programmers-reference/cpp/la/PETScVector.rst","programmers-reference/cpp/la/SLEPcEigenSolver.rst","programmers-reference/cpp/la/SLEPcEigenSolver_default_parameters.rst","programmers-reference/cpp/la/Scalar.rst","programmers-reference/cpp/la/SparsityPattern.rst","programmers-reference/cpp/la/TAOLinearBoundSolver.rst","programmers-reference/cpp/la/TAOLinearBoundSolver_default_parameters.rst","programmers-reference/cpp/la/TAOLinearBoundSolver_krylov_solvers.rst","programmers-reference/cpp/la/TAOLinearBoundSolver_methods.rst","programmers-reference/cpp/la/TAOLinearBoundSolver_preconditioners.rst","programmers-reference/cpp/la/TensorLayout.rst","programmers-reference/cpp/la/TpetraFactory.rst","programmers-reference/cpp/la/TpetraFactory_instance.rst","programmers-reference/cpp/la/TpetraMatrix.rst","programmers-reference/cpp/la/TpetraVector.rst","programmers-reference/cpp/la/TrilinosPreconditioner.rst","programmers-reference/cpp/la/Vector.rst","programmers-reference/cpp/la/VectorSpaceBasis.rst","programmers-reference/cpp/la/as_backend_type.rst","programmers-reference/cpp/la/get_tensor_type.rst","programmers-reference/cpp/la/has_krylov_solver_method.rst","programmers-reference/cpp/la/has_krylov_solver_preconditioner.rst","programmers-reference/cpp/la/has_lu_solver_method.rst","programmers-reference/cpp/la/has_type.rst","programmers-reference/cpp/la/in_nullspace.rst","programmers-reference/cpp/la/index.rst","programmers-reference/cpp/la/krylov_solver_methods.rst","programmers-reference/cpp/la/krylov_solver_preconditioners.rst","programmers-reference/cpp/la/la_index_dtype.rst","programmers-reference/cpp/la/la_solve.rst","programmers-reference/cpp/la/linear_algebra_backends.rst","programmers-reference/cpp/la/linear_solver_methods.rst","programmers-reference/cpp/la/list_krylov_solver_methods.rst","programmers-reference/cpp/la/list_krylov_solver_preconditioners.rst","programmers-reference/cpp/la/list_linear_algebra_backends.rst","programmers-reference/cpp/la/list_linear_solver_methods.rst","programmers-reference/cpp/la/list_lu_solver_methods.rst","programmers-reference/cpp/la/lu_solver_methods.rst","programmers-reference/cpp/la/normalize.rst","programmers-reference/cpp/la/residual.rst","programmers-reference/cpp/la/ufc_cell.rst","programmers-reference/cpp/la/ufc_dofmap.rst","programmers-reference/cpp/la/ufc_finite_element.rst","programmers-reference/cpp/la/ufc_form.rst","programmers-reference/cpp/la/ufc_function.rst","programmers-reference/cpp/mesh/BoostGraphOrdering.rst","programmers-reference/cpp/mesh/BoostGraphOrdering_compute_cuthill_mckee.rst","programmers-reference/cpp/mesh/BoundaryMesh.rst","programmers-reference/cpp/mesh/BoundingBoxTree.rst","programmers-reference/cpp/mesh/BoundingBoxTree3D.rst","programmers-reference/cpp/mesh/BoxMesh.rst","programmers-reference/cpp/mesh/Cell.rst","programmers-reference/cpp/mesh/CellFunction.rst","programmers-reference/cpp/mesh/CellFunctionBool.rst","programmers-reference/cpp/mesh/CellFunctionDouble.rst","programmers-reference/cpp/mesh/CellFunctionInt.rst","programmers-reference/cpp/mesh/CellFunctionSizet.rst","programmers-reference/cpp/mesh/CellType.rst","programmers-reference/cpp/mesh/CellType_create.rst","programmers-reference/cpp/mesh/CellType_string2type.rst","programmers-reference/cpp/mesh/CellType_type2string.rst","programmers-reference/cpp/mesh/DomainBoundary.rst","programmers-reference/cpp/mesh/DynamicMeshEditor.rst","programmers-reference/cpp/mesh/Edge.rst","programmers-reference/cpp/mesh/EdgeFunction.rst","programmers-reference/cpp/mesh/EdgeFunctionBool.rst","programmers-reference/cpp/mesh/EdgeFunctionDouble.rst","programmers-reference/cpp/mesh/EdgeFunctionInt.rst","programmers-reference/cpp/mesh/EdgeFunctionSizet.rst","programmers-reference/cpp/mesh/Face.rst","programmers-reference/cpp/mesh/FaceFunction.rst","programmers-reference/cpp/mesh/FaceFunctionBool.rst","programmers-reference/cpp/mesh/FaceFunctionDouble.rst","programmers-reference/cpp/mesh/FaceFunctionInt.rst","programmers-reference/cpp/mesh/FaceFunctionSizet.rst","programmers-reference/cpp/mesh/Facet.rst","programmers-reference/cpp/mesh/FacetCell.rst","programmers-reference/cpp/mesh/FacetFunction.rst","programmers-reference/cpp/mesh/FacetFunctionBool.rst","programmers-reference/cpp/mesh/FacetFunctionDouble.rst","programmers-reference/cpp/mesh/FacetFunctionInt.rst","programmers-reference/cpp/mesh/FacetFunctionSizet.rst","programmers-reference/cpp/mesh/GenericBoundingBoxTree.rst","programmers-reference/cpp/mesh/GenericBoundingBoxTree_create.rst","programmers-reference/cpp/mesh/Graph.rst","programmers-reference/cpp/mesh/GraphBuilder.rst","programmers-reference/cpp/mesh/GraphBuilder_local_graph.rst","programmers-reference/cpp/mesh/HierarchicalFunction.rst","programmers-reference/cpp/mesh/HierarchicalFunctionSpace.rst","programmers-reference/cpp/mesh/HierarchicalMesh.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionBool.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionDouble.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionInt.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionSizet.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionUInt.rst","programmers-reference/cpp/mesh/IntervalMesh.rst","programmers-reference/cpp/mesh/LocalMeshData.rst","programmers-reference/cpp/mesh/Mesh.rst","programmers-reference/cpp/mesh/MeshColoring.rst","programmers-reference/cpp/mesh/MeshColoring_cell_colors.rst","programmers-reference/cpp/mesh/MeshColoring_color.rst","programmers-reference/cpp/mesh/MeshColoring_color_cells.rst","programmers-reference/cpp/mesh/MeshColoring_compute_colors.rst","programmers-reference/cpp/mesh/MeshColoring_type_to_dim.rst","programmers-reference/cpp/mesh/MeshConnectivity.rst","programmers-reference/cpp/mesh/MeshData.rst","programmers-reference/cpp/mesh/MeshDomains.rst","programmers-reference/cpp/mesh/MeshEditor.rst","programmers-reference/cpp/mesh/MeshEntity.rst","programmers-reference/cpp/mesh/MeshFunction.rst","programmers-reference/cpp/mesh/MeshFunctionBool.rst","programmers-reference/cpp/mesh/MeshFunctionDouble.rst","programmers-reference/cpp/mesh/MeshFunctionInt.rst","programmers-reference/cpp/mesh/MeshFunctionSizet.rst","programmers-reference/cpp/mesh/MeshGeometry.rst","programmers-reference/cpp/mesh/MeshHierarchy.rst","programmers-reference/cpp/mesh/MeshPartitioning.rst","programmers-reference/cpp/mesh/MeshPartitioning_build_distributed_mesh.rst","programmers-reference/cpp/mesh/MeshPointIntersection.rst","programmers-reference/cpp/mesh/MeshQuality.rst","programmers-reference/cpp/mesh/MeshQuality_dihedral_angles.rst","programmers-reference/cpp/mesh/MeshQuality_dihedral_angles_histogram_data.rst","programmers-reference/cpp/mesh/MeshQuality_dihedral_angles_matplotlib_histogram.rst","programmers-reference/cpp/mesh/MeshQuality_dihedral_angles_min_max.rst","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_histogram_data.rst","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_matplotlib_histogram.rst","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_min_max.rst","programmers-reference/cpp/mesh/MeshQuality_radius_ratios.rst","programmers-reference/cpp/mesh/MeshRenumbering.rst","programmers-reference/cpp/mesh/MeshRenumbering_renumber_by_color.rst","programmers-reference/cpp/mesh/MeshTopology.rst","programmers-reference/cpp/mesh/MeshTransformation.rst","programmers-reference/cpp/mesh/MeshValueCollection.rst","programmers-reference/cpp/mesh/MeshValueCollectionBool.rst","programmers-reference/cpp/mesh/MeshValueCollectionDouble.rst","programmers-reference/cpp/mesh/MeshValueCollectionInt.rst","programmers-reference/cpp/mesh/MeshValueCollectionSizet.rst","programmers-reference/cpp/mesh/MultiMesh.rst","programmers-reference/cpp/mesh/PeriodicBoundaryComputation.rst","programmers-reference/cpp/mesh/PeriodicBoundaryComputation_compute_periodic_pairs.rst","programmers-reference/cpp/mesh/PeriodicBoundaryComputation_masters_slaves.rst","programmers-reference/cpp/mesh/Point.rst","programmers-reference/cpp/mesh/RectangleMesh.rst","programmers-reference/cpp/mesh/SCOTCH.rst","programmers-reference/cpp/mesh/SCOTCH_compute_gps.rst","programmers-reference/cpp/mesh/SphericalShellMesh.rst","programmers-reference/cpp/mesh/SubDomain.rst","programmers-reference/cpp/mesh/SubMesh.rst","programmers-reference/cpp/mesh/SubsetIterator.rst","programmers-reference/cpp/mesh/UnitCubeMesh.rst","programmers-reference/cpp/mesh/UnitDiscMesh.rst","programmers-reference/cpp/mesh/UnitHexMesh.rst","programmers-reference/cpp/mesh/UnitIntervalMesh.rst","programmers-reference/cpp/mesh/UnitQuadMesh.rst","programmers-reference/cpp/mesh/UnitSquareMesh.rst","programmers-reference/cpp/mesh/UnitTetrahedronMesh.rst","programmers-reference/cpp/mesh/UnitTriangleMesh.rst","programmers-reference/cpp/mesh/Vertex.rst","programmers-reference/cpp/mesh/VertexFunction.rst","programmers-reference/cpp/mesh/VertexFunctionBool.rst","programmers-reference/cpp/mesh/VertexFunctionDouble.rst","programmers-reference/cpp/mesh/VertexFunctionInt.rst","programmers-reference/cpp/mesh/VertexFunctionSizet.rst","programmers-reference/cpp/mesh/cells.rst","programmers-reference/cpp/mesh/edges.rst","programmers-reference/cpp/mesh/entities.rst","programmers-reference/cpp/mesh/faces.rst","programmers-reference/cpp/mesh/facets.rst","programmers-reference/cpp/mesh/index.rst","programmers-reference/cpp/mesh/intersect.rst","programmers-reference/cpp/mesh/p_refine.rst","programmers-reference/cpp/mesh/refine.rst","programmers-reference/cpp/mesh/ufc_cell.rst","programmers-reference/cpp/mesh/ufc_dofmap.rst","programmers-reference/cpp/mesh/ufc_finite_element.rst","programmers-reference/cpp/mesh/ufc_form.rst","programmers-reference/cpp/mesh/ufc_function.rst","programmers-reference/cpp/mesh/vertices.rst","programmers-reference/deprecation/down_cast.rst","programmers-reference/deprecation/index.rst","programmers-reference/fem/adaptivesolving/AdaptiveLinearVariationalSolver.rst","programmers-reference/fem/adaptivesolving/AdaptiveNonlinearVariationalSolver.rst","programmers-reference/fem/adaptivesolving/generate_error_control.rst","programmers-reference/fem/adaptivesolving/generate_error_control_forms.rst","programmers-reference/fem/adaptivesolving/index.rst","programmers-reference/fem/assembling/SystemAssembler.rst","programmers-reference/fem/assembling/assemble.rst","programmers-reference/fem/assembling/assemble_multimesh.rst","programmers-reference/fem/assembling/assemble_system.rst","programmers-reference/fem/assembling/index.rst","programmers-reference/fem/assembling_local/assemble_local.rst","programmers-reference/fem/assembling_local/index.rst","programmers-reference/fem/bcs/AutoSubDomain.rst","programmers-reference/fem/bcs/DirichletBC.rst","programmers-reference/fem/bcs/index.rst","programmers-reference/fem/errorcontrolgenerator/index.rst","programmers-reference/fem/form/Form.rst","programmers-reference/fem/form/index.rst","programmers-reference/fem/formmanipulations/adjoint.rst","programmers-reference/fem/formmanipulations/derivative.rst","programmers-reference/fem/formmanipulations/increase_order.rst","programmers-reference/fem/formmanipulations/index.rst","programmers-reference/fem/formmanipulations/tear.rst","programmers-reference/fem/index.rst","programmers-reference/fem/interpolation/index.rst","programmers-reference/fem/interpolation/interpolate.rst","programmers-reference/fem/norms/errornorm.rst","programmers-reference/fem/norms/index.rst","programmers-reference/fem/norms/norm.rst","programmers-reference/fem/projection/index.rst","programmers-reference/fem/projection/project.rst","programmers-reference/fem/solving/LinearVariationalProblem.rst","programmers-reference/fem/solving/LinearVariationalSolver.rst","programmers-reference/fem/solving/LocalSolver.rst","programmers-reference/fem/solving/NonlinearVariationalProblem.rst","programmers-reference/fem/solving/NonlinearVariationalSolver.rst","programmers-reference/fem/solving/index.rst","programmers-reference/fem/solving/solve.rst","programmers-reference/functions/constant/Constant.rst","programmers-reference/functions/constant/index.rst","programmers-reference/functions/expression/Expression.rst","programmers-reference/functions/expression/index.rst","programmers-reference/functions/function/Argument.rst","programmers-reference/functions/function/Function.rst","programmers-reference/functions/function/TestFunction.rst","programmers-reference/functions/function/TestFunctions.rst","programmers-reference/functions/function/TrialFunction.rst","programmers-reference/functions/function/TrialFunctions.rst","programmers-reference/functions/function/index.rst","programmers-reference/functions/functionspace/EnrichedFunctionSpace.rst","programmers-reference/functions/functionspace/FunctionSpace.rst","programmers-reference/functions/functionspace/FunctionSpaceBase.rst","programmers-reference/functions/functionspace/FunctionSpaceFromCpp.rst","programmers-reference/functions/functionspace/MixedFunctionSpace.rst","programmers-reference/functions/functionspace/MultiMeshFunctionSpace.rst","programmers-reference/functions/functionspace/TensorFunctionSpace.rst","programmers-reference/functions/functionspace/VectorFunctionSpace.rst","programmers-reference/functions/functionspace/index.rst","programmers-reference/functions/index.rst","programmers-reference/functions/specialfunctions/CellNormal.rst","programmers-reference/functions/specialfunctions/CellSize.rst","programmers-reference/functions/specialfunctions/CellVolume.rst","programmers-reference/functions/specialfunctions/Circumradius.rst","programmers-reference/functions/specialfunctions/FacetArea.rst","programmers-reference/functions/specialfunctions/FacetNormal.rst","programmers-reference/functions/specialfunctions/MaxFacetEdgeLength.rst","programmers-reference/functions/specialfunctions/MeshCoordinates.rst","programmers-reference/functions/specialfunctions/MinFacetEdgeLength.rst","programmers-reference/functions/specialfunctions/SpatialCoordinate.rst","programmers-reference/functions/specialfunctions/index.rst","programmers-reference/importhandler/index.rst","programmers-reference/index.rst","programmers-reference/mesh/ale/compute_edge_map.rst","programmers-reference/mesh/ale/compute_vertex_map.rst","programmers-reference/mesh/ale/index.rst","programmers-reference/mesh/ale/init_parent_edge_indices.rst","programmers-reference/mesh/boundarysubdomainfinder/create_maps.rst","programmers-reference/mesh/boundarysubdomainfinder/find_all_subdomains.rst","programmers-reference/mesh/boundarysubdomainfinder/find_keys_on_one_subdomain.rst","programmers-reference/mesh/boundarysubdomainfinder/find_new_cell_key.rst","programmers-reference/mesh/boundarysubdomainfinder/find_subdomain.rst","programmers-reference/mesh/boundarysubdomainfinder/index.rst","programmers-reference/mesh/boundarysubdomainfinder/main.rst","programmers-reference/mesh/boundarysubdomainfinder/usage.rst","programmers-reference/mesh/boundarysubdomainfinder/write_file.rst","programmers-reference/mesh/index.rst","programmers-reference/mesh/meshes/index.rst","programmers-reference/mesh/refinement/index.rst","programmers-reference/mesh/refinement/refine.rst","programmers-reference/mesh/svgtools/index.rst","programmers-reference/mesh/svgtools/mesh2svg.rst","programmers-reference/multistage/factorize/extract_tested_expressions.rst","programmers-reference/multistage/factorize/index.rst","programmers-reference/multistage/index.rst","programmers-reference/multistage/multistagescheme/BDF1.rst","programmers-reference/multistage/multistagescheme/BackwardEuler.rst","programmers-reference/multistage/multistagescheme/ButcherMultiStageScheme.rst","programmers-reference/multistage/multistagescheme/CN2.rst","programmers-reference/multistage/multistagescheme/CrankNicolson.rst","programmers-reference/multistage/multistagescheme/ERK.rst","programmers-reference/multistage/multistagescheme/ERK1.rst","programmers-reference/multistage/multistagescheme/ERK4.rst","programmers-reference/multistage/multistagescheme/ESDIRK3.rst","programmers-reference/multistage/multistagescheme/ESDIRK4.rst","programmers-reference/multistage/multistagescheme/ExplicitEuler.rst","programmers-reference/multistage/multistagescheme/ExplicitMidPoint.rst","programmers-reference/multistage/multistagescheme/ForwardEuler.rst","programmers-reference/multistage/multistagescheme/ImplicitEuler.rst","programmers-reference/multistage/multistagescheme/MultiStageScheme.rst","programmers-reference/multistage/multistagescheme/RK4.rst","programmers-reference/multistage/multistagescheme/index.rst","programmers-reference/multistage/multistagesolvers/PointIntegralSolver.rst","programmers-reference/multistage/multistagesolvers/RKSolver.rst","programmers-reference/multistage/multistagesolvers/index.rst","programmers-reference/multistage/rushlarsenschemes/GRL1.rst","programmers-reference/multistage/rushlarsenschemes/GRL2.rst","programmers-reference/multistage/rushlarsenschemes/MultiStageScheme.rst","programmers-reference/multistage/rushlarsenschemes/RL1.rst","programmers-reference/multistage/rushlarsenschemes/RL2.rst","programmers-reference/multistage/rushlarsenschemes/RushLarsenScheme.rst","programmers-reference/multistage/rushlarsenschemes/index.rst","quick_reference.rst"],objects:{"":{dolfin:[599,0,0,"-"]},"dolfin.common":{constants:[23,0,0,"-"],globalparameters:[24,0,0,"-"],math:[26,0,0,"-"],memory:[28,0,0,"-"],plotting:[30,0,0,"-"],time:[32,0,0,"-"]},"dolfin.common.math":{sqr:[27,1,1,""]},"dolfin.common.memory":{memory_usage:[29,1,1,""]},"dolfin.common.plotting":{plot:[31,1,1,""]},"dolfin.compilemodules":{compilemodule:[35,0,0,"-"],expressions:[37,0,0,"-"],jit:[39,0,0,"-"],subdomains:[42,0,0,"-"],swigimportinfo:[43,0,0,"-"]},"dolfin.compilemodules.compilemodule":{compile_extension_module:[33,1,1,""],expression_to_code_fragments:[34,1,1,""]},"dolfin.compilemodules.expressions":{compile_expressions:[36,1,1,""]},"dolfin.compilemodules.jit":{jit:[40,1,1,""]},"dolfin.compilemodules.subdomains":{CompiledSubDomain:[41,1,1,""]},"dolfin.cpp":{"function":[239,0,0,"-"],common:[110,0,0,"-"],fem:[202,0,0,"-"],io:[268,0,0,"-"],la:[373,0,0,"-"],mesh:[516,0,0,"-"]},"dolfin.cpp.common":{BoolParameter:[44,2,1,""],DoubleArray:[45,2,1,""],DoubleParameter:[46,2,1,""],Event:[47,2,1,""],GlobalParameters:[48,2,1,""],GlobalParameters_default_parameters:[49,1,1,""],IndexSet:[50,2,1,""],IntArray:[51,2,1,""],IntParameter:[52,2,1,""],MPI:[53,2,1,""],MPIInfo:[54,2,1,""],MPI_Comm:[55,2,1,""],MPI_MPI_AVG:[56,1,1,""],MPI_avg:[57,1,1,""],MPI_barrier:[58,1,1,""],MPI_compute_local_range:[59,1,1,""],MPI_gather:[60,1,1,""],MPI_global_offset:[61,1,1,""],MPI_index_owner:[62,1,1,""],MPI_is_broadcaster:[63,1,1,""],MPI_is_receiver:[64,1,1,""],MPI_local_range:[65,1,1,""],MPI_max:[66,1,1,""],MPI_min:[67,1,1,""],MPI_rank:[68,1,1,""],MPI_size:[69,1,1,""],MPI_sum:[70,1,1,""],ParameterValue:[71,2,1,""],Parameters:[72,2,1,""],Progress:[73,2,1,""],StringParameter:[74,2,1,""],SubSystemsManager:[75,2,1,""],SubSystemsManager_finalize:[76,1,1,""],SubSystemsManager_init_mpi:[77,1,1,""],SubSystemsManager_init_petsc:[78,1,1,""],SubSystemsManager_mpi_finalized:[79,1,1,""],SubSystemsManager_mpi_initialized:[80,1,1,""],SubSystemsManager_responsible_mpi:[81,1,1,""],SubSystemsManager_responsible_petsc:[82,1,1,""],SubSystemsManager_singleton:[83,1,1,""],Table:[84,2,1,""],TableEntry:[85,2,1,""],Timer:[86,2,1,""],UIntArray:[87,2,1,""],Variable:[88,2,1,""],begin:[89,1,1,""],debug:[90,1,1,""],deprecation:[91,1,1,""],dolfin_error:[92,1,1,""],dolfin_version:[93,1,1,""],dump_timings_to_xml:[94,1,1,""],end:[95,1,1,""],error:[96,1,1,""],get_log_level:[97,1,1,""],git_commit_hash:[98,1,1,""],has_cholmod:[99,1,1,""],has_hdf5:[100,1,1,""],has_mpi:[101,1,1,""],has_openmp:[102,1,1,""],has_parmetis:[103,1,1,""],has_petsc:[104,1,1,""],has_scotch:[105,1,1,""],has_slepc:[106,1,1,""],has_umfpack:[107,1,1,""],has_vtk:[108,1,1,""],has_zlib:[109,1,1,""],info:[111,1,1,""],info_stream:[112,1,1,""],info_underline:[113,1,1,""],init:[114,1,1,""],list_timings:[115,1,1,""],log:[116,1,1,""],monitor_memory_usage:[117,1,1,""],not_working_in_parallel:[118,1,1,""],set_log_active:[119,1,1,""],set_log_level:[120,1,1,""],set_output_stream:[121,1,1,""],sizeof_la_index:[122,1,1,""],tic:[123,1,1,""],time:[124,1,1,""],timing:[125,1,1,""],timings:[126,1,1,""],toc:[127,1,1,""],ufc_cell:[128,2,1,""],ufc_dofmap:[129,2,1,""],ufc_finite_element:[130,2,1,""],ufc_form:[131,2,1,""],ufc_function:[132,2,1,""],ufc_signature:[133,1,1,""],warning:[134,1,1,""]},"dolfin.cpp.common.BoolParameter":{thisown:[44,3,1,""]},"dolfin.cpp.common.DoubleArray":{array:[45,4,1,""],data:[45,4,1,""],size:[45,4,1,""],str:[45,4,1,""],thisown:[45,3,1,""]},"dolfin.cpp.common.DoubleParameter":{thisown:[46,3,1,""]},"dolfin.cpp.common.Event":{count:[47,4,1,""],maxcount:[47,4,1,""],thisown:[47,3,1,""]},"dolfin.cpp.common.GlobalParameters":{default_parameters:[48,5,1,""],thisown:[48,3,1,""]},"dolfin.cpp.common.IndexSet":{clear:[50,4,1,""],empty:[50,4,1,""],fill:[50,4,1,""],find:[50,4,1,""],has_index:[50,4,1,""],insert:[50,4,1,""],size:[50,4,1,""],thisown:[50,3,1,""]},"dolfin.cpp.common.IntArray":{array:[51,4,1,""],data:[51,4,1,""],size:[51,4,1,""],str:[51,4,1,""],thisown:[51,3,1,""]},"dolfin.cpp.common.IntParameter":{thisown:[52,3,1,""]},"dolfin.cpp.common.MPI":{MPI_AVG:[53,5,1,""],avg:[53,5,1,""],barrier:[53,5,1,""],compute_local_range:[53,5,1,""],gather:[53,5,1,""],global_offset:[53,5,1,""],index_owner:[53,5,1,""],is_broadcaster:[53,5,1,""],is_receiver:[53,5,1,""],local_range:[53,5,1,""],max:[53,5,1,""],min:[53,5,1,""],rank:[53,5,1,""],size:[53,5,1,""],sum:[53,5,1,""],thisown:[53,3,1,""]},"dolfin.cpp.common.MPIInfo":{thisown:[54,3,1,""]},"dolfin.cpp.common.MPI_Comm":{thisown:[55,3,1,""]},"dolfin.cpp.common.ParameterValue":{access_count:[71,4,1,""],change_count:[71,4,1,""],check_key:[71,5,1,""],data:[71,4,1,""],description:[71,4,1,""],get_range:[71,4,1,""],is_set:[71,4,1,""],key:[71,4,1,""],range_str:[71,4,1,""],reset:[71,4,1,""],set_range:[71,4,1,""],str:[71,4,1,""],thisown:[71,3,1,""],type_str:[71,4,1,""],value:[71,4,1,""],value_str:[71,4,1,""],warn_once:[71,4,1,""]},"dolfin.cpp.common.Parameters":{add:[72,4,1,""],assign:[72,4,1,""],clear:[72,4,1,""],copy:[72,4,1,""],find_parameter:[72,4,1,""],find_parameter_set:[72,4,1,""],get:[72,4,1,""],get_range:[72,4,1,""],has_key:[72,4,1,""],has_parameter:[72,4,1,""],has_parameter_set:[72,4,1,""],items:[72,4,1,""],iterdata:[72,4,1,""],iteritems:[72,4,1,""],iterkeys:[72,4,1,""],itervalues:[72,4,1,""],keys:[72,4,1,""],name:[72,4,1,""],option_string:[72,4,1,""],parse:[72,4,1,""],remove:[72,4,1,""],rename:[72,4,1,""],set_range:[72,4,1,""],str:[72,4,1,""],thisown:[72,3,1,""],to_dict:[72,4,1,""],update:[72,4,1,""],values:[72,4,1,""]},"dolfin.cpp.common.Progress":{thisown:[73,3,1,""],update:[73,4,1,""]},"dolfin.cpp.common.StringParameter":{thisown:[74,3,1,""]},"dolfin.cpp.common.SubSystemsManager":{finalize:[75,5,1,""],init_mpi:[75,5,1,""],init_petsc:[75,5,1,""],mpi_finalized:[75,5,1,""],mpi_initialized:[75,5,1,""],responsible_mpi:[75,5,1,""],responsible_petsc:[75,5,1,""],singleton:[75,5,1,""],thisown:[75,3,1,""]},"dolfin.cpp.common.Table":{get:[84,4,1,""],get_value:[84,4,1,""],set:[84,4,1,""],str_latex:[84,4,1,""],thisown:[84,3,1,""]},"dolfin.cpp.common.TableEntry":{thisown:[85,3,1,""]},"dolfin.cpp.common.Timer":{elapsed:[86,4,1,""],resume:[86,4,1,""],start:[86,4,1,""],stop:[86,4,1,""],thisown:[86,3,1,""]},"dolfin.cpp.common.UIntArray":{array:[87,4,1,""],data:[87,4,1,""],size:[87,4,1,""],str:[87,4,1,""],thisown:[87,3,1,""]},"dolfin.cpp.common.Variable":{id:[88,4,1,""],label:[88,4,1,""],name:[88,4,1,""],parameters:[88,3,1,""],rename:[88,4,1,""],str:[88,4,1,""],thisown:[88,3,1,""]},"dolfin.cpp.common.ufc_cell":{cell_shape:[128,3,1,""],geometric_dimension:[128,3,1,""],index:[128,3,1,""],local_facet:[128,3,1,""],mesh_identifier:[128,3,1,""],thisown:[128,3,1,""],topological_dimension:[128,3,1,""]},"dolfin.cpp.common.ufc_dofmap":{thisown:[129,3,1,""]},"dolfin.cpp.common.ufc_finite_element":{thisown:[130,3,1,""]},"dolfin.cpp.common.ufc_form":{thisown:[131,3,1,""]},"dolfin.cpp.common.ufc_function":{thisown:[132,3,1,""]},"dolfin.cpp.fem":{AdaptiveLinearVariationalSolver:[135,2,1,""],AdaptiveNonlinearVariationalSolver:[136,2,1,""],Assembler:[137,2,1,""],AssemblerBase:[138,2,1,""],BasisFunction:[139,2,1,""],DirichletBC:[140,2,1,""],DirichletBC_default_parameters:[141,1,1,""],DiscreteOperators:[142,2,1,""],DiscreteOperators_build_gradient:[143,1,1,""],DofMap:[144,2,1,""],Equation:[145,2,1,""],ErrorControl:[146,2,1,""],ErrorControl_default_parameters:[147,1,1,""],Extrapolation:[148,2,1,""],Extrapolation_extrapolate:[149,1,1,""],FiniteElement:[150,2,1,""],Form:[151,2,1,""],GenericAdaptiveVariationalSolver:[152,2,1,""],GenericAdaptiveVariationalSolver_default_parameters:[153,1,1,""],GenericDofMap:[154,2,1,""],HierarchicalDirichletBC:[155,2,1,""],HierarchicalErrorControl:[156,2,1,""],HierarchicalForm:[157,2,1,""],HierarchicalFunction:[158,2,1,""],HierarchicalFunctionSpace:[159,2,1,""],HierarchicalLinearVariationalProblem:[160,2,1,""],HierarchicalMesh:[161,2,1,""],HierarchicalNonlinearVariationalProblem:[162,2,1,""],LinearVariationalProblem:[163,2,1,""],LinearVariationalSolver:[164,2,1,""],LinearVariationalSolver_default_parameters:[165,1,1,""],LocalAssembler:[166,2,1,""],LocalAssembler_assemble:[167,1,1,""],LocalAssembler_assemble_cell:[168,1,1,""],LocalAssembler_assemble_exterior_facet:[169,1,1,""],LocalAssembler_assemble_interior_facet:[170,1,1,""],LocalSolver:[171,2,1,""],MultiMeshAssembler:[172,2,1,""],MultiMeshDirichletBC:[173,2,1,""],MultiMeshDofMap:[174,2,1,""],MultiMeshForm:[175,2,1,""],MultiStageScheme:[176,2,1,""],NonlinearVariationalProblem:[177,2,1,""],NonlinearVariationalSolver:[178,2,1,""],NonlinearVariationalSolver_default_parameters:[179,1,1,""],OpenMpAssembler:[180,2,1,""],PointIntegralSolver:[181,2,1,""],PointIntegralSolver_default_parameters:[182,1,1,""],PointSource:[183,2,1,""],RKSolver:[184,2,1,""],SparsityPatternBuilder:[185,2,1,""],SparsityPatternBuilder_build:[186,1,1,""],SparsityPatternBuilder_build_multimesh_sparsity_pattern:[187,1,1,""],SystemAssembler:[188,2,1,""],TimeSeries:[189,2,1,""],TimeSeries_default_parameters:[190,1,1,""],adapt:[191,1,1,""],adapt_markers:[192,1,1,""],assemble:[193,1,1,""],assemble_local:[194,1,1,""],assemble_multimesh:[195,1,1,""],assemble_system:[196,1,1,""],create_mesh:[197,1,1,""],dof_to_vertex_map:[198,1,1,""],dorfler_mark:[199,1,1,""],fem_solve:[200,1,1,""],get_coordinates:[201,1,1,""],mark:[203,1,1,""],set_coordinates:[204,1,1,""],ufc_cell:[205,2,1,""],ufc_dofmap:[206,2,1,""],ufc_finite_element:[207,2,1,""],ufc_form:[208,2,1,""],ufc_function:[209,2,1,""],vertex_to_dof_map:[210,1,1,""]},"dolfin.cpp.fem.AdaptiveLinearVariationalSolver":{thisown:[135,3,1,""]},"dolfin.cpp.fem.AdaptiveNonlinearVariationalSolver":{thisown:[136,3,1,""]},"dolfin.cpp.fem.Assembler":{assemble:[137,4,1,""],assemble_cells:[137,4,1,""],assemble_exterior_facets:[137,4,1,""],assemble_interior_facets:[137,4,1,""],assemble_vertices:[137,4,1,""],thisown:[137,3,1,""]},"dolfin.cpp.fem.AssemblerBase":{add_values:[138,3,1,""],finalize_tensor:[138,3,1,""],init_global_tensor:[138,4,1,""],keep_diagonal:[138,3,1,""],thisown:[138,3,1,""]},"dolfin.cpp.fem.BasisFunction":{eval:[139,4,1,""],eval_derivatives:[139,4,1,""],thisown:[139,3,1,""],update_index:[139,4,1,""]},"dolfin.cpp.fem.DirichletBC":{apply:[140,4,1,""],default_parameters:[140,5,1,""],function_space:[140,4,1,""],get_boundary_values:[140,4,1,""],homogenize:[140,4,1,""],markers:[140,4,1,""],method:[140,4,1,""],set_value:[140,4,1,""],thisown:[140,3,1,""],user_sub_domain:[140,4,1,""],value:[140,4,1,""],zero:[140,4,1,""],zero_columns:[140,4,1,""]},"dolfin.cpp.fem.DiscreteOperators":{build_gradient:[142,5,1,""],thisown:[142,3,1,""]},"dolfin.cpp.fem.DofMap":{dofs:[144,4,1,""],thisown:[144,3,1,""]},"dolfin.cpp.fem.Equation":{is_linear:[145,4,1,""],lhs:[145,4,1,""],rhs:[145,4,1,""],rhs_int:[145,4,1,""],thisown:[145,3,1,""]},"dolfin.cpp.fem.ErrorControl":{compute_cell_residual:[146,4,1,""],compute_dual:[146,4,1,""],compute_extrapolation:[146,4,1,""],compute_facet_residual:[146,4,1,""],compute_indicators:[146,4,1,""],default_parameters:[146,5,1,""],estimate_error:[146,4,1,""],residual_representation:[146,4,1,""],thisown:[146,3,1,""]},"dolfin.cpp.fem.Extrapolation":{extrapolate:[148,5,1,""],thisown:[148,3,1,""]},"dolfin.cpp.fem.FiniteElement":{cell_shape:[150,4,1,""],create:[150,4,1,""],create_sub_element:[150,4,1,""],evaluate_basis:[150,4,1,""],evaluate_basis_all:[150,4,1,""],evaluate_basis_derivatives:[150,4,1,""],evaluate_basis_derivatives_all:[150,4,1,""],evaluate_dof:[150,4,1,""],evaluate_dofs:[150,4,1,""],extract_sub_element:[150,4,1,""],geometric_dimension:[150,4,1,""],hash:[150,4,1,""],interpolate_vertex_values:[150,4,1,""],num_sub_elements:[150,4,1,""],signature:[150,4,1,""],space_dimension:[150,4,1,""],tabulate_dof_coordinates:[150,4,1,""],thisown:[150,3,1,""],topological_dimension:[150,4,1,""],ufc_element:[150,4,1,""],value_dimension:[150,4,1,""],value_rank:[150,4,1,""]},"dolfin.cpp.fem.Form":{cell_domains:[151,4,1,""],check:[151,4,1,""],coefficient:[151,4,1,""],coefficient_name:[151,4,1,""],coefficient_number:[151,4,1,""],coefficients:[151,4,1,""],coloring:[151,4,1,""],exterior_facet_domains:[151,4,1,""],function_space:[151,4,1,""],function_spaces:[151,4,1,""],interior_facet_domains:[151,4,1,""],mesh:[151,4,1,""],num_coefficients:[151,4,1,""],original_coefficient_position:[151,4,1,""],rank:[151,4,1,""],set_cell_domains:[151,4,1,""],set_coefficient:[151,4,1,""],set_coefficients:[151,4,1,""],set_exterior_facet_domains:[151,4,1,""],set_interior_facet_domains:[151,4,1,""],set_mesh:[151,4,1,""],set_some_coefficients:[151,4,1,""],set_vertex_domains:[151,4,1,""],thisown:[151,3,1,""],ufc_form:[151,4,1,""],vertex_domains:[151,4,1,""]},"dolfin.cpp.fem.GenericAdaptiveVariationalSolver":{adapt_problem:[152,4,1,""],adaptive_data:[152,4,1,""],default_parameters:[152,5,1,""],evaluate_goal:[152,4,1,""],extract_bcs:[152,4,1,""],solve:[152,4,1,""],solve_primal:[152,4,1,""],summary:[152,4,1,""],thisown:[152,3,1,""]},"dolfin.cpp.fem.GenericDofMap":{block_size:[154,4,1,""],cell_dimension:[154,4,1,""],cell_dofs:[154,4,1,""],clear_sub_map_data:[154,4,1,""],collapse:[154,4,1,""],constrained_domain:[154,3,1,""],copy:[154,4,1,""],create:[154,4,1,""],dofs:[154,4,1,""],extract_sub_dofmap:[154,4,1,""],global_dimension:[154,4,1,""],index_map:[154,4,1,""],is_view:[154,4,1,""],local_dimension:[154,4,1,""],local_to_global_index:[154,4,1,""],local_to_global_unowned:[154,4,1,""],max_cell_dimension:[154,4,1,""],max_element_dofs:[154,4,1,""],neighbours:[154,4,1,""],num_element_dofs:[154,4,1,""],num_entity_dofs:[154,4,1,""],num_facet_dofs:[154,4,1,""],off_process_owner:[154,4,1,""],ownership_range:[154,4,1,""],set:[154,4,1,""],shared_nodes:[154,4,1,""],tabulate_entity_dofs:[154,4,1,""],tabulate_facet_dofs:[154,4,1,""],tabulate_global_dofs:[154,4,1,""],tabulate_local_to_global_dofs:[154,4,1,""],thisown:[154,3,1,""]},"dolfin.cpp.fem.HierarchicalDirichletBC":{child:[155,4,1,""],clear_child:[155,4,1,""],depth:[155,4,1,""],has_child:[155,4,1,""],has_parent:[155,4,1,""],leaf_node:[155,4,1,""],parent:[155,4,1,""],root_node:[155,4,1,""],set_child:[155,4,1,""],set_parent:[155,4,1,""],thisown:[155,3,1,""]},"dolfin.cpp.fem.HierarchicalErrorControl":{child:[156,4,1,""],clear_child:[156,4,1,""],depth:[156,4,1,""],has_child:[156,4,1,""],has_parent:[156,4,1,""],leaf_node:[156,4,1,""],parent:[156,4,1,""],root_node:[156,4,1,""],set_child:[156,4,1,""],set_parent:[156,4,1,""],thisown:[156,3,1,""]},"dolfin.cpp.fem.HierarchicalForm":{child:[157,4,1,""],clear_child:[157,4,1,""],depth:[157,4,1,""],has_child:[157,4,1,""],has_parent:[157,4,1,""],leaf_node:[157,4,1,""],parent:[157,4,1,""],root_node:[157,4,1,""],set_child:[157,4,1,""],set_parent:[157,4,1,""],thisown:[157,3,1,""]},"dolfin.cpp.fem.HierarchicalFunction":{clear_child:[158,4,1,""],depth:[158,4,1,""],has_child:[158,4,1,""],has_parent:[158,4,1,""],set_child:[158,4,1,""],set_parent:[158,4,1,""],thisown:[158,3,1,""]},"dolfin.cpp.fem.HierarchicalFunctionSpace":{clear_child:[159,4,1,""],depth:[159,4,1,""],has_child:[159,4,1,""],has_parent:[159,4,1,""],set_child:[159,4,1,""],set_parent:[159,4,1,""],thisown:[159,3,1,""]},"dolfin.cpp.fem.HierarchicalLinearVariationalProblem":{child:[160,4,1,""],clear_child:[160,4,1,""],depth:[160,4,1,""],has_child:[160,4,1,""],has_parent:[160,4,1,""],leaf_node:[160,4,1,""],parent:[160,4,1,""],root_node:[160,4,1,""],set_child:[160,4,1,""],set_parent:[160,4,1,""],thisown:[160,3,1,""]},"dolfin.cpp.fem.HierarchicalMesh":{clear_child:[161,4,1,""],depth:[161,4,1,""],has_child:[161,4,1,""],has_parent:[161,4,1,""],set_child:[161,4,1,""],set_parent:[161,4,1,""],thisown:[161,3,1,""]},"dolfin.cpp.fem.HierarchicalNonlinearVariationalProblem":{child:[162,4,1,""],clear_child:[162,4,1,""],depth:[162,4,1,""],has_child:[162,4,1,""],has_parent:[162,4,1,""],leaf_node:[162,4,1,""],parent:[162,4,1,""],root_node:[162,4,1,""],set_child:[162,4,1,""],set_parent:[162,4,1,""],thisown:[162,3,1,""]},"dolfin.cpp.fem.LinearVariationalProblem":{bcs:[163,4,1,""],bilinear_form:[163,4,1,""],linear_form:[163,4,1,""],solution:[163,4,1,""],test_space:[163,4,1,""],thisown:[163,3,1,""],trial_space:[163,4,1,""]},"dolfin.cpp.fem.LinearVariationalSolver":{default_parameters:[164,5,1,""],solve:[164,4,1,""],thisown:[164,3,1,""]},"dolfin.cpp.fem.LocalAssembler":{assemble:[166,5,1,""],assemble_cell:[166,5,1,""],assemble_exterior_facet:[166,5,1,""],assemble_interior_facet:[166,5,1,""],thisown:[166,3,1,""]},"dolfin.cpp.fem.LocalSolver":{SolverType_Cholesky:[171,3,1,""],SolverType_LU:[171,3,1,""],clear_factorization:[171,4,1,""],factorize:[171,4,1,""],solve_global_rhs:[171,4,1,""],solve_local:[171,4,1,""],solve_local_rhs:[171,4,1,""],thisown:[171,3,1,""]},"dolfin.cpp.fem.MultiMeshAssembler":{assemble:[172,4,1,""],extend_cut_cell_integration:[172,3,1,""],thisown:[172,3,1,""]},"dolfin.cpp.fem.MultiMeshDirichletBC":{apply:[173,4,1,""],thisown:[173,3,1,""]},"dolfin.cpp.fem.MultiMeshDofMap":{add:[174,4,1,""],build:[174,4,1,""],clear:[174,4,1,""],global_dimension:[174,4,1,""],index_map:[174,4,1,""],num_parts:[174,4,1,""],off_process_owner:[174,4,1,""],ownership_range:[174,4,1,""],part:[174,4,1,""],str:[174,4,1,""],thisown:[174,3,1,""]},"dolfin.cpp.fem.MultiMeshForm":{add:[175,4,1,""],build:[175,4,1,""],clear:[175,4,1,""],function_space:[175,4,1,""],multimesh:[175,4,1,""],num_parts:[175,4,1,""],part:[175,4,1,""],rank:[175,4,1,""],thisown:[175,3,1,""]},"dolfin.cpp.fem.MultiStageScheme":{bcs:[176,4,1,""],dt_stage_offset:[176,4,1,""],implicit:[176,4,1,""],jacobian_index:[176,4,1,""],order:[176,4,1,""],thisown:[176,3,1,""]},"dolfin.cpp.fem.NonlinearVariationalProblem":{bcs:[177,4,1,""],has_jacobian:[177,4,1,""],has_lower_bound:[177,4,1,""],has_upper_bound:[177,4,1,""],jacobian_form:[177,4,1,""],lower_bound:[177,4,1,""],residual_form:[177,4,1,""],set_bounds:[177,4,1,""],solution:[177,4,1,""],test_space:[177,4,1,""],thisown:[177,3,1,""],trial_space:[177,4,1,""],upper_bound:[177,4,1,""]},"dolfin.cpp.fem.NonlinearVariationalSolver":{default_parameters:[178,5,1,""],solve:[178,4,1,""],thisown:[178,3,1,""]},"dolfin.cpp.fem.OpenMpAssembler":{assemble:[180,4,1,""],thisown:[180,3,1,""]},"dolfin.cpp.fem.PointIntegralSolver":{default_parameters:[181,5,1,""],num_jacobian_computations:[181,4,1,""],reset_newton_solver:[181,4,1,""],reset_stage_solutions:[181,4,1,""],step:[181,4,1,""],step_interval:[181,4,1,""],thisown:[181,3,1,""]},"dolfin.cpp.fem.PointSource":{apply:[183,4,1,""],thisown:[183,3,1,""]},"dolfin.cpp.fem.RKSolver":{step:[184,4,1,""],step_interval:[184,4,1,""],thisown:[184,3,1,""]},"dolfin.cpp.fem.SparsityPatternBuilder":{build:[185,5,1,""],build_multimesh_sparsity_pattern:[185,5,1,""],thisown:[185,3,1,""]},"dolfin.cpp.fem.SystemAssembler":{assemble:[188,4,1,""],thisown:[188,3,1,""]},"dolfin.cpp.fem.TimeSeries":{clear:[189,4,1,""],default_parameters:[189,5,1,""],mesh_times:[189,4,1,""],retrieve:[189,4,1,""],store:[189,4,1,""],thisown:[189,3,1,""],vector_times:[189,4,1,""]},"dolfin.cpp.fem.ufc_cell":{cell_shape:[205,3,1,""],geometric_dimension:[205,3,1,""],index:[205,3,1,""],local_facet:[205,3,1,""],mesh_identifier:[205,3,1,""],thisown:[205,3,1,""],topological_dimension:[205,3,1,""]},"dolfin.cpp.fem.ufc_dofmap":{thisown:[206,3,1,""]},"dolfin.cpp.fem.ufc_finite_element":{thisown:[207,3,1,""]},"dolfin.cpp.fem.ufc_form":{thisown:[208,3,1,""]},"dolfin.cpp.fem.ufc_function":{thisown:[209,3,1,""]},"dolfin.cpp.function":{ALE:[211,2,1,""],ALE_move:[212,1,1,""],Constant:[213,2,1,""],Expression:[214,2,1,""],FacetArea:[215,2,1,""],Function:[216,2,1,""],FunctionAXPY:[217,2,1,""],FunctionAssigner:[218,2,1,""],FunctionSpace:[219,2,1,""],GenericFunction:[220,2,1,""],HierarchicalFunction:[221,2,1,""],HierarchicalFunctionSpace:[222,2,1,""],HierarchicalMesh:[223,2,1,""],Lagrange:[224,2,1,""],LagrangeInterpolator:[225,2,1,""],LagrangeInterpolator_interpolate:[226,1,1,""],Legendre:[227,2,1,""],Legendre_d2dx:[228,1,1,""],Legendre_ddx:[229,1,1,""],Legendre_eval:[230,1,1,""],MeshCoordinates:[231,2,1,""],MeshDisplacement:[232,2,1,""],MultiMeshFunction:[233,2,1,""],MultiMeshFunctionSpace:[234,2,1,""],MultiMeshSubSpace:[235,2,1,""],SpecialFacetFunction:[236,2,1,""],assign:[237,1,1,""],between:[238,1,1,""],ipow:[240,1,1,""],near:[241,1,1,""],rand:[242,1,1,""],seed:[243,1,1,""],ufc_cell:[244,2,1,""],ufc_dofmap:[245,2,1,""],ufc_finite_element:[246,2,1,""],ufc_form:[247,2,1,""],ufc_function:[248,2,1,""]},"dolfin.cpp.function.ALE":{move:[211,5,1,""],thisown:[211,3,1,""]},"dolfin.cpp.function.Constant":{assign:[213,4,1,""],thisown:[213,3,1,""],values:[213,4,1,""]},"dolfin.cpp.function.Expression":{eval:[214,4,1,""],eval_cell:[214,4,1,""],thisown:[214,3,1,""]},"dolfin.cpp.function.FacetArea":{thisown:[215,3,1,""]},"dolfin.cpp.function.Function":{child:[216,4,1,""],compute_vertex_values:[216,4,1,""],copy:[216,4,1,""],eval:[216,4,1,""],extrapolate:[216,4,1,""],function_space:[216,4,1,""],geometric_dimension:[216,4,1,""],get_allow_extrapolation:[216,4,1,""],interpolate:[216,4,1,""],leaf_node:[216,4,1,""],parent:[216,4,1,""],root_node:[216,4,1,""],set_allow_extrapolation:[216,4,1,""],sub:[216,4,1,""],thisown:[216,3,1,""],vector:[216,4,1,""]},"dolfin.cpp.function.FunctionAXPY":{Direction_ADD_ADD:[217,3,1,""],Direction_ADD_SUB:[217,3,1,""],Direction_SUB_ADD:[217,3,1,""],Direction_SUB_SUB:[217,3,1,""],pairs:[217,4,1,""],thisown:[217,3,1,""]},"dolfin.cpp.function.FunctionAssigner":{assign:[218,4,1,""],num_assigning_functions:[218,4,1,""],num_receiving_functions:[218,4,1,""],thisown:[218,3,1,""]},"dolfin.cpp.function.FunctionSpace":{assign:[219,4,1,""],child:[219,4,1,""],collapse:[219,4,1,""],component:[219,4,1,""],dim:[219,4,1,""],dofmap:[219,4,1,""],element:[219,4,1,""],extract_sub_space:[219,4,1,""],has_cell:[219,4,1,""],has_element:[219,4,1,""],interpolate:[219,4,1,""],leaf_node:[219,4,1,""],mesh:[219,4,1,""],parent:[219,4,1,""],print_dofmap:[219,4,1,""],root_node:[219,4,1,""],set_x:[219,4,1,""],sub:[219,4,1,""],tabulate_dof_coordinates:[219,4,1,""],thisown:[219,3,1,""]},"dolfin.cpp.function.GenericFunction":{compute_vertex_values:[220,4,1,""],eval:[220,4,1,""],eval_cell:[220,4,1,""],restrict:[220,4,1,""],thisown:[220,3,1,""],update:[220,4,1,""],value_dimension:[220,4,1,""],value_rank:[220,4,1,""],value_size:[220,4,1,""]},"dolfin.cpp.function.HierarchicalFunction":{clear_child:[221,4,1,""],depth:[221,4,1,""],has_child:[221,4,1,""],has_parent:[221,4,1,""],set_child:[221,4,1,""],set_parent:[221,4,1,""],thisown:[221,3,1,""]},"dolfin.cpp.function.HierarchicalFunctionSpace":{clear_child:[222,4,1,""],depth:[222,4,1,""],has_child:[222,4,1,""],has_parent:[222,4,1,""],set_child:[222,4,1,""],set_parent:[222,4,1,""],thisown:[222,3,1,""]},"dolfin.cpp.function.HierarchicalMesh":{clear_child:[223,4,1,""],depth:[223,4,1,""],has_child:[223,4,1,""],has_parent:[223,4,1,""],set_child:[223,4,1,""],set_parent:[223,4,1,""],thisown:[223,3,1,""]},"dolfin.cpp.function.Lagrange":{ddx:[224,4,1,""],degree:[224,4,1,""],dqdx:[224,4,1,""],eval:[224,4,1,""],point:[224,4,1,""],set:[224,4,1,""],size:[224,4,1,""],thisown:[224,3,1,""]},"dolfin.cpp.function.LagrangeInterpolator":{interpolate:[225,5,1,""],thisown:[225,3,1,""]},"dolfin.cpp.function.Legendre":{d2dx:[227,5,1,""],ddx:[227,5,1,""],eval:[227,5,1,""],thisown:[227,3,1,""]},"dolfin.cpp.function.MeshCoordinates":{thisown:[231,3,1,""]},"dolfin.cpp.function.MeshDisplacement":{sub:[232,4,1,""],thisown:[232,3,1,""]},"dolfin.cpp.function.MultiMeshFunction":{part:[233,4,1,""],thisown:[233,3,1,""],vector:[233,4,1,""]},"dolfin.cpp.function.MultiMeshFunctionSpace":{add:[234,4,1,""],build:[234,4,1,""],dim:[234,4,1,""],dofmap:[234,4,1,""],multimesh:[234,4,1,""],num_parts:[234,4,1,""],part:[234,4,1,""],thisown:[234,3,1,""],view:[234,4,1,""]},"dolfin.cpp.function.MultiMeshSubSpace":{thisown:[235,3,1,""]},"dolfin.cpp.function.SpecialFacetFunction":{thisown:[236,3,1,""]},"dolfin.cpp.function.ufc_cell":{cell_shape:[244,3,1,""],geometric_dimension:[244,3,1,""],index:[244,3,1,""],local_facet:[244,3,1,""],mesh_identifier:[244,3,1,""],thisown:[244,3,1,""],topological_dimension:[244,3,1,""]},"dolfin.cpp.function.ufc_dofmap":{thisown:[245,3,1,""]},"dolfin.cpp.function.ufc_finite_element":{thisown:[246,3,1,""]},"dolfin.cpp.function.ufc_form":{thisown:[247,3,1,""]},"dolfin.cpp.function.ufc_function":{thisown:[248,3,1,""]},"dolfin.cpp.io":{File:[250,2,1,""],File_create_parent_path:[251,1,1,""],File_exists:[252,1,1,""],GenericFile:[253,2,1,""],HDF5Attribute:[254,2,1,""],HDF5File:[255,2,1,""],HierarchicalFunction:[256,2,1,""],HierarchicalFunctionSpace:[257,2,1,""],HierarchicalMesh:[258,2,1,""],VTKPlotter:[259,2,1,""],VTKPlotter_all_interactive:[260,1,1,""],VTKPlotter_default_parameters:[261,1,1,""],VTKPlotter_to_key:[262,1,1,""],X3DOM:[263,2,1,""],X3DOMParameters:[264,2,1,""],X3DOM_html:[265,1,1,""],X3DOM_str:[266,1,1,""],XDMFFile:[267,2,1,""],interactive:[269,1,1,""],plot:[270,1,1,""],ufc_cell:[271,2,1,""],ufc_dofmap:[272,2,1,""],ufc_finite_element:[273,2,1,""],ufc_form:[274,2,1,""],ufc_function:[275,2,1,""]},"dolfin.cpp.io.File":{Type_binary:[250,3,1,""],Type_raw:[250,3,1,""],Type_svg:[250,3,1,""],Type_vtk:[250,3,1,""],Type_x3d:[250,3,1,""],Type_xml:[250,3,1,""],Type_xyz:[250,3,1,""],create_parent_path:[250,5,1,""],exists:[250,5,1,""],thisown:[250,3,1,""]},"dolfin.cpp.io.GenericFile":{name:[253,4,1,""],thisown:[253,3,1,""]},"dolfin.cpp.io.HDF5Attribute":{exists:[254,4,1,""],items:[254,4,1,""],keys:[254,4,1,""],list_attributes:[254,4,1,""],str:[254,4,1,""],thisown:[254,3,1,""],to_dict:[254,4,1,""],type_str:[254,4,1,""],values:[254,4,1,""]},"dolfin.cpp.io.HDF5File":{attributes:[255,4,1,""],close:[255,4,1,""],flush:[255,4,1,""],h5_id:[255,4,1,""],has_dataset:[255,4,1,""],read:[255,4,1,""],thisown:[255,3,1,""],write:[255,4,1,""]},"dolfin.cpp.io.HierarchicalFunction":{clear_child:[256,4,1,""],depth:[256,4,1,""],has_child:[256,4,1,""],has_parent:[256,4,1,""],set_child:[256,4,1,""],set_parent:[256,4,1,""],thisown:[256,3,1,""]},"dolfin.cpp.io.HierarchicalFunctionSpace":{clear_child:[257,4,1,""],depth:[257,4,1,""],has_child:[257,4,1,""],has_parent:[257,4,1,""],set_child:[257,4,1,""],set_parent:[257,4,1,""],thisown:[257,3,1,""]},"dolfin.cpp.io.HierarchicalMesh":{clear_child:[258,4,1,""],depth:[258,4,1,""],has_child:[258,4,1,""],has_parent:[258,4,1,""],set_child:[258,4,1,""],set_parent:[258,4,1,""],thisown:[258,3,1,""]},"dolfin.cpp.io.VTKPlotter":{Modifiers_ALT:[259,3,1,""],Modifiers_CONTROL:[259,3,1,""],Modifiers_SHIFT:[259,3,1,""],add_polygon:[259,4,1,""],all_interactive:[259,5,1,""],azimuth:[259,4,1,""],default_parameters:[259,5,1,""],dolly:[259,4,1,""],elevate:[259,4,1,""],interactive:[259,4,1,""],is_compatible:[259,4,1,""],key:[259,4,1,""],key_pressed:[259,4,1,""],plot:[259,4,1,""],set_key:[259,4,1,""],set_min_max:[259,4,1,""],set_viewangle:[259,4,1,""],thisown:[259,3,1,""],to_key:[259,5,1,""],update:[259,4,1,""],write_pdf:[259,4,1,""],write_png:[259,4,1,""],zoom:[259,4,1,""]},"dolfin.cpp.io.X3DOM":{build_x3dom_tree:[263,5,1,""],html:[263,5,1,""],str:[263,5,1,""],thisown:[263,3,1,""]},"dolfin.cpp.io.X3DOMParameters":{Representation_surface:[264,3,1,""],Representation_surface_with_edges:[264,3,1,""],Representation_wireframe:[264,3,1,""],get_ambient_intensity:[264,4,1,""],get_background_color:[264,4,1,""],get_color_map:[264,4,1,""],get_diffuse_color:[264,4,1,""],get_emissive_color:[264,4,1,""],get_representation:[264,4,1,""],get_shininess:[264,4,1,""],get_specular_color:[264,4,1,""],get_transparency:[264,4,1,""],get_viewpoint_buttons:[264,4,1,""],get_viewport_size:[264,4,1,""],get_x3d_stats:[264,4,1,""],set_ambient_intensity:[264,4,1,""],set_background_color:[264,4,1,""],set_color_map:[264,4,1,""],set_diffuse_color:[264,4,1,""],set_emissive_color:[264,4,1,""],set_representation:[264,4,1,""],set_shininess:[264,4,1,""],set_specular_color:[264,4,1,""],set_transparency:[264,4,1,""],set_viewpoint_buttons:[264,4,1,""],set_x3d_stats:[264,4,1,""],thisown:[264,3,1,""]},"dolfin.cpp.io.XDMFFile":{Encoding_ASCII:[267,3,1,""],Encoding_HDF5:[267,3,1,""],UseFilePartition_no:[267,3,1,""],UseFilePartition_yes:[267,3,1,""],read:[267,4,1,""],read_new:[267,4,1,""],thisown:[267,3,1,""],write:[267,4,1,""],write_new:[267,4,1,""]},"dolfin.cpp.io.ufc_cell":{cell_shape:[271,3,1,""],geometric_dimension:[271,3,1,""],index:[271,3,1,""],local_facet:[271,3,1,""],mesh_identifier:[271,3,1,""],thisown:[271,3,1,""],topological_dimension:[271,3,1,""]},"dolfin.cpp.io.ufc_dofmap":{thisown:[272,3,1,""]},"dolfin.cpp.io.ufc_finite_element":{thisown:[273,3,1,""]},"dolfin.cpp.io.ufc_form":{thisown:[274,3,1,""]},"dolfin.cpp.io.ufc_function":{thisown:[275,3,1,""]},"dolfin.cpp.la":{BlockMatrix:[280,2,1,""],BlockVector:[281,2,1,""],CoordinateMatrix:[282,2,1,""],DefaultFactory:[283,2,1,""],DefaultFactory_factory:[284,1,1,""],EigenFactory:[285,2,1,""],EigenFactory_instance:[286,1,1,""],EigenKrylovSolver:[287,2,1,""],EigenKrylovSolver_default_parameters:[288,1,1,""],EigenKrylovSolver_methods:[289,1,1,""],EigenKrylovSolver_preconditioners:[290,1,1,""],EigenLUSolver:[291,2,1,""],EigenLUSolver_default_parameters:[292,1,1,""],EigenLUSolver_methods:[293,1,1,""],EigenMatrix:[294,2,1,""],EigenVector:[295,2,1,""],GenericLUSolver:[296,2,1,""],GenericLinearAlgebraFactory:[297,2,1,""],GenericLinearOperator:[298,2,1,""],GenericLinearSolver:[299,2,1,""],GenericMatrix:[300,2,1,""],GenericTensor:[301,2,1,""],GenericVector:[302,2,1,""],IndexMap:[306,2,1,""],KrylovSolver:[307,2,1,""],KrylovSolver_default_parameters:[308,1,1,""],LUSolver:[309,2,1,""],LUSolver_default_parameters:[310,1,1,""],LinearAlgebraObject:[311,2,1,""],LinearOperator:[312,2,1,""],LinearSolver:[313,2,1,""],LinearSolver_default_parameters:[314,1,1,""],Matrix:[315,2,1,""],NewtonSolver:[318,2,1,""],NewtonSolver_default_parameters:[319,1,1,""],NonlinearProblem:[320,2,1,""],OptimisationProblem:[321,2,1,""],PETScBaseMatrix:[322,2,1,""],PETScFactory:[323,2,1,""],PETScFactory_instance:[324,1,1,""],PETScKrylovSolver:[325,2,1,""],PETScKrylovSolver_default_parameters:[326,1,1,""],PETScKrylovSolver_methods:[327,1,1,""],PETScKrylovSolver_preconditioners:[328,1,1,""],PETScLUSolver:[329,2,1,""],PETScLUSolver_default_parameters:[330,1,1,""],PETScLUSolver_methods:[331,1,1,""],PETScLinearOperator:[332,2,1,""],PETScMatrix:[333,2,1,""],PETScObject:[334,2,1,""],PETScObject_petsc_error:[335,1,1,""],PETScOptions:[336,2,1,""],PETScOptions_clear:[337,1,1,""],PETScOptions_set:[338,1,1,""],PETScPreconditioner:[339,2,1,""],PETScPreconditioner_preconditioners:[340,1,1,""],PETScSNESSolver:[341,2,1,""],PETScSNESSolver_default_parameters:[342,1,1,""],PETScSNESSolver_methods:[343,1,1,""],PETScTAOSolver:[344,2,1,""],PETScTAOSolver_default_parameters:[345,1,1,""],PETScTAOSolver_methods:[346,1,1,""],PETScUserPreconditioner:[347,2,1,""],PETScVector:[348,2,1,""],SLEPcEigenSolver:[349,2,1,""],SLEPcEigenSolver_default_parameters:[350,1,1,""],Scalar:[351,2,1,""],SparsityPattern:[352,2,1,""],TAOLinearBoundSolver:[353,2,1,""],TAOLinearBoundSolver_default_parameters:[354,1,1,""],TAOLinearBoundSolver_krylov_solvers:[355,1,1,""],TAOLinearBoundSolver_methods:[356,1,1,""],TAOLinearBoundSolver_preconditioners:[357,1,1,""],TensorLayout:[358,2,1,""],Vector:[364,2,1,""],VectorSpaceBasis:[365,2,1,""],as_backend_type:[366,1,1,""],get_tensor_type:[367,1,1,""],has_krylov_solver_method:[368,1,1,""],has_krylov_solver_preconditioner:[369,1,1,""],has_lu_solver_method:[370,1,1,""],has_type:[371,1,1,""],in_nullspace:[372,1,1,""],krylov_solver_methods:[374,1,1,""],krylov_solver_preconditioners:[375,1,1,""],la_index_dtype:[376,1,1,""],la_solve:[377,1,1,""],linear_algebra_backends:[378,1,1,""],linear_solver_methods:[379,1,1,""],list_krylov_solver_methods:[380,1,1,""],list_krylov_solver_preconditioners:[381,1,1,""],list_linear_algebra_backends:[382,1,1,""],list_linear_solver_methods:[383,1,1,""],list_lu_solver_methods:[384,1,1,""],lu_solver_methods:[385,1,1,""],normalize:[386,1,1,""],residual:[387,1,1,""],ufc_cell:[388,2,1,""],ufc_dofmap:[389,2,1,""],ufc_finite_element:[390,2,1,""],ufc_form:[391,2,1,""],ufc_function:[392,2,1,""]},"dolfin.cpp.la.BlockMatrix":{apply:[280,4,1,""],get_block:[280,4,1,""],mult:[280,4,1,""],schur_approximation:[280,4,1,""],set_block:[280,4,1,""],size:[280,4,1,""],str:[280,4,1,""],thisown:[280,3,1,""],zero:[280,4,1,""]},"dolfin.cpp.la.BlockVector":{axpy:[281,4,1,""],copy:[281,4,1,""],empty:[281,4,1,""],get_block:[281,4,1,""],inner:[281,4,1,""],max:[281,4,1,""],min:[281,4,1,""],norm:[281,4,1,""],set_block:[281,4,1,""],size:[281,4,1,""],str:[281,4,1,""],thisown:[281,3,1,""]},"dolfin.cpp.la.CoordinateMatrix":{base_one:[282,4,1,""],columns:[282,4,1,""],mpi_comm:[282,4,1,""],norm:[282,4,1,""],rows:[282,4,1,""],size:[282,4,1,""],thisown:[282,3,1,""],values:[282,4,1,""]},"dolfin.cpp.la.DefaultFactory":{factory:[283,5,1,""],thisown:[283,3,1,""]},"dolfin.cpp.la.EigenFactory":{instance:[285,5,1,""],thisown:[285,3,1,""]},"dolfin.cpp.la.EigenKrylovSolver":{default_parameters:[287,5,1,""],get_operator:[287,4,1,""],methods:[287,5,1,""],preconditioners:[287,5,1,""],set_operator:[287,4,1,""],set_operators:[287,4,1,""],solve:[287,4,1,""],thisown:[287,3,1,""]},"dolfin.cpp.la.EigenLUSolver":{default_parameters:[291,5,1,""],get_operator:[291,4,1,""],methods:[291,5,1,""],set_operator:[291,4,1,""],solve:[291,4,1,""],solve_transpose:[291,4,1,""],thisown:[291,3,1,""]},"dolfin.cpp.la.EigenMatrix":{assign:[294,4,1,""],compress:[294,4,1,""],data:[294,4,1,""],mat:[294,4,1,""],resize:[294,4,1,""],sparray:[294,4,1,""],thisown:[294,3,1,""],zero:[294,4,1,""]},"dolfin.cpp.la.EigenVector":{add_local:[295,4,1,""],data:[295,4,1,""],gather:[295,4,1,""],get_local:[295,4,1,""],init:[295,4,1,""],resize:[295,4,1,""],set_local:[295,4,1,""],sum:[295,4,1,""],thisown:[295,3,1,""],vec:[295,4,1,""]},"dolfin.cpp.la.GenericLUSolver":{solve:[296,4,1,""],solve_transpose:[296,4,1,""],thisown:[296,3,1,""]},"dolfin.cpp.la.GenericLinearAlgebraFactory":{create_krylov_solver:[297,4,1,""],create_layout:[297,4,1,""],create_linear_operator:[297,4,1,""],create_lu_solver:[297,4,1,""],create_matrix:[297,4,1,""],create_vector:[297,4,1,""],krylov_solver_methods:[297,4,1,""],krylov_solver_preconditioners:[297,4,1,""],lu_solver_methods:[297,4,1,""],thisown:[297,3,1,""]},"dolfin.cpp.la.GenericLinearOperator":{mult:[298,4,1,""],size:[298,4,1,""],thisown:[298,3,1,""]},"dolfin.cpp.la.GenericLinearSolver":{parameter_type:[299,4,1,""],set_operator:[299,4,1,""],set_operators:[299,4,1,""],solve:[299,4,1,""],solve_transpose:[299,4,1,""],thisown:[299,3,1,""],update_parameters:[299,4,1,""]},"dolfin.cpp.la.GenericMatrix":{add:[300,4,1,""],add_local:[300,4,1,""],array:[300,4,1,""],assign:[300,4,1,""],axpy:[300,4,1,""],copy:[300,4,1,""],get:[300,4,1,""],get_diagonal:[300,4,1,""],getrow:[300,4,1,""],ident:[300,4,1,""],ident_local:[300,4,1,""],ident_zeros:[300,4,1,""],init_vector:[300,4,1,""],is_symmetric:[300,4,1,""],nnz:[300,4,1,""],norm:[300,4,1,""],set:[300,4,1,""],set_diagonal:[300,4,1,""],set_local:[300,4,1,""],setrow:[300,4,1,""],thisown:[300,3,1,""],transpmult:[300,4,1,""],zero:[300,4,1,""],zero_local:[300,4,1,""]},"dolfin.cpp.la.GenericTensor":{add:[301,4,1,""],add_local:[301,4,1,""],apply:[301,4,1,""],empty:[301,4,1,""],factory:[301,4,1,""],init:[301,4,1,""],local_range:[301,4,1,""],rank:[301,4,1,""],set_local:[301,4,1,""],size:[301,4,1,""],thisown:[301,3,1,""],zero:[301,4,1,""]},"dolfin.cpp.la.GenericVector":{abs:[302,4,1,""],add:[302,4,1,""],add_local:[302,4,1,""],array:[302,4,1,""],axpy:[302,4,1,""],copy:[302,4,1,""],gather:[302,4,1,""],gather_on_zero:[302,4,1,""],get_local:[302,4,1,""],init:[302,4,1,""],inner:[302,4,1,""],local_range:[302,4,1,""],local_size:[302,4,1,""],max:[302,4,1,""],min:[302,4,1,""],norm:[302,4,1,""],owns_index:[302,4,1,""],set_local:[302,4,1,""],size:[302,4,1,""],sum:[302,4,1,""],thisown:[302,3,1,""]},"dolfin.cpp.la.IndexMap":{MapSize_ALL:[306,3,1,""],MapSize_GLOBAL:[306,3,1,""],MapSize_OWNED:[306,3,1,""],MapSize_UNOWNED:[306,3,1,""],block_size:[306,4,1,""],init:[306,4,1,""],local_range:[306,4,1,""],local_to_global:[306,4,1,""],local_to_global_unowned:[306,4,1,""],mpi_comm:[306,4,1,""],off_process_owner:[306,4,1,""],set_local_to_global:[306,4,1,""],size:[306,4,1,""],thisown:[306,3,1,""]},"dolfin.cpp.la.KrylovSolver":{default_parameters:[307,5,1,""],solve:[307,4,1,""],thisown:[307,3,1,""]},"dolfin.cpp.la.LUSolver":{default_parameters:[309,5,1,""],solve:[309,4,1,""],solve_transpose:[309,4,1,""],thisown:[309,3,1,""]},"dolfin.cpp.la.LinearAlgebraObject":{mpi_comm:[311,4,1,""],shared_instance:[311,4,1,""],thisown:[311,3,1,""]},"dolfin.cpp.la.LinearOperator":{init_layout:[312,4,1,""],mpi_comm:[312,4,1,""],mult:[312,4,1,""],shared_instance:[312,4,1,""],size:[312,4,1,""],str:[312,4,1,""],thisown:[312,3,1,""]},"dolfin.cpp.la.LinearSolver":{default_parameters:[313,5,1,""],solve:[313,4,1,""],thisown:[313,3,1,""]},"dolfin.cpp.la.Matrix":{assign:[315,4,1,""],down_cast:[315,4,1,""],shared_instance:[315,4,1,""],thisown:[315,3,1,""],zero:[315,4,1,""]},"dolfin.cpp.la.NewtonSolver":{converged:[318,4,1,""],default_parameters:[318,5,1,""],iteration:[318,4,1,""],linear_solver:[318,4,1,""],relative_residual:[318,4,1,""],residual:[318,4,1,""],solve:[318,4,1,""],thisown:[318,3,1,""]},"dolfin.cpp.la.NonlinearProblem":{F:[320,4,1,""],J:[320,4,1,""],form:[320,4,1,""],thisown:[320,3,1,""]},"dolfin.cpp.la.OptimisationProblem":{F:[321,4,1,""],J:[321,4,1,""],f:[321,4,1,""],form:[321,4,1,""],thisown:[321,3,1,""]},"dolfin.cpp.la.PETScBaseMatrix":{init_vector:[322,4,1,""],local_range:[322,4,1,""],mat:[322,4,1,""],mpi_comm:[322,4,1,""],size:[322,4,1,""],thisown:[322,3,1,""]},"dolfin.cpp.la.PETScFactory":{instance:[323,5,1,""],thisown:[323,3,1,""]},"dolfin.cpp.la.PETScKrylovSolver":{default_parameters:[325,5,1,""],get_norm_type:[325,4,1,""],get_options_prefix:[325,4,1,""],ksp:[325,4,1,""],methods:[325,5,1,""],monitor:[325,4,1,""],mpi_comm:[325,4,1,""],norm_type_default_norm:[325,3,1,""],norm_type_natural:[325,3,1,""],norm_type_none:[325,3,1,""],norm_type_preconditioned:[325,3,1,""],norm_type_unpreconditioned:[325,3,1,""],preconditioners:[325,5,1,""],set_from_options:[325,4,1,""],set_nonzero_guess:[325,4,1,""],set_norm_type:[325,4,1,""],set_options_prefix:[325,4,1,""],set_reuse_preconditioner:[325,4,1,""],set_tolerances:[325,4,1,""],solve:[325,4,1,""],thisown:[325,3,1,""]},"dolfin.cpp.la.PETScLUSolver":{default_parameters:[329,5,1,""],get_operator:[329,4,1,""],get_options_prefix:[329,4,1,""],ksp:[329,4,1,""],methods:[329,5,1,""],mpi_comm:[329,4,1,""],set_from_options:[329,4,1,""],set_operator:[329,4,1,""],set_options_prefix:[329,4,1,""],solve:[329,4,1,""],solve_transpose:[329,4,1,""],thisown:[329,3,1,""]},"dolfin.cpp.la.PETScLinearOperator":{init_layout:[332,4,1,""],mpi_comm:[332,4,1,""],mult:[332,4,1,""],size:[332,4,1,""],thisown:[332,3,1,""]},"dolfin.cpp.la.PETScMatrix":{assign:[333,4,1,""],binary_dump:[333,4,1,""],get_options_prefix:[333,4,1,""],mpi_comm:[333,4,1,""],set_from_options:[333,4,1,""],set_near_nullspace:[333,4,1,""],set_nullspace:[333,4,1,""],set_options_prefix:[333,4,1,""],thisown:[333,3,1,""],zero:[333,4,1,""]},"dolfin.cpp.la.PETScObject":{petsc_error:[334,5,1,""],thisown:[334,3,1,""]},"dolfin.cpp.la.PETScOptions":{clear:[336,5,1,""],set:[336,5,1,""],thisown:[336,3,1,""]},"dolfin.cpp.la.PETScPreconditioner":{preconditioners:[339,5,1,""],set:[339,4,1,""],set_coordinates:[339,4,1,""],set_fieldsplit:[339,4,1,""],set_type:[339,5,1,""],thisown:[339,3,1,""]},"dolfin.cpp.la.PETScSNESSolver":{default_parameters:[341,5,1,""],get_options_prefix:[341,4,1,""],init:[341,4,1,""],methods:[341,5,1,""],mpi_comm:[341,4,1,""],parameters:[341,3,1,""],set_from_options:[341,4,1,""],set_options_prefix:[341,4,1,""],snes:[341,4,1,""],solve:[341,4,1,""],thisown:[341,3,1,""]},"dolfin.cpp.la.PETScTAOSolver":{default_parameters:[344,5,1,""],init:[344,4,1,""],methods:[344,5,1,""],parameters:[344,3,1,""],solve:[344,4,1,""],tao:[344,4,1,""],thisown:[344,3,1,""]},"dolfin.cpp.la.PETScUserPreconditioner":{setup:[347,5,1,""],solve:[347,4,1,""],thisown:[347,3,1,""]},"dolfin.cpp.la.PETScVector":{add_local:[348,4,1,""],gather:[348,4,1,""],get_local:[348,4,1,""],get_options_prefix:[348,4,1,""],init:[348,4,1,""],reset:[348,4,1,""],set_from_options:[348,4,1,""],set_local:[348,4,1,""],set_options_prefix:[348,4,1,""],sum:[348,4,1,""],thisown:[348,3,1,""],update_ghost_values:[348,4,1,""],vec:[348,4,1,""]},"dolfin.cpp.la.SLEPcEigenSolver":{default_parameters:[349,5,1,""],eps:[349,4,1,""],get_eigenpair:[349,4,1,""],get_eigenvalue:[349,4,1,""],get_iteration_number:[349,4,1,""],get_number_converged:[349,4,1,""],get_options_prefix:[349,4,1,""],set_deflation_space:[349,4,1,""],set_operators:[349,4,1,""],set_options_prefix:[349,4,1,""],solve:[349,4,1,""],thisown:[349,3,1,""]},"dolfin.cpp.la.Scalar":{add_local:[351,4,1,""],add_local_value:[351,4,1,""],copy:[351,4,1,""],get_scalar_value:[351,4,1,""],thisown:[351,3,1,""]},"dolfin.cpp.la.SparsityPattern":{Type_sorted:[352,3,1,""],Type_unsorted:[352,3,1,""],apply:[352,4,1,""],init:[352,4,1,""],insert_full_rows_local:[352,4,1,""],insert_global:[352,4,1,""],insert_local:[352,4,1,""],local_range:[352,4,1,""],mpi_comm:[352,4,1,""],num_local_nonzeros:[352,4,1,""],num_nonzeros:[352,4,1,""],num_nonzeros_diagonal:[352,4,1,""],num_nonzeros_off_diagonal:[352,4,1,""],primary_dim:[352,4,1,""],rank:[352,4,1,""],str:[352,4,1,""],thisown:[352,3,1,""]},"dolfin.cpp.la.TAOLinearBoundSolver":{default_parameters:[353,5,1,""],get_matrix:[353,4,1,""],get_vector:[353,4,1,""],krylov_solvers:[353,5,1,""],methods:[353,5,1,""],preconditioners:[353,5,1,""],set_ksp:[353,4,1,""],set_solver:[353,4,1,""],solve:[353,4,1,""],tao:[353,4,1,""],thisown:[353,3,1,""]},"dolfin.cpp.la.TensorLayout":{Ghosts_GHOSTED:[358,3,1,""],Ghosts_UNGHOSTED:[358,3,1,""],Sparsity_DENSE:[358,3,1,""],Sparsity_SPARSE:[358,3,1,""],index_map:[358,4,1,""],init:[358,4,1,""],is_ghosted:[358,4,1,""],local_range:[358,4,1,""],mpi_comm:[358,4,1,""],primary_dim:[358,3,1,""],rank:[358,4,1,""],size:[358,4,1,""],sparsity_pattern:[358,4,1,""],thisown:[358,3,1,""]},"dolfin.cpp.la.Vector":{add_local:[364,4,1,""],down_cast:[364,4,1,""],gather:[364,4,1,""],get_local:[364,4,1,""],init:[364,4,1,""],set_local:[364,4,1,""],shared_instance:[364,4,1,""],sum:[364,4,1,""],thisown:[364,3,1,""]},"dolfin.cpp.la.VectorSpaceBasis":{dim:[365,4,1,""],is_orthogonal:[365,4,1,""],is_orthonormal:[365,4,1,""],orthogonalize:[365,4,1,""],orthonormalize:[365,4,1,""],thisown:[365,3,1,""]},"dolfin.cpp.la.ufc_cell":{cell_shape:[388,3,1,""],geometric_dimension:[388,3,1,""],index:[388,3,1,""],local_facet:[388,3,1,""],mesh_identifier:[388,3,1,""],thisown:[388,3,1,""],topological_dimension:[388,3,1,""]},"dolfin.cpp.la.ufc_dofmap":{thisown:[389,3,1,""]},"dolfin.cpp.la.ufc_finite_element":{thisown:[390,3,1,""]},"dolfin.cpp.la.ufc_form":{thisown:[391,3,1,""]},"dolfin.cpp.la.ufc_function":{thisown:[392,3,1,""]},"dolfin.cpp.mesh":{BoostGraphOrdering:[393,2,1,""],BoostGraphOrdering_compute_cuthill_mckee:[394,1,1,""],BoundaryMesh:[395,2,1,""],BoundingBoxTree3D:[397,2,1,""],BoundingBoxTree:[396,2,1,""],BoxMesh:[398,2,1,""],Cell:[399,2,1,""],CellFunction:[400,2,1,""],CellFunctionBool:[401,2,1,""],CellFunctionDouble:[402,2,1,""],CellFunctionInt:[403,2,1,""],CellFunctionSizet:[404,2,1,""],CellType:[405,2,1,""],CellType_create:[406,1,1,""],CellType_string2type:[407,1,1,""],CellType_type2string:[408,1,1,""],DomainBoundary:[409,2,1,""],DynamicMeshEditor:[410,2,1,""],Edge:[411,2,1,""],EdgeFunction:[412,2,1,""],EdgeFunctionBool:[413,2,1,""],EdgeFunctionDouble:[414,2,1,""],EdgeFunctionInt:[415,2,1,""],EdgeFunctionSizet:[416,2,1,""],Face:[417,2,1,""],FaceFunction:[418,2,1,""],FaceFunctionBool:[419,2,1,""],FaceFunctionDouble:[420,2,1,""],FaceFunctionInt:[421,2,1,""],FaceFunctionSizet:[422,2,1,""],Facet:[423,2,1,""],FacetCell:[424,2,1,""],FacetFunction:[425,2,1,""],FacetFunctionBool:[426,2,1,""],FacetFunctionDouble:[427,2,1,""],FacetFunctionInt:[428,2,1,""],FacetFunctionSizet:[429,2,1,""],GenericBoundingBoxTree:[430,2,1,""],GenericBoundingBoxTree_create:[431,1,1,""],Graph:[432,2,1,""],GraphBuilder:[433,2,1,""],GraphBuilder_local_graph:[434,1,1,""],HierarchicalFunction:[435,2,1,""],HierarchicalFunctionSpace:[436,2,1,""],HierarchicalMesh:[437,2,1,""],HierarchicalMeshFunctionBool:[438,2,1,""],HierarchicalMeshFunctionDouble:[439,2,1,""],HierarchicalMeshFunctionInt:[440,2,1,""],HierarchicalMeshFunctionSizet:[441,2,1,""],HierarchicalMeshFunctionUInt:[442,2,1,""],IntervalMesh:[443,2,1,""],LocalMeshData:[444,2,1,""],Mesh:[445,2,1,""],MeshColoring:[446,2,1,""],MeshColoring_cell_colors:[447,1,1,""],MeshColoring_color:[448,1,1,""],MeshColoring_color_cells:[449,1,1,""],MeshColoring_compute_colors:[450,1,1,""],MeshColoring_type_to_dim:[451,1,1,""],MeshConnectivity:[452,2,1,""],MeshData:[453,2,1,""],MeshDomains:[454,2,1,""],MeshEditor:[455,2,1,""],MeshEntity:[456,2,1,""],MeshFunction:[457,2,1,""],MeshFunctionBool:[458,2,1,""],MeshFunctionDouble:[459,2,1,""],MeshFunctionInt:[460,2,1,""],MeshFunctionSizet:[461,2,1,""],MeshGeometry:[462,2,1,""],MeshHierarchy:[463,2,1,""],MeshPartitioning:[464,2,1,""],MeshPartitioning_build_distributed_mesh:[465,1,1,""],MeshPointIntersection:[466,2,1,""],MeshQuality:[467,2,1,""],MeshQuality_dihedral_angles:[468,1,1,""],MeshQuality_dihedral_angles_histogram_data:[469,1,1,""],MeshQuality_dihedral_angles_matplotlib_histogram:[470,1,1,""],MeshQuality_dihedral_angles_min_max:[471,1,1,""],MeshQuality_radius_ratio_histogram_data:[472,1,1,""],MeshQuality_radius_ratio_matplotlib_histogram:[473,1,1,""],MeshQuality_radius_ratio_min_max:[474,1,1,""],MeshQuality_radius_ratios:[475,1,1,""],MeshRenumbering:[476,2,1,""],MeshRenumbering_renumber_by_color:[477,1,1,""],MeshTopology:[478,2,1,""],MeshTransformation:[479,2,1,""],MeshValueCollection:[480,2,1,""],MeshValueCollectionBool:[481,2,1,""],MeshValueCollectionDouble:[482,2,1,""],MeshValueCollectionInt:[483,2,1,""],MeshValueCollectionSizet:[484,2,1,""],MultiMesh:[485,2,1,""],PeriodicBoundaryComputation:[486,2,1,""],PeriodicBoundaryComputation_compute_periodic_pairs:[487,1,1,""],PeriodicBoundaryComputation_masters_slaves:[488,1,1,""],Point:[489,2,1,""],RectangleMesh:[490,2,1,""],SCOTCH:[491,2,1,""],SCOTCH_compute_gps:[492,1,1,""],SphericalShellMesh:[493,2,1,""],SubDomain:[494,2,1,""],SubMesh:[495,2,1,""],SubsetIterator:[496,2,1,""],UnitCubeMesh:[497,2,1,""],UnitDiscMesh:[498,2,1,""],UnitHexMesh:[499,2,1,""],UnitIntervalMesh:[500,2,1,""],UnitQuadMesh:[501,2,1,""],UnitSquareMesh:[502,2,1,""],UnitTetrahedronMesh:[503,2,1,""],UnitTriangleMesh:[504,2,1,""],Vertex:[505,2,1,""],VertexFunction:[506,2,1,""],VertexFunctionBool:[507,2,1,""],VertexFunctionDouble:[508,2,1,""],VertexFunctionInt:[509,2,1,""],VertexFunctionSizet:[510,2,1,""],cells:[511,2,1,""],edges:[512,2,1,""],entities:[513,2,1,""],faces:[514,2,1,""],facets:[515,2,1,""],intersect:[517,1,1,""],p_refine:[518,1,1,""],refine:[519,1,1,""],ufc_cell:[520,2,1,""],ufc_dofmap:[521,2,1,""],ufc_finite_element:[522,2,1,""],ufc_form:[523,2,1,""],ufc_function:[524,2,1,""],vertices:[525,2,1,""]},"dolfin.cpp.mesh.BoostGraphOrdering":{compute_cuthill_mckee:[393,5,1,""],thisown:[393,3,1,""]},"dolfin.cpp.mesh.BoundaryMesh":{entity_map:[395,4,1,""],thisown:[395,3,1,""]},"dolfin.cpp.mesh.BoundingBoxTree":{build:[396,4,1,""],collides:[396,4,1,""],collides_entity:[396,4,1,""],compute_closest_entity:[396,4,1,""],compute_closest_point:[396,4,1,""],compute_collisions:[396,4,1,""],compute_entity_collisions:[396,4,1,""],compute_first_collision:[396,4,1,""],compute_first_entity_collision:[396,4,1,""],compute_process_collisions:[396,4,1,""],thisown:[396,3,1,""]},"dolfin.cpp.mesh.BoundingBoxTree3D":{thisown:[397,3,1,""]},"dolfin.cpp.mesh.BoxMesh":{thisown:[398,3,1,""]},"dolfin.cpp.mesh.Cell":{cell_normal:[399,4,1,""],circumradius:[399,4,1,""],collides:[399,4,1,""],contains:[399,4,1,""],diameter:[399,4,1,""],distance:[399,4,1,""],facet_area:[399,4,1,""],get_cell_data:[399,4,1,""],get_cell_topology:[399,4,1,""],get_coordinate_dofs:[399,4,1,""],get_vertex_coordinates:[399,4,1,""],h:[399,4,1,""],inradius:[399,4,1,""],normal:[399,4,1,""],num_vertices:[399,4,1,""],order:[399,4,1,""],ordered:[399,4,1,""],orientation:[399,4,1,""],radius_ratio:[399,4,1,""],squared_distance:[399,4,1,""],thisown:[399,3,1,""],triangulate_intersection:[399,4,1,""],type:[399,4,1,""],volume:[399,4,1,""]},"dolfin.cpp.mesh.CellFunctionBool":{thisown:[401,3,1,""]},"dolfin.cpp.mesh.CellFunctionDouble":{thisown:[402,3,1,""]},"dolfin.cpp.mesh.CellFunctionInt":{thisown:[403,3,1,""]},"dolfin.cpp.mesh.CellFunctionSizet":{thisown:[404,3,1,""]},"dolfin.cpp.mesh.CellType":{cell_normal:[405,4,1,""],cell_type:[405,4,1,""],circumradius:[405,4,1,""],collides:[405,4,1,""],create:[405,5,1,""],create_entities:[405,4,1,""],description:[405,4,1,""],diameter:[405,4,1,""],dim:[405,4,1,""],entity_type:[405,4,1,""],facet_area:[405,4,1,""],facet_type:[405,4,1,""],h:[405,4,1,""],hexahedron:[405,3,1,""],inradius:[405,4,1,""],interval:[405,3,1,""],normal:[405,4,1,""],num_entities:[405,4,1,""],num_vertices:[405,4,1,""],order:[405,4,1,""],ordered:[405,4,1,""],orientation:[405,4,1,""],point:[405,3,1,""],quadrilateral:[405,3,1,""],radius_ratio:[405,4,1,""],squared_distance:[405,4,1,""],string2type:[405,5,1,""],tetrahedron:[405,3,1,""],thisown:[405,3,1,""],triangle:[405,3,1,""],triangulate_intersection:[405,4,1,""],type2string:[405,5,1,""],volume:[405,4,1,""],vtk_mapping:[405,4,1,""]},"dolfin.cpp.mesh.DomainBoundary":{thisown:[409,3,1,""]},"dolfin.cpp.mesh.DynamicMeshEditor":{add_cell:[410,4,1,""],add_vertex:[410,4,1,""],close:[410,4,1,""],open:[410,4,1,""],thisown:[410,3,1,""]},"dolfin.cpp.mesh.Edge":{dot:[411,4,1,""],length:[411,4,1,""],thisown:[411,3,1,""]},"dolfin.cpp.mesh.EdgeFunctionBool":{thisown:[413,3,1,""]},"dolfin.cpp.mesh.EdgeFunctionDouble":{thisown:[414,3,1,""]},"dolfin.cpp.mesh.EdgeFunctionInt":{thisown:[415,3,1,""]},"dolfin.cpp.mesh.EdgeFunctionSizet":{thisown:[416,3,1,""]},"dolfin.cpp.mesh.Face":{area:[417,4,1,""],normal:[417,4,1,""],thisown:[417,3,1,""]},"dolfin.cpp.mesh.FaceFunctionBool":{thisown:[419,3,1,""]},"dolfin.cpp.mesh.FaceFunctionDouble":{thisown:[420,3,1,""]},"dolfin.cpp.mesh.FaceFunctionInt":{thisown:[421,3,1,""]},"dolfin.cpp.mesh.FaceFunctionSizet":{thisown:[422,3,1,""]},"dolfin.cpp.mesh.Facet":{distance:[423,4,1,""],exterior:[423,4,1,""],normal:[423,4,1,""],squared_distance:[423,4,1,""],thisown:[423,3,1,""]},"dolfin.cpp.mesh.FacetCell":{facet_index:[424,4,1,""],thisown:[424,3,1,""]},"dolfin.cpp.mesh.FacetFunctionBool":{thisown:[426,3,1,""]},"dolfin.cpp.mesh.FacetFunctionDouble":{thisown:[427,3,1,""]},"dolfin.cpp.mesh.FacetFunctionInt":{thisown:[428,3,1,""]},"dolfin.cpp.mesh.FacetFunctionSizet":{thisown:[429,3,1,""]},"dolfin.cpp.mesh.GenericBoundingBoxTree":{build:[430,4,1,""],compute_closest_entity:[430,4,1,""],compute_closest_point:[430,4,1,""],compute_collisions:[430,4,1,""],compute_entity_collisions:[430,4,1,""],compute_first_collision:[430,4,1,""],compute_first_entity_collision:[430,4,1,""],compute_process_collisions:[430,4,1,""],create:[430,5,1,""],str:[430,4,1,""],thisown:[430,3,1,""]},"dolfin.cpp.mesh.Graph":{thisown:[432,3,1,""]},"dolfin.cpp.mesh.GraphBuilder":{local_graph:[433,5,1,""],thisown:[433,3,1,""]},"dolfin.cpp.mesh.HierarchicalFunction":{clear_child:[435,4,1,""],depth:[435,4,1,""],has_child:[435,4,1,""],has_parent:[435,4,1,""],set_child:[435,4,1,""],set_parent:[435,4,1,""],thisown:[435,3,1,""]},"dolfin.cpp.mesh.HierarchicalFunctionSpace":{clear_child:[436,4,1,""],depth:[436,4,1,""],has_child:[436,4,1,""],has_parent:[436,4,1,""],set_child:[436,4,1,""],set_parent:[436,4,1,""],thisown:[436,3,1,""]},"dolfin.cpp.mesh.HierarchicalMesh":{child:[437,4,1,""],clear_child:[437,4,1,""],depth:[437,4,1,""],has_child:[437,4,1,""],has_parent:[437,4,1,""],leaf_node:[437,4,1,""],parent:[437,4,1,""],root_node:[437,4,1,""],set_child:[437,4,1,""],set_parent:[437,4,1,""],thisown:[437,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionBool":{child:[438,4,1,""],clear_child:[438,4,1,""],depth:[438,4,1,""],has_child:[438,4,1,""],has_parent:[438,4,1,""],leaf_node:[438,4,1,""],parent:[438,4,1,""],root_node:[438,4,1,""],set_child:[438,4,1,""],set_parent:[438,4,1,""],thisown:[438,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionDouble":{child:[439,4,1,""],clear_child:[439,4,1,""],depth:[439,4,1,""],has_child:[439,4,1,""],has_parent:[439,4,1,""],leaf_node:[439,4,1,""],parent:[439,4,1,""],root_node:[439,4,1,""],set_child:[439,4,1,""],set_parent:[439,4,1,""],thisown:[439,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionInt":{child:[440,4,1,""],clear_child:[440,4,1,""],depth:[440,4,1,""],has_child:[440,4,1,""],has_parent:[440,4,1,""],leaf_node:[440,4,1,""],parent:[440,4,1,""],root_node:[440,4,1,""],set_child:[440,4,1,""],set_parent:[440,4,1,""],thisown:[440,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionSizet":{child:[441,4,1,""],clear_child:[441,4,1,""],depth:[441,4,1,""],has_child:[441,4,1,""],has_parent:[441,4,1,""],leaf_node:[441,4,1,""],parent:[441,4,1,""],root_node:[441,4,1,""],set_child:[441,4,1,""],set_parent:[441,4,1,""],thisown:[441,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionUInt":{clear_child:[442,4,1,""],depth:[442,4,1,""],has_child:[442,4,1,""],has_parent:[442,4,1,""],set_child:[442,4,1,""],set_parent:[442,4,1,""],thisown:[442,3,1,""]},"dolfin.cpp.mesh.IntervalMesh":{thisown:[443,3,1,""]},"dolfin.cpp.mesh.LocalMeshData":{broadcast_mesh_data:[444,4,1,""],check:[444,4,1,""],clear:[444,4,1,""],domain_data:[444,3,1,""],extract_mesh_data:[444,4,1,""],geometry:[444,3,1,""],mpi_comm:[444,4,1,""],receive_mesh_data:[444,4,1,""],reorder:[444,4,1,""],thisown:[444,3,1,""],topology:[444,3,1,""]},"dolfin.cpp.mesh.Mesh":{bounding_box_tree:[445,4,1,""],cell_orientations:[445,4,1,""],cells:[445,4,1,""],clean:[445,4,1,""],color:[445,4,1,""],coordinates:[445,4,1,""],data:[445,4,1,""],domains:[445,4,1,""],geometry:[445,4,1,""],hash:[445,4,1,""],hmax:[445,4,1,""],hmin:[445,4,1,""],init:[445,4,1,""],init_cell_orientations:[445,4,1,""],mpi_comm:[445,4,1,""],num_cells:[445,4,1,""],num_edges:[445,4,1,""],num_entities:[445,4,1,""],num_faces:[445,4,1,""],num_facets:[445,4,1,""],num_vertices:[445,4,1,""],order:[445,4,1,""],ordered:[445,4,1,""],renumber_by_color:[445,4,1,""],rmax:[445,4,1,""],rmin:[445,4,1,""],rotate:[445,4,1,""],size:[445,4,1,""],size_global:[445,4,1,""],smooth:[445,4,1,""],smooth_boundary:[445,4,1,""],snap_boundary:[445,4,1,""],thisown:[445,3,1,""],topology:[445,4,1,""],translate:[445,4,1,""],type:[445,4,1,""],ufl_cell:[445,4,1,""],ufl_coordinate_element:[445,4,1,""],ufl_domain:[445,4,1,""],ufl_id:[445,4,1,""]},"dolfin.cpp.mesh.MeshColoring":{cell_colors:[446,5,1,""],color:[446,5,1,""],color_cells:[446,5,1,""],compute_colors:[446,5,1,""],thisown:[446,3,1,""],type_to_dim:[446,5,1,""]},"dolfin.cpp.mesh.MeshConnectivity":{clear:[452,4,1,""],empty:[452,4,1,""],hash:[452,4,1,""],init:[452,4,1,""],set_global_size:[452,4,1,""],size:[452,4,1,""],size_global:[452,4,1,""],str:[452,4,1,""],thisown:[452,3,1,""]},"dolfin.cpp.mesh.MeshData":{array:[453,4,1,""],clear:[453,4,1,""],create_array:[453,4,1,""],erase_array:[453,4,1,""],exists:[453,4,1,""],thisown:[453,3,1,""]},"dolfin.cpp.mesh.MeshDomains":{clear:[454,4,1,""],get_marker:[454,4,1,""],init:[454,4,1,""],is_empty:[454,4,1,""],markers:[454,4,1,""],max_dim:[454,4,1,""],num_marked:[454,4,1,""],set_marker:[454,4,1,""],thisown:[454,3,1,""]},"dolfin.cpp.mesh.MeshEditor":{add_cell:[455,4,1,""],add_entity_point:[455,4,1,""],add_vertex:[455,4,1,""],add_vertex_global:[455,4,1,""],close:[455,4,1,""],init_cells:[455,4,1,""],init_cells_global:[455,4,1,""],init_entities:[455,4,1,""],init_vertices:[455,4,1,""],init_vertices_global:[455,4,1,""],open:[455,4,1,""],thisown:[455,3,1,""]},"dolfin.cpp.mesh.MeshEntity":{dim:[456,4,1,""],entities:[456,4,1,""],global_index:[456,4,1,""],incident:[456,4,1,""],index:[456,4,1,""],init:[456,4,1,""],is_ghost:[456,4,1,""],is_shared:[456,4,1,""],mesh:[456,4,1,""],mesh_id:[456,4,1,""],midpoint:[456,4,1,""],num_entities:[456,4,1,""],num_global_entities:[456,4,1,""],owner:[456,4,1,""],sharing_processes:[456,4,1,""],str:[456,4,1,""],thisown:[456,3,1,""]},"dolfin.cpp.mesh.MeshFunctionBool":{array:[458,4,1,""],dim:[458,4,1,""],empty:[458,4,1,""],init:[458,4,1,""],mesh:[458,4,1,""],set_all:[458,4,1,""],set_value:[458,4,1,""],set_values:[458,4,1,""],size:[458,4,1,""],thisown:[458,3,1,""],ufl_id:[458,4,1,""]},"dolfin.cpp.mesh.MeshFunctionDouble":{array:[459,4,1,""],dim:[459,4,1,""],empty:[459,4,1,""],init:[459,4,1,""],mesh:[459,4,1,""],set_all:[459,4,1,""],set_value:[459,4,1,""],set_values:[459,4,1,""],size:[459,4,1,""],thisown:[459,3,1,""],ufl_id:[459,4,1,""]},"dolfin.cpp.mesh.MeshFunctionInt":{array:[460,4,1,""],dim:[460,4,1,""],empty:[460,4,1,""],init:[460,4,1,""],mesh:[460,4,1,""],set_all:[460,4,1,""],set_value:[460,4,1,""],set_values:[460,4,1,""],size:[460,4,1,""],thisown:[460,3,1,""],ufl_id:[460,4,1,""]},"dolfin.cpp.mesh.MeshFunctionSizet":{array:[461,4,1,""],dim:[461,4,1,""],empty:[461,4,1,""],init:[461,4,1,""],mesh:[461,4,1,""],set_all:[461,4,1,""],set_value:[461,4,1,""],set_values:[461,4,1,""],size:[461,4,1,""],thisown:[461,3,1,""],ufl_id:[461,4,1,""]},"dolfin.cpp.mesh.MeshGeometry":{degree:[462,4,1,""],dim:[462,4,1,""],get_entity_index:[462,4,1,""],hash:[462,4,1,""],init:[462,4,1,""],init_entities:[462,4,1,""],num_entity_coordinates:[462,4,1,""],num_points:[462,4,1,""],num_vertices:[462,4,1,""],point:[462,4,1,""],point_coordinates:[462,4,1,""],set:[462,4,1,""],size:[462,4,1,""],str:[462,4,1,""],thisown:[462,3,1,""],vertex_coordinates:[462,4,1,""],x:[462,4,1,""]},"dolfin.cpp.mesh.MeshHierarchy":{coarsen:[463,4,1,""],coarsest:[463,4,1,""],finest:[463,4,1,""],rebalance:[463,4,1,""],refine:[463,4,1,""],size:[463,4,1,""],thisown:[463,3,1,""],unrefine:[463,4,1,""],weight:[463,4,1,""]},"dolfin.cpp.mesh.MeshPartitioning":{build_distributed_mesh:[464,5,1,""],thisown:[464,3,1,""]},"dolfin.cpp.mesh.MeshPointIntersection":{intersected_cells:[466,4,1,""],thisown:[466,3,1,""]},"dolfin.cpp.mesh.MeshQuality":{dihedral_angles:[467,5,1,""],dihedral_angles_histogram_data:[467,5,1,""],dihedral_angles_matplotlib_histogram:[467,5,1,""],dihedral_angles_min_max:[467,5,1,""],radius_ratio_histogram_data:[467,5,1,""],radius_ratio_matplotlib_histogram:[467,5,1,""],radius_ratio_min_max:[467,5,1,""],radius_ratios:[467,5,1,""],thisown:[467,3,1,""]},"dolfin.cpp.mesh.MeshRenumbering":{renumber_by_color:[476,5,1,""],thisown:[476,3,1,""]},"dolfin.cpp.mesh.MeshTopology":{cell_owner:[478,4,1,""],clear:[478,4,1,""],coloring:[478,3,1,""],dim:[478,4,1,""],ghost_offset:[478,4,1,""],global_indices:[478,4,1,""],hash:[478,4,1,""],have_global_indices:[478,4,1,""],have_shared_entities:[478,4,1,""],init:[478,4,1,""],init_ghost:[478,4,1,""],init_global_indices:[478,4,1,""],set_global_index:[478,4,1,""],shared_entities:[478,4,1,""],size:[478,4,1,""],size_global:[478,4,1,""],str:[478,4,1,""],thisown:[478,3,1,""]},"dolfin.cpp.mesh.MeshTransformation":{rescale:[479,5,1,""],rotate:[479,5,1,""],thisown:[479,3,1,""],translate:[479,5,1,""]},"dolfin.cpp.mesh.MeshValueCollectionBool":{assign:[481,4,1,""],clear:[481,4,1,""],dim:[481,4,1,""],empty:[481,4,1,""],get_value:[481,4,1,""],init:[481,4,1,""],mesh:[481,4,1,""],set_value:[481,4,1,""],size:[481,4,1,""],thisown:[481,3,1,""],values:[481,4,1,""]},"dolfin.cpp.mesh.MeshValueCollectionDouble":{assign:[482,4,1,""],clear:[482,4,1,""],dim:[482,4,1,""],empty:[482,4,1,""],get_value:[482,4,1,""],init:[482,4,1,""],mesh:[482,4,1,""],set_value:[482,4,1,""],size:[482,4,1,""],thisown:[482,3,1,""],values:[482,4,1,""]},"dolfin.cpp.mesh.MeshValueCollectionInt":{assign:[483,4,1,""],clear:[483,4,1,""],dim:[483,4,1,""],empty:[483,4,1,""],get_value:[483,4,1,""],init:[483,4,1,""],mesh:[483,4,1,""],set_value:[483,4,1,""],size:[483,4,1,""],thisown:[483,3,1,""],values:[483,4,1,""]},"dolfin.cpp.mesh.MeshValueCollectionSizet":{assign:[484,4,1,""],clear:[484,4,1,""],dim:[484,4,1,""],empty:[484,4,1,""],get_value:[484,4,1,""],init:[484,4,1,""],mesh:[484,4,1,""],set_value:[484,4,1,""],size:[484,4,1,""],thisown:[484,3,1,""],values:[484,4,1,""]},"dolfin.cpp.mesh.MultiMesh":{add:[485,4,1,""],bounding_box_tree:[485,4,1,""],bounding_box_tree_boundary:[485,4,1,""],build:[485,4,1,""],clear:[485,4,1,""],collision_map_cut_cells:[485,4,1,""],covered_cells:[485,4,1,""],cut_cells:[485,4,1,""],facet_normals:[485,4,1,""],num_parts:[485,4,1,""],part:[485,4,1,""],quadrature_rule_cut_cell:[485,4,1,""],quadrature_rule_cut_cells:[485,4,1,""],quadrature_rule_interface:[485,4,1,""],quadrature_rule_overlap:[485,4,1,""],thisown:[485,3,1,""],uncut_cells:[485,4,1,""]},"dolfin.cpp.mesh.PeriodicBoundaryComputation":{compute_periodic_pairs:[486,5,1,""],masters_slaves:[486,5,1,""],thisown:[486,3,1,""]},"dolfin.cpp.mesh.Point":{coordinates:[489,4,1,""],cross:[489,4,1,""],distance:[489,4,1,""],dot:[489,4,1,""],norm:[489,4,1,""],rotate:[489,4,1,""],squared_distance:[489,4,1,""],squared_norm:[489,4,1,""],str:[489,4,1,""],thisown:[489,3,1,""],x:[489,4,1,""],y:[489,4,1,""],z:[489,4,1,""]},"dolfin.cpp.mesh.RectangleMesh":{thisown:[490,3,1,""]},"dolfin.cpp.mesh.SCOTCH":{compute_gps:[491,5,1,""],compute_reordering:[491,5,1,""],thisown:[491,3,1,""]},"dolfin.cpp.mesh.SphericalShellMesh":{thisown:[493,3,1,""]},"dolfin.cpp.mesh.SubDomain":{geometric_dimension:[494,4,1,""],inside:[494,4,1,""],map:[494,4,1,""],map_tolerance:[494,3,1,""],mark:[494,4,1,""],mark_cells:[494,4,1,""],mark_facets:[494,4,1,""],snap:[494,4,1,""],thisown:[494,3,1,""]},"dolfin.cpp.mesh.SubMesh":{thisown:[495,3,1,""]},"dolfin.cpp.mesh.SubsetIterator":{end:[496,4,1,""],end_iterator:[496,4,1,""],next:[496,4,1,""],thisown:[496,3,1,""]},"dolfin.cpp.mesh.UnitCubeMesh":{thisown:[497,3,1,""]},"dolfin.cpp.mesh.UnitDiscMesh":{thisown:[498,3,1,""]},"dolfin.cpp.mesh.UnitHexMesh":{thisown:[499,3,1,""]},"dolfin.cpp.mesh.UnitIntervalMesh":{thisown:[500,3,1,""]},"dolfin.cpp.mesh.UnitQuadMesh":{thisown:[501,3,1,""]},"dolfin.cpp.mesh.UnitSquareMesh":{thisown:[502,3,1,""]},"dolfin.cpp.mesh.UnitTetrahedronMesh":{thisown:[503,3,1,""]},"dolfin.cpp.mesh.UnitTriangleMesh":{thisown:[504,3,1,""]},"dolfin.cpp.mesh.Vertex":{point:[505,4,1,""],thisown:[505,3,1,""],x:[505,4,1,""]},"dolfin.cpp.mesh.VertexFunctionBool":{thisown:[507,3,1,""]},"dolfin.cpp.mesh.VertexFunctionDouble":{thisown:[508,3,1,""]},"dolfin.cpp.mesh.VertexFunctionInt":{thisown:[509,3,1,""]},"dolfin.cpp.mesh.VertexFunctionSizet":{thisown:[510,3,1,""]},"dolfin.cpp.mesh.cells":{end:[511,4,1,""],end_iterator:[511,4,1,""],next:[511,4,1,""],pos:[511,4,1,""],thisown:[511,3,1,""]},"dolfin.cpp.mesh.edges":{end:[512,4,1,""],end_iterator:[512,4,1,""],next:[512,4,1,""],pos:[512,4,1,""],thisown:[512,3,1,""]},"dolfin.cpp.mesh.entities":{end:[513,4,1,""],end_iterator:[513,4,1,""],next:[513,4,1,""],pos:[513,4,1,""],thisown:[513,3,1,""]},"dolfin.cpp.mesh.faces":{end:[514,4,1,""],end_iterator:[514,4,1,""],next:[514,4,1,""],pos:[514,4,1,""],thisown:[514,3,1,""]},"dolfin.cpp.mesh.facets":{end:[515,4,1,""],end_iterator:[515,4,1,""],next:[515,4,1,""],pos:[515,4,1,""],thisown:[515,3,1,""]},"dolfin.cpp.mesh.ufc_cell":{cell_shape:[520,3,1,""],geometric_dimension:[520,3,1,""],index:[520,3,1,""],local_facet:[520,3,1,""],mesh_identifier:[520,3,1,""],thisown:[520,3,1,""],topological_dimension:[520,3,1,""]},"dolfin.cpp.mesh.ufc_dofmap":{thisown:[521,3,1,""]},"dolfin.cpp.mesh.ufc_finite_element":{thisown:[522,3,1,""]},"dolfin.cpp.mesh.ufc_form":{thisown:[523,3,1,""]},"dolfin.cpp.mesh.ufc_function":{thisown:[524,3,1,""]},"dolfin.cpp.mesh.vertices":{end:[525,4,1,""],end_iterator:[525,4,1,""],next:[525,4,1,""],pos:[525,4,1,""],thisown:[525,3,1,""]},"dolfin.deprecation":{down_cast:[526,1,1,""]},"dolfin.fem":{adaptivesolving:[532,0,0,"-"],assembling:[537,0,0,"-"],assembling_local:[539,0,0,"-"],bcs:[542,0,0,"-"],errorcontrolgenerator:[543,0,0,"-"],form:[545,0,0,"-"],formmanipulations:[549,0,0,"-"],interpolation:[552,0,0,"-"],norms:[555,0,0,"-"],projection:[557,0,0,"-"],solving:[564,0,0,"-"]},"dolfin.fem.adaptivesolving":{AdaptiveLinearVariationalSolver:[528,2,1,""],AdaptiveNonlinearVariationalSolver:[529,2,1,""],generate_error_control:[530,1,1,""],generate_error_control_forms:[531,1,1,""]},"dolfin.fem.adaptivesolving.AdaptiveLinearVariationalSolver":{solve:[528,4,1,""]},"dolfin.fem.adaptivesolving.AdaptiveNonlinearVariationalSolver":{solve:[529,4,1,""]},"dolfin.fem.assembling":{SystemAssembler:[533,2,1,""],assemble:[534,1,1,""],assemble_multimesh:[535,1,1,""],assemble_system:[536,1,1,""]},"dolfin.fem.assembling_local":{assemble_local:[538,1,1,""]},"dolfin.fem.bcs":{AutoSubDomain:[540,2,1,""],DirichletBC:[541,2,1,""]},"dolfin.fem.bcs.AutoSubDomain":{inside:[540,4,1,""]},"dolfin.fem.form":{Form:[544,2,1,""]},"dolfin.fem.formmanipulations":{adjoint:[546,1,1,""],derivative:[547,1,1,""],increase_order:[548,1,1,""],tear:[550,1,1,""]},"dolfin.fem.interpolation":{interpolate:[553,1,1,""]},"dolfin.fem.norms":{errornorm:[554,1,1,""],norm:[556,1,1,""]},"dolfin.fem.projection":{project:[558,1,1,""]},"dolfin.fem.solving":{LinearVariationalProblem:[559,2,1,""],LinearVariationalSolver:[560,2,1,""],LocalSolver:[561,2,1,""],NonlinearVariationalProblem:[562,2,1,""],NonlinearVariationalSolver:[563,2,1,""],solve:[565,1,1,""]},"dolfin.fem.solving.LinearVariationalSolver":{default_parameters:[560,5,1,""],solve:[560,4,1,""],thisown:[560,3,1,""]},"dolfin.fem.solving.NonlinearVariationalSolver":{default_parameters:[563,5,1,""],solve:[563,4,1,""],thisown:[563,3,1,""]},"dolfin.functions":{"function":[576,0,0,"-"],constant:[567,0,0,"-"],expression:[569,0,0,"-"],functionspace:[585,0,0,"-"],specialfunctions:[597,0,0,"-"]},"dolfin.functions.constant":{Constant:[566,2,1,""]},"dolfin.functions.constant.Constant":{cell:[566,4,1,""]},"dolfin.functions.expression":{Expression:[568,2,1,""]},"dolfin.functions.expression.Expression":{str:[568,4,1,""],ufl_evaluate:[568,4,1,""],value_shape:[568,4,1,""]},"dolfin.functions.function":{Argument:[570,2,1,""],Function:[571,2,1,""],TestFunction:[572,1,1,""],TestFunctions:[573,1,1,""],TrialFunction:[574,1,1,""],TrialFunctions:[575,1,1,""]},"dolfin.functions.function.Argument":{function_space:[570,4,1,""]},"dolfin.functions.function.Function":{assign:[571,4,1,""],split:[571,4,1,""],str:[571,4,1,""],sub:[571,4,1,""],ufl_evaluate:[571,4,1,""]},"dolfin.functions.functionspace":{EnrichedFunctionSpace:[577,1,1,""],FunctionSpace:[578,2,1,""],FunctionSpaceBase:[579,1,1,""],FunctionSpaceFromCpp:[580,1,1,""],MixedFunctionSpace:[581,1,1,""],MultiMeshFunctionSpace:[582,1,1,""],TensorFunctionSpace:[583,1,1,""],VectorFunctionSpace:[584,1,1,""]},"dolfin.functions.functionspace.FunctionSpace":{cell:[578,4,1,""],collapse:[578,4,1,""],dolfin_element:[578,4,1,""],extract_sub_space:[578,4,1,""],num_sub_spaces:[578,4,1,""],split:[578,4,1,""],sub:[578,4,1,""],ufl_cell:[578,4,1,""],ufl_function_space:[578,4,1,""]},"dolfin.functions.specialfunctions":{CellNormal:[587,1,1,""],CellSize:[588,1,1,""],CellVolume:[589,1,1,""],Circumradius:[590,1,1,""],FacetArea:[591,2,1,""],FacetNormal:[592,1,1,""],MaxFacetEdgeLength:[593,1,1,""],MeshCoordinates:[594,2,1,""],MinFacetEdgeLength:[595,1,1,""],SpatialCoordinate:[596,1,1,""]},"dolfin.mesh":{ale:[602,0,0,"-"],boundarysubdomainfinder:[609,0,0,"-"],meshes:[614,0,0,"-"],refinement:[615,0,0,"-"],svgtools:[617,0,0,"-"]},"dolfin.mesh.ale":{compute_edge_map:[600,1,1,""],compute_vertex_map:[601,1,1,""],init_parent_edge_indices:[603,1,1,""]},"dolfin.mesh.boundarysubdomainfinder":{create_maps:[604,1,1,""],find_all_subdomains:[605,1,1,""],find_keys_on_one_subdomain:[606,1,1,""],find_new_cell_key:[607,1,1,""],find_subdomain:[608,1,1,""],main:[610,1,1,""],usage:[611,1,1,""],write_file:[612,1,1,""]},"dolfin.mesh.refinement":{refine:[616,1,1,""]},"dolfin.mesh.svgtools":{mesh2svg:[618,1,1,""]},"dolfin.multistage":{factorize:[620,0,0,"-"],multistagescheme:[638,0,0,"-"],multistagesolvers:[641,0,0,"-"],rushlarsenschemes:[648,0,0,"-"]},"dolfin.multistage.factorize":{extract_tested_expressions:[619,1,1,""]},"dolfin.multistage.multistagescheme":{BDF1:[622,2,1,""],BackwardEuler:[623,3,1,""],ButcherMultiStageScheme:[624,2,1,""],CN2:[625,2,1,""],CrankNicolson:[626,3,1,""],ERK1:[628,2,1,""],ERK4:[629,2,1,""],ERK:[627,3,1,""],ESDIRK3:[630,2,1,""],ESDIRK4:[631,2,1,""],ExplicitEuler:[632,3,1,""],ExplicitMidPoint:[633,2,1,""],ForwardEuler:[634,3,1,""],ImplicitEuler:[635,3,1,""],MultiStageScheme:[636,2,1,""],RK4:[637,3,1,""]},"dolfin.multistage.multistagescheme.ButcherMultiStageScheme":{to_adm:[624,4,1,""],to_tlm:[624,4,1,""]},"dolfin.multistage.multistagescheme.MultiStageScheme":{dolfin_stage_forms:[636,4,1,""],dt:[636,4,1,""],last_stage:[636,4,1,""],rhs_form:[636,4,1,""],solution:[636,4,1,""],stage_solutions:[636,4,1,""],t:[636,4,1,""],to_adm:[636,4,1,""],to_tlm:[636,4,1,""],ufl_stage_forms:[636,4,1,""]},"dolfin.multistage.multistagesolvers":{PointIntegralSolver:[639,2,1,""],RKSolver:[640,2,1,""]},"dolfin.multistage.multistagesolvers.PointIntegralSolver":{scheme:[639,4,1,""]},"dolfin.multistage.multistagesolvers.RKSolver":{scheme:[640,4,1,""]},"dolfin.multistage.rushlarsenschemes":{GRL1:[642,2,1,""],GRL2:[643,2,1,""],MultiStageScheme:[644,2,1,""],RL1:[645,2,1,""],RL2:[646,2,1,""],RushLarsenScheme:[647,2,1,""]},"dolfin.multistage.rushlarsenschemes.MultiStageScheme":{dolfin_stage_forms:[644,4,1,""],dt:[644,4,1,""],last_stage:[644,4,1,""],rhs_form:[644,4,1,""],solution:[644,4,1,""],stage_solutions:[644,4,1,""],t:[644,4,1,""],to_adm:[644,4,1,""],to_tlm:[644,4,1,""],ufl_stage_forms:[644,4,1,""]},"dolfin.multistage.rushlarsenschemes.RushLarsenScheme":{to_adm:[647,4,1,""],to_tlm:[647,4,1,""]},dolfin:{common:[25,0,0,"-"],compilemodules:[38,0,0,"-"],cpp:[249,0,0,"-"],deprecation:[527,0,0,"-"],fem:[551,0,0,"-"],functions:[586,0,0,"-"],importhandler:[598,0,0,"-"],mesh:[613,0,0,"-"],multistage:[621,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","function","Python function"],"2":["py","class","Python class"],"3":["py","attribute","Python attribute"],"4":["py","method","Python method"],"5":["py","staticmethod","Python static method"]},objtypes:{"0":"py:module","1":"py:function","2":"py:class","3":"py:attribute","4":"py:method","5":"py:staticmethod"},terms:{"15g":[16,17],"1st":578,"2nd":[578,625,633],"3rd":630,"4rd":631,"4th":629,"abstract":[4,15,16,17,152,318,341],"boolean":[11,12,13,19,20,72,140,259,336,338,457,458,459,460,461,519,541,616],"break":568,"case":[0,1,6,7,8,9,11,12,13,14,15,18,20,31,36,53,75,76,114,140,145,171,189,214,255,259,263,300,322,341,344,424,445,534,541,546,547,554,568,569,582],"class":[0,1,2,3,4,7,8,9,10,11,12,13,14,16,17,18,19,20,22,32,33,36,41,44,45,46,47,48,50,51,52,53,54,55,71,72,73,74,75,84,85,86,87,88,110,128,129,130,131,132,135,136,137,138,139,140,142,144,145,146,148,150,151,152,154,155,156,157,158,159,160,161,162,163,164,166,171,172,173,174,175,176,177,178,180,181,183,184,185,188,189,202,205,206,207,208,209,211,213,214,215,216,217,218,219,220,221,222,223,224,225,227,231,232,233,234,235,236,239,244,245,246,247,248,250,253,254,255,256,257,258,259,263,264,267,268,271,272,273,274,275,280,281,282,283,285,287,291,294,295,296,297,298,299,300,301,302,306,307,309,311,312,313,315,318,320,321,322,323,325,329,332,333,334,336,339,341,344,347,348,349,351,352,353,358,364,365,366,373,388,389,390,391,392,393,395,396,397,398,399,400,401,402,403,404,405,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,432,433,435,436,437,438,439,440,441,442,443,444,445,446,452,453,454,455,456,457,458,459,460,461,462,463,464,466,467,476,478,479,480,481,482,483,484,485,486,489,490,491,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,520,521,522,523,524,525,528,529,532,533,537,540,541,542,544,545,559,560,561,562,563,564,566,567,568,569,570,571,576,578,585,591,594,597,614,622,624,625,628,629,630,631,633,636,638,639,640,641,642,643,644,645,646,647,648,649],"const":[20,45,51,87,154,216,232,233,280,281,294,295,302,311,312,315,358,364,395,445,454,478,481,482,483,484,485,489,505,568],"default":[3,9,10,12,13,15,18,19,20,31,33,36,40,41,48,49,140,141,146,147,152,153,164,165,178,179,181,182,188,189,190,191,216,250,259,261,262,264,283,284,287,288,291,292,307,308,309,310,313,314,315,318,319,325,326,329,330,341,342,344,345,349,350,353,354,364,395,410,445,455,456,489,494,513,533,534,541,546,554,556,558,560,563,566,568,571,616],"export":[140,541],"final":[0,3,4,5,6,7,8,9,10,14,15,16,17,19,20,75,76,79,81,82,185,186,280,301,351,352],"float":[19,139,140,146,152,189,199,203,213,214,216,219,254,267,318,398,399,411,423,443,445,455,467,474,489,490,494,528,529,538,568],"function":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,26,28,29,30,31,33,34,35,37,39,40,42,45,51,53,87,92,96,110,117,118,135,136,137,138,139,140,142,146,148,150,151,152,154,166,171,172,173,174,175,183,185,191,192,197,201,202,204,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,255,259,263,265,266,267,268,281,297,312,320,321,325,333,336,338,339,347,348,353,373,396,398,399,405,406,411,423,430,431,443,445,455,456,457,458,459,460,461,467,474,475,476,477,481,482,483,484,485,486,488,489,490,494,495,496,497,500,502,516,519,527,528,529,530,531,532,534,537,538,539,540,541,546,547,548,549,550,551,552,553,554,555,556,557,558,564,565,566,568,570,572,573,574,575,577,578,579,580,581,582,583,584,587,588,589,590,591,592,593,594,595,596,599,602,609,610,615,617,618,619,620,624,636,644,647,649],"import":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,33,140,300,322,398,541],"int":[3,18,19,20,33,52,71,72,73,92,139,140,151,152,153,173,174,175,178,198,213,214,216,219,232,234,236,254,300,318,322,341,344,396,399,411,443,445,453,455,456,457,458,459,460,461,462,476,477,480,481,482,483,484,485,489,494,497,500,502,541,563,571,578,584],"kv\u00e6rn\u00f8":[630,631],"new":[4,9,18,150,154,189,191,211,212,219,259,393,394,454,463,481,482,483,484,491,492,534,546,547,569,578,607],"null":[14,154,180,219,358,463],"public":[20,36,41,568],"return":[2,4,7,8,11,12,13,15,18,19,20,29,33,36,45,50,51,53,56,57,59,62,65,66,67,68,69,70,71,72,75,79,80,81,82,84,86,87,88,93,98,99,100,101,102,103,104,105,106,107,108,109,122,124,125,126,127,133,140,144,145,146,150,151,152,154,163,174,175,176,177,178,189,191,197,198,210,211,212,213,216,217,218,219,220,224,232,233,234,240,242,250,252,254,259,262,263,265,266,280,281,282,283,284,285,286,287,289,290,291,293,294,295,297,298,299,300,301,302,311,312,315,318,319,320,321,322,323,324,325,327,328,329,331,332,333,334,335,339,340,341,343,344,346,348,349,351,352,353,355,356,357,358,364,367,368,369,370,371,374,375,376,378,379,385,396,399,405,411,423,424,430,431,445,446,447,452,453,454,456,458,459,460,461,462,463,466,467,474,475,476,477,478,481,482,483,484,485,486,487,488,489,494,505,511,512,513,514,515,517,518,519,525,530,531,534,535,536,538,540,548,550,553,554,556,558,563,568,569,570,571,573,575,578,587,588,589,590,592,593,595,596,616,624,636,639,640,644,647],"short":[71,111],"static":[48,53,71,75,140,142,146,148,152,164,166,178,181,185,189,211,225,227,250,259,263,283,285,287,291,307,309,313,318,323,325,329,334,336,339,341,344,347,349,353,393,405,430,433,446,464,467,476,479,486,491,560,563],"switch":[348,568],"throw":[96,365,444,454],"true":[0,1,2,4,6,9,10,11,12,13,14,16,17,19,20,29,31,50,71,75,79,80,81,82,99,100,101,102,103,104,105,106,107,108,109,111,119,140,146,154,173,176,185,186,189,191,216,219,250,252,259,267,281,294,295,301,325,358,368,369,370,395,396,399,423,445,452,453,454,455,456,458,459,460,461,481,482,483,484,494,519,534,536,540,541,565,616],"try":15,"var":[259,262],"void":[20,33,568],"while":[0,4,5,8,9,11,13,18,19,20,73,263,568],ALE:239,A_e:171,Added:[511,512,513,514,515,525],But:[5,140,541],EPS:349,For:[0,1,3,4,5,6,9,10,11,12,13,14,15,18,20,135,136,198,210,235,259,294,295,333,348,352,445,454,486,487,528,529,534,536,548,550,554,565,582],GPS:[491,492],Its:566,LHS:171,Not:[19,86],ODE:[624,647],One:[9,16,17,18,218,237,568],RHS:[14,171],Such:8,That:396,The:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,25,33,36,38,43,44,45,46,47,48,50,51,52,53,54,55,71,72,73,74,75,84,85,86,87,88,128,129,130,131,132,135,136,137,138,139,140,142,144,145,146,148,150,151,152,154,155,156,157,158,159,160,161,162,163,164,166,171,172,173,174,175,176,177,178,180,181,183,184,185,188,189,191,197,198,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,231,232,233,234,235,236,237,244,245,246,247,248,250,253,254,255,256,257,258,259,263,264,267,271,272,273,274,275,280,281,282,283,285,287,291,294,295,296,297,298,299,300,301,302,306,307,309,311,312,313,315,318,320,321,322,323,325,329,332,333,334,336,339,341,344,347,348,349,351,352,353,358,364,365,372,388,389,390,391,392,393,395,396,397,398,399,401,402,403,404,405,409,410,411,413,414,415,416,417,419,420,421,422,423,424,426,427,428,429,430,432,433,435,436,437,438,439,440,441,442,443,444,445,446,452,453,454,455,456,457,458,459,460,461,462,463,464,466,467,474,475,476,477,478,479,480,481,482,483,484,485,486,489,490,491,493,494,495,496,497,498,499,500,501,502,503,504,505,507,508,509,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,528,529,530,531,534,536,537,538,539,541,547,551,554,560,563,565,566,568,569,571,577,578,581,586,598,613,616,621,639,640,649],Then:[0,1,5,7,8,14,15,19,20],There:[3,9,14,571],These:[4,6,7,8,18,218,336,513,569],Use:[0,1,2,5,6,7,8,9,10,14,15,16,17,20,21,31,75,83,96,267,325,584],Used:166,Useful:[140,399],Using:[2,4,15,16,17],With:[0,4,5,6,7,8,9,11,12,13,14,18,20,578],Yes:556,__future__:[3,5,9,16,17,18],__init__:[4,8,568],__new__:569,_bool_:519,_butcher_scheme_gener:624,_cell_:150,_dirichletbc_:533,_domain:568,_double_:[267,489],_encoding_:267,_form_:533,_function_:[216,236,571],_functionspace_:[151,578],_mesh:[481,482,483,484,568],_mesh_:457,_meshfunction_:480,_meshvaluecollect:267,_multistagescheme_:[639,640],_not_:568,_point_:398,_rush_larsen_scheme_gener:647,_std:[88,267,395,453],_usefilepartition_:267,_vertex_to_dof_map_:198,a_form:[533,536],a_r_dt:146,a_r_t:146,a_star:146,a_tensor:536,aabb:396,abl:[4,14,19],about:[4,6,19,43,92,349,568],abov:[0,1,3,4,5,6,7,8,9,10,11,13,14,15,18,20,92,259,396,536,554],abs:[11,302],absolut:[11,302],absolute_toler:72,accept:33,access:[4,7,8,33,71,72,154,254,294,295,302,333,341,344,348,424,485,568],access_count:[71,72],accomplish:[10,18],accord:[9,75,83,211,212,255,259,352,386,395,445,486,488],accordingli:211,accuraci:[0,554],across:[53,57,306,463,464,465,467,474,616],act:[8,569],action:[4,298,312],activ:119,actual:[0,7,8,10,16,17,218,224,267,298,396],adapt:[21,135,136,152,166,202,528,529,532,565],adapt_coeffici:191,adapt_mark:202,adapt_problem:152,adapted_mesh:[191,192],adaptive_data:152,adaptivelinearvariationalsolv:[0,136,202,532],adaptivenonlinearvariationalsolv:[202,532],adaptivesolv:[528,529,530,531,551],add:[9,72,174,175,183,234,281,295,300,301,302,348,351,364,410,455,485,518,534],add_cel:[410,455],add_entity_point:455,add_loc:[295,300,301,302,348,351,364],add_local_valu:351,add_polygon:259,add_valu:[138,534,536],add_vertex:[410,455],add_vertex_glob:455,added:[36,41,72,351,396,455,546],adding:[9,24,183,554],addit:[3,6,7,8,10,14,18,33,456,489,513,534,537,539,547,565,571],additional_declar:33,additional_system_head:33,adj:624,adjoint:[0,549,624,647],adjust:[6,259],adopt:6,advanc:[4,31,294,295,333,348],advantag:6,affect:259,affin:[211,212],after:[7,8,140,259,444,462,464,541],afterward:18,again:[6,444],aggreg:333,agre:151,aim:[135,136,528,529],ale:[600,601,603,613],ale_mov:239,algebra:[5,9,14,15,142,294,295,301,311,312,315,352,358,364,368,369,370,374,375,378,379,380,381,382,383,384,385,534,565,582],algerbra:333,algorithm:[148,349,393,394,476,511,512,513,514,515,525,565],alia:[623,626,627,632,634,635,637],align:396,all:[0,1,5,6,7,8,12,13,15,16,17,18,19,20,33,41,72,125,135,136,139,140,150,151,152,154,163,171,177,198,216,219,220,254,255,259,260,280,294,295,300,301,302,311,315,325,333,334,348,349,364,396,430,444,445,452,453,454,455,458,459,460,461,462,467,474,475,478,480,481,482,483,484,485,486,488,496,511,512,513,514,515,525,528,529,538,541,559,562,565,568,571,578,608,624,636,644,649],all_interact:259,all_kei:606,all_reduc:[53,56],allow:[3,8,9,19,20,23,72,139,177,216,457,480,568],allow_extrapol:216,almost:[15,53,59,65],along:[322,513],alpha:2,alreadi:[12,445,476,477],alreayd:255,also:[0,1,3,6,7,8,10,11,12,13,15,16,17,18,20,31,33,75,78,86,139,140,166,259,263,349,372,445,453,464,534,541,568,582,630,631],alsolut:325,altern:[7,8,10,31,140,259,489,494,536,541,556,568,578,582,583,584],alwai:[45,51,87,140,541],ambient:264,amg:[9,15],among:534,aneurysm:1,angl:[445,467,468,469,470,471,489],ani:[5,9,14,19,33,36,40,50,154,171,188,191,197,201,204,219,255,259,270,280,294,300,301,315,333,352,396,399,405,445,454,462,478,485,533,536,544,568,571],anim:259,anoth:[140,154,173,213,218,219,237,395,411,456,489,559,562,571,624,647],ans:[218,237],ansatz:14,anyth:[341,499,501],api:154,appear:[154,174,259],append:[255,259],appli:[0,4,6,7,8,9,10,11,12,13,14,15,20,140,173,183,188,196,280,301,351,352,365,486,488,533,536,541],applic:[140,349,495,536,541],approach:[2,6,140,541],appropri:[307,430,431,480,481,482,483,484,538],approxim:[0,4,6,15,16,17,136,146,148,171,280,347,529,554],arang:33,arbitrari:[72,211,301,485],arbitrarili:534,area:[6,215,399,405,417,591],arg2:[155,156,157,158,159,160,161,162,221,222,223,256,257,258,435,436,437,438,439,440,441,442],arg:[31,33,40,44,45,46,51,52,53,65,66,67,70,71,72,73,74,75,77,78,84,86,87,88,89,128,129,130,131,132,135,136,140,144,145,151,152,154,171,173,174,175,176,189,191,193,196,200,205,206,207,208,209,211,212,213,214,216,217,218,219,220,224,225,226,232,235,236,237,244,245,246,247,248,250,259,263,265,266,267,270,271,272,273,274,275,285,287,291,294,295,296,297,298,299,300,301,302,306,307,309,311,312,313,315,318,322,323,325,329,333,336,338,339,341,344,348,349,351,352,353,358,364,372,377,386,388,389,390,391,392,393,394,397,398,399,401,402,403,404,405,406,411,413,414,415,416,419,420,421,422,426,427,428,429,430,433,434,443,444,445,446,447,452,456,458,459,460,461,462,463,464,465,478,481,482,483,484,485,489,490,494,495,496,497,500,502,505,507,508,509,510,511,512,513,514,515,518,519,520,521,522,523,524,525,541,565,571,578],argc:[72,75,77,78,114],argument:[0,1,3,4,5,6,7,8,10,11,12,13,16,17,18,19,20,31,33,34,40,41,72,73,75,78,91,92,94,111,114,115,125,126,135,136,137,139,140,144,146,150,151,152,172,173,174,175,180,189,191,197,198,199,201,203,204,210,211,212,213,214,216,218,219,225,226,232,233,234,236,237,250,251,252,267,294,295,300,318,322,341,344,395,396,398,399,411,423,443,445,453,455,456,457,458,459,460,461,476,477,480,481,482,483,484,485,489,490,494,497,500,502,517,518,519,528,529,530,531,533,534,538,541,546,547,553,554,556,558,559,562,565,566,568,569,571,572,574,576,577,578,581,582,583,584,587,588,589,590,591,592,593,595,596,600,601,616,639,640],argv:[72,75,77,78,114,610],argyri:578,aris:[7,8],arnold:578,arnoldi:349,around:[11,17,19,86,333,445,489],arpack:349,arrai:[20,33,45,51,87,140,150,151,189,198,213,214,216,219,235,267,294,295,300,302,306,352,396,399,445,453,455,458,459,460,461,462,476,477,485,489,494,505,541,566,568,578],arrow:259,as_backend_typ:[14,373],as_matrix:20,as_str:29,as_vector:6,ascii:[250,267],ask:5,aspect:4,assembl:[4,5,6,9,14,15,18,84,86,138,151,166,167,168,169,170,172,180,185,186,187,188,194,195,196,202,280,301,453,533,535,536,538,539,551,554,568,649],assemble_cel:[137,166],assemble_exterior_facet:[137,166],assemble_interior_facet:[137,166],assemble_loc:[166,202,539],assemble_multimesh:[202,537],assemble_system:[15,202,537],assemble_vertic:137,assemblerbas:[137,172,180,188,202],assembling_loc:[538,551],assert:[33,568],assign:[5,9,72,137,213,218,219,239,294,300,315,333,481,482,483,484,571],assigning_func:[218,237],assigning_spac:218,associ:[4,5,15,18,53,69,88,140,183,197,201,204,255,259,267,445,453,456,458,459,460,461,480,481,482,483,484,534],assum:[0,1,6,12,13,20,36,41,148,255,351,396,405,445,476,477,600,601],attach:[14,140,151,219,333,453,541],attribut:[254,255,568],attribute_nam:254,auto:[21,259,270],autogener:599,autom:[4,137,146,180,565],automat:[0,4,6,9,12,33,43,114,135,136,140,259,445,528,529,541,565],autosubdomain:542,auxiliari:[445,453],avail:[5,9,15,16,17,18,33,72,139,140,213,232,250,255,287,289,290,291,293,294,295,297,325,327,328,329,331,339,340,341,343,344,346,353,355,356,357,368,369,370,374,375,378,379,380,381,382,383,384,385,398,399,411,443,445,453,455,467,474,475,478,489,490,497,500,502,519,541,565,568],averag:[2,53,56,57,445],avg:[2,53],avoid:[6,9,45,51,87,140,352,541],awai:166,axes:259,axi:[150,220,300,322,396,445,489],axial:[443,500],axpi:[217,281,300,302],axpy0:217,axpy1:217,azimuth:259,b_e:171,b_form:[533,536],b_tensor:536,back:485,backend:[5,14,15,31,283,284,294,295,298,301,302,309,312,315,352,358,364,368,369,370,374,375,378,379,380,381,382,383,384,385,534,535,536,565],background:264,backward:4,backwardeul:638,bar:[31,72,73,259,263,624,647],barrier:[53,58],base:[4,9,33,44,45,46,47,48,50,51,52,53,54,55,63,64,71,72,73,74,75,84,85,86,87,88,128,129,130,131,132,135,136,137,138,139,140,142,144,145,146,148,150,151,152,154,155,156,157,158,159,160,161,162,163,164,166,171,172,173,174,175,176,177,178,180,181,183,184,185,188,189,191,203,205,206,207,208,209,211,213,214,215,216,217,218,219,220,221,222,223,224,225,227,231,232,233,234,235,236,244,245,246,247,248,250,253,254,255,256,257,258,259,263,264,267,271,272,273,274,275,280,281,282,283,285,287,291,294,295,296,297,298,299,300,301,302,306,307,309,311,312,313,315,318,320,321,322,323,325,329,332,333,334,336,339,341,344,347,348,349,351,352,353,358,364,365,388,389,390,391,392,393,395,396,397,398,399,400,401,402,403,404,405,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,432,433,435,436,437,438,439,440,441,442,443,444,445,446,452,453,454,455,456,457,458,459,460,461,462,463,464,466,467,476,478,479,480,481,482,483,484,485,486,489,490,491,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,520,521,522,523,524,525,528,529,533,540,541,544,547,559,560,561,562,563,565,566,568,570,571,578,591,594,622,624,625,628,629,630,631,633,636,639,640,642,643,644,645,646,647,648],base_on:282,basi:[2,4,5,14,18,139,150,216,224,307,365,372,554,568,571],basic:[15,26,86,513],basisfunct:202,bc0:[1,12,15,16,17],bc1:[1,15,16,17,565],bc2:[1,565],bc3:1,bcl:6,bcp:9,bcr:6,bcs:[6,12,15,16,17,18,146,163,176,177,188,196,200,533,536,540,541,551,558,559,562,565,622,624,625,628,629,630,631,633,636,644],bcu:9,bdf1:[623,635,638],bdfm:578,bdm:[8,31,568,578],becaus:[0,10,11,12,13,20,568],been:[5,6,12,13,14,15,16,17,20,71,75,79,80,91,118,151,177,189,234,255,259,260,269,322,333,334,396,444,445,456,476,477,485,565],befor:[1,4,5,9,10,15,18,19,20,189,219,320,325,352,423],begin:[0,1,4,9,13,14,18,92,110,478],behavior:[6,259],behaviour:569,behind:[19,568,569],being:[4,137,148,263,267],belong:[144,154],beloskrylovsolv:373,beloskrylovsolver_default_paramet:373,beloskrylovsolver_method:373,beloskrylovsolver_precondition:373,below:[5,9,10,21,151,166,259,513,534,556,565,568,578],berkelei:399,better:[351,534],between:[2,18,45,51,87,154,171,198,210,218,239,242,311,396,399,405,411,430,445,452,466,517,538,604],beyond:[511,512,513,514,515,525],bicgstab:9,biharmon:21,bilinear:[0,1,2,4,5,7,8,9,10,11,12,13,14,15,16,17,20,145,146,151,163,175,533,534,538,546,565],bilinear_form:163,bin:250,binari:[4,189,250,333],binary_dump:333,bit:[511,512,513,514,515,525,630,631],block:[140,154,280,295,300,301,302,348,351,352,364,568],block_siz:[154,306],blockmatrix:373,blockvector:373,blood:1,bodi:[6,18,219],bool:[3,12,19,20,44,92,146,152,153,173,178,189,191,216,219,250,252,318,341,344,395,396,399,445,453,455,456,457,458,459,460,461,480,481,482,483,484,489,494,531,563,578,616],boolparamet:110,boost:[227,393],boostgraphord:516,boostgraphordering_compute_cuthill_mcke:516,both:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,144,198,218,237,259,300,318,322,349,445,554,569,600,601],bottom:[8,18,19],bound:[177,341,344,353,396,430,445,485],boundari:[0,2,4,6,7,8,9,11,13,14,16,18,19,20,21,140,144,146,152,163,173,176,177,188,192,196,200,211,212,259,395,409,423,424,445,485,486,488,494,513,533,534,536,541,559,562,565,568,604],boundary_mark:534,boundary_mesh:604,boundary_valu:140,boundarymesh:[211,212,516],boundarysourc:8,boundarysubdomainfind:[604,605,606,607,608,610,611,612,613],bounding_box_tre:[445,485],bounding_box_tree_boundari:485,boundingboxtre:[430,485,516],boundingboxtree3d:516,box:[3,396,430,445,485],box_with_d:5,boxmesh:[3,497,516],brezzi:[8,578],broadcast:[53,63],broadcast_mesh_data:444,btmp:15,bubbl:[16,578],buffer:255,build:[4,7,8,10,15,16,137,142,143,144,154,174,175,185,186,187,218,234,396,430,433,434,464,465,485],build_distributed_mesh:[464,465],build_gradi:142,build_multimesh_sparsity_pattern:185,build_x3dom_tre:263,buildbot:3,built:[0,4,6,10,11,12,13,14,17,20,21,197,201,204,259,309,325,396,445],butchermultistageschem:[622,625,628,629,630,631,633,638],button:264,c00:20,c00_file:20,c01:20,c01_file:20,c11:20,c11_file:20,c2v:[606,607,608],c_vec:349,cach:[140,171,218,541],cahn:21,cahnhilliardequ:4,calcul:[16,17,171,417,463,478],call:[0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,45,51,75,76,83,86,87,117,140,152,166,168,169,170,220,234,255,259,318,320,333,334,335,348,352,396,423,445,462,485,534,536,541,565,568],callback:568,caller:[224,280,445],camera:259,can:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,31,33,36,43,72,86,139,140,145,148,180,181,184,214,218,219,220,232,237,250,259,263,312,320,322,339,349,372,395,396,445,446,448,449,450,452,455,457,458,459,460,461,480,481,482,483,484,534,536,538,541,565,566,568,571,638,648],cannot:[211,212],canon:[0,1,10,11,12,13,14,20],care:[12,15,263,569],carri:[536,568],cast:[4,311,366],cauchi:6,cdot:[8,353],cell:[2,3,8,16,17,18,19,20,86,137,139,140,146,150,151,154,166,167,168,169,170,171,180,185,186,191,194,199,203,211,212,214,215,216,219,220,255,395,396,398,405,406,407,408,410,424,443,444,445,446,447,448,449,450,455,456,463,464,465,466,467,468,469,472,473,474,475,476,477,478,480,481,482,483,484,485,490,494,497,500,502,513,516,519,534,538,539,541,561,566,568,578,587,588,589,590,591,593,595,604,607,608,616],cell_color:[446,447],cell_data:568,cell_dim:255,cell_dimens:154,cell_dof:[154,538],cell_domain:[137,151,166,167,168,170],cell_index:[20,481,482,483,484],cell_mark:[191,519,534,616],cell_norm:[399,405],cell_orient:445,cell_own:478,cell_partit:[464,465],cell_shap:[128,150,205,244,271,388,520,568],cell_typ:[255,405],cellfunct:[18,401,402,403,404,445,467,475,516,534,568,616],cellfunctionbool:516,cellfunctiondoubl:516,cellfunctionint:516,cellfunctionsizet:516,celliter:568,cellnorm:597,cellsiz:[2,597],celltyp:[445,455,516],celltype_cr:516,celltype_string2typ:516,celltype_type2str:516,cellvolum:597,center:[41,445],certain:[4,72,339,405],cg1:232,chang:[2,6,9,71,72,140,142,150,325,534,541,546,566],change_count:[71,72],changeset:98,check:[3,4,14,15,20,50,72,75,79,80,140,145,151,177,189,216,219,238,240,241,250,252,254,255,372,396,399,405,444,445,453,454,456,478,485,494,496,511,512,513,514,515,525,541],check_kei:71,check_midpoint:[140,173,494,541],checkpoint:267,chemic:4,child:[155,156,157,160,162,216,219,437,438,439,440,441],choic:[0,7,8,565],cholmod:99,choos:[0,6,31,214],choosen:15,chord:568,chorin:9,chosen:[10,39,307,534],circumradiu:[399,405,467,474,475,597],classic:[7,15,16,17],clean:445,clear:[50,72,94,115,125,126,154,171,174,175,189,197,201,204,336,337,444,445,452,453,454,478,481,482,483,484,485],clear_child:[155,156,157,158,159,160,161,162,221,222,223,256,257,258,435,436,437,438,439,440,441,442],clear_factor:171,clear_sub_map_data:154,clock:86,close:[18,140,241,255,263,410,455,541,554],closest:[189,349,396,430],cloud:[267,396,430],cmath:568,cn2:[626,638],coarsen:463,coarsest:[216,219,463],code:[33,34,36,151,213,250,353,398,399,411,443,445,455,467,474,475,489,490,497,499,500,501,502,519,537,539,566,568],codimens:[399,400,401,402,403,404,423,425,426,427,428,429,445],coeffici:[5,9,11,14,16,17,18,151,191,214,216,219,220,233,547,566,568,569,571,591,594],coefficient_deriv:547,coefficient_nam:151,coefficient_numb:151,col:[84,85,300],collaps:[16,154,219,578],collapsed_dof:[219,578],collect:[6,9,12,15,16,17,22,94,115,234,267,300,306,458,459,460,461,480,481,482,483,484,485,538],collid:[396,399,405,485],collides_ent:396,collis:[396,430,445,485],collision_map_cut_cel:485,color:[31,151,259,264,445,446,447,448,449,450,451,476,477,478],color_cel:446,coloring_typ:[433,434,445,446,447,448,449,450,451],colormap:[259,264],column:[14,140,214,282,294,322,352],com:263,combin:[11,14,217,546,565,571],comm:[33,53,57,58,60,61,62,63,64,65,68,69,250,255,267,295,302,307,309,313,315,318,325,329,332,333,341,344,348,349,351,353,364,398,443,490,493,497,498,499,500,501,502],command:[11,12,13,20,72,75,78,114,565],common:[6,27,29,31,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,140,146,151,152,154,164,175,176,178,181,189,219,220,224,234,249,255,259,267,298,299,300,301,302,311,318,322,339,349,353,358,405,444,445,453,458,459,460,461,481,482,483,484,485,513,554,560,563,599,600,601],commonli:[4,649],commun:[33,53,68,69,189,250,311,312,318,322,325,329,332,333,341,348,358,398,443,445,453,490,497,500,502],compar:[7,171],compat:[35,218,250,264,300,322,458,459,460,461],compil:[0,2,4,6,10,11,13,14,15,20,33,35,36,37,39,40,41,42,99,100,101,102,103,104,105,106,107,108,109,249,534,537,538,539,544,554,559,562,566,568,569,578],compile_express:[37,569],compile_extension_modul:35,compiledmodul:569,compiledsubdomain:[6,42],compilemodul:[6,33,34,36,40,41,599],compiletim:43,complement:2,complet:[36,41,140,485,649],complex:[3,5,20,352,568],complic:[18,568],compon:[2,4,6,7,8,10,14,16,17,20,150,154,219,235,399,405,417,423,568,571,573,575,578,584,619,620],componenet:16,componnen:17,composit:[172,175,233],compress:[4,6,294],compresss:294,comput:[0,1,2,4,5,6,7,8,9,10,11,12,13,16,17,20,73,139,140,142,146,148,149,171,185,198,199,203,210,216,219,220,227,234,259,298,312,320,321,332,349,387,393,394,396,399,405,411,417,423,430,445,446,450,456,464,466,467,474,475,486,487,489,491,492,517,541,546,547,552,554,555,556,557,565,600,601,624,647],computation:5,compute_cell_residu:146,compute_closest_ent:[396,430],compute_closest_point:[396,430],compute_collis:[396,430],compute_color:446,compute_cuthill_mcke:[393,394],compute_du:146,compute_edge_map:602,compute_entity_collis:[396,430],compute_extrapol:146,compute_facet_residu:146,compute_first_collis:[396,430],compute_first_entity_collis:[396,430],compute_gp:491,compute_ind:146,compute_local_rang:53,compute_periodic_pair:486,compute_process_collis:[396,430],compute_reord:491,compute_vertex_map:602,compute_vertex_valu:[216,220],concret:[311,312,315,364,367,445],condit:[0,2,4,6,7,8,9,11,13,14,16,18,19,20,21,140,146,152,163,173,176,177,188,192,196,200,259,409,486,488,494,533,536,541,559,562,565],conduct:20,conductivity_cod:20,configur:[5,14,15,53,339,565],conform:[2,135,136,259,528,529],confus:396,conjug:14,connect:[7,8,197,201,204,423,444,445,452,476,477,478,511,512,513,514,515,525,538,608],consequ:14,consid:[0,1,2,5,6,9,10,11,12,13,14,15,16,17,18,20,197,201,204,554],consider:4,consist:[0,1,5,7,8,9,10,11,13,14,17,20,36,154,219,255,445,478,503,504,581],constant:[1,2,6,9,10,11,12,13,14,15,16,17,18,20,25,224,239,568,586,636,644],constrain:[144,177,344,353,578],constrained_boundari:144,constrained_domain:[12,144,154,578,579,583,584],constraint:[6,9,10,14,341],construct:[2,3,5,7,8,15,18,45,51,75,83,86,87,154,211,212,219,255,295,481,482,483,484,639,640],constructor:[4,47,48,88,137,138,140,151,171,172,174,176,180,181,184,188,213,214,215,216,217,219,224,231,232,253,254,255,264,267,281,282,283,291,294,295,307,309,315,320,321,329,332,333,334,347,348,364,365,409,410,417,423,443,452,453,455,456,458,459,460,461,462,463,478,489,494,496,500,511,512,513,514,515,525,541,571],conta:571,contain:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,36,41,43,92,151,171,211,212,214,216,396,399,445,453,454,463,585,600,601],contigu:[306,485],contin:0,continu:[0,1,2,5,6,7,8,9,11,13,17,20,117,578],contract:[636,644],contribut:171,control:[0,4,12,13,19,20,135,136,146,191,259,349,395,534,565,568],conveni:[4,26,409,453,495,578],convent:[395,445],converg:[4,11,15,178,318,325,341,344,349,563],convergence_criterion:4,convert:[72,405,407,408,446,451],convex:4,coordin:[12,18,139,150,197,201,204,211,212,214,216,219,231,282,339,398,399,410,444,445,455,462,476,477,489,494,505,568,594,596],coordinate_dof:[139,166,167,168,169,170],coordinatematrix:373,copi:[4,16,17,45,51,72,87,88,140,144,154,171,213,214,216,217,219,224,232,254,281,294,295,300,302,315,333,348,351,364,445,452,458,459,460,461,462,478,489,496,511,512,513,514,515,525,541,571,578],corner:[3,140,541],correct:[9,19,20,300],correctli:[12,72],correspond:[5,6,9,15,16,17,18,135,136,151,154,171,424,433,444,445,480,481,482,483,484,485,528,529,534,535,537,538,539,547,550,573,575],cos:[6,568],cost:50,costli:15,could:[4,33,140,396,485,541,578],count:[47,71,125,546],counter:[259,348],coupl:[4,9,171,464],cover:[7,8,198,485],covered_cel:485,cpp:[31,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,306,307,308,309,310,311,312,313,314,315,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,528,529,533,540,541,544,545,559,560,561,562,563,566,569,571,578,591,594,599,636,639,640,641,644],cpp_assembl:537,cpp_optim:[2,4,6],cpparg:36,cppcode:[20,41,568],cppv:[578,580],crank:4,cranknicolson:638,creat:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,44,45,46,50,51,52,72,73,74,84,85,86,87,88,135,136,139,140,144,145,146,150,151,154,163,164,166,173,175,177,178,183,189,197,213,214,216,218,219,224,232,233,234,235,236,250,259,263,267,280,287,294,295,297,312,313,315,318,325,333,339,341,344,348,349,351,352,353,358,364,395,396,398,399,400,405,406,411,412,418,424,425,430,444,445,452,453,454,455,458,459,460,461,462,463,467,469,470,472,473,478,481,482,483,484,485,489,493,495,496,497,498,502,503,504,505,506,511,512,513,514,515,519,525,528,529,530,531,533,534,540,541,544,546,547,559,560,561,562,563,566,567,568,569,571,572,573,574,575,577,578,581,582,583,584,591,594,604],create_arrai:453,create_compiled_expression_class:569,create_ent:405,create_krylov_solv:297,create_layout:297,create_linear_oper:297,create_lu_solv:297,create_map:609,create_matrix:297,create_mesh:202,create_parent_path:250,create_python_derived_expression_class:569,create_sub_el:150,create_vector:297,creation:[142,569],criterion:[318,616],cross:[3,489,490,502],crouzeix:578,crude:280,csg:3,cube:[3,6,15,17,497],cubic:16,curl:[142,143,556,578],current:[4,9,19,29,53,63,64,154,213,259,264,269,318,320,368,369,370,374,375,379,380,381,383,384,385,445,453,455,476,477,511,512,513,514,515,525,534,582],curv:[140,541],custom:[137,568],cut:[172,175,233,485],cut_cel:485,cuthil:[393,394],cutting_cell_index:485,cylind:[140,541],d2dx:227,damp:47,darci:[7,8],data:[0,1,4,7,8,10,11,13,18,20,45,50,51,71,72,86,87,111,140,150,151,152,154,214,216,219,234,250,254,255,259,264,267,294,295,352,396,399,444,445,452,453,454,456,458,459,460,461,464,465,467,469,472,478,480,481,482,483,484,495,517,541,566,568,603],data_label:[152,153],data_path:255,databas:[48,325,329,333,341,348,349],dataset:[254,255,453],dataset_nam:[254,255],dbc:12,ddx:[224,227],deal:15,dealt:4,debug:[3,110,116,219,430,486,488],debug_level:[89,116],decid:[140,259,312,445,458,459,460,461,541],decim:267,declar:[0,4,6,10,11,13,14,20,33,568],decreas:[95,348],deduc:[583,584],deep:[16,17],deepcopi:[16,17,216,294,295,571],def:[2,4,7,8,11,12,13,15,18,19,20,568],default_paramet:[48,140,146,152,164,178,181,189,259,287,291,307,309,313,318,325,329,341,344,349,353,560,563,565],defaultfactori:373,defaultfactory_factori:373,defici:14,defin:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,24,39,48,86,140,146,166,175,177,183,214,219,232,233,298,300,301,302,307,312,318,347,353,365,399,445,457,458,459,460,461,480,481,482,483,484,485,494,495,513,534,541,543,545,554,566,568,569,578,585,597,616,638,648],definit:[15,36,494],deflat:349,deform:6,degener:[399,467,474,475],degre:[0,2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,140,144,174,197,201,204,211,212,216,219,224,445,455,462,493,498,541,548,554,568,578,582,583,584],degree_rais:554,degree_ris:554,delta:[183,568],demo:[0,1,2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20],demo_auto:0,demo_bc:1,demo_biharmon:2,demo_built:3,demo_cahn:4,demo_eigenvalu:5,demo_hyperelast:6,demo_mix:[7,8],demo_navi:9,demo_neumann:10,demo_nonlinear:11,demo_period:12,demo_poisson:[13,21],demo_singular:14,demo_stok:[15,16,17],demo_subdomain:[18,19],demo_tensor:20,demonstr:[1,3,4,6,18],denot:[0,2,6,8,9,10,11,13,18,20,571],dens:352,depend:[0,4,6,9,20,124,214,365,534,538,565,568,569],deprec:[110,154,302,399,405,526,599],depth:[72,155,156,157,158,159,160,161,162,221,222,223,256,257,258,435,436,437,438,439,440,441,442],deriv:[0,2,4,6,10,13,14,18,139,142,150,224,227,228,229,318,334,549,568,571,624,647],descend:463,descret:0,describ:[0,1,10,11,13,14,15,18,20,267,358,636,641,644],descript:[0,1,10,11,13,14,15,16,18,20,71,88,259,405],design:[135,136,430,528,529],desir:[12,13,20],destin:[464,465],destroi:[86,294,295],destruct:[294,295,348],destructor:[75,76],det:6,detail:[3,12,13,15,18,20],detect:[365,396],determin:[10,14,33,53,63,64,224,250,302,456,534,568,578],develop:[92,96,263,396,453,485],dfdc:4,dg_0:146,diag_val:140,diagnost:9,diagon:[3,140,185,186,300,352,490,502,534,541,630,631],diamet:[399,405],dict:[34,72,254,568,578],dictionari:6,diff:4,differ:[3,4,9,15,16,17,18,19,139,140,188,234,259,311,396,405,452,480,481,482,483,484,533,534,541,568,569,638,648],differenti:[0,1,2,4,5,7,8,9,10,11,12,13,14,20,140,541,565],diffus:264,dihedr:[467,468,469,470,471],dihedral_angl:467,dihedral_angles_histogram_data:467,dihedral_angles_matplotlib_histogram:467,dihedral_angles_min_max:467,dim0:[214,433,434],dim1:[214,433,434],dim:[19,72,144,154,213,214,219,234,236,300,302,322,352,358,365,399,405,430,431,445,453,454,456,457,458,459,460,461,462,478,480,481,482,483,484,486,487,488,489,494,511,512,513,514,515,525,584],dimens:[4,5,6,19,20,144,150,151,154,174,197,201,204,214,216,219,220,232,234,236,255,280,298,300,301,302,312,322,332,339,352,358,395,396,399,405,410,411,412,413,414,415,416,417,418,419,420,421,422,430,431,445,446,448,450,451,452,453,454,455,456,457,458,459,460,461,462,478,480,481,482,483,484,485,486,487,488,489,494,505,506,507,508,509,510,511,512,513,514,515,525,566,568,583,584],dimension:[0,6],dirac:183,direct:[0,3,4,6,10,11,13,20,217,291,329,349,398,399,405,443,445,462,490,497,500,502,547],direction_add_add:217,direction_add_sub:217,direction_sub_add:217,direction_sub_sub:217,directli:[0,9,45,51,87,298,341,344,569],directori:43,dirichlet:[0,1,2,6,7,11,12,13,15,16,17,18,20,140,173,191,196,541],dirichletbc:[0,1,2,6,7,8,9,11,12,13,15,16,17,18,20,31,146,152,173,202,533,536,542,558,649],dirichletbc_default_paramet:202,dirichletboundari:[2,11,12],disabl:[3,45,51,87,259],disc:498,discontinu:[2,7,8,140,171,541,550,558,578],discret:[0,4,7,8,14,135,136,142,143,146,457,458,459,460,461,528,529,571,578,585],discreteoper:202,discreteoperators_build_gradi:202,disk:255,displac:[6,211,212,232,259],displai:[47,611],display_width:618,distanc:[396,399,405,423,430,445,489],distinct:[18,224],distribut:[242,255,306,396,455,464,465,519,616],div:[2,8,9,15,16,17,142,556],diverg:[9,142],divid:[0,7,8,10,11,13,14,20],divis:[3,454],dmu:4,docstr:[23,24,25,26,28,30,32,35,37,38,39,42,43,110,202,239,249,268,373,481,482,483,484,516,527,532,537,539,542,543,545,549,551,552,555,557,564,567,569,576,585,586,597,598,599,602,609,613,614,615,617,620,621,638,641,648],document:[3,294,295,445,649],doe:[45,51,87,151,171,234,339,396,444,454,480,481,482,483,484,536,554,582],doesn:14,dof:[140,144,150,154,173,174,185,198,210,216,218,219,234,399,541,578],dof_to_vertex_map:202,dofmap0:[433,434],dofmap1:[433,434],dofmap:[14,154,171,174,185,186,202,216,219,234,255,433,434,538,568],doing:[16,17,18],dolfin:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,27,29,31,33,34,36,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,306,307,308,309,310,311,312,313,314,315,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,528,529,530,531,533,534,535,536,538,540,541,544,546,547,548,550,553,554,556,558,559,560,561,562,563,565,566,568,570,571,572,573,574,575,577,578,579,580,581,582,583,584,587,588,589,590,591,592,593,594,595,596,600,601,603,604,605,606,607,608,610,611,612,616,618,619,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,639,640,642,643,644,645,646,647,649],dolfin_cel:216,dolfin_el:578,dolfin_ep:[0,7,8,9,11,12,13,15,19,20,23,238,241],dolfin_error:[96,110],dolfin_fin:[16,17,19],dolfin_fine_subdomain:[16,17],dolfin_noplot:3,dolfin_pi:[12,23],dolfin_plot_:259,dolfin_sqrt_ep:23,dolfin_stage_form:[636,644],dolfin_vers:110,dolfinerrorcontrolgener:543,dolli:259,dolphin:[17,19],domain:[0,1,2,4,6,7,8,9,10,11,12,13,14,16,18,19,20,140,151,196,218,445,454,457,458,459,460,461,485,494,495,534,541,568],domain_data:444,domainboundari:516,don:[10,341,478,485,534],done:[5,7,8,10,14,15,16,17,19,571,578],dorfler:199,dorfler_mark:202,dot:[1,4,5,6,7,8,12,18,411,489,624,647],doubl:[19,20,33,46,71,72,92,125,140,152,153,255,259,336,338,349,396,457,467,475,480,485,489,494,568],doublearrai:110,doubleparamet:110,dougla:[8,578],down:[0,11,12,13,14,20,399,485],down_cast:[315,364,527],download:21,dqdx:224,draw:259,driven:9,drt:[7,578],dt_stage_offset:[176,636,644],dtype:376,dual:[0,21,135,136,146,148,528,529,565],dual_variational_solv:0,dualiti:0,dummi:15,dump:[94,333],dump_timings_to_xml:110,duplic:396,dure:[6,9,12,13,20,73,464,568],dynam:[410,569],dynamicmesheditor:516,each:[0,4,6,7,8,9,10,11,13,14,18,19,20,72,140,151,152,166,169,170,171,234,236,267,295,302,325,348,364,398,405,444,445,452,453,454,463,464,465,476,477,485,490,497,502,534,541,568,591,594,619,620],eas:396,easi:[5,9,15,53,183,554],easier:166,easiest:18,easili:[0,5,9,10,11,13,14,15,16,17,20],edg:[18,393,394,445,446,449,455,513,516,518,593,595,600],edgefunct:[413,414,415,416,516],edgefunctionbool:516,edgefunctiondoubl:516,edgefunctionint:516,edgefunctionsizet:516,edit:[410,455],editor:[410,455],edu:399,effect:[8,10,140,259,396,541],effici:[0,6,10,11,13,14,20,45,50,51,87,171,189,225,410,445],eigen:[84,287,294,295],eigenfactori:373,eigenfactory_inst:373,eigenfunct:5,eigenkrylovsolv:373,eigenkrylovsolver_default_paramet:373,eigenkrylovsolver_method:373,eigenkrylovsolver_precondition:373,eigenlusolv:373,eigenlusolver_default_paramet:373,eigenlusolver_method:373,eigenmatrix:373,eigenpair:[5,349],eigenproblem:[5,349],eigensolv:[5,349],eigenvalu:[21,349],eigenvector:[5,373],either:[0,15,19,36,72,73,140,145,180,214,259,267,300,349,452,453,511,512,513,514,515,525,534,538,541,565,566,571],elaps:[86,124,127],element:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,18,20,21,31,139,140,142,150,151,154,171,172,174,175,213,214,216,219,220,233,263,398,399,445,467,474,475,497,502,541,547,552,553,554,557,558,568,571,577,578,579,581,582,583,584,585,649],elemj:399,elev:259,elif:15,elimin:[6,294],eliminate_zero:6,ellipt:[0,1,2,10,12,13,14,20],els:[9,15,20,259,499,501,568],elsewher:5,embed:[263,265,399,405],emiss:264,emploi:[140,541],empti:[50,71,72,84,175,180,189,219,234,281,294,295,297,301,315,333,348,352,358,364,396,399,430,431,444,445,452,454,458,459,460,461,462,478,481,482,483,484,485,534],enabl:[45,51,87,259,445],encapsul:[211,212,232],encod:[250,267],encoding_ascii:267,encoding_hdf5:267,end:[0,4,9,86,110,478,496,511,512,513,514,515,525],end_iter:[496,511,512,513,514,515,525],enforc:8,enhanc:349,enough:[16,17],enrich:[16,577],enrichedfunctionspac:585,ensur:[4,5,75,83,140,334,534],enter:[259,260,269],entir:[140,180,409,452,541],entiti:[16,17,18,144,151,154,197,201,204,259,395,396,399,405,410,411,430,445,452,454,455,456,457,458,459,460,461,462,476,477,478,480,481,482,483,484,486,487,488,494,496,505,511,512,514,515,516,525,534],entity_dim:[151,455],entity_index:[481,482,483,484],entity_map:395,entity_typ:405,entri:[20,84,85,154,219,280,294,295,300,301,302,315,333,348,352,364,534],envelop:430,environ:3,epoch:124,eps:[241,349],equal:[6,19,53,59,65,232,396,452,485,534],equat:[5,19,21,140,200,202,318,536,541],equilater:399,equival:[376,396,478],eras:453,erase_arrai:453,erk1:[627,632,634,638],erk4:[637,638],erk:638,error:[0,1,11,12,13,20,92,110,135,136,146,152,191,199,203,334,335,365,366,444,454,456,485,528,529,554,565,616],error_cod:[334,335],error_control:0,errorcontrol:[135,136,191,202,530,531],errorcontrol_default_paramet:202,errorcontrolgener:551,errornorm:555,esdirk3:638,esdirk4:638,especi:12,essenti:[6,7,8,9,15,18,200,255,444],estim:[0,135,136,146,528,529,565],estimate_error:146,eta_t:146,etc:[151,175,235,396,489,553,578],euclidean:[411,462,489],euler:4,eulerian:211,eval:[2,4,8,12,20,139,214,216,220,224,227,568],eval_cel:[8,214,220,568],eval_deriv:139,evalu:[2,8,18,20,139,146,150,152,214,216,220,227,228,229,230,232,318,457,458,459,460,461,534,554,568,571,591,594],evaluate_basi:[139,150],evaluate_basis_al:150,evaluate_basis_deriv:[139,150],evaluate_basis_derivatives_al:150,evaluate_dof:[139,150],evaluate_go:152,evalut:554,even:[75,80,259,260,269,325,536],event:110,eventu:142,everi:[4,259,534],exact:171,exactli:4,examin:[5,7,8,10],exampl:[4,5,6,7,8,11,12,13,16,17,18,20,31,33,41,47,73,84,140,142,171,213,219,224,235,250,259,353,398,399,411,443,445,455,457,458,459,460,461,467,474,475,489,490,497,500,502,513,519,534,536,541,553,554,556,558,565,566,568,571,578,581,582,583,584,587,588,589,590,591,592,593,595,596,616],except:[96,445],excess:9,exchang:[45,51,87],exclude_overlapped_boundari:173,exclus:[53,61,198,210],exhaust:111,exist:[9,10,14,94,151,250,252,254,255,259,267,445,453,454,463,476,477,481,482,483,484],exit:[5,14,15],exp:[0,7,8,10,12,13,14,18,20,568],expand:[142,554],expans:[216,219,220,233,571],expansion_coeffici:219,expected_num_global_cel:255,expected_num_global_point:255,experiment:[142,499,501],expicit:648,explain:[91,92,565],explicit:[18,280,628,629,630,631,633],expliciteul:638,explicitli:[15,75,76,86,191,250,445],explicitmidpoint:638,expos:249,expr:[34,619],express:[0,1,2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,26,31,34,36,38,41,211,212,213,215,220,225,226,231,232,236,239,259,270,365,445,486,488,552,553,554,557,558,586,591,594,619,620,649],expression_to_code_frag:35,expressionmetaclass:569,ext_modul:33,extend_cut_cell_integr:172,extens:[33,35],exterior:[18,137,151,180,395,423],exterior_facet:[185,186],exterior_facet_domain:[137,151,166,167,169],extern:[12,166,169,395],extra:[12,50,349],extract:[5,7,8,10,16,17,18,34,150,151,152,154,175,216,219,232,458,459,460,461,571,578,619,620],extract_bc:152,extract_mesh_data:444,extract_sub_dofmap:154,extract_sub_el:150,extract_sub_spac:[219,578],extract_tested_express:620,extrapol:[0,146,149,202,216],extrapolation_extrapol:202,f_e:236,face:[445,455,513,516],facefunct:[419,420,421,422,516],facefunctionbool:516,facefunctiondoubl:516,facefunctionint:516,facefunctionsizet:516,facet:[2,8,16,17,18,19,137,140,146,151,154,166,169,170,173,180,214,215,236,395,399,405,424,445,446,449,453,485,494,513,516,534,541,568,578,591,592,593,595],facet_area:[399,405],facet_index:424,facet_norm:485,facet_orient:453,facet_typ:405,facetarea:[239,597],facetcel:516,facetfunct:[18,426,427,428,429,516,534],facetfunctionbool:516,facetfunctiondoubl:516,facetfunctionint:516,facetfunctionsizet:516,facetnorm:[2,18,597],facilit:218,fact:18,factor:[9,171,291,329,467,474,475,619,621],factori:[283,301,318,405,406,430,431],factoris:171,fail:[14,15,92],failur:[3,92],fals:[6,9,11,12,13,19,20,31,71,72,111,140,173,191,216,259,260,267,269,294,295,358,393,394,395,423,453,454,481,482,483,484,534,536,541,571,578,616],famili:[0,4,11,13,20,578,582,583,584],familiar:[5,15,18],fanci:31,fashion:[15,536],fast:50,faster:[4,140,166,541],featur:[6,91],feec:[578,584],fem:[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,249,528,529,530,531,533,534,535,536,538,540,541,544,546,547,548,550,553,554,556,558,559,560,561,562,563,565,568,599,636,639,640,644],fem_solv:202,fenic:[11,21,151],ffc:[6,16,40,151,537,539,545],ffc_option:6,field:[4,6,8,9,445,462,554,578,584],figur:[151,485],file:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,43,92,94,151,189,216,251,252,254,255,259,267,268,444,458,459,460,461,480,481,482,483,484,568],file_bool:19,file_create_parent_path:268,file_doubl:19,file_exist:268,file_mod:255,filenam:[94,216,250,251,252,253,255,259,267,334,335,445,457,458,459,460,461,480,481,482,483,484,571],filename_dofdata:216,filetyp:253,fill:[50,255,352,396,399,534],filter:[75,78],finalis:[75,79,80],finalize_tensor:[138,534,536],find:[0,1,2,4,5,6,7,8,10,11,12,13,14,15,16,17,18,20,50,53,61,135,136,163,177,353,528,529,559,562,607,608],find_all_subdomain:609,find_keys_on_one_subdomain:609,find_new_cell_kei:609,find_paramet:72,find_parameter_set:72,find_subdomain:609,fine:263,finest:[216,219,463],finish:[197,201,204,410,455],finit:[0,1,2,4,5,6,7,8,10,11,12,13,14,15,17,18,20,31,139,142,150,151,154,172,174,175,214,216,219,220,233,398,399,445,497,502,547,552,553,557,558,568,571,577,578,581,582,583,584,585,649],finite_el:150,finiteel:[4,7,8,10,15,16,17,31,40,139,202,219,578,582],first:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,40,75,83,140,213,227,229,235,267,349,396,398,430,444,445,452,455,480,481,482,483,484,490,538,541,554,568,571,622,628,630,631,642,645],fit:[211,212],fix:[11,352,452,457,458,459,460,461],fixm:[19,181,184,302,485],flag:[4,29,44,45,46,47,48,50,51,52,53,54,55,71,72,73,74,75,84,85,86,87,88,128,129,130,131,132,135,136,137,138,139,140,142,144,145,146,148,150,151,152,154,155,156,157,158,159,160,161,162,163,164,166,171,172,173,174,175,176,177,178,180,181,183,184,185,188,189,205,206,207,208,209,211,213,214,215,216,217,218,219,220,221,222,223,224,225,227,231,232,233,234,235,236,244,245,246,247,248,250,253,254,255,256,257,258,259,263,264,267,271,272,273,274,275,280,281,282,283,285,287,291,294,295,296,297,298,299,300,301,302,306,307,309,311,312,313,315,318,320,321,322,323,325,329,332,333,334,336,339,341,344,347,348,349,351,352,353,358,364,365,388,389,390,391,392,393,395,396,397,398,399,401,402,403,404,405,409,410,411,413,414,415,416,417,419,420,421,422,423,424,426,427,428,429,430,432,433,435,436,437,438,439,440,441,442,443,444,445,446,452,453,454,455,456,458,459,460,461,462,463,464,466,467,476,478,479,481,482,483,484,485,486,489,490,491,493,494,495,496,497,498,499,500,501,502,503,504,505,507,508,509,510,511,512,513,514,515,520,521,522,523,524,525,560,563],flat:405,flatten:[213,399,485],flip:[15,16,17],flow:[7,8,9],flush:255,flux:[7,8],focu:19,focus:[3,6],follow:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,23,33,72,146,234,259,349,444,445,453,485,513,534,565,568,616],foo:[72,263,526],foobar:263,forc:[6,33],form:[0,1,2,5,6,7,8,9,10,11,12,13,14,16,17,20,39,40,135,136,137,145,146,152,163,172,175,177,180,185,186,187,188,191,194,195,202,214,220,232,287,291,318,320,321,325,329,528,529,530,531,533,534,535,536,537,538,539,543,546,547,551,554,559,562,565,568,569,570,572,574,578,584,636,644],form_a:166,form_compil:[2,4,6,40,534],form_compiler_paramet:[6,40,533,534,535,536,544,558,559,562,565],form_degre:[578,584],format:[2,6,9,11,13,15,16,17,20,91,92,189,250,255,267,333,445],formmanipul:[546,547,548,550,551],formul:[0,2,15,16,21,146],formula:[0,10,11,13,14,18,20],fortin:578,fortun:5,forwardeul:638,found:[250,396,456,538],four:[16,17,19],fourth:[2,4,12,19,455],fraction:[199,203],framework:[15,16,17],free:[9,166,312],freedom:[8,140,144,174,219,541,578],freeli:9,from:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,33,34,40,45,51,72,87,92,135,136,137,140,146,148,149,150,151,154,166,171,172,174,175,180,188,195,197,204,213,216,219,225,234,249,255,259,267,294,295,306,312,315,318,325,329,334,341,349,351,364,395,396,405,406,407,408,411,433,434,444,445,456,458,459,460,461,464,465,478,480,481,482,483,484,485,486,487,489,495,505,518,530,533,538,540,541,544,547,554,568,569,571,578,583,584,600,601],full:[7,8,10,16,17,18,36,234,352,395],func0:217,func1:217,func:217,function_spac:[140,151,175,216,234,544,568,570],function_space_0:175,function_space_1:175,functionassign:239,functionaxpi:239,functionspac:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,140,151,173,198,210,216,218,234,237,239,541,553,558,568,570,571,577,579,580,581,582,583,584,586,649],functionspacebas:585,functionspacefromcpp:585,further:[0,10,11,13,14,16,17,20,92,554],furthermor:[2,235],futur:534,g_l:18,g_r:18,galerkin:[0,2,11,171,578],gateaux:547,gather:[53,60,140,295,302,348,364],gather_on_zero:302,gdim:[255,396,399,410,455,498],gen_hermitian:349,gen_non_hermitian:349,gener:[0,3,4,5,6,8,10,11,12,13,14,18,20,33,36,41,43,92,135,136,137,151,154,180,211,212,217,243,299,313,339,349,352,399,405,433,434,481,482,483,484,485,499,501,513,528,529,537,539,565,566,568,578,614,624,642,643,647],generate_error_control:532,generate_error_control_form:532,generateswigcod:43,generic_function_memb:[34,36],genericadaptivevariationalsolv:[135,136,202],genericadaptivevariationalsolver_default_paramet:202,genericboundingboxtre:[397,516],genericboundingboxtree_cr:516,genericdofmap:[144,174,202,219,339,568],genericfil:[250,268],genericfunct:[140,151,173,191,211,212,214,216,219,225,239,541,568],genericlinearalgebrafactori:[283,285,318,323,373],genericlinearoper:[300,312,332,373],genericlinearsolv:[287,296,307,313,318,325,373],genericlusolv:[291,309,329,373],genericmatrix:[140,173,294,298,315,333,372,373],generictensor:[137,172,300,302,351,373],genericvector:[140,173,189,216,219,233,295,315,318,341,344,348,364,373,571],genericvtkplott:259,genet:[336,338],geometr:[9,140,214,216,232,255,339,396,410,444,455,485,494,541,566,568],geometri:[3,8,9,18,197,201,204,211,212,255,444,445,462,498],geometric_dimens:[128,150,205,216,244,271,388,467,474,475,494,520,568],geometry_path:255,geq:353,get:[3,11,15,16,17,19,72,84,88,97,140,151,154,254,264,280,281,287,291,295,300,302,325,329,348,349,351,364,395,396,399,445,454,456,462,463,467,468,471,478,480,481,482,483,484,554,568,578],get_allow_extrapol:216,get_ambient_intens:264,get_background_color:264,get_block:[280,281],get_boundary_valu:140,get_cell_data:399,get_cell_topolog:399,get_color_map:264,get_coordin:202,get_coordinate_dof:399,get_diagon:300,get_diffuse_color:264,get_eigenpair:[5,349],get_eigenvalu:349,get_emissive_color:264,get_entity_index:462,get_iteration_numb:349,get_loc:[295,302,348,364],get_log_level:110,get_mark:454,get_matrix:353,get_norm_typ:325,get_number_converg:349,get_oper:[287,291,329],get_options_prefix:[325,329,333,341,348,349],get_rang:[71,72],get_represent:264,get_scalar_valu:351,get_shini:264,get_specular_color:264,get_tensor_typ:373,get_transpar:264,get_valu:[84,481,482,483,484],get_vector:353,get_vertex_coordin:399,get_viewpoint_button:264,get_viewport_s:264,get_x3d_stat:264,getrow:300,ghost:[2,220,295,302,348,358,364,456,478,511,512,513,514,515,525],ghost_indic:[295,302,348,364],ghost_mod:[2,464,465],ghost_offset:478,ghosts_ghost:358,ghosts_unghost:358,gibb:[491,492],git:98,git_commit_hash:110,github:263,give:[3,14,19,20,254,349,452,565],given:[0,1,3,4,6,8,9,10,11,12,13,14,15,16,17,18,19,20,31,50,53,59,65,72,73,88,116,125,135,136,137,139,146,148,150,151,152,154,164,171,172,175,178,180,183,185,186,187,189,197,203,214,215,216,219,220,224,231,232,233,235,250,255,267,280,281,294,295,298,300,301,302,306,312,315,318,332,333,341,347,348,349,364,366,371,372,386,395,396,398,399,400,405,410,411,412,418,423,424,425,430,443,444,445,446,448,449,450,452,453,454,455,456,458,459,460,461,462,478,480,481,482,483,484,485,489,490,494,495,496,497,498,500,502,505,506,511,512,513,514,515,525,528,529,534,535,536,538,540,544,546,548,550,553,554,556,558,560,563,565,566,567,568,571,578,587,588,589,590,591,592,593,594,595,596,616],global:[24,48,53,61,66,67,86,154,171,174,219,234,294,300,301,302,306,333,348,352,358,395,399,423,444,445,452,455,456,457,458,459,460,461,478,480,481,482,483,484,495,534,538,578],global_dimens:[154,174],global_index:[455,456],global_indic:478,global_norm:445,global_offset:53,global_s:478,global_vertex_indic:399,globalis:341,globalparamet:[25,110],globalparameters_default_paramet:110,glyph:[31,259],gmre:565,gmres_restart:72,goal:[0,135,136,146,152,528,529,530,531,565],goalfunct:[135,136],goe:[0,1,10,11,13,14,15,16,18,20,86],going:[19,639,640],good:399,grad:[0,1,2,4,5,6,7,9,10,11,12,13,14,15,16,17,18,20,534],gradient:[6,8,11,14,18,142,143,321],gram:365,graph:[393,394,433,434,491,492,516],graphbuild:516,graphbuilder_local_graph:516,greater:616,greatest:[399,405,445],green:6,grl1:648,grl2:648,group:[53,69,255,568],guess:[9,11,325,344],gurante:14,h10:556,h5_id:255,h_avg:2,half:20,hand:[2,6,8,9,10,14,15,18,140,145,183,347],handl:[8,53,72,114,140,144,174,534,541,543,558,569,576],hardcopy_prefix:31,harmon:445,harmonic_smooth:445,has:[0,1,3,4,5,6,14,15,16,17,45,51,71,72,75,79,80,86,87,91,118,151,177,197,219,234,255,259,260,269,322,334,349,396,444,445,456,464,467,474,475,476,477,485,496,511,512,513,514,515,525,534,547,565,616,619],has_cel:219,has_child:[155,156,157,158,159,160,161,162,221,222,223,256,257,258,435,436,437,438,439,440,441,442],has_cholmod:110,has_dataset:255,has_el:219,has_hdf5:110,has_index:50,has_jacobian:177,has_kei:72,has_krylov_solver_method:[15,373],has_krylov_solver_precondition:[9,15,373],has_linear_algebra_backend:[5,14,15],has_lower_bound:177,has_lu_solver_method:373,has_mpi:110,has_openmp:110,has_par:[155,156,157,158,159,160,161,162,221,222,223,256,257,258,435,436,437,438,439,440,441,442],has_paramet:72,has_parameter_set:72,has_parmeti:110,has_petsc:[1,110],has_scotch:110,has_slepc:[5,110],has_typ:373,has_umfpack:110,has_upper_bound:177,has_vtk:110,has_zlib:110,hash:[98,150,445,452,462,478],have:[0,1,5,10,11,12,13,14,15,16,17,18,19,20,21,94,140,151,177,189,300,333,396,534,541,568,578,600,601],have_global_indic:478,have_shared_ent:478,hcurl0:556,hcurl:556,hdf5:[100,254,255,267],hdf5_file_id:254,hdf5attribut:268,hdf5file:268,hdiv0:556,hdiv:556,header:[33,568],heavi:569,height:259,help:[34,259],helper:192,helptext:259,henc:[0,5,6,8,11,13,14,20,171,197,198],her:[347,578],here:[0,1,4,5,6,7,8,9,10,11,12,13,16,17,18,20,146,166,235,445,568,578,649],hermit:578,hermitian:349,hessian:321,hex:33,hexahedron:405,hide:[31,259],hide_abov:259,hide_below:259,hierarchi:[216,219,298,463,519],hierarchicaldirichletbc:[140,202],hierarchicalerrorcontrol:[146,202],hierarchicalform:[151,202],hierarchicalfunct:[202,216,239,268,516],hierarchicalfunctionspac:[202,219,239,268,516],hierarchicallinearvariationalproblem:[163,202],hierarchicalmesh:[202,239,268,445,516],hierarchicalmeshfunctionbool:[458,516],hierarchicalmeshfunctiondoubl:[459,516],hierarchicalmeshfunctionint:[460,516],hierarchicalmeshfunctionsizet:[461,516],hierarchicalmeshfunctionuint:516,hierarchicalnonlinearvariationalproblem:[177,202],high:554,higher:[0,19,148,211,212,485,534,547,548,554],highest:547,highli:142,hilliard:21,histogram:[467,469,470,472,473],hmax:445,hmin:445,hold:[4,6,9,31,445,534],homogen:[140,146],hood:[9,15,21],hookean:6,horizont:[3,502],hover:259,how:[0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,33,151,513,565,568],howev:[9,10,12,13,15,18,20,151,534,546,554,568],html5:[263,265],html:[263,265],http:[263,267,294,295,399],human_form:[636,644],hyperelast:21,hypr:15,hypre_amg:565,ident:[6,300,399,534],ident_loc:300,ident_zero:[300,534],identifi:[18,72,88,140,150,173,453,478,494,541],idiom:[75,83],iff:[146,396,399,445,534],ifilenam:605,ifpack2precondition:373,ifpack2preconditioner_default_paramet:373,ifpack2preconditioner_precondition:373,ignor:[9,197,259],illustr:[0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,513,568],ilu:565,imaginari:349,immedi:[13,20],impact:616,implement:[33,36,41,53,57,118,124,139,140,148,164,172,178,211,212,220,263,287,291,294,295,302,325,329,333,341,344,347,348,351,352,396,405,430,476,534,541,560,563,568,624,647],impli:578,implicit:[15,176,622,625,630,631],impliciteul:638,importhandl:599,impos:[2,9,14],improv:[9,445,476,477],in_nullspac:373,in_valu:[53,60],inact:485,incid:[424,452,456,478,511,512,513,514,515,525],includ:[21,33,36,140,154,171,181,184,250,263,298,341,358,541,555,556,565,568,578],inclus:[238,443,568],incomplet:9,incompress:[15,21],incorpor:18,increas:[89,348,518],increase_ord:549,increment:[4,6,188,351],indefinit:15,indent:[9,89,95],independ:[298,445],index:[8,16,17,19,20,22,50,53,61,62,128,139,140,151,154,173,175,198,205,210,216,219,232,244,271,300,302,306,388,395,396,399,411,417,423,424,454,455,456,458,459,460,461,462,478,480,481,482,483,484,485,486,487,505,513,520,538,541,547,568],index_map:[154,174,352,358],index_own:53,indexmap:[358,373],indexset:110,indic:[0,2,3,4,18,21,50,111,137,140,144,146,154,198,199,203,210,214,235,294,295,300,301,302,306,333,348,351,352,364,396,399,454,455,466,467,474,475,478,485,502,541,565,616],individu:452,ineffici:16,inequ:[341,353],infin:556,inflow:[9,15,16,17,19],info:[14,15,45,51,84,87,110,536,565,568],info_stream:110,info_underlin:110,inform:[1,8,16,17,18,19,43,45,51,72,84,87,88,96,140,174,267,280,281,312,349,352,452,456,462,478,489,541,558,568,571],ingredi:[0,11,12,13,20],inherit:[259,312,318,568,569],init:[110,185,186,295,301,302,306,341,344,348,352,358,364,445,452,454,456,458,459,460,461,462,478,481,482,483,484],init_cel:455,init_cell_orient:445,init_cells_glob:455,init_ent:[455,462],init_ghost:478,init_global_indic:478,init_global_tensor:138,init_layout:[312,332],init_mpi:[75,77],init_parent_edge_indic:602,init_petsc:[75,78],init_vector:[300,322],init_vertic:455,init_vertices_glob:455,initi:[0,4,5,6,10,11,12,13,15,16,17,18,20,41,72,75,78,83,114,151,219,295,300,301,302,322,344,348,352,358,364,423,445,452,454,456,458,459,460,461,462,463,478,531,568,571,603],initialcondit:4,initialis:[7,8,75,77,80,81,82,219,302,334,344,358,455,462,478,481,482,483,484],inlet:1,inlin:267,inner:[0,2,9,10,11,13,14,15,16,17,18,20,183,281,302,534],input:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,339,534,538],input_kei:259,input_mesh:255,inradiu:[399,405,445,467,474,475],inscrib:[399,445],insert:[8,50,300,352,454,481,482,483,484],insert_full_rows_loc:352,insert_glob:352,insert_loc:352,insid:[0,2,11,12,13,18,19,20,140,188,396,494,540,541,568],inside_funct:540,instal:21,instanc:[5,10,12,14,16,17,18,19,41,75,83,135,136,150,283,284,285,286,311,312,315,323,324,364,534,536,547,569],instanti:[4,569,571],instead:[0,8,11,12,13,15,20,45,51,87,96,259,298,444,534,536,569,571,578,584],intact:[94,115,125,126,140,541],intarrai:110,integ:[16,17,18,19,29,88,259,336,338,349,454,571],integr:[2,7,8,10,18,166,168,169,170,534,554,648],intend:[150,216,219,348,571],intens:[5,264],intention:[294,295,333,348],inter:395,interact:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,31,259,260,263,268],interest:[0,16,17],interfac:[4,33,139,140,154,214,216,220,227,259,294,295,298,300,301,302,307,312,333,341,347,348,351,405,410,445,455,485,491,494,534,541,568,569],interior:[2,18,19,137,140,151,180,211,349,395,453,534,541],interior_facet:[185,186],interior_facet_domain:[137,151,166,167,170],intermedi:217,intern:[96,123,127,140,166,170,216,298,348,445,453,467,468,471,541,571,578,619],interpol:[4,150,189,191,211,214,216,219,225,226,551,554,568],interpolate_vertex_valu:150,interpret:[21,36,41,568],intersect:[175,233,396,399,405,466,516],intersected_cel:466,interv:[3,9,181,184,405,410,443,500],intervalmesh:[500,516],intial:[4,325,444],intparamet:110,introduc:[4,7,8,10],invari:6,invers:[53,62,198],invert:349,invok:565,involv:[0,4,6,7,11,13,14,20,32,568],ipow:239,ipython:[617,618],irrespect:173,is_broadcast:53,is_compat:259,is_empti:454,is_ghost:[358,456],is_linear:[145,146],is_orthogon:365,is_orthonorm:365,is_receiv:53,is_set:71,is_shar:456,is_symmetr:300,is_view:154,issu:[16,91,263],item:[72,254],iter:[6,9,11,14,15,20,72,73,178,259,287,318,325,341,344,349,424,445,496,511,512,513,514,515,525,563],iterdata:72,iteritem:72,iterkei:72,itervalu:72,its:[6,14,18,72,234,320,321,486,487,568,578],itself:[216,399,571],jacobian:[4,6,11,177,318,320,341,562,565],jacobian_form:177,jacobian_index:176,jacobian_indic:[636,644],jit:[20,33,38,537,539,544,568,569],jonathan:399,jrs:399,jump:2,just:[6,7,8,16,17,33,40,211,212,478,499,501,554],keep:[280,294,300,301,315,333,445],keep_diagon:[138,534,536],kei:[44,46,52,71,72,74,254,259,262,454,607],kept:[5,9,294,295,534],key_press:259,keyboard:4,keyword:6,kind:[511,512,513,514,515,525,569,578],kinemat:[6,9],known:[4,15,17,18,73,98,255,410,481,482,483,484],krylov:[14,15,287,297,307,325,333,347,349,353,355,368,374,380,565],krylov_method:15,krylov_solv:[9,299,353],krylov_solver_method:[297,373],krylov_solver_precondition:[297,373],krylovsolv:[14,15,373,649],krylovsolver_default_paramet:373,ksp:[325,329,353],ksp_type:344,kutta:[630,631],kwarg:[4,8,31,33,36,40,41,71,72,75,128,129,130,131,132,152,154,205,206,207,208,209,220,244,245,246,247,248,271,272,273,274,275,285,296,297,298,299,300,301,302,311,322,323,388,389,390,391,392,397,405,430,445,494,520,521,522,523,524,541,565,568,571,578],l_r_dt:146,l_r_t:146,l_star:146,la_index:[122,210,376],la_index_dtyp:373,la_solv:373,label:[16,17,18,88,140,218,259,496,541,568],lagrang:[0,2,4,5,6,7,9,10,11,13,15,16,17,20,142,143,197,201,204,211,212,225,239,553,558,568,578,581,582],lagrangeinterpol:239,lagrangeinterpolator_interpol:239,lagrangian:[4,211],lambda:[5,6,349],lame:6,lanczo:349,lapack:349,larg:[259,554,616],larger:[444,534],largest:[5,349],larsen:[642,643,645,646,648],last:[0,4,16,17,636,644],last_stag:[636,644],later:[2,4,11,12,13,15,18,20,75,80,219,534,546],latex:84,latter:[18,263],layer:[173,532,564],layout:[154,219,297,300,301,322,358],lb_func:177,lead:[2,151],leaf:[152,396],leaf_nod:[0,155,156,157,160,162,216,219,437,438,439,440,441],least:[136,529,568],leav:[94,115,125,126],left:[3,6,12,15,18,19,20,41,145,372,399,490,502],legendr:239,legendre_d2dx:239,legendre_ddx:239,legendre_ev:239,len:6,length:[9,215,352,396,399,405,411,453,485,489,591,593,595],less:[0,11,15,18,20,152,166,528,529],let:[1,5,7,8,18,263],letter:430,level:[0,19,33,75,77,89,95,97,116,120,235,259,463],lhs:[9,18,145],librai:[150,571],librari:[3,5,43,216,348,578],lie:14,light:264,like:[11,20,92,140,142,214,489,511,512,513,514,515,525,541,568,582],limit:[47,619],line:[4,6,72,75,78,111,114,341,443],linear:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,16,17,18,20,135,137,140,145,146,150,151,163,164,173,175,180,191,200,217,287,291,294,295,296,297,298,299,301,307,309,311,312,313,315,318,325,329,347,352,353,358,364,365,368,369,370,374,375,377,378,379,380,381,382,383,384,385,399,518,528,533,534,538,559,560,561,565,571,578,649],linear_algebra_backend:[14,312,373],linear_form:163,linear_solv:[0,4,318,565],linear_solver_method:373,linearalgebraobject:[298,301,373],linearis:[4,624,647],linearoper:[298,373],linearsolv:[299,373],linearsolver_default_paramet:373,linearvariationalproblem:[0,135,202,528,530,531,564,649],linearvariationalsolv:[202,564,565,649],linearvariationalsolver_default_paramet:202,linf:556,link:445,linux:29,list:[6,9,12,33,36,72,115,126,144,146,151,152,154,163,200,218,236,250,254,267,287,289,290,291,293,297,325,327,328,329,331,339,340,341,343,344,346,353,355,356,357,374,375,379,380,381,382,383,384,385,396,444,445,462,466,485,489,533,536,558,565,566,577,581],list_attribut:254,list_krylov_solver_method:[373,565],list_krylov_solver_precondition:[373,565],list_linear_algebra_backend:373,list_linear_solver_method:[373,565],list_lu_solver_method:[373,565],list_tim:[86,110],literatur:151,live:[0,1,11,12,13,20,302,364],lmbda:[4,6],load:[5,9,15,16,17,534],local:[0,53,59,65,140,154,166,167,171,174,176,194,198,219,220,295,300,301,302,306,322,348,351,352,358,364,395,396,399,405,410,424,433,434,444,445,446,452,455,456,462,464,465,466,476,477,478,480,481,482,483,484,486,487,519,538,541,561,600,601,615],local_dimens:154,local_ent:[154,481,482,483,484],local_facet:[8,128,166,169,170,205,244,271,388,520,568],local_graph:[433,434],local_index:455,local_rang:[53,62,65,301,302,306,322,352,358],local_s:[302,478],local_to_glob:306,local_to_global_index:154,local_to_global_map:[295,302,348,364],local_to_global_unown:[154,306],localassembl:202,localassembler_assembl:202,localassembler_assemble_cel:202,localassembler_assemble_exterior_facet:202,localassembler_assemble_interior_facet:202,localmeshdata:516,localsolv:[166,202,539,564],locat:[92,140,462,541],log:[9,19,86,92,97,110,119,120],logg:146,logger:86,logic:[568,569],longer:4,look:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,565],loop:[4,9,152],low:33,lower:[148,177,216,259,341,344],lower_bound:177,lowercas:92,lowest:[142,143],lshape:9,lu_solv:299,lu_solver_method:[297,373],lusolv:[373,649],lusolver_default_paramet:373,machin:[0,11,12,13,18,20],made:[2,16,17,18],magic:[568,569],magnitud:[4,5,183,349],mai:[0,1,3,4,5,9,10,12,14,16,17,18,19,72,73,75,76,78,86,92,137,140,150,151,171,180,214,220,234,259,267,318,349,396,445,452,453,457,458,459,460,461,478,480,481,482,483,484,485,494,534,536,538,541,547,554,559,562,565,566,568,569,577,581,582,616],main:[18,599,609],mainli:485,maintain:15,make:[2,3,4,9,12,14,19,33,140,259,260,269,445,485,518,569],manag:75,mani:[9,511,512,513,514,515,525],manifold:[493,587],manipul:[5,11,12,13,15,20],manner:15,manual:9,map:[12,18,31,140,142,144,151,154,174,185,198,210,218,219,259,264,306,393,394,395,405,444,453,478,480,481,482,483,484,485,486,487,488,491,492,494,495,538,547,569,578,600,601,604],map_tol:494,map_toler:494,mapsize_al:306,mapsize_glob:306,mapsize_own:306,mapsize_unown:306,mardal:578,marini:[8,578],mark:[0,6,16,17,18,21,140,144,199,202,454,457,458,459,460,461,486,488,494,495,534,541,568,616],mark_cel:494,mark_facet:494,marker:[16,17,19,140,173,191,192,199,203,454,457,458,459,460,461,463,481,482,483,484,494,519,534,541,616],marker_valu:[481,482,483,484],marking_fract:[152,153],marking_strategi:[152,153],mass:445,master:[486,487,488],masters_slav:486,mat:[294,322,333],mat_mumps_icntl_14:[1,336],match:[12,26,140,151,201,204,211,212,216,225,226,396,445,495,496,541,546],materi:[6,18,568],math:[25,27,151,353,568],mathemat:[0,10,11,13,14,20,630,631],matplotlib:[467,470,473],matrcreat:333,matric:[9,140,142,171,298,300,322,349,352,568],matrix:[4,5,14,15,20,36,140,151,154,171,173,188,214,219,280,282,287,291,294,295,297,298,299,300,307,312,322,325,329,332,333,339,349,353,373,534,536,538,565,568,649],matsetfromopt:333,max:[53,66,281,302,396,456],max_cell_dimens:154,max_dim:454,max_dimens:[152,153],max_element_dof:154,max_iter:[152,153],max_valu:71,maxcount:47,maxfacetedgelength:597,maxim:[197,201,204,445],maximum:[29,47,154,281,302,325,349,398,443,445,454,467,471,474,478,571,593],maximum_iter:349,mayavi:9,mayb:565,mckee:[393,394],mean:[0,10,18,20,45,51,87,140,151,396,480,481,482,483,484,541],measur:[0,2,18,399,445,534],mechan:[183,311],media:[6,7,8],member:[4,36,41,445],membership:[44,45,46,47,48,50,51,52,53,54,55,71,72,73,74,75,84,85,86,87,88,128,129,130,131,132,135,136,137,138,139,140,142,144,145,146,148,150,151,152,154,155,156,157,158,159,160,161,162,163,164,166,171,172,173,174,175,176,177,178,180,181,183,184,185,188,189,205,206,207,208,209,211,213,214,215,216,217,218,219,220,221,222,223,224,225,227,231,232,233,234,235,236,244,245,246,247,248,250,253,254,255,256,257,258,259,263,264,267,271,272,273,274,275,280,281,282,283,285,287,291,294,295,296,297,298,299,300,301,302,306,307,309,311,312,313,315,318,320,321,322,323,325,329,332,333,334,336,339,341,344,347,348,349,351,352,353,358,364,365,388,389,390,391,392,393,395,396,397,398,399,401,402,403,404,405,409,410,411,413,414,415,416,417,419,420,421,422,423,424,426,427,428,429,430,432,433,435,436,437,438,439,440,441,442,443,444,445,446,452,453,454,455,456,458,459,460,461,462,463,464,466,467,476,478,479,481,482,483,484,485,486,489,490,491,493,494,495,496,497,498,499,500,501,502,503,504,505,507,508,509,510,511,512,513,514,515,520,521,522,523,524,525,560,563],memori:[1,4,25,29,117,154],memory_usag:28,mere:444,mesh0:[211,212,600,601],mesh1:[211,212,600,601],mesh2svg:617,mesh:[0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,31,140,144,148,151,152,154,173,175,180,185,186,189,191,192,197,201,204,211,212,214,215,216,219,220,225,226,231,232,233,249,255,259,263,265,266,267,270,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,534,540,541,553,554,556,558,565,568,578,579,581,582,583,584,585,587,588,589,590,591,592,593,594,595,596,599,600,601,603,604,605,606,607,608,610,611,612,616,618,649],mesh_0:485,mesh_1:485,mesh_2:485,mesh_a:430,mesh_b:430,mesh_copi:445,mesh_displac:232,mesh_fil:20,mesh_funct:[191,480,481,482,483,484],mesh_id:456,mesh_identifi:[128,205,244,271,388,520,568],mesh_tim:189,mesh_valu:255,meshcolor:516,meshcoloring_cell_color:516,meshcoloring_color:516,meshcoloring_color_cel:516,meshcoloring_compute_color:516,meshcoloring_type_to_dim:516,meshconnect:516,meshcoordin:[239,597],meshdata:[445,516],meshdisplac:[211,212,239],meshdomain:[445,458,459,460,461,516],mesheditor:[410,516],meshent:[399,411,417,423,505,511,512,513,514,515,516,525],meshentityiter:[496,513],meshentityiteratorbas:[511,512,514,515,525],meshfunct:[16,17,18,19,20,31,137,140,146,151,173,180,199,203,218,255,267,400,401,402,403,404,412,413,414,415,416,418,419,420,421,422,425,426,427,428,429,446,447,458,459,460,461,478,480,481,482,483,484,486,488,494,496,506,507,508,509,510,516,519,534,541,568,600,601,616,649],meshfunctionbool:[401,413,419,426,507,516],meshfunctiondoubl:[402,414,420,427,508,516],meshfunctionint:[403,415,421,428,509,516],meshfunctionsizet:[404,416,422,429,510,516],meshgeometri:[201,204,445,455,516],meshhierarchi:[516,519],meshpartit:516,meshpartitioning_build_distributed_mesh:516,meshpointintersect:[516,517],meshqual:516,meshquality_dihedral_angl:516,meshquality_dihedral_angles_histogram_data:516,meshquality_dihedral_angles_matplotlib_histogram:516,meshquality_dihedral_angles_min_max:516,meshquality_radius_ratio:516,meshquality_radius_ratio_histogram_data:516,meshquality_radius_ratio_matplotlib_histogram:516,meshquality_radius_ratio_min_max:516,meshrenumb:516,meshrenumbering_renumber_by_color:516,meshtopolog:[445,516],meshtransform:516,meshvaluecollecion:[458,459,460,461],meshvaluecollect:[255,458,459,460,461,481,482,483,484,494,495,516],meshvaluecollectionbool:516,meshvaluecollectiondoubl:516,meshvaluecollectionint:516,meshvaluecollectionsizet:516,mess:[7,8,151],messag:[9,19,47,90,91,92,96,112,113,116,334,335],meta:[255,569],method:[2,4,5,6,7,8,11,14,15,18,140,166,168,169,170,173,177,211,214,218,254,259,287,289,291,293,294,295,297,307,309,313,325,327,329,331,341,343,344,346,347,353,356,368,370,374,379,380,383,384,385,541,565,568,569,630,631],microsecond:86,middl:19,midpoint:[20,140,456,494,518,541],might:[140,554],millisecond:86,min:[53,67,281,302],min_valu:71,minfacetedgelength:597,mini:21,minim:[0,6],minimis:[6,344],minimum:[6,281,302,398,443,445,467,471,474,595],minr:15,minu:19,minut:5,miscellan:399,miss:[481,482,483,484],misspel:6,mix:[2,10,15,16,17,18,21,150,198,210,218,237,547,553,571,573,575,578,581,582],mixedel:547,mixedfunctionspac:585,mixtur:4,mode:[6,31,151,259,260,269,270],model:[1,4,6],modifi:[10,12,13,20],modifiers_alt:259,modifiers_control:259,modifiers_shift:259,modul:[0,1,2,3,4,6,7,8,9,10,11,12,13,14,16,17,19,20,33,554,599],module_nam:33,modulo:154,modulu:6,momentum:9,monitor:[117,325],monitor_converg:72,monitor_memory_usag:110,mor:578,more:[3,4,5,6,8,12,13,15,18,20,31,36,96,137,171,175,180,233,396,410,466,485,511,512,513,514,515,525,536,558,568],moreov:15,morlei:578,most:[5,6,12,13,14,114,151,352,649],mostli:217,move:[3,9,18,140,211,212,541],mpi:[3,4,33,75,77,79,80,81,101,110,189,250,311,312,318,322,325,329,332,333,341,348,358,398,443,445,462,490,497,500,502,538,568],mpi_:[53,61],mpi_avg:[53,94,110,115],mpi_barri:110,mpi_comm:[33,36,41,53,56,110,189,282,306,311,312,322,325,329,332,333,341,352,358,444,445,568],mpi_comm_self:295,mpi_comm_world:[3,4,33,94,115,315,318,333,348,349,364],mpi_compute_local_rang:110,mpi_fin:75,mpi_gath:110,mpi_global_offset:110,mpi_group:33,mpi_index_own:110,mpi_initi:75,mpi_is_broadcast:110,mpi_is_receiv:110,mpi_local_rang:110,mpi_max:[94,110],mpi_min:[94,110],mpi_mpi_avg:110,mpi_op:[53,56],mpi_rank:110,mpi_siz:110,mpi_sum:[53,61,110],mpi_world_comm:33,mpiinfo:110,msg:[47,71,89,96,112,113,116,134],mshr:3,mtw:578,mu0:4,mu_:4,mu_mid:4,much:[12,13,19,20,171],mueluprecondition:373,muelupreconditioner_default_paramet:373,mult:[280,298,312,332],multi:151,multigrid:[9,142,333],multimesh:[31,172,173,174,175,185,187,195,233,234,235,516,535,582],multimeshassembl:202,multimeshdirichletbc:202,multimeshdofmap:[202,234],multimeshform:202,multimeshfunct:239,multimeshfunctionspac:[173,175,233,235,239,585],multimeshsubspac:239,multiphys:495,multipl:[21,281,300,302,536,581],multipli:[2,7,8,10,219,485],multistag:[599,619,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,639,640,642,643,644,645,646,647],multistageschem:[202,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,637,639,640,647,648],multistagesolv:[621,639,640],mump:1,must:[0,1,2,3,4,9,11,13,14,15,16,17,18,19,20,21,45,51,87,94,145,152,154,183,214,218,219,237,263,300,302,334,336,349,352,364,372,423,445,455,489,534,546,568,571,582],mutabl:445,mvc:267,my_paramet:72,myexpression0:568,myexpression1:568,myfunc:568,myplot:31,myvectorvalu:571,n1curl:578,n2curl:578,name:[5,6,7,8,31,33,36,41,72,88,91,92,125,151,189,216,249,250,251,252,253,254,255,259,287,325,328,445,453,480,481,482,483,484,495,513,566,568,571,578,600,601,636,644],namespac:[33,249,568],natur:[7,8,10],navier:[15,21],ncell:568,ndarrai:538,ndofs_per_cel:568,necessari:[10,12,75,76,140,148,151,255],necessarili:536,nedelec:[142,143,578],need:[0,2,4,5,6,7,8,10,11,12,13,14,16,17,18,20,33,41,45,47,51,87,114,151,166,214,219,294,295,302,312,347,424,454,478,480,481,482,483,484,534,568,569,571],neg:[7,8,188,255],neighbor:445,neighbour:[154,171],neo:6,nest:[72,566],nested_paramet:72,neumann:[0,6,7,11,13,14,18,20,21],new_boundari:[211,212],newton:[4,6,11,177,178,188,318,320,341,563],newton_solv:11,newtonsolv:[4,373],newtonsolver_default_paramet:373,next:[0,1,2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,259,496,511,512,513,514,515,525],nicolson:4,nls_type:341,nnz:300,nodal:[142,143,224],node:[11,12,152,154,197,201,204],non:[4,6,7,8,9,14,15,16,17,45,51,87,140,216,225,226,233,281,294,295,297,300,311,315,349,352,358,364,455,478],non_hermitian:349,none:[34,36,41,72,150,259,349,366,533,534,535,536,544,546,547,554,556,558,559,561,562,566,568,570,572,574,578,579,582,583,584,616,622,625,628,629,630,631,633,636,642,643,644,645,646],nonlinear:[4,6,21,136,140,145,173,177,178,191,200,318,320,321,341,344,529,562,563,565],nonlinear_funct:[318,341],nonlinear_poisson:11,nonlinear_problem:[318,341],nonlinearproblem:[4,318,321,341,373],nonlinearvariationalproblem:[136,202,529,530,531,564,649],nonlinearvariationalsolv:[202,564,565,649],nonlinearvariationalsolver_default_paramet:202,nonloc:[154,174],nonzero:[9,325,352],nonzero_guess:325,nonzero_initial_guess:9,norm:[4,14,16,17,259,281,282,300,302,325,489,551,554],norm_typ:[554,556],norm_type_default_norm:325,norm_type_natur:325,norm_type_non:325,norm_type_precondit:325,norm_type_unprecondit:325,normal:[0,2,4,8,10,11,13,14,18,20,140,214,373,395,399,405,417,423,445,467,474,475,485,538,568,587,592],noslip:[1,9,15,16,17,19],not_working_in_parallel:110,notat:[146,151,578,584],note:[0,4,5,6,9,10,11,12,13,14,16,18,20,29,45,51,72,75,78,87,92,96,140,142,151,152,211,212,214,234,240,263,349,396,444,445,453,454,478,485,534,541,568,582],notebook:[617,618],noth:9,notic:12,now:[0,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,534],null_spac:14,null_vec:14,nullptr:349,nullspac:[219,333,365,372],num_assigning_funct:218,num_bin:[467,469,472],num_cel:[445,455,568],num_coeffici:151,num_col:322,num_connect:452,num_edg:445,num_element_dof:[154,568],num_ent:[405,445,452,456],num_entity_coordin:462,num_entity_dof:154,num_fac:445,num_facet:445,num_facet_dof:154,num_global_cel:[410,455],num_global_ent:456,num_global_vertic:[410,455],num_interv:[467,470,473],num_iter:445,num_jacobian_comput:181,num_local_cel:455,num_local_nonzero:352,num_local_vertic:455,num_mark:454,num_nonzero:352,num_nonzeros_diagon:352,num_nonzeros_off_diagon:352,num_part:[174,175,234,485],num_pass:[491,492],num_point:462,num_receiving_funct:218,num_row:[300,301,302,322,351],num_simplic:399,num_sub_el:150,num_sub_spac:578,num_vertic:[399,405,445,455,462],number:[0,3,4,6,7,8,10,11,12,13,16,17,19,20,47,53,69,71,73,91,140,150,151,154,173,174,175,178,198,210,218,224,233,234,237,242,243,267,281,287,300,301,318,322,325,341,344,349,352,365,396,398,399,405,410,443,444,445,452,454,455,456,457,458,459,460,461,462,463,467,469,472,478,480,481,482,483,484,485,490,494,497,500,502,534,541,547,554,563,570,571,578,584,600,601],numer:[18,565,630,631],numeric_limit:396,numerical_limit:456,numpi:[33,45,51,87,140,150,151,189,198,213,214,216,219,267,300,302,376,396,399,445,453,455,458,459,460,461,476,477,485,494,538,541,566,578],object:[0,4,6,8,14,16,31,36,45,47,50,51,53,54,55,71,72,73,75,85,86,87,88,111,128,129,130,131,132,135,136,138,140,142,145,146,148,150,155,156,157,158,159,160,161,162,166,171,173,174,175,183,184,185,189,191,205,206,207,208,209,211,213,214,216,217,218,219,221,222,223,225,227,232,233,244,245,246,247,248,250,253,254,256,257,258,259,262,263,264,271,272,273,274,275,280,281,282,297,306,311,320,321,325,333,334,336,339,341,344,348,349,352,365,388,389,390,391,392,393,395,396,400,405,410,412,418,425,430,432,433,435,436,437,438,439,440,441,442,445,446,452,454,455,456,457,458,459,460,461,462,463,464,466,467,476,478,479,480,486,489,491,494,496,506,511,512,513,514,515,520,521,522,523,524,525,530,531,541,543,546,568,584],obstacl:18,obtain:[0,7,8,9,10,11,148],occur:[318,352,534,581],off:[0,9,11,12,13,20,119,220,264,352,554],off_process_own:[154,174,306],offset:[53,61,198,210,234,478],ofilenam:605,often:[0,5,9,11,12,13,20],old:[189,219,393,394,491,492,578],oldest:9,omit:[3,11,547],on_boundari:[2,6,9,11,12,15,18,19,41,140,173,494,540,541],onc:[295,302],one:[0,1,4,5,6,7,8,9,19,20,33,36,45,51,53,60,87,111,140,175,181,184,199,203,218,224,233,235,237,259,300,349,396,424,445,446,448,449,450,463,467,474,475,485,486,487,534,536,541,547,554,578],ones:[12,17,19],onli:[3,7,8,9,10,12,14,15,19,20,29,31,47,53,57,140,150,151,198,210,211,212,214,216,259,294,295,298,302,312,347,349,396,445,453,456,457,458,459,460,461,476,477,478,480,481,482,483,484,486,487,541,568,571,578,616],onlin:399,onto:[552,557,558],opeartor:349,open:[9,410,455],openmp:102,openmpassembl:202,oper:[0,1,2,4,5,7,8,10,11,12,13,14,15,16,17,18,20,53,56,72,142,143,154,213,217,219,232,281,287,291,294,297,298,299,300,302,312,315,325,329,333,339,365,372,489,538,546,547],oppos:3,opposit:[2,399,546],opt:[511,512,513,514,515,525],optim:[2,4,6,20,50,554,565],optimis:[321,344],optimisation_problem:344,optimisationproblem:[344,373],option:[2,3,4,6,16,17,19,20,72,92,94,111,115,125,126,140,150,151,173,189,191,214,218,220,250,255,259,267,325,329,333,336,337,338,341,348,349,372,395,457,480,502,511,512,513,514,515,519,525,533,536,541,554,556,558,559,562,565,566,568,571,578,583,584,616],option_str:72,oral:353,order:[0,2,4,5,6,7,8,10,11,12,13,14,15,16,17,18,20,21,139,142,143,148,150,151,173,176,183,211,212,227,228,229,230,393,394,395,398,399,405,410,445,455,485,491,492,518,536,546,554,622,624,625,628,629,630,631,633,636,642,643,644,645,646,647],org:[267,294,295],organ:649,orient:[0,135,136,146,152,395,399,405,445,453,528,529,565],origin:[5,33,148,151,234,395,424,489,518,519,568,597,636,644],original_coefficient_posit:151,orthogon:[0,14,148,365],orthonorm:365,oscil:9,ostream:250,other:[4,5,6,8,9,11,18,19,20,45,51,72,73,87,140,142,151,152,352,396,411,445,485,486,488,546,554,555,565,578],other_paramet:72,otherwis:[6,15,16,17,29,71,114,216,259,294,295,453,454,568],our:[0,1,3,7,8,10,11,12,13,14,16,17,19,20],out:[86,112,121,151,267,409,430,445,485,536],out_valu:[53,60],outcom:151,outfil:250,outfilenam:612,outflow:[9,19],outlet:1,outlin:534,output:[4,9,11,12,13,20,94,121,263,267,456,489],outsid:[11,12,13,20],outstream:250,outward:[0,2,4,8,10,11,13,20,395,445],over:[3,7,8,9,16,17,18,19,20,72,86,137,140,146,151,172,180,218,259,395,398,424,445,453,462,463,478,494,496,497,502,511,512,513,514,515,519,525,534,541,543,578,585,600,601,616],overflow:240,overlap:[173,485],overload:[8,44,45,46,51,52,53,60,65,71,73,74,75,77,78,84,86,87,88,89,135,136,140,144,145,151,152,154,171,173,175,176,177,188,189,191,193,196,200,211,212,213,214,216,217,218,219,220,224,225,226,232,233,234,235,236,237,250,254,255,259,263,265,266,267,270,280,281,287,291,294,295,296,297,299,300,301,302,307,309,311,312,313,315,318,322,325,329,333,336,338,341,344,348,349,351,352,353,358,364,393,394,395,396,398,399,405,406,410,411,417,423,430,433,434,443,444,445,446,447,452,453,454,455,456,458,459,460,461,462,463,464,465,478,481,482,483,484,485,489,490,494,495,496,497,500,502,505,511,512,513,514,515,518,519,525,541,568,570,572,573,574,575,578],overridden:[40,534],overrul:[566,571],overwrit:[18,19,481,482,483,484],overwritten:94,own:[31,53,62,154,174,198,302,339,347,478,486,487],owner:[456,486,487],ownership:[45,51,87,154,174,259,295,301,302,348,364,456],ownership_rang:[154,174],owns_index:302,p2v:581,p_in:9,p_refin:516,pair:[4,9,15,17,140,178,217,254,318,341,344,445,452,478,481,482,483,484,485,563],paper:399,parabol:4,parallel:[3,4,9,53,63,64,118,140,144,154,198,219,220,267,300,322,444,457,458,459,460,461,491],paramet:[0,2,9,11,14,24,36,40,44,46,48,49,52,71,74,75,78,88,110,111,140,141,146,147,152,153,164,165,178,179,181,182,184,189,190,259,261,264,270,287,288,291,292,299,307,308,309,310,312,313,314,318,319,325,326,329,330,336,339,341,342,344,345,349,350,353,354,534,558,559,560,562,563,565,568,624,647],parameter_typ:299,parametervalu:[44,46,52,74,110],paramt:1,paraview:9,parent:[155,156,157,160,162,216,219,437,438,439,440,441,495,600,601],parent_edge_indic:603,parent_vertex_indic:[453,495,600,601],parmeti:103,pars:[72,75,78,444],part:[2,4,5,6,7,8,10,11,12,13,16,17,18,19,20,151,173,174,175,233,234,302,349,351,445,476,477,485,534,570,572,574],part_numb:485,partial:[0,1,2,5,7,8,9,10,11,12,13,14,20,140,541],particular:[0,1,4,5,7,8,10,11,12,13,20,140,151,211,287,311,325,339,341,344,349,541,585],particularli:232,partit:[140,219,255,267,352,423,444,464],partli:578,pass:[4,6,33,45,51,87,173,181,184,218,366,534,538,559,562,565,568,571,638,648],path:[20,250,251,255],pattern:[185,186,187,302,352,358,452,534],pbc:12,pc_type:344,pde:[537,640],pdf:[259,399],penalti:2,per:[6,198,199,203,210,352,462],perform:[4,7,8,9,10,16,17,140,166,168,169,170,218,259,445,541],period:[21,144,486,488,494],periodicboundari:12,periodicboundarycomput:516,periodicboundarycomputation_compute_periodic_pair:516,periodicboundarycomputation_masters_slav:516,permit:[4,216,336],perserv:536,perturb:[624,636,644,647],petsc4pi:[322,325,329,341,344,348],petsc:[1,5,14,15,33,75,78,82,84,104,114,322,325,329,333,334,335,336,337,338,339,341,344,348,349,353],petsc_error:334,petsc_exp:33,petsc_funct:[334,335],petscbasematrix:[332,333,373],petscfactori:373,petscfactory_inst:373,petsckrylovsolv:[14,322,339,373],petsckrylovsolver_default_paramet:373,petsckrylovsolver_method:373,petsckrylovsolver_precondition:373,petsclinearoper:373,petsclusolv:373,petsclusolver_default_paramet:373,petsclusolver_method:373,petscmatrix:[5,373,534],petscobject:[322,325,329,339,341,344,347,348,349,353,373],petscobject_petsc_error:373,petscopt:[1,373],petscoptions_clear:373,petscoptions_set:373,petscprecondition:[325,347,373],petscpreconditioner_precondition:373,petscsnessolv:373,petscsnessolver_default_paramet:373,petscsnessolver_method:373,petsctaosolv:373,petsctaosolver_default_paramet:373,petsctaosolver_method:373,petscuserprecondition:373,petscvec:33,petscvector:[33,344,373],pfile:9,pfile_pvd:[15,16,17],phase:4,phrase:8,physic:[0,596],pick:[15,409],piec:[7,8,349],piecewis:[0,1,5,6,9,11,13,17,20,554],pixel:259,place:[6,7,8,444,453,547],plai:15,plot:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,25,259,260,262,268,269,467,470,473],plot_mesh:[152,153],plotfil:31,plotter:[259,262],plugin:3,png:259,point:[0,1,3,6,8,11,12,13,19,20,53,58,139,150,183,214,216,220,224,227,228,229,230,255,259,267,320,395,396,398,399,405,410,423,430,443,444,445,455,456,462,466,485,490,494,505,511,512,513,514,515,516,517,518,525,540],point_coordin:462,pointer:[45,51,87,140,151,171,175,177,180,234,312,333,348,454],pointintegr:639,pointintegralsolv:[202,638,641,648],pointintegralsolver_default_paramet:202,pointload:[140,541],pointsourc:202,pointwis:[140,541],poisson:[1,2,5,6,15,21],polici:[53,63,64],polynomi:[0,1,4,5,6,7,8,11,13,20,224,227,228,229,230,455,462,498,518,548,554,568,584],pool:[491,492],popul:18,porou:[7,8],portion:[6,53,59,65,306,444],pos:[511,512,513,514,515,525],pos_gen_non_hermitian:349,pose:10,posit:[15,16,17,50,151,197,201,204,211,212,349,481,482,483,484,511,512,513,514,515,525],possibl:[4,6,15,19,31,33,45,51,86,87,139,140,148,175,216,225,226,233,267,349,358,445,485,541,556,565],post:[171,558],potenti:[4,6,534],pow:[0,7,8,10,13,14,18,20],power:[240,349,568],practic:20,pre:[191,538],prec:9,precis:[0,11,12,13,18,20,86],precomput:445,precompute_basis_const:6,precompute_ip_const:6,precondition:[9,15,219,287,290,297,299,307,313,325,328,333,339,340,353,357,369,375,381,565],preconditioner_typ:558,predefin:18,prefer:92,prefix:[259,325,329,333,336,341,348,349],preprocess:[537,539],prescrib:[1,2,6,7,8,16,17,18,534],presenc:4,present:[4,152,189,255,312],preserv:[188,533,536],press:[259,260,269],pressur:[9,15,16,17,235],pretti:[45,51,72,84,87,88,174,280,281,312,352,452,456,462,478,489],prevent:1,previou:[4,6,18,463,485],previous:[0,11,12,13,20],primal:[0,135,136,146,148,152,528,529,530,531],primari:352,primary_dim:[352,358],primit:92,print:[3,5,9,16,17,18,19,33,45,47,51,72,84,86,87,88,92,96,111,112,113,115,116,134,174,219,280,281,312,334,335,352,430,452,456,462,478,489,513,556],print_dofmap:219,print_funct:[3,5,9,16,17,18],printf:92,prior:[220,351],priori:410,prism:[3,398],probabl:5,problem:[15,32,135,136,140,142,146,148,152,163,164,171,173,177,178,183,191,200,267,318,320,321,341,344,349,353,444,528,529,530,531,554,559,560,561,562,563,565,649],problem_typ:349,proce:[10,20],procedur:[0,11,21],process:[4,9,12,13,20,29,53,59,60,62,65,68,69,117,140,144,154,171,174,219,220,267,295,300,302,306,348,352,364,365,395,396,430,445,455,456,462,463,464,465,467,474,478,480,481,482,483,484,486,487,511,512,513,514,515,525,538,541,558,616],processor:[33,444],produc:[3,19,263,395],product:[9,15,16,17,183,220,280,281,298,300,302,312,322,332,411,489],program:[4,9,19,22,117,151],progress:110,project:[9,16,18,171,551],promis:280,propag:36,properti:[0,18,568],propos:9,provid:[0,3,4,10,11,13,14,16,17,18,20,32,35,37,40,42,45,50,51,53,73,84,87,137,138,142,154,166,180,183,185,188,211,220,255,294,295,299,311,313,315,318,333,336,348,349,353,364,405,409,410,445,467,491,495,511,512,513,514,515,525,532,533,534,537,539,543,546,547,552,555,557,564,568,583,584,614,615,617],psi:6,ptr:[135,136,311,315,364],pugixml:263,puh:485,punctuat:92,pure:[14,21],purpos:[18,45,51,87],put:[12,445],pvd:[1,2,4,6,9,11,12,13,15,16,17,19,20,250],pydolfin:[35,570,572,573,574,575],python:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,32,33,43,45,51,87,151,166,214,216,232,264,318,351,455,485,532,537,538,539,564,568,569,576,614,641],qmr:15,quadrant:9,quadrat:[2,6,9,17,352,518],quadratur:[4,485,554,578],quadrature_ord:485,quadrature_rule_cut_cel:485,quadrature_rule_interfac:485,quadrature_rule_overlap:485,quadrilater:405,qualiti:[399,467,470,472,473],quantifi:467,quantiti:[0,6,18,351],quasi:188,queri:568,quicker:649,r_dt:146,r_t:146,r_vec:349,radii:[445,467,474],radiu:[140,399,467,474,475,541],radius_ratio:[399,405,467],radius_ratio_histogram_data:467,radius_ratio_matplotlib_histogram:467,radius_ratio_min_max:467,rais:[3,485],rand:239,random:[4,242,243],rang:[14,18,47,53,59,61,65,71,72,73,154,174,219,238,259,295,301,302,322,348,352,358,364,467,474,475,478,496],range_max:259,range_min:259,range_str:71,rank:[4,14,36,53,68,150,151,175,214,220,232,301,352,358,534,538,568],rather:[15,16,17,234,547],ratio:[6,399,467,472,474,475],raviart:[7,578],raw:250,reach:[4,496,511,512,513,514,515,525],read:[0,1,2,4,7,8,10,11,12,13,14,15,16,17,18,19,20,92,189,250,255,267,480,481,482,483,484],read_new:267,readabl:9,readi:[1,5,7,8,15,19],readili:558,readm:92,real:[5,10,321,349,351,578],realli:[259,260,269,456],reason:[92,140,541,582],rebal:463,rebuild:445,receiv:[53,64,218,237],receive_mesh_data:444,receiving_func:[218,237],receiving_process:[53,60],receiving_spac:218,recent:6,recogn:[53,56,453],recommend:5,recomput:259,rectangl:[3,18,490],rectanglemesh:[3,502,516],rectangular:[3,398],recurs:72,redefin:10,redistribut:[444,464,519,616],reduc:[4,154],reduct:[53,56,61,94,115],refer:[0,3,4,6,7,8,9,45,51,87,152,153,255,294,295,348,534],refin:[0,191,192,457,458,459,460,461,463,516,565,613],refined_mark:192,refined_mesh:[518,519],reflect:[140,151],regener:[2,9],region:[16,17,18,341],regular:[349,478,511,512,513,514,515,525],reimplement:[214,302,537],rel:[0,1,5,11,12,13,14,20,140,146,219,318,325,395,396,399,405,423,445,480,481,482,483,484,541],relat:[445,452,478,513],relative_residu:318,relative_toler:[4,11,72],releas:91,relev:[7,8,616],reli:[5,139,177,511,512,513,514,515,525,537],remain:[7,8,9,10,15,140,541],remaind:[6,18],remedi:[140,541],rememb:9,remov:[9,14,19,72,91,302,351],renam:[72,88,537],render:[31,259,617,618],renumb:[445,476,477],renumber_by_color:[445,476],reorder:[144,444,491,492],reordered_argu:546,repartit:[444,464],repeat:[259,295,302],repeatedli:[234,485],rephras:4,replac:[8,302,485],report:118,repres:[0,4,11,12,13,16,17,18,20,85,139,145,163,175,177,213,214,215,216,217,219,231,233,234,235,250,306,351,424,453,456,466,485,489,559,562,566,568,571,591,594],represen:554,represent:[4,33,45,51,72,84,87,88,146,174,232,254,264,280,281,294,300,302,312,322,325,329,341,344,348,349,352,445,452,456,462,478,489,554,570,571],representation_surfac:264,representation_surface_with_edg:264,representation_wirefram:264,request:320,requir:[1,2,4,5,6,8,10,12,14,75,77,142,154,219,255,339,349,358,455,531,566,568],required_thread_level:[75,77],rescal:[9,259,479],reserv:6,reset:[71,94,115,125,126,171,348,534],reset_newton_solv:181,reset_stage_solut:181,resid:[218,237,571],residi:325,residu:[0,4,11,135,136,146,148,177,318,325,373,528,529,565],residual_form:177,residual_represent:146,resiz:[3,294,295,352],respect:[0,1,2,4,6,14,17,18,365,399,405,424,513,624,647],respet:1,respons:[75,81,82,224,445],responsible_mpi:75,responsible_petsc:75,rest:18,restrict:[2,171,220,445,476,477,578,583,584],result:[4,5,7,8,9,10,14,15,16,17,171,197,225,226,466,547,569],resum:86,retriev:[72,189,336],reus:[151,189,325],revers:[393,394],rgb:264,rhs:[9,18,145,188,217,571,636,644],rhs_form:[622,624,625,628,629,630,631,633,636,642,643,644,645,646,647],rhs_int:145,richard:399,right:[2,3,5,6,8,9,10,12,14,15,18,19,20,41,140,145,151,183,347,372,395,399,490,502,534],rigid:219,rk4:638,rksolver:[202,638,641],rl1:648,rl2:648,rmax:445,rmin:445,robust:18,robustli:[480,481,482,483,484],rogn:146,root:9,root_nod:[0,155,156,157,160,162,216,219,437,438,439,440,441],rotat:[3,9,219,445,479,489],roughli:2,round:[0,11,12,13,20,554],rout:19,routin:33,row:[84,85,140,214,282,294,295,300,301,302,315,322,333,339,348,351,352,364],rule:485,run:[0,3,4,10,11,13,14,19,20,21,144,220,312,538,565],rung:[630,631],runtim:[43,569],runtimeerror:3,rush:[642,643,645,646,648],rushlarsenschem:[621,642,643,644,645,646],safe:[45,51,87],safeguard:[511,512,513,514,515,525],safisfi:10,sai:[0,11,12,13,20],same:[6,7,8,12,15,18,19,148,151,189,218,237,259,267,396,399,445,458,459,460,461,485,547,548,554,568,571,581],sampl:[189,534],satisfi:[0,1,6,7,8,10,12,13,15,18,20,135,136,528,529],save:[1,2,4,6,9,11,12,13,15,16,17,19,20,259,267,446,448,449],save_data:[152,153],scalar:[4,6,9,36,41,183,193,213,214,217,236,259,267,373,489,534,538,566,568,584,619,620],scalarbar:[31,259],scale:[6,31,259],scan:[53,61,568],scene:[19,568],scheme:[176,181,184,457,458,459,460,461,478,622,625,628,629,630,631,633,639,640,642,643,645,646,648],schmidt:365,schur:[280,349],schur_approxim:280,scipi:294,scope:86,scotch:[105,516],scotch_compute_gp:516,screen:[2,4,6,31],script:43,search:[140,325,329,333,341,348,349,541],second:[0,2,3,4,7,8,10,11,13,16,17,19,20,86,213,227,228,396,398,455,480,481,482,483,484,490,571,643,646],see:[2,6,8,259,263,399,536,554,556,558,568,569,578,582,583,584,630,631],seed:[4,239],seen:10,select:[295,302,348],self:[2,4,8,11,12,18,19,72,263,568],semi:625,semicolon:11,semidefinit:349,semilinear:11,send:0,sens:485,sent:[75,78,569],separ:[4,7,8,10,15,16,17,18,236,478,485],sequenc:4,seri:189,serial:[455,616],set:[0,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,24,31,33,50,53,58,71,72,84,120,121,140,151,154,173,177,180,204,219,224,234,254,255,259,260,264,269,280,281,287,291,294,295,299,300,301,302,306,315,322,325,329,333,336,338,339,341,348,349,353,364,395,445,452,454,456,457,458,459,460,461,462,478,481,482,483,484,485,494,513,534,541,568,616],set_al:[18,19,458,459,460,461,616],set_allow_extrapol:216,set_ambient_intens:264,set_background_color:264,set_block:[280,281],set_bound:177,set_cell_domain:151,set_child:[155,156,157,158,159,160,161,162,221,222,223,256,257,258,435,436,437,438,439,440,441,442],set_coeffici:151,set_color_map:264,set_coordin:[202,339],set_deflation_spac:349,set_diagon:300,set_diffuse_color:264,set_emissive_color:264,set_exterior_facet_domain:151,set_fieldsplit:339,set_from_opt:[325,329,333,341,348],set_global_index:478,set_global_s:452,set_interior_facet_domain:151,set_kei:259,set_ksp:353,set_loc:[295,300,301,302,348,364],set_local_to_glob:306,set_log_act:110,set_log_level:[19,110],set_mark:454,set_mesh:151,set_min_max:259,set_near_nullspac:333,set_nonzero_guess:325,set_norm_typ:325,set_nullspac:[14,333],set_oper:[14,15,287,291,299,329,349],set_options_prefix:[325,329,333,341,348,349],set_output_stream:110,set_par:[155,156,157,158,159,160,161,162,221,222,223,256,257,258,435,436,437,438,439,440,441,442],set_rang:[71,72],set_represent:264,set_reuse_precondition:325,set_shini:264,set_solv:353,set_some_coeffici:151,set_specular_color:264,set_toler:325,set_transpar:264,set_typ:339,set_valu:[140,458,459,460,461,481,482,483,484],set_vertex_domain:151,set_viewangl:259,set_viewpoint_button:264,set_x3d_stat:264,set_x:219,setrow:300,setup:347,sever:[0,151,218,237,259,396,619],shall:[0,1,10,11,12,13,14,15,16,17,20],shallow:[16,17,216],shape:[9,19,150,213,214,232,568,583],share:[2,45,51,87,135,136,140,150,151,154,171,175,177,216,219,234,311,312,315,364,445,454,456,478,486,487,571],shared_ent:478,shared_facet:2,shared_inst:[311,312,315,364],shared_nod:154,shared_ptr:[20,33,218,270,295,325,458,459,460,461,485,568],sharing_process:456,shell:493,shewchuk:399,shift:349,shini:264,should:[4,8,9,11,12,13,15,16,17,20,33,53,63,64,92,96,111,114,123,127,140,151,180,191,198,210,255,259,297,298,333,395,396,445,454,481,482,483,484,485,494,519,538,541,547,554,568,582,616],show:[5,10,33,259,513],shown:[5,259],side:[2,6,8,9,10,14,15,18,140,145,183,302,347,534,537],sigma:[7,8],sign:[15,16,17],signal:9,signatur:[133,150],significantli:568,silent:94,similar:496,similarli:445,simpl:[0,10,11,12,13,14,20,21,45,51,73,87,150,214,255,294,295,333,348,455,552,554,555,557,568,614,617],simplest:[31,140,534,541],simpli:[0,11,12,13,20,31],simplic:[18,399],simplici:455,simplifi:72,simul:0,simultan:[15,16,17,538],sin:[0,2,6,7,8,9,10,11,12,13,14,15,16,17,553,558,568],sinc:[0,4,6,8,9,10,11,13,14,16,17,19,20,114,124,140,396,478,511,512,513,514,515,525,537,554],singl:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,200,218,237,396,463,495,503,504,533,547,566,568],singleton:[75,83,285,286,323,324],singli:[630,631],singular:[21,333,365],size:[2,3,4,9,45,50,51,53,59,65,69,87,154,214,218,220,224,237,264,280,281,282,295,298,300,301,302,306,312,322,332,348,358,364,393,394,445,452,453,458,459,460,461,462,463,478,481,482,483,484,538,588],size_glob:[445,452,478],size_t:[16,17,18,19,20,92,125,140,151,191,219,267,445,453,456,457,480,481,482,483,484,485,494,534,568],size_t_:88,sizeof:122,sizeof_la_index:110,slave:[486,487,488],slepc4pi:349,slepc:[5,106,349],slepceigensolv:[5,373],slepceigensolver_default_paramet:373,slip:[9,15,16,17,19],slower:568,small:[0,11,12,13,20,349,554,564],smallest:349,smooth:[333,445],smooth_boundari:445,smoother:232,snap:[445,494],snap_boundari:445,sne:341,snippet:34,sole:18,solid:3,solut:[0,1,2,4,6,7,8,10,11,12,13,14,15,16,17,18,20,135,136,140,146,148,152,163,171,177,188,291,312,325,329,344,349,485,528,529,541,565,622,624,625,628,629,630,631,633,636,642,643,644,645,646,647],solv:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,84,152,164,171,178,200,287,291,296,299,307,309,313,318,325,329,333,341,344,347,349,353,377,528,529,551,558,559,560,561,562,563,639,640,649],solvabl:14,solve_global_rh:171,solve_loc:171,solve_local_rh:171,solve_prim:152,solve_transpos:[291,296,299,309,329],solver:[0,1,2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,142,164,177,178,181,184,188,287,289,291,293,296,297,298,299,307,309,313,318,320,325,327,329,331,333,341,343,344,346,349,353,355,356,379,383,560,561,563,564,565,624,647],solver_paramet:[11,565],solver_typ:[558,561],solvertype_choleski:171,solvertype_lu:171,some:[1,2,3,4,5,6,11,15,18,26,72,124,138,140,151,267,349,395,456,464,513,534,541,565,597,616,649],someth:[534,554],sometim:[4,5,111,140,541],somewhat:569,sorri:15,sort:5,sought:[6,10],sourc:[0,1,2,7,8,9,10,11,12,13,14,18,20,21,33,92,183],space:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,72,140,142,143,148,150,151,154,163,172,173,174,175,177,183,191,197,198,210,211,212,214,216,218,219,233,234,235,237,267,349,365,372,405,453,456,485,489,538,541,547,548,550,552,553,554,557,558,559,562,568,571,573,575,577,578,581,582,583,584,585],space_dimens:150,span:[3,14,398,490],sparrai:294,spars:[137,180,280,282,294,300,301,315,333,352,358,452],sparsematrix:294,sparsiti:[185,186,187,302,352,358,534],sparsity_dens:358,sparsity_pattern:[185,186,187,348,358],sparsity_spars:358,sparsitypattern:373,sparsitypatternbuild:202,sparsitypatternbuilder_build:202,sparsitypatternbuilder_build_multimesh_sparsity_pattern:202,spatial:[4,6,219],spatialcoordin:597,special:[18,75,76,396,433,434,569,597],specialfacetfunct:[146,239],specialfunct:[586,587,588,589,590,591,592,593,594,595,596],specif:[5,6,10,24,140,144,405,456,513,534,541,578],specifi:[0,1,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,31,137,140,151,154,173,177,180,224,235,250,347,349,409,445,446,448,450,452,453,455,496,519,534,541,556,559,562,565,568,578,582,583,584,616],spectral:349,spectral_shift:349,spectral_transform:349,spectrum:349,specular:264,sphere:[140,399,445,541],spheric:493,sphericalshellmesh:516,split:[2,4,7,8,9,10,15,16,17,53,59,65,571,578],sqr:26,squar:[0,2,3,4,7,8,9,10,11,12,13,14,16,18,19,20,399,405,423,489,502,554,578],squared_dist:[399,405,423,489],squared_norm:489,stabl:[7,8,15,17,554],stage:[176,630,631,636,644],stage_solut:[636,644],stand:[16,578],standard:[2,4,5,11,12,13,14,15,17,18,234,294,295,333,348,445,485,489,534,536,553,555,556,578],start:[15,18,19,86,117,123,151,325,485],start_vertex:608,state:264,statement:[4,536],stationari:146,statist:264,std:[20,33,92,125,140,151,152,153,191,210,218,219,250,254,264,267,396,445,453,456,458,459,460,461,480,481,482,483,484,485,494,502,568],std_out_all_process:9,step:[0,4,5,9,10,11,13,14,15,16,18,20,32,73,181,184,498,537,539],step_interv:[181,184],stiff:[5,47,534],still:[140,485,541],stl:[511,512,513,514,515,525],stockmey:[491,492],stoke:[19,21,235],stop:[0,86],storag:[50,84,294,478],store:[1,2,4,7,8,9,10,14,15,16,17,18,19,20,72,86,94,115,125,126,140,144,152,171,189,201,216,255,264,267,306,444,445,452,453,454,457,458,459,460,461,466,478,480,481,482,483,484,485,495,534],str:[33,36,45,51,71,72,73,87,88,91,92,94,125,140,151,173,174,189,203,216,250,251,252,254,263,266,280,281,312,352,430,445,452,453,455,456,457,458,459,460,461,462,478,480,481,482,483,484,489,490,502,541,566,568,571],str_latex:84,strain:6,strategi:[4,6,9,135,136,203,528,529],stream:[112,121,250],string2typ:405,string:[0,4,10,11,13,14,20,29,36,37,41,42,45,47,51,53,60,71,72,74,84,87,88,91,92,93,111,133,140,150,152,153,173,174,254,259,263,265,266,280,281,312,336,338,352,372,405,406,407,408,452,453,456,457,462,467,470,473,478,480,489,502,511,512,513,514,515,525,541,568,578,582,583,584],string_:395,stringparamet:110,strong:[16,140,146,541],structur:[50,234,280,294,300,301,315,333,352,396,445,452,568],studi:18,style:92,sub:[4,6,7,8,11,12,15,16,17,18,19,75,140,144,150,154,196,216,218,219,220,232,237,281,445,453,457,458,459,460,461,495,541,571,578],sub_compon:235,sub_domain:[16,17,19,140,173,445,486,487,488,494,495,541],sub_domains_bool:19,sub_domains_doubl:19,subclass:[2,4,8,12,33,36,41,45,51,87,151,152,211,212,297,366,367,371,540,568,569],subdomain:[1,2,6,11,12,13,16,17,20,21,26,38,41,137,140,144,173,180,409,445,454,458,459,460,461,495,516,534,540,541,578,612,649],subdomain_data:[18,534],subdomains_bool:19,subdomains_doubl:19,subdomian:6,subel:[573,575],subfunct:[216,232],subject:188,submesh:[453,516,603],subregion:18,subscript:2,subsequ:[9,11,135,136,232,444,528,529],subset:[9,72,115,126,140,151,267,454,480,481,482,483,484,495,496,541],subset_it:496,subsetiter:516,subspac:[0,7,8,15,219,235,349,547,571,578],subsystem:[75,76],subsystemsmanag:[83,110,334],subsystemsmanager_fin:110,subsystemsmanager_init_mpi:110,subsystemsmanager_init_petsc:110,subsystemsmanager_mpi_fin:110,subsystemsmanager_mpi_initi:110,subsystemsmanager_responsible_mpi:110,subsystemsmanager_responsible_petsc:110,subsystemsmanager_singleton:110,subtract:[9,554],suffer:554,suffix:[9,11,12,13,20,94,250,259],suggest:[5,15,18],suitabl:[1,2,6,10,11,12,13,14,15,18,20,188,255,267,485,530],sum:[4,53,70,218,237,295,302,348,364,554],summari:[0,1,11,12,13,20,86,94,111,115,126,152,259],superspac:219,suppli:[6,140,151,211,212,214,259,347,464,465,541,547,565],support:[3,15,75,77,144,154,259,267,270,325,344,446,453,489,547,578,582],suppos:[7,8],sure:14,surfac:[4,264],surface_with_edg:264,svg:[250,617,618],svgtool:[613,618],swig:[33,43,264,569,599,614],swigimportinfo:38,symbol:[587,589,590,592,593,595,596],symmetr:[0,9,15,16,17,20,282,300,536,583],symmetri:[15,188,280,533,536,583],synchron:[53,58],synonym:11,syntax:[0,2,4,6,10,11,13,14,20,41,263],synthes:259,system:[4,9,11,14,16,17,19,29,33,47,75,86,125,137,140,173,180,188,196,287,291,296,299,307,309,312,313,318,325,329,333,336,341,347,349,377,462,533,536,565,649],systemassembl:[202,537],tabl:[53,56,57,85,110,126,259],tableentri:110,tabul:[150,154,219],tabulate_all_dof:339,tabulate_dof_coordin:[150,219],tabulate_entity_dof:154,tabulate_facet_dof:154,tabulate_global_dof:154,tabulate_local_to_global_dof:154,tag:[16,17,18],tai:578,take:[0,1,3,4,5,7,8,11,12,13,18,19,20,45,51,87,142,143,259,336,338,339,444,569,624,647],taken:[0,15,263],tan:568,tangent:[624,647],tao:[344,353,356],tao_typ:344,taolinearboundsolv:373,taolinearboundsolver_default_paramet:373,taolinearboundsolver_krylov_solv:373,taolinearboundsolver_method:373,taolinearboundsolver_precondition:373,target:[12,349],task:[4,6,86,89,92,94,95,115,125,126],tau:[7,8],taylor:[9,15,21],tdim:[396,399,410,430,455],tear:549,techniqu:[0,341],tell:[4,6,11],temam:9,templat:455,tend:5,tensor:[4,5,6,21,137,151,166,167,171,172,180,193,194,195,213,214,280,281,297,301,302,352,358,366,367,371,534,535,536,538,554,566,568,571,583],tensor_layout:302,tensorfunctionspac:585,tensorlayout:[302,373],tent:9,term:[0,1,2,6,7,8,10,11,12,13,14,20,22,298,312,398,554,556,585],termin:[4,15],test:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,18,20,148,151,163,177,300,318,325,351,365,372,493,499,501,503,504,546,559,562,565,572,619,620],test_spac:[163,177],testfunct:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,576,649],tetrahedr:[6,398,467,468,497],tetrahedra:[5,398,497],tetrahedron:[31,405,410,503],tetrahedroncel:396,text:259,tfqmr:15,than:[0,9,11,15,16,17,19,20,36,140,152,166,171,396,528,529,534,547,568,616],thei:[4,5,16,17,18,220,554],them:[9,12,455],themselv:396,therebi:[3,148],therefor:[3,5,6,9,14,15,75,81,82,485,568],theri:7,theta:[4,6,489],thi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,29,32,33,35,37,39,40,42,43,45,48,50,51,53,72,73,75,76,83,84,85,87,92,96,114,117,135,136,137,138,139,140,142,144,145,148,150,151,154,163,164,171,172,173,174,175,177,178,180,183,185,188,189,211,212,213,214,215,216,217,218,219,220,224,225,231,232,233,234,235,250,254,255,259,263,267,287,291,294,295,296,297,298,299,300,301,302,306,307,311,312,313,315,318,320,321,322,325,329,333,334,339,341,344,347,348,349,351,352,353,358,364,365,393,395,396,398,399,405,409,410,411,423,424,433,443,444,445,446,455,456,462,464,466,467,474,475,476,477,478,481,482,483,484,485,486,487,488,489,490,491,494,497,499,500,501,502,503,504,519,528,529,532,533,534,537,538,539,541,543,545,547,552,554,555,557,558,559,560,562,563,564,568,569,570,571,572,573,574,575,576,582,585,591,594,597,614,615,617,619,624,638,641,647,648],think:18,third:[0,1,3,4,11,13,19,20,140,213,455,541],thisown:[44,45,46,47,48,50,51,52,53,54,55,71,72,73,74,75,84,85,86,87,88,128,129,130,131,132,135,136,137,138,139,140,142,144,145,146,148,150,151,152,154,155,156,157,158,159,160,161,162,163,164,166,171,172,173,174,175,176,177,178,180,181,183,184,185,188,189,205,206,207,208,209,211,213,214,215,216,217,218,219,220,221,222,223,224,225,227,231,232,233,234,235,236,244,245,246,247,248,250,253,254,255,256,257,258,259,263,264,267,271,272,273,274,275,280,281,282,283,285,287,291,294,295,296,297,298,299,300,301,302,306,307,309,311,312,313,315,318,320,321,322,323,325,329,332,333,334,336,339,341,344,347,348,349,351,352,353,358,364,365,388,389,390,391,392,393,395,396,397,398,399,401,402,403,404,405,409,410,411,413,414,415,416,417,419,420,421,422,423,424,426,427,428,429,430,432,433,435,436,437,438,439,440,441,442,443,444,445,446,452,453,454,455,456,458,459,460,461,462,463,464,466,467,476,478,479,481,482,483,484,485,486,489,490,491,493,494,495,496,497,498,499,500,501,502,503,504,505,507,508,509,510,511,512,513,514,515,520,521,522,523,524,525,560,563],thoma:[7,578],those:[11,12,13,18,20,189,478],thousand:554,thread:[75,77,151],three:[1,3,5,6,7,8,9,11,12,13,19,20,140,485,541,571],through:[0,1,7,8,10,11,13,14,15,16,18,19,20,139,259,445,480,481,482,483,484,485],throughout:20,thrown:[166,365],thu:[0,1,10,11,13,14,18,19,20,198,554,566,569],tic:110,tied:144,tile:259,tile_window:259,time:[0,9,10,11,13,14,20,25,33,40,47,71,84,86,94,110,115,123,127,181,184,188,189,259,312,399,445,533,566,568,624,636,644,647],timer:110,timeseri:202,timeseries_default_paramet:202,timestamp:[255,267],timestep:[176,267],timingclear:[94,115,125,126],timingclear_clear:[94,115,125,126],timingclear_keep:[94,115,125,126],timingtype_system:[115,126],timingtype_us:[115,126],timingtype_wal:[115,126],tite:31,titl:[0,3,9,11,18,20,31,73,259,270],to_adm:[624,636,644,647],to_dict:[72,254],to_kei:259,to_tlm:[624,636,644,647],toc:110,togeth:[0,6,19,36,72,140,218,294,295,320,464,541],toggl:264,toi:33,tol:[0,72,135,136,152,200,365,528,529,565],toler:[0,4,11,135,136,152,325,349,494,528,529,565],too:616,tool:558,top:[8,18,19,259,485,532,564],top_bottom:15,topic:649,topolog:[19,20,140,173,197,201,204,255,396,399,400,401,402,403,404,405,410,411,412,413,414,415,416,417,418,419,420,421,422,423,425,426,427,428,429,444,445,446,448,449,450,451,452,454,455,456,457,458,459,460,461,478,480,481,482,483,484,494,505,506,507,508,509,510,511,512,513,514,515,525,534,541],topological_dimens:[20,128,150,205,244,271,388,399,520,568],topology_path:255,total:[3,6,125,398,443,452,462,490,497,500,502,571],tpetra:[15,84],tpetrafactori:373,tpetrafactory_inst:373,tpetramatrix:373,tpetravector:373,traction:6,transfer:[191,259],transform:[14,349],translat:[445,479],transpar:264,transpmult:300,transpos:[280,291,329,365],tree:[92,396,430,431,445,462,485],trial:[0,1,2,4,6,7,8,9,10,11,12,13,14,20,140,151,163,177,541,546,559,562,574],trial_spac:[163,177],trialfunct:[0,1,2,4,5,6,7,8,9,10,12,13,14,15,16,17,18,20,576,649],triangl:[0,7,8,10,11,13,14,20,405,410,417,490,502,504,582],triangul:[2,399,405],triangular:[20,490,502],triangulate_intersect:[399,405],trigger:9,trilino:15,trilinosprecondition:373,trival:14,trust:341,tupl:[29,36,72,125,531,546,547,566,568,573,575,577,581],turn:[5,9,119,264,445,456,489],tuxfamili:[294,295],twice:2,two:[0,1,2,3,4,6,7,8,9,10,11,13,14,15,16,17,18,20,220,224,235,396,398,399,405,445,458,459,460,461,480,481,482,483,484,485,490,554,565],type2str:405,type:[4,5,6,16,17,18,19,20,44,46,52,71,72,74,92,115,122,126,140,151,154,218,237,250,254,255,259,270,299,307,311,325,339,349,372,376,386,395,399,405,406,407,408,410,445,446,448,449,450,451,455,457,476,477,480,513,534,541,554,556,566,568],type_binari:250,type_raw:250,type_sort:352,type_str:[71,254],type_svg:250,type_to_dim:446,type_unsort:352,type_vtk:250,type_x3d:250,type_xml:250,type_xyz:250,typemap:[33,485],typenam:455,typic:[4,15,16,17,18,32,154,219,235,255,333,365,444,578],u_h:[135,136,528,529,554],u_infti:568,u_init:4,ub_func:177,ufc:[20,133,139,144,150,151,166,167,168,169,170,214,216,395,399,405,445,545,568],ufc_cel:[8,110,166,167,168,169,170,202,216,239,268,373,516,568],ufc_dofmap:[110,144,202,239,268,373,516],ufc_el:150,ufc_finite_el:[110,202,239,268,373,516],ufc_form:[110,151,202,239,268,373,516],ufc_funct:[110,139,202,220,239,268,373,516],ufc_signatur:110,ufil:9,ufile_pvd:[15,16,17],ufl:[0,1,2,4,6,11,12,13,14,16,18,20,40,151,445,458,459,460,461,531,533,534,538,543,546,547,566,568,569,570,571,572,573,574,575,578,591,594,636,644],ufl_cel:[4,7,8,10,15,16,17,445,578],ufl_coordinate_el:445,ufl_domain:445,ufl_el:568,ufl_evalu:[568,571],ufl_function_spac:578,ufl_id:[445,458,459,460,461],ufl_stage_form:[636,644],uint:[20,568,578],uintarrai:110,umfpack:107,unanticip:[45,51,87],unchang:140,unconstrain:344,uncut:485,uncut_cel:485,underlai:[294,295],underli:[7,8,10,150,197,294,295,348],underlin:113,underscor:453,understand:538,undocu:619,uniform:[398,497,502,615],uniformli:[191,242,519,616],uniqu:[72,88,259,306,453,456],unit:[0,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,395,489,497,498,500,502,503,504,578],unitcubemesh:[3,6,15,516],unitdiscmesh:516,unithexmesh:516,unitintervalmesh:[3,516],unitquadmesh:516,unitsquar:[31,445,578,587,588,589,590,591,592,593,595,596],unitsquare_32_32:20,unitsquare_32_32_c00:20,unitsquare_32_32_c01:20,unitsquare_32_32_c11:20,unitsquaremesh:[0,2,3,4,7,8,10,11,12,13,14,18,20,516],unittetrahedronmesh:516,unittrianglemesh:516,unknown:[4,7,8,9,10,14,73,98,565,566,584],unless:[6,211,212,250],unmark:454,unnam:88,unneed:[197,201,204],unordered_map:[140,219],unown:[154,198],unrefin:[0,463],unset:[44,46,52,74],unsign:[396,457,480,485],unsupport:254,until:[4,234,485],unwrap:[311,312,315,364],updat:[9,72,73,139,140,220,259,299,568],update_ghost_valu:348,update_index:139,update_paramet:299,upon:[0,11,12,13,20,348,445],upper:[9,20,177,259,341,344],upper_bound:177,uppercas:92,usag:[29,31,33,41,72,84,86,117,150,166,294,295,333,348,534,536,553,556,558,566,577,578,581,582,583,584,587,588,589,590,591,592,593,595,596,609,616,619],use:[0,1,3,4,6,7,8,9,10,11,13,14,15,16,17,18,19,20,31,33,92,139,140,154,177,188,216,219,255,267,294,295,298,333,348,396,410,445,453,458,459,460,461,513,534,536,541,568,569,571,617,639,640],use_partition_from_fil:[255,267],used:[0,4,6,7,9,11,12,13,14,19,20,32,33,73,86,96,123,127,138,139,140,146,148,154,173,180,189,214,216,217,218,219,232,259,263,267,298,312,320,322,325,329,333,339,341,348,349,352,353,358,365,395,444,445,446,447,453,457,458,459,460,461,480,481,482,483,484,486,488,494,534,537,541,554,565,568,569,571,578,584,636,644,649],usefilepartition_no:267,usefilepartition_y:267,useful:[16,17,18,19,26,140,151,171,211,219,232,234,299,424,485,486,488,503,504,558],user:[4,8,20,23,86,125,137,140,214,259,298,312,336,341,344,347,453,455,541,546,568,569],user_paramet:568,user_sub_domain:140,uses:[2,10,20,234,393],using:[0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,33,40,45,51,87,140,151,177,181,184,198,199,219,255,263,264,267,295,300,301,302,306,318,333,339,348,351,352,364,393,394,445,491,492,494,534,537,539,541,554,568],usual:[4,8,18],utel:43,util:53,v2c:[606,608],v_0:151,v_1:151,v_h:[135,136,528,529],vaiation:20,valid:[259,263,456,536],valu:[1,2,4,6,8,9,11,12,13,16,17,18,19,20,31,36,41,44,46,48,49,52,53,57,60,66,67,70,71,72,74,84,139,140,141,145,146,147,150,152,153,154,164,165,173,178,179,181,182,189,190,191,197,213,214,216,219,220,224,232,236,254,255,259,261,264,267,281,282,287,288,291,292,295,300,301,302,307,308,309,310,312,313,314,318,319,321,325,326,329,330,336,338,341,342,344,345,348,349,350,351,353,354,364,395,445,453,454,455,458,459,460,461,462,480,481,482,483,484,489,505,534,538,541,560,563,565,566,567,568,570,572,573,574,575,583,584],value0:213,value1:213,value2:213,value_collect:[458,459,460,461],value_dimens:[150,220],value_rank:[150,220],value_s:220,value_shap:[4,8,213,214,568],value_str:71,vanish:[0,8],vari:[18,20],variabl:[4,6,7,8,9,15,16,17,41,45,51,84,87,110,111,140,146,151,152,154,164,173,176,178,181,189,219,220,224,234,255,259,262,267,270,299,311,318,322,339,349,353,358,444,445,453,458,459,460,461,481,482,483,484,485,541,560,563,568,569],variant:[11,570,572,573,574,575],variat:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,135,136,137,145,146,152,163,164,175,177,178,180,183,191,200,214,341,353,528,529,534,559,560,561,562,563,565,568,649],variationalproblem:564,variationalsolv:532,variou:[4,6,11,12,13,18,20,75,259,433,555,565],vec:[33,295,348],vecexp:33,vecsetfromopt:348,vector:[4,5,6,7,8,9,14,15,16,17,31,36,140,151,154,171,173,183,188,189,210,213,214,216,218,219,233,236,254,255,259,264,267,280,281,295,297,298,300,302,307,312,315,318,322,325,332,341,344,348,352,353,365,372,373,386,396,445,453,458,459,460,461,463,478,485,489,534,538,555,556,565,566,568,571,584,649],vector_:453,vector_tim:189,vectorel:[15,16,17],vectorfloat:254,vectorfunctionspac:[6,9,581,585],vectori:[16,197,201,204,211,212],vectorint:254,vectorspacebasi:[14,373],veloc:[9,15,16,17,235],verbos:[111,456,489,571],veri:[13,15,50,111],version:[3,18,44,45,46,51,52,53,60,65,71,73,74,75,77,78,84,86,87,88,89,91,93,135,136,140,144,145,151,154,166,171,173,175,176,177,181,184,188,189,191,193,196,200,211,212,213,214,216,217,218,219,220,224,225,226,232,233,234,235,236,237,250,254,255,259,263,265,266,267,270,280,281,287,291,294,295,296,299,300,301,302,307,309,311,312,313,315,318,322,325,329,333,336,338,341,344,348,349,351,352,353,358,364,393,394,395,396,398,399,405,406,410,411,417,423,430,433,434,443,444,445,446,447,452,453,454,455,456,458,459,460,461,462,463,464,465,478,481,482,483,484,485,489,490,491,494,495,496,497,500,502,505,511,512,513,514,515,518,519,525,541,578],version_deprec:91,vertex:[140,150,151,198,210,399,405,410,444,445,446,449,455,462,476,477,478,513,516,594,600,601],vertex_coordin:462,vertex_domain:151,vertex_to_dof_map:202,vertex_valu:216,vertexfunct:[507,508,509,510,516],vertexfunctionbool:516,vertexfunctiondoubl:516,vertexfunctionint:516,vertexfunctionsizet:516,vertic:[3,4,6,11,137,140,185,186,198,210,211,216,220,398,399,405,410,443,444,445,455,490,495,497,500,502,503,504,516,600,601,604],vessel:1,via:[9,10,227,254,264,333,336,341,344,568,582],view:[45,51,87,144,154,234,264,399,405,458,459,460,461,578],viewpoint:264,viewport:264,virtual:[4,318],viscos:9,visit:496,visual:[4,5,11,12,13,20,31,259,558],visualis:[263,267,446,447,486,488],vmtk:[140,541],vol:[587,589,590,593,595,596],volum:[6,166,168,399,405,589],vtk:[2,4,6,9,11,12,13,15,16,17,19,20,31,108,250,405],vtk_map:405,vtkplotter:268,vtkplotter_all_interact:268,vtkplotter_default_paramet:268,vtkplotter_to_kei:268,wai:[5,11,12,13,15,16,17,18,19,20,73,140,211,212,259,351,409,453,480,481,482,483,484,495,541,552,555,557,565],wait:4,wall:[1,86,124,125,127],want:[0,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,341,344,568],warn:[91,110,216,571],warn_onc:71,warp:[31,259],weak:[0,2,4,16,146],weakli:2,weight:[0,18,21,135,136,463,485,528,529,565],well:[10,86,183,344,564],were:6,wether:371,what:[0,12,18,19,33,118,198,210,399,445],when:[0,1,3,4,6,9,11,12,15,16,17,19,20,53,86,140,144,148,151,189,197,201,204,216,220,255,259,267,325,329,333,341,348,349,410,445,480,494,541,568,569,578,616],where:[0,1,2,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,140,142,151,163,171,177,181,184,188,197,201,204,216,217,219,396,424,454,478,537,539,541,559,562,565,568,571],whether:[5,18,20,50,53,63,64,111,140,145,177,178,216,238,241,302,318,341,344,372,395,396,399,405,454,456,478,485,494,541,563,583,616],which:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,33,34,36,43,45,47,51,53,62,75,87,91,92,139,140,145,148,151,152,171,173,177,188,189,214,216,218,219,232,255,294,295,312,320,321,349,395,396,399,409,445,446,448,449,450,452,458,459,460,461,463,480,481,482,483,484,485,486,488,519,533,534,537,538,541,547,554,556,558,565,566,568,569,578,582,600,601,616,638,648],who:137,whole:[19,176,569],wide:14,widget:259,width:259,window:[3,9,259,260,264],window_height:259,window_width:259,winther:578,wirefram:[31,259,264],wise:[0,11,12,13,20,171,352,539,561],wish:[0,6,137,347],within:[4,18,238,241,255,445,476,477,478],without:[2,6,9,75,78,86,151,200,566],word:[0,11,13,20,151,485],work:[0,12,19,21,29,118,198,210,211,212,445,485,499,501],workaround:[16,534],worker:[166,168,169,170],world:5,would:[2,4,7,8,18,140,485,541],wrap:[33,39,166,259,537,539,545,571,578],wrapper:[45,51,53,61,87,150,287,294,295,299,325,329,333,339,348,349,353,540,614,641],write:[0,1,11,12,13,14,16,17,18,20,151,189,250,255,267],write_fil:609,write_new:267,write_pdf:259,write_png:259,written:[2,4,11,250,578],wrong:366,www:[267,399],x3d:[263,264,265,266],x3dom:[264,268],x3dom_html:268,x3dom_str:268,x3domparamet:268,x_e:171,x_i:365,x_lleq:353,x_u:353,xd3:250,xdmf:[255,267,405],xdmffile:268,xml:[1,5,9,16,17,19,20,94,250,255,263,267,444,445,480,481,482,483,484,571],xyz:250,y_n:[624,647],yet:[118,341],yleq:353,you:[0,5,15,18,21,534,538],young:6,your:31,yourself:18,zero:[0,6,11,12,13,14,20,86,140,151,224,280,294,300,301,302,315,325,333,349,351,352,358,445,452,453,466,467,474,475,534,554],zero_column:140,zero_loc:300,zlib:109,zoom:[9,259]},titles:["1. Auto adaptive Poisson equation","2. Set boundary conditions for meshes that include boundary indicators","3. Biharmonic equation","4. Built-in meshes","5. Cahn-Hilliard equation","6. A simple eigenvalue solver","7. Hyperelasticity","8. Dual-mixed formulation for Poisson equation","9. Mixed formulation for Poisson equation","10. Incompressible Navier-Stokes equations","11. Poisson equation with pure Neumann boundary conditions","12. Nonlinear Poisson equation","13. Poisson equation with periodic boundary conditions","14. Poisson equation","15. Singular Poisson","16. Stokes equations","17. Stokes equations with Mini elements","18. Stokes equations with Taylor-Hood elements","19. Poisson equation with multiple subdomains","20. Marking subdomains of a mesh","21. Tensor-weighted Poisson","Collection of documented demos","Documentation for DOLFIN-2016.1.0 (Python)","dolfin.common.constants module","dolfin.common.globalparameters module","dolfin.common module","dolfin.common.math module","sqr","dolfin.common.memory module","memory_usage","dolfin.common.plotting module","plot","dolfin.common.time module","compile_extension_module","expression_to_code_fragments","dolfin.compilemodules.compilemodule module","compile_expressions","dolfin.compilemodules.expressions module","dolfin.compilemodules module","dolfin.compilemodules.jit module","jit","CompiledSubDomain","dolfin.compilemodules.subdomains module","dolfin.compilemodules.swigimportinfo module","BoolParameter","DoubleArray","DoubleParameter","Event","GlobalParameters","GlobalParameters_default_parameters","IndexSet","IntArray","IntParameter","MPI","MPIInfo","MPI_Comm","MPI_MPI_AVG","MPI_avg","MPI_barrier","MPI_compute_local_range","MPI_gather","MPI_global_offset","MPI_index_owner","MPI_is_broadcaster","MPI_is_receiver","MPI_local_range","MPI_max","MPI_min","MPI_rank","MPI_size","MPI_sum","ParameterValue","Parameters","Progress","StringParameter","SubSystemsManager","SubSystemsManager_finalize","SubSystemsManager_init_mpi","SubSystemsManager_init_petsc","SubSystemsManager_mpi_finalized","SubSystemsManager_mpi_initialized","SubSystemsManager_responsible_mpi","SubSystemsManager_responsible_petsc","SubSystemsManager_singleton","Table","TableEntry","Timer","UIntArray","Variable","begin","debug","deprecation","dolfin_error","dolfin_version","dump_timings_to_xml","end","error","get_log_level","git_commit_hash","has_cholmod","has_hdf5","has_mpi","has_openmp","has_parmetis","has_petsc","has_scotch","has_slepc","has_umfpack","has_vtk","has_zlib","dolfin.cpp.common module","info","info_stream","info_underline","init","list_timings","log","monitor_memory_usage","not_working_in_parallel","set_log_active","set_log_level","set_output_stream","sizeof_la_index","tic","time","timing","timings","toc","ufc_cell","ufc_dofmap","ufc_finite_element","ufc_form","ufc_function","ufc_signature","warning","AdaptiveLinearVariationalSolver","AdaptiveNonlinearVariationalSolver","Assembler","AssemblerBase","BasisFunction","DirichletBC","DirichletBC_default_parameters","DiscreteOperators","DiscreteOperators_build_gradient","DofMap","Equation","ErrorControl","ErrorControl_default_parameters","Extrapolation","Extrapolation_extrapolate","FiniteElement","Form","GenericAdaptiveVariationalSolver","GenericAdaptiveVariationalSolver_default_parameters","GenericDofMap","HierarchicalDirichletBC","HierarchicalErrorControl","HierarchicalForm","HierarchicalFunction","HierarchicalFunctionSpace","HierarchicalLinearVariationalProblem","HierarchicalMesh","HierarchicalNonlinearVariationalProblem","LinearVariationalProblem","LinearVariationalSolver","LinearVariationalSolver_default_parameters","LocalAssembler","LocalAssembler_assemble","LocalAssembler_assemble_cell","LocalAssembler_assemble_exterior_facet","LocalAssembler_assemble_interior_facet","LocalSolver","MultiMeshAssembler","MultiMeshDirichletBC","MultiMeshDofMap","MultiMeshForm","MultiStageScheme","NonlinearVariationalProblem","NonlinearVariationalSolver","NonlinearVariationalSolver_default_parameters","OpenMpAssembler","PointIntegralSolver","PointIntegralSolver_default_parameters","PointSource","RKSolver","SparsityPatternBuilder","SparsityPatternBuilder_build","SparsityPatternBuilder_build_multimesh_sparsity_pattern","SystemAssembler","TimeSeries","TimeSeries_default_parameters","adapt","adapt_markers","assemble","assemble_local","assemble_multimesh","assemble_system","create_mesh","dof_to_vertex_map","dorfler_mark","fem_solve","get_coordinates","dolfin.cpp.fem module","mark","set_coordinates","ufc_cell","ufc_dofmap","ufc_finite_element","ufc_form","ufc_function","vertex_to_dof_map","ALE","ALE_move","Constant","Expression","FacetArea","Function","FunctionAXPY","FunctionAssigner","FunctionSpace","GenericFunction","HierarchicalFunction","HierarchicalFunctionSpace","HierarchicalMesh","Lagrange","LagrangeInterpolator","LagrangeInterpolator_interpolate","Legendre","Legendre_d2dx","Legendre_ddx","Legendre_eval","MeshCoordinates","MeshDisplacement","MultiMeshFunction","MultiMeshFunctionSpace","MultiMeshSubSpace","SpecialFacetFunction","assign","between","dolfin.cpp.function module","ipow","near","rand","seed","ufc_cell","ufc_dofmap","ufc_finite_element","ufc_form","ufc_function","dolfin.cpp module","File","File_create_parent_path","File_exists","GenericFile","HDF5Attribute","HDF5File","HierarchicalFunction","HierarchicalFunctionSpace","HierarchicalMesh","VTKPlotter","VTKPlotter_all_interactive","VTKPlotter_default_parameters","VTKPlotter_to_key","X3DOM","X3DOMParameters","X3DOM_html","X3DOM_str","XDMFFile","dolfin.cpp.io module","interactive","plot","ufc_cell","ufc_dofmap","ufc_finite_element","ufc_form","ufc_function","BelosKrylovSolver","BelosKrylovSolver_default_parameters","BelosKrylovSolver_methods","BelosKrylovSolver_preconditioners","BlockMatrix","BlockVector","CoordinateMatrix","DefaultFactory","DefaultFactory_factory","EigenFactory","EigenFactory_instance","EigenKrylovSolver","EigenKrylovSolver_default_parameters","EigenKrylovSolver_methods","EigenKrylovSolver_preconditioners","EigenLUSolver","EigenLUSolver_default_parameters","EigenLUSolver_methods","EigenMatrix","EigenVector","GenericLUSolver","GenericLinearAlgebraFactory","GenericLinearOperator","GenericLinearSolver","GenericMatrix","GenericTensor","GenericVector","Ifpack2Preconditioner","Ifpack2Preconditioner_default_parameters","Ifpack2Preconditioner_preconditioners","IndexMap","KrylovSolver","KrylovSolver_default_parameters","LUSolver","LUSolver_default_parameters","LinearAlgebraObject","LinearOperator","LinearSolver","LinearSolver_default_parameters","Matrix","MueluPreconditioner","MueluPreconditioner_default_parameters","NewtonSolver","NewtonSolver_default_parameters","NonlinearProblem","OptimisationProblem","PETScBaseMatrix","PETScFactory","PETScFactory_instance","PETScKrylovSolver","PETScKrylovSolver_default_parameters","PETScKrylovSolver_methods","PETScKrylovSolver_preconditioners","PETScLUSolver","PETScLUSolver_default_parameters","PETScLUSolver_methods","PETScLinearOperator","PETScMatrix","PETScObject","PETScObject_petsc_error","PETScOptions","PETScOptions_clear","PETScOptions_set","PETScPreconditioner","PETScPreconditioner_preconditioners","PETScSNESSolver","PETScSNESSolver_default_parameters","PETScSNESSolver_methods","PETScTAOSolver","PETScTAOSolver_default_parameters","PETScTAOSolver_methods","PETScUserPreconditioner","PETScVector","SLEPcEigenSolver","SLEPcEigenSolver_default_parameters","Scalar","SparsityPattern","TAOLinearBoundSolver","TAOLinearBoundSolver_default_parameters","TAOLinearBoundSolver_krylov_solvers","TAOLinearBoundSolver_methods","TAOLinearBoundSolver_preconditioners","TensorLayout","TpetraFactory","TpetraFactory_instance","TpetraMatrix","TpetraVector","TrilinosPreconditioner","Vector","VectorSpaceBasis","as_backend_type","get_tensor_type","has_krylov_solver_method","has_krylov_solver_preconditioner","has_lu_solver_method","has_type","in_nullspace","dolfin.cpp.la module","krylov_solver_methods","krylov_solver_preconditioners","la_index_dtype","la_solve","linear_algebra_backends","linear_solver_methods","list_krylov_solver_methods","list_krylov_solver_preconditioners","list_linear_algebra_backends","list_linear_solver_methods","list_lu_solver_methods","lu_solver_methods","normalize","residual","ufc_cell","ufc_dofmap","ufc_finite_element","ufc_form","ufc_function","BoostGraphOrdering","BoostGraphOrdering_compute_cuthill_mckee","BoundaryMesh","BoundingBoxTree","BoundingBoxTree3D","BoxMesh","Cell","CellFunction","CellFunctionBool","CellFunctionDouble","CellFunctionInt","CellFunctionSizet","CellType","CellType_create","CellType_string2type","CellType_type2string","DomainBoundary","DynamicMeshEditor","Edge","EdgeFunction","EdgeFunctionBool","EdgeFunctionDouble","EdgeFunctionInt","EdgeFunctionSizet","Face","FaceFunction","FaceFunctionBool","FaceFunctionDouble","FaceFunctionInt","FaceFunctionSizet","Facet","FacetCell","FacetFunction","FacetFunctionBool","FacetFunctionDouble","FacetFunctionInt","FacetFunctionSizet","GenericBoundingBoxTree","GenericBoundingBoxTree_create","Graph","GraphBuilder","GraphBuilder_local_graph","HierarchicalFunction","HierarchicalFunctionSpace","HierarchicalMesh","HierarchicalMeshFunctionBool","HierarchicalMeshFunctionDouble","HierarchicalMeshFunctionInt","HierarchicalMeshFunctionSizet","HierarchicalMeshFunctionUInt","IntervalMesh","LocalMeshData","Mesh","MeshColoring","MeshColoring_cell_colors","MeshColoring_color","MeshColoring_color_cells","MeshColoring_compute_colors","MeshColoring_type_to_dim","MeshConnectivity","MeshData","MeshDomains","MeshEditor","MeshEntity","MeshFunction","MeshFunctionBool","MeshFunctionDouble","MeshFunctionInt","MeshFunctionSizet","MeshGeometry","MeshHierarchy","MeshPartitioning","MeshPartitioning_build_distributed_mesh","MeshPointIntersection","MeshQuality","MeshQuality_dihedral_angles","MeshQuality_dihedral_angles_histogram_data","MeshQuality_dihedral_angles_matplotlib_histogram","MeshQuality_dihedral_angles_min_max","MeshQuality_radius_ratio_histogram_data","MeshQuality_radius_ratio_matplotlib_histogram","MeshQuality_radius_ratio_min_max","MeshQuality_radius_ratios","MeshRenumbering","MeshRenumbering_renumber_by_color","MeshTopology","MeshTransformation","MeshValueCollection","MeshValueCollectionBool","MeshValueCollectionDouble","MeshValueCollectionInt","MeshValueCollectionSizet","MultiMesh","PeriodicBoundaryComputation","PeriodicBoundaryComputation_compute_periodic_pairs","PeriodicBoundaryComputation_masters_slaves","Point","RectangleMesh","SCOTCH","SCOTCH_compute_gps","SphericalShellMesh","SubDomain","SubMesh","SubsetIterator","UnitCubeMesh","UnitDiscMesh","UnitHexMesh","UnitIntervalMesh","UnitQuadMesh","UnitSquareMesh","UnitTetrahedronMesh","UnitTriangleMesh","Vertex","VertexFunction","VertexFunctionBool","VertexFunctionDouble","VertexFunctionInt","VertexFunctionSizet","cells","edges","entities","faces","facets","dolfin.cpp.mesh module","intersect","p_refine","refine","ufc_cell","ufc_dofmap","ufc_finite_element","ufc_form","ufc_function","vertices","down_cast","dolfin.deprecation module","AdaptiveLinearVariationalSolver","AdaptiveNonlinearVariationalSolver","generate_error_control","generate_error_control_forms","dolfin.fem.adaptivesolving module","SystemAssembler","assemble","assemble_multimesh","assemble_system","dolfin.fem.assembling module","assemble_local","dolfin.fem.assembling_local module","AutoSubDomain","DirichletBC","dolfin.fem.bcs module","dolfin.fem.errorcontrolgenerator module","Form","dolfin.fem.form module","adjoint","derivative","increase_order","dolfin.fem.formmanipulations module","tear","dolfin.fem module","dolfin.fem.interpolation module","interpolate","errornorm","dolfin.fem.norms module","norm","dolfin.fem.projection module","project","LinearVariationalProblem","LinearVariationalSolver","LocalSolver","NonlinearVariationalProblem","NonlinearVariationalSolver","dolfin.fem.solving module","solve","Constant","dolfin.functions.constant module","Expression","dolfin.functions.expression module","Argument","Function","TestFunction","TestFunctions","TrialFunction","TrialFunctions","dolfin.functions.function module","EnrichedFunctionSpace","FunctionSpace","FunctionSpaceBase","FunctionSpaceFromCpp","MixedFunctionSpace","MultiMeshFunctionSpace","TensorFunctionSpace","VectorFunctionSpace","dolfin.functions.functionspace module","dolfin.functions module","CellNormal","CellSize","CellVolume","Circumradius","FacetArea","FacetNormal","MaxFacetEdgeLength","MeshCoordinates","MinFacetEdgeLength","SpatialCoordinate","dolfin.functions.specialfunctions module","dolfin.importhandler module","Programmer&#8217;s reference for DOLFIN (Python)","compute_edge_map","compute_vertex_map","dolfin.mesh.ale module","init_parent_edge_indices","create_maps","find_all_subdomains","find_keys_on_one_subdomain","find_new_cell_key","find_subdomain","dolfin.mesh.boundarysubdomainfinder module","main","usage","write_file","dolfin.mesh module","dolfin.mesh.meshes module","dolfin.mesh.refinement module","refine","dolfin.mesh.svgtools module","mesh2svg","extract_tested_expressions","dolfin.multistage.factorize module","dolfin.multistage module","BDF1","BackwardEuler","ButcherMultiStageScheme","CN2","CrankNicolson","ERK","ERK1","ERK4","ESDIRK3","ESDIRK4","ExplicitEuler","ExplicitMidPoint","ForwardEuler","ImplicitEuler","MultiStageScheme","RK4","dolfin.multistage.multistagescheme module","PointIntegralSolver","RKSolver","dolfin.multistage.multistagesolvers module","GRL1","GRL2","MultiStageScheme","RL1","RL2","RushLarsenScheme","dolfin.multistage.rushlarsenschemes module","Quick Programmer&#8217;s Reference (Python)"],titleterms:{"function":[216,239,567,569,571,576,585,586,597],ALE:211,The:22,adapt:[0,191],adapt_mark:192,adaptivelinearvariationalsolv:[135,528],adaptivenonlinearvariationalsolv:[136,529],adaptivesolv:532,adjoint:546,ale:602,ale_mov:212,argument:570,as_backend_typ:366,assembl:[137,193,534,537],assemble_loc:[194,538],assemble_multimesh:[195,535],assemble_system:[196,536],assemblerbas:138,assembling_loc:539,assign:237,auto:0,autosubdomain:540,backwardeul:623,basisfunct:139,bcs:542,bdf1:622,begin:89,beloskrylovsolv:276,beloskrylovsolver_default_paramet:277,beloskrylovsolver_method:278,beloskrylovsolver_precondition:279,between:238,biharmon:2,blockmatrix:280,blockvector:281,boolparamet:44,boostgraphord:393,boostgraphordering_compute_cuthill_mcke:394,boundari:[1,10,12,15,17],boundarymesh:395,boundarysubdomainfind:609,boundingboxtre:396,boundingboxtree3d:397,boxmesh:398,built:3,butchermultistageschem:624,cahn:4,cell:[399,511],cellfunct:400,cellfunctionbool:401,cellfunctiondoubl:402,cellfunctionint:403,cellfunctionsizet:404,cellnorm:587,cellsiz:588,celltyp:405,celltype_cr:406,celltype_string2typ:407,celltype_type2str:408,cellvolum:589,circumradiu:590,cn2:625,code:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],collect:21,common:[23,24,25,26,28,30,32,110],compile_express:36,compile_extension_modul:33,compiledsubdomain:41,compilemodul:[35,37,38,39,42,43],complet:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],compute_edge_map:600,compute_vertex_map:601,condit:[1,10,12,15,17],constant:[23,213,566,567],coordinatematrix:282,cpp:[110,202,239,249,268,373,516],cranknicolson:626,create_map:604,create_mesh:197,debug:90,defaultfactori:283,defaultfactory_factori:284,definit:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20],demo:[4,6,21,22],densiti:6,deprec:[91,527],deriv:547,dirichletbc:[140,541],dirichletbc_default_paramet:141,discreteoper:142,discreteoperators_build_gradi:143,discretis:4,document:[21,22],dof_to_vertex_map:198,dofmap:144,dolfin:[22,23,24,25,26,28,30,32,35,37,38,39,42,43,110,202,239,249,268,373,516,527,532,537,539,542,543,545,549,551,552,555,557,564,567,569,576,585,586,597,598,599,602,609,613,614,615,617,620,621,638,641,648],dolfin_error:92,dolfin_vers:93,domain:[15,17],domainboundari:409,dorfler_mark:199,doublearrai:45,doubleparamet:46,down_cast:526,dual:7,dump_timings_to_xml:94,dynamicmesheditor:410,edg:[411,512],edgefunct:412,edgefunctionbool:413,edgefunctiondoubl:414,edgefunctionint:415,edgefunctionsizet:416,eigenfactori:285,eigenfactory_inst:286,eigenkrylovsolv:287,eigenkrylovsolver_default_paramet:288,eigenkrylovsolver_method:289,eigenkrylovsolver_precondition:290,eigenlusolv:291,eigenlusolver_default_paramet:292,eigenlusolver_method:293,eigenmatrix:294,eigenvalu:5,eigenvector:295,elast:6,element:[16,17],end:95,energi:6,enrichedfunctionspac:577,entiti:513,equat:[0,1,2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,145],erk1:628,erk4:629,erk:627,error:96,errorcontrol:146,errorcontrol_default_paramet:147,errorcontrolgener:543,errornorm:554,esdirk3:630,esdirk4:631,event:47,expliciteul:632,explicitmidpoint:633,express:[37,214,568,569],expression_to_code_frag:34,extract_tested_express:619,extrapol:148,extrapolation_extrapol:149,face:[417,514],facefunct:418,facefunctionbool:419,facefunctiondoubl:420,facefunctionint:421,facefunctionsizet:422,facet:[423,515],facetarea:[215,591],facetcel:424,facetfunct:425,facetfunctionbool:426,facetfunctiondoubl:427,facetfunctionint:428,facetfunctionsizet:429,facetnorm:592,factor:620,fem:[202,532,537,539,542,543,545,549,551,552,555,557,564],fem_solv:200,file:250,file_create_parent_path:251,file_exist:252,find_all_subdomain:605,find_keys_on_one_subdomain:606,find_new_cell_kei:607,find_subdomain:608,finiteel:150,form:[4,15,18,151,544,545],formmanipul:549,formul:[7,8,17],forwardeul:634,functionassign:218,functionaxpi:217,functionspac:[219,578,585],functionspacebas:579,functionspacefromcpp:580,generate_data:20,generate_error_control:530,generate_error_control_form:531,genericadaptivevariationalsolv:152,genericadaptivevariationalsolver_default_paramet:153,genericboundingboxtre:430,genericboundingboxtree_cr:431,genericdofmap:154,genericfil:253,genericfunct:220,genericlinearalgebrafactori:297,genericlinearoper:298,genericlinearsolv:299,genericlusolv:296,genericmatrix:300,generictensor:301,genericvector:302,get_coordin:201,get_log_level:97,get_tensor_typ:367,git_commit_hash:98,globalparamet:[24,48],globalparameters_default_paramet:49,graph:432,graphbuild:433,graphbuilder_local_graph:434,grl1:642,grl2:643,has_cholmod:99,has_hdf5:100,has_krylov_solver_method:368,has_krylov_solver_precondition:369,has_lu_solver_method:370,has_mpi:101,has_openmp:102,has_parmeti:103,has_petsc:104,has_scotch:105,has_slepc:106,has_typ:371,has_umfpack:107,has_vtk:108,has_zlib:109,hdf5attribut:254,hdf5file:255,hierarchicaldirichletbc:155,hierarchicalerrorcontrol:156,hierarchicalform:157,hierarchicalfunct:[158,221,256,435],hierarchicalfunctionspac:[159,222,257,436],hierarchicallinearvariationalproblem:160,hierarchicalmesh:[161,223,258,437],hierarchicalmeshfunctionbool:438,hierarchicalmeshfunctiondoubl:439,hierarchicalmeshfunctionint:440,hierarchicalmeshfunctionsizet:441,hierarchicalmeshfunctionuint:442,hierarchicalnonlinearvariationalproblem:162,hilliard:4,hood:17,hyperelast:6,ifpack2precondition:303,ifpack2preconditioner_default_paramet:304,ifpack2preconditioner_precondition:305,implement:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],impliciteul:635,importhandl:598,in_nullspac:372,includ:1,incompress:9,increase_ord:548,indexmap:306,indexset:50,indic:1,info:111,info_stream:112,info_underlin:113,init:114,init_parent_edge_indic:603,intarrai:51,interact:269,interpol:[552,553],intersect:517,intervalmesh:443,intparamet:52,ipow:240,jit:[39,40],krylov_solver_method:374,krylov_solver_precondition:375,krylovsolv:307,krylovsolver_default_paramet:308,la_index_dtyp:376,la_solv:377,lagrang:224,lagrangeinterpol:225,lagrangeinterpolator_interpol:226,legendr:227,legendre_d2dx:228,legendre_ddx:229,legendre_ev:230,linear:15,linear_algebra_backend:378,linear_solver_method:379,linearalgebraobject:311,linearoper:312,linearsolv:313,linearsolver_default_paramet:314,linearvariationalproblem:[163,559],linearvariationalsolv:[164,560],linearvariationalsolver_default_paramet:165,list_krylov_solver_method:380,list_krylov_solver_precondition:381,list_linear_algebra_backend:382,list_linear_solver_method:383,list_lu_solver_method:384,list_tim:115,localassembl:166,localassembler_assembl:167,localassembler_assemble_cel:168,localassembler_assemble_exterior_facet:169,localassembler_assemble_interior_facet:170,localmeshdata:444,localsolv:[171,561],log:116,lu_solver_method:385,lusolv:309,lusolver_default_paramet:310,main:610,mark:[19,203],math:26,matrix:315,maxfacetedgelength:593,memori:28,memory_usag:29,mesh2svg:618,mesh:[1,3,19,445,516,602,609,613,614,615,617],meshcolor:446,meshcoloring_cell_color:447,meshcoloring_color:448,meshcoloring_color_cel:449,meshcoloring_compute_color:450,meshcoloring_type_to_dim:451,meshconnect:452,meshcoordin:[231,594],meshdata:453,meshdisplac:232,meshdomain:454,mesheditor:455,meshent:456,meshfunct:457,meshfunctionbool:458,meshfunctiondoubl:459,meshfunctionint:460,meshfunctionsizet:461,meshgeometri:462,meshhierarchi:463,meshpartit:464,meshpartitioning_build_distributed_mesh:465,meshpointintersect:466,meshqual:467,meshquality_dihedral_angl:468,meshquality_dihedral_angles_histogram_data:469,meshquality_dihedral_angles_matplotlib_histogram:470,meshquality_dihedral_angles_min_max:471,meshquality_radius_ratio:475,meshquality_radius_ratio_histogram_data:472,meshquality_radius_ratio_matplotlib_histogram:473,meshquality_radius_ratio_min_max:474,meshrenumb:476,meshrenumbering_renumber_by_color:477,meshtopolog:478,meshtransform:479,meshvaluecollect:480,meshvaluecollectionbool:481,meshvaluecollectiondoubl:482,meshvaluecollectionint:483,meshvaluecollectionsizet:484,method:9,minfacetedgelength:595,mini:16,mix:[4,7,8],mixedfunctionspac:581,modul:[22,23,24,25,26,28,30,32,35,37,38,39,42,43,110,202,239,249,268,373,516,527,532,537,539,542,543,545,549,551,552,555,557,564,567,569,576,585,586,597,598,602,609,613,614,615,617,620,621,638,641,648],monitor_memory_usag:117,mpi:53,mpi_avg:57,mpi_barri:58,mpi_comm:55,mpi_compute_local_rang:59,mpi_gath:60,mpi_global_offset:61,mpi_index_own:62,mpi_is_broadcast:63,mpi_is_receiv:64,mpi_local_rang:65,mpi_max:66,mpi_min:67,mpi_mpi_avg:56,mpi_rank:68,mpi_siz:69,mpi_sum:70,mpiinfo:54,mueluprecondition:316,muelupreconditioner_default_paramet:317,multimesh:485,multimeshassembl:172,multimeshdirichletbc:173,multimeshdofmap:174,multimeshform:175,multimeshfunct:233,multimeshfunctionspac:[234,582],multimeshsubspac:235,multipl:18,multistag:[620,621,638,641,648],multistageschem:[176,636,638,644],multistagesolv:641,navier:9,neumann:10,newtonsolv:318,newtonsolver_default_paramet:319,nonlinear:11,nonlinearproblem:320,nonlinearvariationalproblem:[177,562],nonlinearvariationalsolv:[178,563],nonlinearvariationalsolver_default_paramet:179,norm:[555,556],normal:386,not_working_in_parallel:118,openmpassembl:180,optimisationproblem:321,p_refin:518,paramet:[4,6,72],parametervalu:71,period:12,periodicboundarycomput:486,periodicboundarycomputation_compute_periodic_pair:487,periodicboundarycomputation_masters_slav:488,petscbasematrix:322,petscfactori:323,petscfactory_inst:324,petsckrylovsolv:325,petsckrylovsolver_default_paramet:326,petsckrylovsolver_method:327,petsckrylovsolver_precondition:328,petsclinearoper:332,petsclusolv:329,petsclusolver_default_paramet:330,petsclusolver_method:331,petscmatrix:333,petscobject:334,petscobject_petsc_error:335,petscopt:336,petscoptions_clear:337,petscoptions_set:338,petscprecondition:339,petscpreconditioner_precondition:340,petscsnessolv:341,petscsnessolver_default_paramet:342,petscsnessolver_method:343,petsctaosolv:344,petsctaosolver_default_paramet:345,petsctaosolver_method:346,petscuserprecondition:347,petscvector:348,plot:[30,31,270],point:489,pointintegralsolv:[181,639],pointintegralsolver_default_paramet:182,pointsourc:183,poisson:[0,7,8,10,11,12,13,14,18,20],precondit:15,problem:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20],programm:[22,599,649],progress:73,project:[557,558],pure:10,python:[22,599,649],quick:649,rand:242,rectanglemesh:490,refer:[22,599,649],refin:[519,615,616],residu:387,rk4:637,rksolver:[184,640],rl1:645,rl2:646,rushlarsenschem:[647,648],scalar:351,scotch:491,scotch_compute_gp:492,seed:243,set:1,set_coordin:204,set_log_act:119,set_log_level:120,set_output_stream:121,simpl:5,singular:14,sizeof_la_index:122,slepceigensolv:349,slepceigensolver_default_paramet:350,solut:9,solv:[564,565],solver:5,sparsitypattern:352,sparsitypatternbuild:185,sparsitypatternbuilder_build:186,sparsitypatternbuilder_build_multimesh_sparsity_pattern:187,spatialcoordin:596,specialfacetfunct:236,specialfunct:597,sphericalshellmesh:493,sqr:27,stoke:[9,15,16,17],store:6,stringparamet:74,strong:[15,17],subdomain:[18,19,42,494],submesh:495,subsetiter:496,subsystemsmanag:75,subsystemsmanager_fin:76,subsystemsmanager_init_mpi:77,subsystemsmanager_init_petsc:78,subsystemsmanager_mpi_fin:79,subsystemsmanager_mpi_initi:80,subsystemsmanager_responsible_mpi:81,subsystemsmanager_responsible_petsc:82,subsystemsmanager_singleton:83,svgtool:617,swigimportinfo:43,system:15,systemassembl:[188,533],tabl:84,tableentri:85,taolinearboundsolv:353,taolinearboundsolver_default_paramet:354,taolinearboundsolver_krylov_solv:355,taolinearboundsolver_method:356,taolinearboundsolver_precondition:357,taylor:17,tear:550,tensor:20,tensorfunctionspac:583,tensorlayout:358,testfunct:[572,573],tic:123,time:[4,32,124,125,126],timer:86,timeseri:189,timeseries_default_paramet:190,toc:127,tpetrafactori:359,tpetrafactory_inst:360,tpetramatrix:361,tpetravector:362,trialfunct:[574,575],trilinosprecondition:363,ufc_cel:[128,205,244,271,388,520],ufc_dofmap:[129,206,245,272,389,521],ufc_finite_el:[130,207,246,273,390,522],ufc_form:[131,208,247,274,391,523],ufc_funct:[132,209,248,275,392,524],ufc_signatur:133,uintarrai:87,unitcubemesh:497,unitdiscmesh:498,unithexmesh:499,unitintervalmesh:500,unitquadmesh:501,unitsquaremesh:502,unittetrahedronmesh:503,unittrianglemesh:504,usag:611,variabl:88,variat:18,vector:364,vectorfunctionspac:584,vectorspacebasi:365,vertex:505,vertex_to_dof_map:210,vertexfunct:506,vertexfunctionbool:507,vertexfunctiondoubl:508,vertexfunctionint:509,vertexfunctionsizet:510,vertic:525,vtkplotter:259,vtkplotter_all_interact:260,vtkplotter_default_paramet:261,vtkplotter_to_kei:262,warn:134,weak:[15,17],weight:20,write_fil:612,x3dom:263,x3dom_html:265,x3dom_str:266,x3domparamet:264,xdmffile:267}})