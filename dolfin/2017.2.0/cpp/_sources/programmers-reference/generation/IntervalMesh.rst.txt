
.. Documentation for the header file dolfin/generation/IntervalMesh.h

.. _programmers_reference_cpp_generation_intervalmesh:

IntervalMesh.h
==============

.. note::
    
    The documentation on this page was automatically extracted from the
    DOLFIN C++ code and may need to be edited or expanded.
    

.. cpp:class:: IntervalMesh

    *Parent class(es)*
    
        * :cpp:class:`Mesh`
        
    Interval mesh of the 1D line [a,b].  Given the number of cells
    (n) in the axial direction, the total number of intervals will
    be n and the total number of vertices will be (n + 1).


    .. cpp:function:: static Mesh create(std::size_t n, std::array<double, 2> x)
    
        Factory
        
        @param    n (std::size_t)
                The number of cells.
        @param    x (std::array<double, 2>)
                The end points
        
        @code{.cpp}
        
                // Create a mesh of 25 cells in the interval [-1,1]
                auto mesh = IntervalMesh::create(25, {-1.0, 1.0});
        @endcode


    .. cpp:function:: static Mesh create(MPI_Comm comm, std::size_t n, std::array<double, 2> x)
    
        Factory
        
        @param    comm (MPI_Comm)
                MPI communicator
        @param    n (std::size_t)
                The number of cells.
        @param    x (std::array<double, 2>)
                The end points
        
        @code{.cpp}
        
                // Create a mesh of 25 cells in the interval [-1,1]
                IntervalMesh mesh(MPI_COMM_WORLD, 25, -1.0, 1.0);
        @endcode


    .. cpp:function:: IntervalMesh(std::size_t n, double a, double b)
    
        Constructor
        
        @param    n (std::size_t)
                The number of cells.
        @param    a (double)
                The minimum point (inclusive).
        @param    b (double)
                The maximum point (inclusive).
        
        @code{.cpp}
        
                // Create a mesh of 25 cells in the interval [-1,1]
                IntervalMesh mesh(25, -1.0, 1.0);
        @endcode


    .. cpp:function:: IntervalMesh(MPI_Comm comm, std::size_t n, double a, double b)
    
        Constructor
        
        @param    comm (MPI_Comm)
                MPI communicator
        @param    n (std::size_t)
                The number of cells.
        @param    a (double)
                The minimum point (inclusive).
        @param    b (double)
                The maximum point (inclusive).
        
        @code{.cpp}
        
                // Create a mesh of 25 cells in the interval [-1,1]
                IntervalMesh mesh(MPI_COMM_WORLD, 25, -1.0, 1.0);
        @endcode


