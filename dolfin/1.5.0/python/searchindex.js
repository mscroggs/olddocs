Search.setIndex({docnames:["demo/documented/auto-adaptive-poisson/python/documentation","demo/documented/bcs/python/documentation","demo/documented/biharmonic/python/documentation","demo/documented/built-in_meshes/python/documentation","demo/documented/cahn-hilliard/python/documentation","demo/documented/eigenvalue/python/documentation","demo/documented/hyperelasticity/python/documentation","demo/documented/mixed-poisson-dual/python/documentation","demo/documented/mixed-poisson/python/documentation","demo/documented/navier-stokes/python/documentation","demo/documented/neumann-poisson/python/documentation","demo/documented/nonlinear-poisson/python/documentation","demo/documented/periodic/python/documentation","demo/documented/poisson/python/documentation","demo/documented/singular-poisson/python/documentation","demo/documented/stokes-iterative/python/documentation","demo/documented/stokes-mini/python/documentation","demo/documented/stokes-stabilized/python/documentation","demo/documented/stokes-taylor-hood/python/documentation","demo/documented/subdomains-poisson/python/documentation","demo/documented/subdomains/python/documentation","demo/documented/tensor-weighted-poisson/python/documentation","demo/index","index","programmers-reference/common/constants/index","programmers-reference/common/globalparameters/index","programmers-reference/common/index","programmers-reference/common/math/index","programmers-reference/common/math/sqr","programmers-reference/common/memory/index","programmers-reference/common/memory/memory_usage","programmers-reference/common/plotting/index","programmers-reference/common/plotting/plot","programmers-reference/common/time/index","programmers-reference/compilemodules/compilemodule/compile_extension_module","programmers-reference/compilemodules/compilemodule/expression_to_code_fragments","programmers-reference/compilemodules/compilemodule/index","programmers-reference/compilemodules/expressions/compile_expressions","programmers-reference/compilemodules/expressions/index","programmers-reference/compilemodules/index","programmers-reference/compilemodules/jit/index","programmers-reference/compilemodules/jit/jit","programmers-reference/compilemodules/subdomains/CompiledSubDomain","programmers-reference/compilemodules/subdomains/compile_subdomains","programmers-reference/compilemodules/subdomains/index","programmers-reference/compilemodules/swigimportinfo/index","programmers-reference/cpp/common/BoolParameter","programmers-reference/cpp/common/DoubleArray","programmers-reference/cpp/common/DoubleParameter","programmers-reference/cpp/common/Event","programmers-reference/cpp/common/GlobalParameters","programmers-reference/cpp/common/GlobalParameters_default_parameters","programmers-reference/cpp/common/IndexSet","programmers-reference/cpp/common/IntArray","programmers-reference/cpp/common/IntParameter","programmers-reference/cpp/common/MPI","programmers-reference/cpp/common/MPIInfo","programmers-reference/cpp/common/MPI_Comm","programmers-reference/cpp/common/MPI_barrier","programmers-reference/cpp/common/MPI_compute_local_range","programmers-reference/cpp/common/MPI_gather","programmers-reference/cpp/common/MPI_global_offset","programmers-reference/cpp/common/MPI_index_owner","programmers-reference/cpp/common/MPI_is_broadcaster","programmers-reference/cpp/common/MPI_is_receiver","programmers-reference/cpp/common/MPI_local_range","programmers-reference/cpp/common/MPI_max","programmers-reference/cpp/common/MPI_min","programmers-reference/cpp/common/MPI_rank","programmers-reference/cpp/common/MPI_size","programmers-reference/cpp/common/MPI_sum","programmers-reference/cpp/common/ParameterValue","programmers-reference/cpp/common/Parameters","programmers-reference/cpp/common/Progress","programmers-reference/cpp/common/StringParameter","programmers-reference/cpp/common/SubSystemsManager","programmers-reference/cpp/common/SubSystemsManager_finalize","programmers-reference/cpp/common/SubSystemsManager_init_mpi","programmers-reference/cpp/common/SubSystemsManager_init_petsc","programmers-reference/cpp/common/SubSystemsManager_mpi_finalized","programmers-reference/cpp/common/SubSystemsManager_mpi_initialized","programmers-reference/cpp/common/SubSystemsManager_responsible_mpi","programmers-reference/cpp/common/SubSystemsManager_responsible_petsc","programmers-reference/cpp/common/Table","programmers-reference/cpp/common/TableEntry","programmers-reference/cpp/common/Timer","programmers-reference/cpp/common/UIntArray","programmers-reference/cpp/common/Variable","programmers-reference/cpp/common/begin","programmers-reference/cpp/common/debug","programmers-reference/cpp/common/deprecation","programmers-reference/cpp/common/dolfin_error","programmers-reference/cpp/common/dolfin_version","programmers-reference/cpp/common/end","programmers-reference/cpp/common/error","programmers-reference/cpp/common/get_log_level","programmers-reference/cpp/common/git_commit_hash","programmers-reference/cpp/common/has_cholmod","programmers-reference/cpp/common/has_exodus","programmers-reference/cpp/common/has_hdf5","programmers-reference/cpp/common/has_mpi","programmers-reference/cpp/common/has_openmp","programmers-reference/cpp/common/has_parmetis","programmers-reference/cpp/common/has_petsc","programmers-reference/cpp/common/has_petsc_snes","programmers-reference/cpp/common/has_petsc_tao","programmers-reference/cpp/common/has_scotch","programmers-reference/cpp/common/has_slepc","programmers-reference/cpp/common/has_umfpack","programmers-reference/cpp/common/has_zlib","programmers-reference/cpp/common/index","programmers-reference/cpp/common/info","programmers-reference/cpp/common/info_stream","programmers-reference/cpp/common/info_underline","programmers-reference/cpp/common/init","programmers-reference/cpp/common/list_timings","programmers-reference/cpp/common/log","programmers-reference/cpp/common/monitor_memory_usage","programmers-reference/cpp/common/not_working_in_parallel","programmers-reference/cpp/common/set_log_active","programmers-reference/cpp/common/set_log_level","programmers-reference/cpp/common/set_output_stream","programmers-reference/cpp/common/sizeof_la_index","programmers-reference/cpp/common/summary","programmers-reference/cpp/common/tic","programmers-reference/cpp/common/time","programmers-reference/cpp/common/timing","programmers-reference/cpp/common/timings","programmers-reference/cpp/common/toc","programmers-reference/cpp/common/warning","programmers-reference/cpp/fem/AdaptiveLinearVariationalSolver","programmers-reference/cpp/fem/AdaptiveNonlinearVariationalSolver","programmers-reference/cpp/fem/Assembler","programmers-reference/cpp/fem/AssemblerBase","programmers-reference/cpp/fem/BasisFunction","programmers-reference/cpp/fem/DirichletBC","programmers-reference/cpp/fem/DirichletBC_default_parameters","programmers-reference/cpp/fem/DofMap","programmers-reference/cpp/fem/Equation","programmers-reference/cpp/fem/ErrorControl","programmers-reference/cpp/fem/ErrorControl_default_parameters","programmers-reference/cpp/fem/Extrapolation","programmers-reference/cpp/fem/Extrapolation_extrapolate","programmers-reference/cpp/fem/FiniteElement","programmers-reference/cpp/fem/Form","programmers-reference/cpp/fem/GenericAdaptiveVariationalSolver","programmers-reference/cpp/fem/GenericAdaptiveVariationalSolver_default_parameters","programmers-reference/cpp/fem/GenericDofMap","programmers-reference/cpp/fem/HierarchicalDirichletBC","programmers-reference/cpp/fem/HierarchicalErrorControl","programmers-reference/cpp/fem/HierarchicalForm","programmers-reference/cpp/fem/HierarchicalFunction","programmers-reference/cpp/fem/HierarchicalFunctionSpace","programmers-reference/cpp/fem/HierarchicalLinearVariationalProblem","programmers-reference/cpp/fem/HierarchicalMesh","programmers-reference/cpp/fem/HierarchicalNonlinearVariationalProblem","programmers-reference/cpp/fem/LinearVariationalProblem","programmers-reference/cpp/fem/LinearVariationalSolver","programmers-reference/cpp/fem/LinearVariationalSolver_default_parameters","programmers-reference/cpp/fem/LocalAssembler","programmers-reference/cpp/fem/LocalAssembler_assemble","programmers-reference/cpp/fem/LocalAssembler_assemble_cell","programmers-reference/cpp/fem/LocalAssembler_assemble_exterior_facet","programmers-reference/cpp/fem/LocalAssembler_assemble_interior_facet","programmers-reference/cpp/fem/LocalSolver","programmers-reference/cpp/fem/MultiMeshAssembler","programmers-reference/cpp/fem/MultiMeshDirichletBC","programmers-reference/cpp/fem/MultiMeshDofMap","programmers-reference/cpp/fem/MultiMeshForm","programmers-reference/cpp/fem/MultiStageScheme","programmers-reference/cpp/fem/NonlinearVariationalProblem","programmers-reference/cpp/fem/NonlinearVariationalSolver","programmers-reference/cpp/fem/NonlinearVariationalSolver_default_parameters","programmers-reference/cpp/fem/OpenMpAssembler","programmers-reference/cpp/fem/PointIntegralSolver","programmers-reference/cpp/fem/PointIntegralSolver_default_parameters","programmers-reference/cpp/fem/PointSource","programmers-reference/cpp/fem/RKSolver","programmers-reference/cpp/fem/SparsityPatternBuilder","programmers-reference/cpp/fem/SparsityPatternBuilder_build","programmers-reference/cpp/fem/SparsityPatternBuilder_build_multimesh_sparsity_pattern","programmers-reference/cpp/fem/SystemAssembler","programmers-reference/cpp/fem/TimeSeries","programmers-reference/cpp/fem/TimeSeries_default_parameters","programmers-reference/cpp/fem/TimeSeries_filename_data","programmers-reference/cpp/fem/TimeSeries_filename_times","programmers-reference/cpp/fem/adapt","programmers-reference/cpp/fem/adapt_markers","programmers-reference/cpp/fem/assemble","programmers-reference/cpp/fem/assemble_system","programmers-reference/cpp/fem/dof_to_vertex_map","programmers-reference/cpp/fem/dorfler_mark","programmers-reference/cpp/fem/fem_solve","programmers-reference/cpp/fem/index","programmers-reference/cpp/fem/mark","programmers-reference/cpp/fem/vertex_to_dof_map","programmers-reference/cpp/function/ALE","programmers-reference/cpp/function/ALE_move","programmers-reference/cpp/function/Constant","programmers-reference/cpp/function/Expression","programmers-reference/cpp/function/FacetArea","programmers-reference/cpp/function/Function","programmers-reference/cpp/function/FunctionAXPY","programmers-reference/cpp/function/FunctionAssigner","programmers-reference/cpp/function/FunctionSpace","programmers-reference/cpp/function/GenericFunction","programmers-reference/cpp/function/HierarchicalFunction","programmers-reference/cpp/function/HierarchicalFunctionSpace","programmers-reference/cpp/function/HierarchicalMesh","programmers-reference/cpp/function/Lagrange","programmers-reference/cpp/function/LagrangeInterpolator","programmers-reference/cpp/function/Legendre","programmers-reference/cpp/function/Legendre_d2dx","programmers-reference/cpp/function/Legendre_ddx","programmers-reference/cpp/function/Legendre_eval","programmers-reference/cpp/function/MeshCoordinates","programmers-reference/cpp/function/MeshDisplacement","programmers-reference/cpp/function/MultiMeshFunction","programmers-reference/cpp/function/MultiMeshFunctionSpace","programmers-reference/cpp/function/MultiMeshFunctionSpace_default_parameters","programmers-reference/cpp/function/MultiMeshSubSpace","programmers-reference/cpp/function/SpecialFacetFunction","programmers-reference/cpp/function/SubSpace","programmers-reference/cpp/function/assign","programmers-reference/cpp/function/between","programmers-reference/cpp/function/index","programmers-reference/cpp/function/ipow","programmers-reference/cpp/function/lt_coordinate","programmers-reference/cpp/function/near","programmers-reference/cpp/function/rand","programmers-reference/cpp/function/seed","programmers-reference/cpp/index","programmers-reference/cpp/io/File","programmers-reference/cpp/io/File_create_parent_path","programmers-reference/cpp/io/File_exists","programmers-reference/cpp/io/GenericFile","programmers-reference/cpp/io/HierarchicalFunction","programmers-reference/cpp/io/HierarchicalFunctionSpace","programmers-reference/cpp/io/HierarchicalMesh","programmers-reference/cpp/io/VTKPlotter","programmers-reference/cpp/io/VTKPlotter_all_interactive","programmers-reference/cpp/io/VTKPlotter_default_parameters","programmers-reference/cpp/io/VTKPlotter_to_key","programmers-reference/cpp/io/index","programmers-reference/cpp/io/interactive","programmers-reference/cpp/io/plot","programmers-reference/cpp/la/BlockMatrix","programmers-reference/cpp/la/BlockVector","programmers-reference/cpp/la/CholmodCholeskySolver","programmers-reference/cpp/la/CholmodCholeskySolver_default_parameters","programmers-reference/cpp/la/CoordinateMatrix","programmers-reference/cpp/la/DefaultFactory","programmers-reference/cpp/la/DefaultFactory_factory","programmers-reference/cpp/la/GenericLUSolver","programmers-reference/cpp/la/GenericLinearAlgebraFactory","programmers-reference/cpp/la/GenericLinearOperator","programmers-reference/cpp/la/GenericLinearSolver","programmers-reference/cpp/la/GenericMatrix","programmers-reference/cpp/la/GenericPreconditioner","programmers-reference/cpp/la/GenericSparsityPattern","programmers-reference/cpp/la/GenericTensor","programmers-reference/cpp/la/GenericVector","programmers-reference/cpp/la/KrylovSolver","programmers-reference/cpp/la/KrylovSolver_default_parameters","programmers-reference/cpp/la/LUSolver","programmers-reference/cpp/la/LUSolver_default_parameters","programmers-reference/cpp/la/LinearAlgebraObject","programmers-reference/cpp/la/LinearOperator","programmers-reference/cpp/la/LinearSolver","programmers-reference/cpp/la/LinearSolver_default_parameters","programmers-reference/cpp/la/Matrix","programmers-reference/cpp/la/NewtonSolver","programmers-reference/cpp/la/NewtonSolver_default_parameters","programmers-reference/cpp/la/NonlinearProblem","programmers-reference/cpp/la/OptimisationProblem","programmers-reference/cpp/la/PETScBaseMatrix","programmers-reference/cpp/la/PETScFactory","programmers-reference/cpp/la/PETScFactory_instance","programmers-reference/cpp/la/PETScKrylovSolver","programmers-reference/cpp/la/PETScKrylovSolver_default_parameters","programmers-reference/cpp/la/PETScKrylovSolver_methods","programmers-reference/cpp/la/PETScKrylovSolver_preconditioners","programmers-reference/cpp/la/PETScLUSolver","programmers-reference/cpp/la/PETScLUSolver_default_parameters","programmers-reference/cpp/la/PETScLUSolver_methods","programmers-reference/cpp/la/PETScLinearOperator","programmers-reference/cpp/la/PETScMatrix","programmers-reference/cpp/la/PETScObject","programmers-reference/cpp/la/PETScObject_petsc_error","programmers-reference/cpp/la/PETScOptions","programmers-reference/cpp/la/PETScOptions_clear","programmers-reference/cpp/la/PETScOptions_set","programmers-reference/cpp/la/PETScPreconditioner","programmers-reference/cpp/la/PETScPreconditioner_default_parameters","programmers-reference/cpp/la/PETScPreconditioner_preconditioners","programmers-reference/cpp/la/PETScSNESSolver","programmers-reference/cpp/la/PETScSNESSolver_default_parameters","programmers-reference/cpp/la/PETScSNESSolver_methods","programmers-reference/cpp/la/PETScTAOSolver","programmers-reference/cpp/la/PETScTAOSolver_default_parameters","programmers-reference/cpp/la/PETScTAOSolver_methods","programmers-reference/cpp/la/PETScUserPreconditioner","programmers-reference/cpp/la/PETScVector","programmers-reference/cpp/la/SLEPcEigenSolver","programmers-reference/cpp/la/SLEPcEigenSolver_default_parameters","programmers-reference/cpp/la/STLFactory","programmers-reference/cpp/la/STLFactory_instance","programmers-reference/cpp/la/STLMatrix","programmers-reference/cpp/la/Scalar","programmers-reference/cpp/la/SparsityPattern","programmers-reference/cpp/la/TAOLinearBoundSolver","programmers-reference/cpp/la/TAOLinearBoundSolver_default_parameters","programmers-reference/cpp/la/TAOLinearBoundSolver_krylov_solvers","programmers-reference/cpp/la/TAOLinearBoundSolver_methods","programmers-reference/cpp/la/TAOLinearBoundSolver_preconditioners","programmers-reference/cpp/la/UmfpackLUSolver","programmers-reference/cpp/la/UmfpackLUSolver_default_parameters","programmers-reference/cpp/la/Vector","programmers-reference/cpp/la/VectorSpaceBasis","programmers-reference/cpp/la/as_backend_type","programmers-reference/cpp/la/get_tensor_type","programmers-reference/cpp/la/has_krylov_solver_method","programmers-reference/cpp/la/has_krylov_solver_preconditioner","programmers-reference/cpp/la/has_lu_solver_method","programmers-reference/cpp/la/has_type","programmers-reference/cpp/la/in_nullspace","programmers-reference/cpp/la/index","programmers-reference/cpp/la/krylov_solver_methods","programmers-reference/cpp/la/krylov_solver_preconditioners","programmers-reference/cpp/la/la_index_dtype","programmers-reference/cpp/la/la_solve","programmers-reference/cpp/la/linear_algebra_backends","programmers-reference/cpp/la/linear_solver_methods","programmers-reference/cpp/la/list_krylov_solver_methods","programmers-reference/cpp/la/list_krylov_solver_preconditioners","programmers-reference/cpp/la/list_linear_algebra_backends","programmers-reference/cpp/la/list_linear_solver_methods","programmers-reference/cpp/la/list_lu_solver_methods","programmers-reference/cpp/la/lu_solver_methods","programmers-reference/cpp/la/normalize","programmers-reference/cpp/la/residual","programmers-reference/cpp/la/uBLASDenseFactory","programmers-reference/cpp/la/uBLASDenseFactory_instance","programmers-reference/cpp/la/uBLASDenseMatrix","programmers-reference/cpp/la/uBLASILUPreconditioner","programmers-reference/cpp/la/uBLASKrylovSolver","programmers-reference/cpp/la/uBLASKrylovSolver_default_parameters","programmers-reference/cpp/la/uBLASKrylovSolver_methods","programmers-reference/cpp/la/uBLASKrylovSolver_preconditioners","programmers-reference/cpp/la/uBLASLinearOperator","programmers-reference/cpp/la/uBLASPreconditioner","programmers-reference/cpp/la/uBLASSparseFactory","programmers-reference/cpp/la/uBLASSparseFactory_instance","programmers-reference/cpp/la/uBLASSparseMatrix","programmers-reference/cpp/la/uBLASVector","programmers-reference/cpp/mesh/BoostGraphOrdering","programmers-reference/cpp/mesh/BoostGraphOrdering_compute_cuthill_mckee","programmers-reference/cpp/mesh/BoundaryMesh","programmers-reference/cpp/mesh/BoundingBoxTree","programmers-reference/cpp/mesh/BoundingBoxTree3D","programmers-reference/cpp/mesh/BoxMesh","programmers-reference/cpp/mesh/Cell","programmers-reference/cpp/mesh/CellFunction","programmers-reference/cpp/mesh/CellFunctionBool","programmers-reference/cpp/mesh/CellFunctionDouble","programmers-reference/cpp/mesh/CellFunctionInt","programmers-reference/cpp/mesh/CellFunctionSizet","programmers-reference/cpp/mesh/CellType","programmers-reference/cpp/mesh/CellType_create","programmers-reference/cpp/mesh/CellType_string2type","programmers-reference/cpp/mesh/CellType_type2string","programmers-reference/cpp/mesh/DomainBoundary","programmers-reference/cpp/mesh/DynamicMeshEditor","programmers-reference/cpp/mesh/Edge","programmers-reference/cpp/mesh/EdgeFunction","programmers-reference/cpp/mesh/EdgeFunctionBool","programmers-reference/cpp/mesh/EdgeFunctionDouble","programmers-reference/cpp/mesh/EdgeFunctionInt","programmers-reference/cpp/mesh/EdgeFunctionSizet","programmers-reference/cpp/mesh/Face","programmers-reference/cpp/mesh/FaceFunction","programmers-reference/cpp/mesh/FaceFunctionBool","programmers-reference/cpp/mesh/FaceFunctionDouble","programmers-reference/cpp/mesh/FaceFunctionInt","programmers-reference/cpp/mesh/FaceFunctionSizet","programmers-reference/cpp/mesh/Facet","programmers-reference/cpp/mesh/FacetCell","programmers-reference/cpp/mesh/FacetFunction","programmers-reference/cpp/mesh/FacetFunctionBool","programmers-reference/cpp/mesh/FacetFunctionDouble","programmers-reference/cpp/mesh/FacetFunctionInt","programmers-reference/cpp/mesh/FacetFunctionSizet","programmers-reference/cpp/mesh/GenericBoundingBoxTree","programmers-reference/cpp/mesh/Graph","programmers-reference/cpp/mesh/GraphBuilder","programmers-reference/cpp/mesh/GraphBuilder_compute_dual_graph","programmers-reference/cpp/mesh/GraphBuilder_local_graph","programmers-reference/cpp/mesh/HierarchicalFunction","programmers-reference/cpp/mesh/HierarchicalFunctionSpace","programmers-reference/cpp/mesh/HierarchicalMesh","programmers-reference/cpp/mesh/HierarchicalMeshFunctionBool","programmers-reference/cpp/mesh/HierarchicalMeshFunctionDouble","programmers-reference/cpp/mesh/HierarchicalMeshFunctionInt","programmers-reference/cpp/mesh/HierarchicalMeshFunctionSizet","programmers-reference/cpp/mesh/HierarchicalMeshFunctionUInt","programmers-reference/cpp/mesh/IntervalMesh","programmers-reference/cpp/mesh/LocalMeshData","programmers-reference/cpp/mesh/Mesh","programmers-reference/cpp/mesh/MeshColoring","programmers-reference/cpp/mesh/MeshColoring_cell_colors","programmers-reference/cpp/mesh/MeshColoring_color","programmers-reference/cpp/mesh/MeshColoring_color_cells","programmers-reference/cpp/mesh/MeshColoring_compute_colors","programmers-reference/cpp/mesh/MeshColoring_type_to_dim","programmers-reference/cpp/mesh/MeshConnectivity","programmers-reference/cpp/mesh/MeshData","programmers-reference/cpp/mesh/MeshDomains","programmers-reference/cpp/mesh/MeshEditor","programmers-reference/cpp/mesh/MeshEntity","programmers-reference/cpp/mesh/MeshFunction","programmers-reference/cpp/mesh/MeshFunctionBool","programmers-reference/cpp/mesh/MeshFunctionDouble","programmers-reference/cpp/mesh/MeshFunctionInt","programmers-reference/cpp/mesh/MeshFunctionSizet","programmers-reference/cpp/mesh/MeshGeometry","programmers-reference/cpp/mesh/MeshPointIntersection","programmers-reference/cpp/mesh/MeshQuality","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_histogram_data","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_matplotlib_histogram","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_min_max","programmers-reference/cpp/mesh/MeshQuality_radius_ratios","programmers-reference/cpp/mesh/MeshRenumbering","programmers-reference/cpp/mesh/MeshTopology","programmers-reference/cpp/mesh/MeshTransformation","programmers-reference/cpp/mesh/MeshTransformation_rotate","programmers-reference/cpp/mesh/MeshTransformation_translate","programmers-reference/cpp/mesh/MeshValueCollection","programmers-reference/cpp/mesh/MeshValueCollectionBool","programmers-reference/cpp/mesh/MeshValueCollectionDouble","programmers-reference/cpp/mesh/MeshValueCollectionInt","programmers-reference/cpp/mesh/MeshValueCollectionSizet","programmers-reference/cpp/mesh/MultiMesh","programmers-reference/cpp/mesh/MultiMesh_default_parameters","programmers-reference/cpp/mesh/PeriodicBoundaryComputation","programmers-reference/cpp/mesh/PeriodicBoundaryComputation_compute_periodic_pairs","programmers-reference/cpp/mesh/PeriodicBoundaryComputation_masters_slaves","programmers-reference/cpp/mesh/Point","programmers-reference/cpp/mesh/RectangleMesh","programmers-reference/cpp/mesh/Restriction","programmers-reference/cpp/mesh/SCOTCH","programmers-reference/cpp/mesh/SCOTCH_compute_gps","programmers-reference/cpp/mesh/SCOTCH_compute_partition","programmers-reference/cpp/mesh/SubDomain","programmers-reference/cpp/mesh/SubMesh","programmers-reference/cpp/mesh/SubsetIterator","programmers-reference/cpp/mesh/UnitCubeMesh","programmers-reference/cpp/mesh/UnitIntervalMesh","programmers-reference/cpp/mesh/UnitSquareMesh","programmers-reference/cpp/mesh/UnitTetrahedronMesh","programmers-reference/cpp/mesh/UnitTriangleMesh","programmers-reference/cpp/mesh/Vertex","programmers-reference/cpp/mesh/VertexFunction","programmers-reference/cpp/mesh/VertexFunctionBool","programmers-reference/cpp/mesh/VertexFunctionDouble","programmers-reference/cpp/mesh/VertexFunctionInt","programmers-reference/cpp/mesh/VertexFunctionSizet","programmers-reference/cpp/mesh/cells","programmers-reference/cpp/mesh/edges","programmers-reference/cpp/mesh/entities","programmers-reference/cpp/mesh/faces","programmers-reference/cpp/mesh/facets","programmers-reference/cpp/mesh/index","programmers-reference/cpp/mesh/intersect","programmers-reference/cpp/mesh/refine","programmers-reference/cpp/mesh/vertices","programmers-reference/deprecation/down_cast","programmers-reference/deprecation/index","programmers-reference/fem/adaptivesolving/AdaptiveLinearVariationalSolver","programmers-reference/fem/adaptivesolving/AdaptiveNonlinearVariationalSolver","programmers-reference/fem/adaptivesolving/generate_error_control","programmers-reference/fem/adaptivesolving/generate_error_control_forms","programmers-reference/fem/adaptivesolving/index","programmers-reference/fem/assembling/SystemAssembler","programmers-reference/fem/assembling/assemble","programmers-reference/fem/assembling/assemble_system","programmers-reference/fem/assembling/index","programmers-reference/fem/bcs/AutoSubDomain","programmers-reference/fem/bcs/DirichletBC","programmers-reference/fem/bcs/homogenize","programmers-reference/fem/bcs/index","programmers-reference/fem/errorcontrolgenerator/index","programmers-reference/fem/form/Form","programmers-reference/fem/form/index","programmers-reference/fem/formmanipulations/adjoint","programmers-reference/fem/formmanipulations/derivative","programmers-reference/fem/formmanipulations/increase_order","programmers-reference/fem/formmanipulations/index","programmers-reference/fem/formmanipulations/tear","programmers-reference/fem/index","programmers-reference/fem/interpolation/index","programmers-reference/fem/interpolation/interpolate","programmers-reference/fem/norms/errornorm","programmers-reference/fem/norms/index","programmers-reference/fem/norms/norm","programmers-reference/fem/projection/index","programmers-reference/fem/projection/project","programmers-reference/fem/solving/LinearVariationalProblem","programmers-reference/fem/solving/LinearVariationalSolver","programmers-reference/fem/solving/NonlinearVariationalProblem","programmers-reference/fem/solving/NonlinearVariationalSolver","programmers-reference/fem/solving/index","programmers-reference/fem/solving/solve","programmers-reference/functions/constant/Constant","programmers-reference/functions/constant/index","programmers-reference/functions/expression/Expression","programmers-reference/functions/expression/index","programmers-reference/functions/function/Argument","programmers-reference/functions/function/Function","programmers-reference/functions/function/TestFunction","programmers-reference/functions/function/TestFunctions","programmers-reference/functions/function/TrialFunction","programmers-reference/functions/function/TrialFunctions","programmers-reference/functions/function/index","programmers-reference/functions/functionspace/FunctionSpace","programmers-reference/functions/functionspace/FunctionSpaceBase","programmers-reference/functions/functionspace/FunctionSpaceFromCpp","programmers-reference/functions/functionspace/MixedFunctionSpace","programmers-reference/functions/functionspace/TensorFunctionSpace","programmers-reference/functions/functionspace/VectorFunctionSpace","programmers-reference/functions/functionspace/create_ufc_function_spaces","programmers-reference/functions/functionspace/index","programmers-reference/functions/index","programmers-reference/functions/specialfunctions/CellNormal","programmers-reference/functions/specialfunctions/CellSize","programmers-reference/functions/specialfunctions/CellVolume","programmers-reference/functions/specialfunctions/Circumradius","programmers-reference/functions/specialfunctions/FacetArea","programmers-reference/functions/specialfunctions/FacetNormal","programmers-reference/functions/specialfunctions/MaxFacetEdgeLength","programmers-reference/functions/specialfunctions/MeshCoordinates","programmers-reference/functions/specialfunctions/MinFacetEdgeLength","programmers-reference/functions/specialfunctions/SpatialCoordinate","programmers-reference/functions/specialfunctions/index","programmers-reference/functions/ufc_functionspace/UFCFunctionSpace","programmers-reference/functions/ufc_functionspace/create_ufc_function_spaces","programmers-reference/functions/ufc_functionspace/index","programmers-reference/importhandler/index","programmers-reference/index","programmers-reference/mesh/ale/compute_edge_map","programmers-reference/mesh/ale/compute_vertex_map","programmers-reference/mesh/ale/index","programmers-reference/mesh/ale/init_parent_edge_indices","programmers-reference/mesh/boundarysubdomainfinder/create_maps","programmers-reference/mesh/boundarysubdomainfinder/find_all_subdomains","programmers-reference/mesh/boundarysubdomainfinder/find_keys_on_one_subdomain","programmers-reference/mesh/boundarysubdomainfinder/find_new_cell_key","programmers-reference/mesh/boundarysubdomainfinder/find_subdomain","programmers-reference/mesh/boundarysubdomainfinder/index","programmers-reference/mesh/boundarysubdomainfinder/main","programmers-reference/mesh/boundarysubdomainfinder/usage","programmers-reference/mesh/boundarysubdomainfinder/write_file","programmers-reference/mesh/index","programmers-reference/mesh/meshes/index","programmers-reference/mesh/refinement/index","programmers-reference/mesh/refinement/refine","programmers-reference/mesh/svgtools/index","programmers-reference/mesh/svgtools/mesh2svg","programmers-reference/multistage/factorize/extract_tested_expressions","programmers-reference/multistage/factorize/index","programmers-reference/multistage/index","programmers-reference/multistage/multistagescheme/BDF1","programmers-reference/multistage/multistagescheme/BackwardEuler","programmers-reference/multistage/multistagescheme/ButcherMultiStageScheme","programmers-reference/multistage/multistagescheme/CN2","programmers-reference/multistage/multistagescheme/CrankNicolson","programmers-reference/multistage/multistagescheme/ERK","programmers-reference/multistage/multistagescheme/ERK1","programmers-reference/multistage/multistagescheme/ERK4","programmers-reference/multistage/multistagescheme/ESDIRK3","programmers-reference/multistage/multistagescheme/ESDIRK4","programmers-reference/multistage/multistagescheme/ExplicitEuler","programmers-reference/multistage/multistagescheme/ExplicitMidPoint","programmers-reference/multistage/multistagescheme/ForwardEuler","programmers-reference/multistage/multistagescheme/ImplicitEuler","programmers-reference/multistage/multistagescheme/MultiStageScheme","programmers-reference/multistage/multistagescheme/RK4","programmers-reference/multistage/multistagescheme/index","programmers-reference/multistage/multistagesolvers/PointIntegralSolver","programmers-reference/multistage/multistagesolvers/RKSolver","programmers-reference/multistage/multistagesolvers/index","programmers-reference/multistage/rushlarsenschemes/GRL1","programmers-reference/multistage/rushlarsenschemes/GRL2","programmers-reference/multistage/rushlarsenschemes/MultiStageScheme","programmers-reference/multistage/rushlarsenschemes/RL1","programmers-reference/multistage/rushlarsenschemes/RL2","programmers-reference/multistage/rushlarsenschemes/RushLarsenScheme","programmers-reference/multistage/rushlarsenschemes/index","quick_reference"],envversion:50,filenames:["demo/documented/auto-adaptive-poisson/python/documentation.rst","demo/documented/bcs/python/documentation.rst","demo/documented/biharmonic/python/documentation.rst","demo/documented/built-in_meshes/python/documentation.rst","demo/documented/cahn-hilliard/python/documentation.rst","demo/documented/eigenvalue/python/documentation.rst","demo/documented/hyperelasticity/python/documentation.rst","demo/documented/mixed-poisson-dual/python/documentation.rst","demo/documented/mixed-poisson/python/documentation.rst","demo/documented/navier-stokes/python/documentation.rst","demo/documented/neumann-poisson/python/documentation.rst","demo/documented/nonlinear-poisson/python/documentation.rst","demo/documented/periodic/python/documentation.rst","demo/documented/poisson/python/documentation.rst","demo/documented/singular-poisson/python/documentation.rst","demo/documented/stokes-iterative/python/documentation.rst","demo/documented/stokes-mini/python/documentation.rst","demo/documented/stokes-stabilized/python/documentation.rst","demo/documented/stokes-taylor-hood/python/documentation.rst","demo/documented/subdomains-poisson/python/documentation.rst","demo/documented/subdomains/python/documentation.rst","demo/documented/tensor-weighted-poisson/python/documentation.rst","demo/index.rst","index.rst","programmers-reference/common/constants/index.rst","programmers-reference/common/globalparameters/index.rst","programmers-reference/common/index.rst","programmers-reference/common/math/index.rst","programmers-reference/common/math/sqr.rst","programmers-reference/common/memory/index.rst","programmers-reference/common/memory/memory_usage.rst","programmers-reference/common/plotting/index.rst","programmers-reference/common/plotting/plot.rst","programmers-reference/common/time/index.rst","programmers-reference/compilemodules/compilemodule/compile_extension_module.rst","programmers-reference/compilemodules/compilemodule/expression_to_code_fragments.rst","programmers-reference/compilemodules/compilemodule/index.rst","programmers-reference/compilemodules/expressions/compile_expressions.rst","programmers-reference/compilemodules/expressions/index.rst","programmers-reference/compilemodules/index.rst","programmers-reference/compilemodules/jit/index.rst","programmers-reference/compilemodules/jit/jit.rst","programmers-reference/compilemodules/subdomains/CompiledSubDomain.rst","programmers-reference/compilemodules/subdomains/compile_subdomains.rst","programmers-reference/compilemodules/subdomains/index.rst","programmers-reference/compilemodules/swigimportinfo/index.rst","programmers-reference/cpp/common/BoolParameter.rst","programmers-reference/cpp/common/DoubleArray.rst","programmers-reference/cpp/common/DoubleParameter.rst","programmers-reference/cpp/common/Event.rst","programmers-reference/cpp/common/GlobalParameters.rst","programmers-reference/cpp/common/GlobalParameters_default_parameters.rst","programmers-reference/cpp/common/IndexSet.rst","programmers-reference/cpp/common/IntArray.rst","programmers-reference/cpp/common/IntParameter.rst","programmers-reference/cpp/common/MPI.rst","programmers-reference/cpp/common/MPIInfo.rst","programmers-reference/cpp/common/MPI_Comm.rst","programmers-reference/cpp/common/MPI_barrier.rst","programmers-reference/cpp/common/MPI_compute_local_range.rst","programmers-reference/cpp/common/MPI_gather.rst","programmers-reference/cpp/common/MPI_global_offset.rst","programmers-reference/cpp/common/MPI_index_owner.rst","programmers-reference/cpp/common/MPI_is_broadcaster.rst","programmers-reference/cpp/common/MPI_is_receiver.rst","programmers-reference/cpp/common/MPI_local_range.rst","programmers-reference/cpp/common/MPI_max.rst","programmers-reference/cpp/common/MPI_min.rst","programmers-reference/cpp/common/MPI_rank.rst","programmers-reference/cpp/common/MPI_size.rst","programmers-reference/cpp/common/MPI_sum.rst","programmers-reference/cpp/common/ParameterValue.rst","programmers-reference/cpp/common/Parameters.rst","programmers-reference/cpp/common/Progress.rst","programmers-reference/cpp/common/StringParameter.rst","programmers-reference/cpp/common/SubSystemsManager.rst","programmers-reference/cpp/common/SubSystemsManager_finalize.rst","programmers-reference/cpp/common/SubSystemsManager_init_mpi.rst","programmers-reference/cpp/common/SubSystemsManager_init_petsc.rst","programmers-reference/cpp/common/SubSystemsManager_mpi_finalized.rst","programmers-reference/cpp/common/SubSystemsManager_mpi_initialized.rst","programmers-reference/cpp/common/SubSystemsManager_responsible_mpi.rst","programmers-reference/cpp/common/SubSystemsManager_responsible_petsc.rst","programmers-reference/cpp/common/Table.rst","programmers-reference/cpp/common/TableEntry.rst","programmers-reference/cpp/common/Timer.rst","programmers-reference/cpp/common/UIntArray.rst","programmers-reference/cpp/common/Variable.rst","programmers-reference/cpp/common/begin.rst","programmers-reference/cpp/common/debug.rst","programmers-reference/cpp/common/deprecation.rst","programmers-reference/cpp/common/dolfin_error.rst","programmers-reference/cpp/common/dolfin_version.rst","programmers-reference/cpp/common/end.rst","programmers-reference/cpp/common/error.rst","programmers-reference/cpp/common/get_log_level.rst","programmers-reference/cpp/common/git_commit_hash.rst","programmers-reference/cpp/common/has_cholmod.rst","programmers-reference/cpp/common/has_exodus.rst","programmers-reference/cpp/common/has_hdf5.rst","programmers-reference/cpp/common/has_mpi.rst","programmers-reference/cpp/common/has_openmp.rst","programmers-reference/cpp/common/has_parmetis.rst","programmers-reference/cpp/common/has_petsc.rst","programmers-reference/cpp/common/has_petsc_snes.rst","programmers-reference/cpp/common/has_petsc_tao.rst","programmers-reference/cpp/common/has_scotch.rst","programmers-reference/cpp/common/has_slepc.rst","programmers-reference/cpp/common/has_umfpack.rst","programmers-reference/cpp/common/has_zlib.rst","programmers-reference/cpp/common/index.rst","programmers-reference/cpp/common/info.rst","programmers-reference/cpp/common/info_stream.rst","programmers-reference/cpp/common/info_underline.rst","programmers-reference/cpp/common/init.rst","programmers-reference/cpp/common/list_timings.rst","programmers-reference/cpp/common/log.rst","programmers-reference/cpp/common/monitor_memory_usage.rst","programmers-reference/cpp/common/not_working_in_parallel.rst","programmers-reference/cpp/common/set_log_active.rst","programmers-reference/cpp/common/set_log_level.rst","programmers-reference/cpp/common/set_output_stream.rst","programmers-reference/cpp/common/sizeof_la_index.rst","programmers-reference/cpp/common/summary.rst","programmers-reference/cpp/common/tic.rst","programmers-reference/cpp/common/time.rst","programmers-reference/cpp/common/timing.rst","programmers-reference/cpp/common/timings.rst","programmers-reference/cpp/common/toc.rst","programmers-reference/cpp/common/warning.rst","programmers-reference/cpp/fem/AdaptiveLinearVariationalSolver.rst","programmers-reference/cpp/fem/AdaptiveNonlinearVariationalSolver.rst","programmers-reference/cpp/fem/Assembler.rst","programmers-reference/cpp/fem/AssemblerBase.rst","programmers-reference/cpp/fem/BasisFunction.rst","programmers-reference/cpp/fem/DirichletBC.rst","programmers-reference/cpp/fem/DirichletBC_default_parameters.rst","programmers-reference/cpp/fem/DofMap.rst","programmers-reference/cpp/fem/Equation.rst","programmers-reference/cpp/fem/ErrorControl.rst","programmers-reference/cpp/fem/ErrorControl_default_parameters.rst","programmers-reference/cpp/fem/Extrapolation.rst","programmers-reference/cpp/fem/Extrapolation_extrapolate.rst","programmers-reference/cpp/fem/FiniteElement.rst","programmers-reference/cpp/fem/Form.rst","programmers-reference/cpp/fem/GenericAdaptiveVariationalSolver.rst","programmers-reference/cpp/fem/GenericAdaptiveVariationalSolver_default_parameters.rst","programmers-reference/cpp/fem/GenericDofMap.rst","programmers-reference/cpp/fem/HierarchicalDirichletBC.rst","programmers-reference/cpp/fem/HierarchicalErrorControl.rst","programmers-reference/cpp/fem/HierarchicalForm.rst","programmers-reference/cpp/fem/HierarchicalFunction.rst","programmers-reference/cpp/fem/HierarchicalFunctionSpace.rst","programmers-reference/cpp/fem/HierarchicalLinearVariationalProblem.rst","programmers-reference/cpp/fem/HierarchicalMesh.rst","programmers-reference/cpp/fem/HierarchicalNonlinearVariationalProblem.rst","programmers-reference/cpp/fem/LinearVariationalProblem.rst","programmers-reference/cpp/fem/LinearVariationalSolver.rst","programmers-reference/cpp/fem/LinearVariationalSolver_default_parameters.rst","programmers-reference/cpp/fem/LocalAssembler.rst","programmers-reference/cpp/fem/LocalAssembler_assemble.rst","programmers-reference/cpp/fem/LocalAssembler_assemble_cell.rst","programmers-reference/cpp/fem/LocalAssembler_assemble_exterior_facet.rst","programmers-reference/cpp/fem/LocalAssembler_assemble_interior_facet.rst","programmers-reference/cpp/fem/LocalSolver.rst","programmers-reference/cpp/fem/MultiMeshAssembler.rst","programmers-reference/cpp/fem/MultiMeshDirichletBC.rst","programmers-reference/cpp/fem/MultiMeshDofMap.rst","programmers-reference/cpp/fem/MultiMeshForm.rst","programmers-reference/cpp/fem/MultiStageScheme.rst","programmers-reference/cpp/fem/NonlinearVariationalProblem.rst","programmers-reference/cpp/fem/NonlinearVariationalSolver.rst","programmers-reference/cpp/fem/NonlinearVariationalSolver_default_parameters.rst","programmers-reference/cpp/fem/OpenMpAssembler.rst","programmers-reference/cpp/fem/PointIntegralSolver.rst","programmers-reference/cpp/fem/PointIntegralSolver_default_parameters.rst","programmers-reference/cpp/fem/PointSource.rst","programmers-reference/cpp/fem/RKSolver.rst","programmers-reference/cpp/fem/SparsityPatternBuilder.rst","programmers-reference/cpp/fem/SparsityPatternBuilder_build.rst","programmers-reference/cpp/fem/SparsityPatternBuilder_build_multimesh_sparsity_pattern.rst","programmers-reference/cpp/fem/SystemAssembler.rst","programmers-reference/cpp/fem/TimeSeries.rst","programmers-reference/cpp/fem/TimeSeries_default_parameters.rst","programmers-reference/cpp/fem/TimeSeries_filename_data.rst","programmers-reference/cpp/fem/TimeSeries_filename_times.rst","programmers-reference/cpp/fem/adapt.rst","programmers-reference/cpp/fem/adapt_markers.rst","programmers-reference/cpp/fem/assemble.rst","programmers-reference/cpp/fem/assemble_system.rst","programmers-reference/cpp/fem/dof_to_vertex_map.rst","programmers-reference/cpp/fem/dorfler_mark.rst","programmers-reference/cpp/fem/fem_solve.rst","programmers-reference/cpp/fem/index.rst","programmers-reference/cpp/fem/mark.rst","programmers-reference/cpp/fem/vertex_to_dof_map.rst","programmers-reference/cpp/function/ALE.rst","programmers-reference/cpp/function/ALE_move.rst","programmers-reference/cpp/function/Constant.rst","programmers-reference/cpp/function/Expression.rst","programmers-reference/cpp/function/FacetArea.rst","programmers-reference/cpp/function/Function.rst","programmers-reference/cpp/function/FunctionAXPY.rst","programmers-reference/cpp/function/FunctionAssigner.rst","programmers-reference/cpp/function/FunctionSpace.rst","programmers-reference/cpp/function/GenericFunction.rst","programmers-reference/cpp/function/HierarchicalFunction.rst","programmers-reference/cpp/function/HierarchicalFunctionSpace.rst","programmers-reference/cpp/function/HierarchicalMesh.rst","programmers-reference/cpp/function/Lagrange.rst","programmers-reference/cpp/function/LagrangeInterpolator.rst","programmers-reference/cpp/function/Legendre.rst","programmers-reference/cpp/function/Legendre_d2dx.rst","programmers-reference/cpp/function/Legendre_ddx.rst","programmers-reference/cpp/function/Legendre_eval.rst","programmers-reference/cpp/function/MeshCoordinates.rst","programmers-reference/cpp/function/MeshDisplacement.rst","programmers-reference/cpp/function/MultiMeshFunction.rst","programmers-reference/cpp/function/MultiMeshFunctionSpace.rst","programmers-reference/cpp/function/MultiMeshFunctionSpace_default_parameters.rst","programmers-reference/cpp/function/MultiMeshSubSpace.rst","programmers-reference/cpp/function/SpecialFacetFunction.rst","programmers-reference/cpp/function/SubSpace.rst","programmers-reference/cpp/function/assign.rst","programmers-reference/cpp/function/between.rst","programmers-reference/cpp/function/index.rst","programmers-reference/cpp/function/ipow.rst","programmers-reference/cpp/function/lt_coordinate.rst","programmers-reference/cpp/function/near.rst","programmers-reference/cpp/function/rand.rst","programmers-reference/cpp/function/seed.rst","programmers-reference/cpp/index.rst","programmers-reference/cpp/io/File.rst","programmers-reference/cpp/io/File_create_parent_path.rst","programmers-reference/cpp/io/File_exists.rst","programmers-reference/cpp/io/GenericFile.rst","programmers-reference/cpp/io/HierarchicalFunction.rst","programmers-reference/cpp/io/HierarchicalFunctionSpace.rst","programmers-reference/cpp/io/HierarchicalMesh.rst","programmers-reference/cpp/io/VTKPlotter.rst","programmers-reference/cpp/io/VTKPlotter_all_interactive.rst","programmers-reference/cpp/io/VTKPlotter_default_parameters.rst","programmers-reference/cpp/io/VTKPlotter_to_key.rst","programmers-reference/cpp/io/index.rst","programmers-reference/cpp/io/interactive.rst","programmers-reference/cpp/io/plot.rst","programmers-reference/cpp/la/BlockMatrix.rst","programmers-reference/cpp/la/BlockVector.rst","programmers-reference/cpp/la/CholmodCholeskySolver.rst","programmers-reference/cpp/la/CholmodCholeskySolver_default_parameters.rst","programmers-reference/cpp/la/CoordinateMatrix.rst","programmers-reference/cpp/la/DefaultFactory.rst","programmers-reference/cpp/la/DefaultFactory_factory.rst","programmers-reference/cpp/la/GenericLUSolver.rst","programmers-reference/cpp/la/GenericLinearAlgebraFactory.rst","programmers-reference/cpp/la/GenericLinearOperator.rst","programmers-reference/cpp/la/GenericLinearSolver.rst","programmers-reference/cpp/la/GenericMatrix.rst","programmers-reference/cpp/la/GenericPreconditioner.rst","programmers-reference/cpp/la/GenericSparsityPattern.rst","programmers-reference/cpp/la/GenericTensor.rst","programmers-reference/cpp/la/GenericVector.rst","programmers-reference/cpp/la/KrylovSolver.rst","programmers-reference/cpp/la/KrylovSolver_default_parameters.rst","programmers-reference/cpp/la/LUSolver.rst","programmers-reference/cpp/la/LUSolver_default_parameters.rst","programmers-reference/cpp/la/LinearAlgebraObject.rst","programmers-reference/cpp/la/LinearOperator.rst","programmers-reference/cpp/la/LinearSolver.rst","programmers-reference/cpp/la/LinearSolver_default_parameters.rst","programmers-reference/cpp/la/Matrix.rst","programmers-reference/cpp/la/NewtonSolver.rst","programmers-reference/cpp/la/NewtonSolver_default_parameters.rst","programmers-reference/cpp/la/NonlinearProblem.rst","programmers-reference/cpp/la/OptimisationProblem.rst","programmers-reference/cpp/la/PETScBaseMatrix.rst","programmers-reference/cpp/la/PETScFactory.rst","programmers-reference/cpp/la/PETScFactory_instance.rst","programmers-reference/cpp/la/PETScKrylovSolver.rst","programmers-reference/cpp/la/PETScKrylovSolver_default_parameters.rst","programmers-reference/cpp/la/PETScKrylovSolver_methods.rst","programmers-reference/cpp/la/PETScKrylovSolver_preconditioners.rst","programmers-reference/cpp/la/PETScLUSolver.rst","programmers-reference/cpp/la/PETScLUSolver_default_parameters.rst","programmers-reference/cpp/la/PETScLUSolver_methods.rst","programmers-reference/cpp/la/PETScLinearOperator.rst","programmers-reference/cpp/la/PETScMatrix.rst","programmers-reference/cpp/la/PETScObject.rst","programmers-reference/cpp/la/PETScObject_petsc_error.rst","programmers-reference/cpp/la/PETScOptions.rst","programmers-reference/cpp/la/PETScOptions_clear.rst","programmers-reference/cpp/la/PETScOptions_set.rst","programmers-reference/cpp/la/PETScPreconditioner.rst","programmers-reference/cpp/la/PETScPreconditioner_default_parameters.rst","programmers-reference/cpp/la/PETScPreconditioner_preconditioners.rst","programmers-reference/cpp/la/PETScSNESSolver.rst","programmers-reference/cpp/la/PETScSNESSolver_default_parameters.rst","programmers-reference/cpp/la/PETScSNESSolver_methods.rst","programmers-reference/cpp/la/PETScTAOSolver.rst","programmers-reference/cpp/la/PETScTAOSolver_default_parameters.rst","programmers-reference/cpp/la/PETScTAOSolver_methods.rst","programmers-reference/cpp/la/PETScUserPreconditioner.rst","programmers-reference/cpp/la/PETScVector.rst","programmers-reference/cpp/la/SLEPcEigenSolver.rst","programmers-reference/cpp/la/SLEPcEigenSolver_default_parameters.rst","programmers-reference/cpp/la/STLFactory.rst","programmers-reference/cpp/la/STLFactory_instance.rst","programmers-reference/cpp/la/STLMatrix.rst","programmers-reference/cpp/la/Scalar.rst","programmers-reference/cpp/la/SparsityPattern.rst","programmers-reference/cpp/la/TAOLinearBoundSolver.rst","programmers-reference/cpp/la/TAOLinearBoundSolver_default_parameters.rst","programmers-reference/cpp/la/TAOLinearBoundSolver_krylov_solvers.rst","programmers-reference/cpp/la/TAOLinearBoundSolver_methods.rst","programmers-reference/cpp/la/TAOLinearBoundSolver_preconditioners.rst","programmers-reference/cpp/la/UmfpackLUSolver.rst","programmers-reference/cpp/la/UmfpackLUSolver_default_parameters.rst","programmers-reference/cpp/la/Vector.rst","programmers-reference/cpp/la/VectorSpaceBasis.rst","programmers-reference/cpp/la/as_backend_type.rst","programmers-reference/cpp/la/get_tensor_type.rst","programmers-reference/cpp/la/has_krylov_solver_method.rst","programmers-reference/cpp/la/has_krylov_solver_preconditioner.rst","programmers-reference/cpp/la/has_lu_solver_method.rst","programmers-reference/cpp/la/has_type.rst","programmers-reference/cpp/la/in_nullspace.rst","programmers-reference/cpp/la/index.rst","programmers-reference/cpp/la/krylov_solver_methods.rst","programmers-reference/cpp/la/krylov_solver_preconditioners.rst","programmers-reference/cpp/la/la_index_dtype.rst","programmers-reference/cpp/la/la_solve.rst","programmers-reference/cpp/la/linear_algebra_backends.rst","programmers-reference/cpp/la/linear_solver_methods.rst","programmers-reference/cpp/la/list_krylov_solver_methods.rst","programmers-reference/cpp/la/list_krylov_solver_preconditioners.rst","programmers-reference/cpp/la/list_linear_algebra_backends.rst","programmers-reference/cpp/la/list_linear_solver_methods.rst","programmers-reference/cpp/la/list_lu_solver_methods.rst","programmers-reference/cpp/la/lu_solver_methods.rst","programmers-reference/cpp/la/normalize.rst","programmers-reference/cpp/la/residual.rst","programmers-reference/cpp/la/uBLASDenseFactory.rst","programmers-reference/cpp/la/uBLASDenseFactory_instance.rst","programmers-reference/cpp/la/uBLASDenseMatrix.rst","programmers-reference/cpp/la/uBLASILUPreconditioner.rst","programmers-reference/cpp/la/uBLASKrylovSolver.rst","programmers-reference/cpp/la/uBLASKrylovSolver_default_parameters.rst","programmers-reference/cpp/la/uBLASKrylovSolver_methods.rst","programmers-reference/cpp/la/uBLASKrylovSolver_preconditioners.rst","programmers-reference/cpp/la/uBLASLinearOperator.rst","programmers-reference/cpp/la/uBLASPreconditioner.rst","programmers-reference/cpp/la/uBLASSparseFactory.rst","programmers-reference/cpp/la/uBLASSparseFactory_instance.rst","programmers-reference/cpp/la/uBLASSparseMatrix.rst","programmers-reference/cpp/la/uBLASVector.rst","programmers-reference/cpp/mesh/BoostGraphOrdering.rst","programmers-reference/cpp/mesh/BoostGraphOrdering_compute_cuthill_mckee.rst","programmers-reference/cpp/mesh/BoundaryMesh.rst","programmers-reference/cpp/mesh/BoundingBoxTree.rst","programmers-reference/cpp/mesh/BoundingBoxTree3D.rst","programmers-reference/cpp/mesh/BoxMesh.rst","programmers-reference/cpp/mesh/Cell.rst","programmers-reference/cpp/mesh/CellFunction.rst","programmers-reference/cpp/mesh/CellFunctionBool.rst","programmers-reference/cpp/mesh/CellFunctionDouble.rst","programmers-reference/cpp/mesh/CellFunctionInt.rst","programmers-reference/cpp/mesh/CellFunctionSizet.rst","programmers-reference/cpp/mesh/CellType.rst","programmers-reference/cpp/mesh/CellType_create.rst","programmers-reference/cpp/mesh/CellType_string2type.rst","programmers-reference/cpp/mesh/CellType_type2string.rst","programmers-reference/cpp/mesh/DomainBoundary.rst","programmers-reference/cpp/mesh/DynamicMeshEditor.rst","programmers-reference/cpp/mesh/Edge.rst","programmers-reference/cpp/mesh/EdgeFunction.rst","programmers-reference/cpp/mesh/EdgeFunctionBool.rst","programmers-reference/cpp/mesh/EdgeFunctionDouble.rst","programmers-reference/cpp/mesh/EdgeFunctionInt.rst","programmers-reference/cpp/mesh/EdgeFunctionSizet.rst","programmers-reference/cpp/mesh/Face.rst","programmers-reference/cpp/mesh/FaceFunction.rst","programmers-reference/cpp/mesh/FaceFunctionBool.rst","programmers-reference/cpp/mesh/FaceFunctionDouble.rst","programmers-reference/cpp/mesh/FaceFunctionInt.rst","programmers-reference/cpp/mesh/FaceFunctionSizet.rst","programmers-reference/cpp/mesh/Facet.rst","programmers-reference/cpp/mesh/FacetCell.rst","programmers-reference/cpp/mesh/FacetFunction.rst","programmers-reference/cpp/mesh/FacetFunctionBool.rst","programmers-reference/cpp/mesh/FacetFunctionDouble.rst","programmers-reference/cpp/mesh/FacetFunctionInt.rst","programmers-reference/cpp/mesh/FacetFunctionSizet.rst","programmers-reference/cpp/mesh/GenericBoundingBoxTree.rst","programmers-reference/cpp/mesh/Graph.rst","programmers-reference/cpp/mesh/GraphBuilder.rst","programmers-reference/cpp/mesh/GraphBuilder_compute_dual_graph.rst","programmers-reference/cpp/mesh/GraphBuilder_local_graph.rst","programmers-reference/cpp/mesh/HierarchicalFunction.rst","programmers-reference/cpp/mesh/HierarchicalFunctionSpace.rst","programmers-reference/cpp/mesh/HierarchicalMesh.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionBool.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionDouble.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionInt.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionSizet.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionUInt.rst","programmers-reference/cpp/mesh/IntervalMesh.rst","programmers-reference/cpp/mesh/LocalMeshData.rst","programmers-reference/cpp/mesh/Mesh.rst","programmers-reference/cpp/mesh/MeshColoring.rst","programmers-reference/cpp/mesh/MeshColoring_cell_colors.rst","programmers-reference/cpp/mesh/MeshColoring_color.rst","programmers-reference/cpp/mesh/MeshColoring_color_cells.rst","programmers-reference/cpp/mesh/MeshColoring_compute_colors.rst","programmers-reference/cpp/mesh/MeshColoring_type_to_dim.rst","programmers-reference/cpp/mesh/MeshConnectivity.rst","programmers-reference/cpp/mesh/MeshData.rst","programmers-reference/cpp/mesh/MeshDomains.rst","programmers-reference/cpp/mesh/MeshEditor.rst","programmers-reference/cpp/mesh/MeshEntity.rst","programmers-reference/cpp/mesh/MeshFunction.rst","programmers-reference/cpp/mesh/MeshFunctionBool.rst","programmers-reference/cpp/mesh/MeshFunctionDouble.rst","programmers-reference/cpp/mesh/MeshFunctionInt.rst","programmers-reference/cpp/mesh/MeshFunctionSizet.rst","programmers-reference/cpp/mesh/MeshGeometry.rst","programmers-reference/cpp/mesh/MeshPointIntersection.rst","programmers-reference/cpp/mesh/MeshQuality.rst","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_histogram_data.rst","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_matplotlib_histogram.rst","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_min_max.rst","programmers-reference/cpp/mesh/MeshQuality_radius_ratios.rst","programmers-reference/cpp/mesh/MeshRenumbering.rst","programmers-reference/cpp/mesh/MeshTopology.rst","programmers-reference/cpp/mesh/MeshTransformation.rst","programmers-reference/cpp/mesh/MeshTransformation_rotate.rst","programmers-reference/cpp/mesh/MeshTransformation_translate.rst","programmers-reference/cpp/mesh/MeshValueCollection.rst","programmers-reference/cpp/mesh/MeshValueCollectionBool.rst","programmers-reference/cpp/mesh/MeshValueCollectionDouble.rst","programmers-reference/cpp/mesh/MeshValueCollectionInt.rst","programmers-reference/cpp/mesh/MeshValueCollectionSizet.rst","programmers-reference/cpp/mesh/MultiMesh.rst","programmers-reference/cpp/mesh/MultiMesh_default_parameters.rst","programmers-reference/cpp/mesh/PeriodicBoundaryComputation.rst","programmers-reference/cpp/mesh/PeriodicBoundaryComputation_compute_periodic_pairs.rst","programmers-reference/cpp/mesh/PeriodicBoundaryComputation_masters_slaves.rst","programmers-reference/cpp/mesh/Point.rst","programmers-reference/cpp/mesh/RectangleMesh.rst","programmers-reference/cpp/mesh/Restriction.rst","programmers-reference/cpp/mesh/SCOTCH.rst","programmers-reference/cpp/mesh/SCOTCH_compute_gps.rst","programmers-reference/cpp/mesh/SCOTCH_compute_partition.rst","programmers-reference/cpp/mesh/SubDomain.rst","programmers-reference/cpp/mesh/SubMesh.rst","programmers-reference/cpp/mesh/SubsetIterator.rst","programmers-reference/cpp/mesh/UnitCubeMesh.rst","programmers-reference/cpp/mesh/UnitIntervalMesh.rst","programmers-reference/cpp/mesh/UnitSquareMesh.rst","programmers-reference/cpp/mesh/UnitTetrahedronMesh.rst","programmers-reference/cpp/mesh/UnitTriangleMesh.rst","programmers-reference/cpp/mesh/Vertex.rst","programmers-reference/cpp/mesh/VertexFunction.rst","programmers-reference/cpp/mesh/VertexFunctionBool.rst","programmers-reference/cpp/mesh/VertexFunctionDouble.rst","programmers-reference/cpp/mesh/VertexFunctionInt.rst","programmers-reference/cpp/mesh/VertexFunctionSizet.rst","programmers-reference/cpp/mesh/cells.rst","programmers-reference/cpp/mesh/edges.rst","programmers-reference/cpp/mesh/entities.rst","programmers-reference/cpp/mesh/faces.rst","programmers-reference/cpp/mesh/facets.rst","programmers-reference/cpp/mesh/index.rst","programmers-reference/cpp/mesh/intersect.rst","programmers-reference/cpp/mesh/refine.rst","programmers-reference/cpp/mesh/vertices.rst","programmers-reference/deprecation/down_cast.rst","programmers-reference/deprecation/index.rst","programmers-reference/fem/adaptivesolving/AdaptiveLinearVariationalSolver.rst","programmers-reference/fem/adaptivesolving/AdaptiveNonlinearVariationalSolver.rst","programmers-reference/fem/adaptivesolving/generate_error_control.rst","programmers-reference/fem/adaptivesolving/generate_error_control_forms.rst","programmers-reference/fem/adaptivesolving/index.rst","programmers-reference/fem/assembling/SystemAssembler.rst","programmers-reference/fem/assembling/assemble.rst","programmers-reference/fem/assembling/assemble_system.rst","programmers-reference/fem/assembling/index.rst","programmers-reference/fem/bcs/AutoSubDomain.rst","programmers-reference/fem/bcs/DirichletBC.rst","programmers-reference/fem/bcs/homogenize.rst","programmers-reference/fem/bcs/index.rst","programmers-reference/fem/errorcontrolgenerator/index.rst","programmers-reference/fem/form/Form.rst","programmers-reference/fem/form/index.rst","programmers-reference/fem/formmanipulations/adjoint.rst","programmers-reference/fem/formmanipulations/derivative.rst","programmers-reference/fem/formmanipulations/increase_order.rst","programmers-reference/fem/formmanipulations/index.rst","programmers-reference/fem/formmanipulations/tear.rst","programmers-reference/fem/index.rst","programmers-reference/fem/interpolation/index.rst","programmers-reference/fem/interpolation/interpolate.rst","programmers-reference/fem/norms/errornorm.rst","programmers-reference/fem/norms/index.rst","programmers-reference/fem/norms/norm.rst","programmers-reference/fem/projection/index.rst","programmers-reference/fem/projection/project.rst","programmers-reference/fem/solving/LinearVariationalProblem.rst","programmers-reference/fem/solving/LinearVariationalSolver.rst","programmers-reference/fem/solving/NonlinearVariationalProblem.rst","programmers-reference/fem/solving/NonlinearVariationalSolver.rst","programmers-reference/fem/solving/index.rst","programmers-reference/fem/solving/solve.rst","programmers-reference/functions/constant/Constant.rst","programmers-reference/functions/constant/index.rst","programmers-reference/functions/expression/Expression.rst","programmers-reference/functions/expression/index.rst","programmers-reference/functions/function/Argument.rst","programmers-reference/functions/function/Function.rst","programmers-reference/functions/function/TestFunction.rst","programmers-reference/functions/function/TestFunctions.rst","programmers-reference/functions/function/TrialFunction.rst","programmers-reference/functions/function/TrialFunctions.rst","programmers-reference/functions/function/index.rst","programmers-reference/functions/functionspace/FunctionSpace.rst","programmers-reference/functions/functionspace/FunctionSpaceBase.rst","programmers-reference/functions/functionspace/FunctionSpaceFromCpp.rst","programmers-reference/functions/functionspace/MixedFunctionSpace.rst","programmers-reference/functions/functionspace/TensorFunctionSpace.rst","programmers-reference/functions/functionspace/VectorFunctionSpace.rst","programmers-reference/functions/functionspace/create_ufc_function_spaces.rst","programmers-reference/functions/functionspace/index.rst","programmers-reference/functions/index.rst","programmers-reference/functions/specialfunctions/CellNormal.rst","programmers-reference/functions/specialfunctions/CellSize.rst","programmers-reference/functions/specialfunctions/CellVolume.rst","programmers-reference/functions/specialfunctions/Circumradius.rst","programmers-reference/functions/specialfunctions/FacetArea.rst","programmers-reference/functions/specialfunctions/FacetNormal.rst","programmers-reference/functions/specialfunctions/MaxFacetEdgeLength.rst","programmers-reference/functions/specialfunctions/MeshCoordinates.rst","programmers-reference/functions/specialfunctions/MinFacetEdgeLength.rst","programmers-reference/functions/specialfunctions/SpatialCoordinate.rst","programmers-reference/functions/specialfunctions/index.rst","programmers-reference/functions/ufc_functionspace/UFCFunctionSpace.rst","programmers-reference/functions/ufc_functionspace/create_ufc_function_spaces.rst","programmers-reference/functions/ufc_functionspace/index.rst","programmers-reference/importhandler/index.rst","programmers-reference/index.rst","programmers-reference/mesh/ale/compute_edge_map.rst","programmers-reference/mesh/ale/compute_vertex_map.rst","programmers-reference/mesh/ale/index.rst","programmers-reference/mesh/ale/init_parent_edge_indices.rst","programmers-reference/mesh/boundarysubdomainfinder/create_maps.rst","programmers-reference/mesh/boundarysubdomainfinder/find_all_subdomains.rst","programmers-reference/mesh/boundarysubdomainfinder/find_keys_on_one_subdomain.rst","programmers-reference/mesh/boundarysubdomainfinder/find_new_cell_key.rst","programmers-reference/mesh/boundarysubdomainfinder/find_subdomain.rst","programmers-reference/mesh/boundarysubdomainfinder/index.rst","programmers-reference/mesh/boundarysubdomainfinder/main.rst","programmers-reference/mesh/boundarysubdomainfinder/usage.rst","programmers-reference/mesh/boundarysubdomainfinder/write_file.rst","programmers-reference/mesh/index.rst","programmers-reference/mesh/meshes/index.rst","programmers-reference/mesh/refinement/index.rst","programmers-reference/mesh/refinement/refine.rst","programmers-reference/mesh/svgtools/index.rst","programmers-reference/mesh/svgtools/mesh2svg.rst","programmers-reference/multistage/factorize/extract_tested_expressions.rst","programmers-reference/multistage/factorize/index.rst","programmers-reference/multistage/index.rst","programmers-reference/multistage/multistagescheme/BDF1.rst","programmers-reference/multistage/multistagescheme/BackwardEuler.rst","programmers-reference/multistage/multistagescheme/ButcherMultiStageScheme.rst","programmers-reference/multistage/multistagescheme/CN2.rst","programmers-reference/multistage/multistagescheme/CrankNicolson.rst","programmers-reference/multistage/multistagescheme/ERK.rst","programmers-reference/multistage/multistagescheme/ERK1.rst","programmers-reference/multistage/multistagescheme/ERK4.rst","programmers-reference/multistage/multistagescheme/ESDIRK3.rst","programmers-reference/multistage/multistagescheme/ESDIRK4.rst","programmers-reference/multistage/multistagescheme/ExplicitEuler.rst","programmers-reference/multistage/multistagescheme/ExplicitMidPoint.rst","programmers-reference/multistage/multistagescheme/ForwardEuler.rst","programmers-reference/multistage/multistagescheme/ImplicitEuler.rst","programmers-reference/multistage/multistagescheme/MultiStageScheme.rst","programmers-reference/multistage/multistagescheme/RK4.rst","programmers-reference/multistage/multistagescheme/index.rst","programmers-reference/multistage/multistagesolvers/PointIntegralSolver.rst","programmers-reference/multistage/multistagesolvers/RKSolver.rst","programmers-reference/multistage/multistagesolvers/index.rst","programmers-reference/multistage/rushlarsenschemes/GRL1.rst","programmers-reference/multistage/rushlarsenschemes/GRL2.rst","programmers-reference/multistage/rushlarsenschemes/MultiStageScheme.rst","programmers-reference/multistage/rushlarsenschemes/RL1.rst","programmers-reference/multistage/rushlarsenschemes/RL2.rst","programmers-reference/multistage/rushlarsenschemes/RushLarsenScheme.rst","programmers-reference/multistage/rushlarsenschemes/index.rst","quick_reference.rst"],objects:{"":{dolfin:[547,0,0,"-"]},"dolfin.common":{constants:[24,0,0,"-"],globalparameters:[25,0,0,"-"],math:[27,0,0,"-"],memory:[29,0,0,"-"],plotting:[31,0,0,"-"],time:[33,0,0,"-"]},"dolfin.common.math":{sqr:[28,1,1,""]},"dolfin.common.memory":{memory_usage:[30,1,1,""]},"dolfin.common.plotting":{plot:[32,1,1,""]},"dolfin.compilemodules":{compilemodule:[36,0,0,"-"],expressions:[38,0,0,"-"],jit:[40,0,0,"-"],subdomains:[44,0,0,"-"],swigimportinfo:[45,0,0,"-"]},"dolfin.compilemodules.compilemodule":{compile_extension_module:[34,1,1,""],expression_to_code_fragments:[35,1,1,""]},"dolfin.compilemodules.expressions":{compile_expressions:[37,1,1,""]},"dolfin.compilemodules.jit":{jit:[41,1,1,""]},"dolfin.compilemodules.subdomains":{CompiledSubDomain:[42,1,1,""],compile_subdomains:[43,1,1,""]},"dolfin.cpp":{"function":[225,0,0,"-"],common:[110,0,0,"-"],fem:[193,0,0,"-"],io:[243,0,0,"-"],la:[326,0,0,"-"],mesh:[471,0,0,"-"]},"dolfin.cpp.common":{BoolParameter:[46,2,1,""],DoubleArray:[47,2,1,""],DoubleParameter:[48,2,1,""],Event:[49,2,1,""],GlobalParameters:[50,2,1,""],GlobalParameters_default_parameters:[51,1,1,""],IndexSet:[52,2,1,""],IntArray:[53,2,1,""],IntParameter:[54,2,1,""],MPI:[55,2,1,""],MPIInfo:[56,2,1,""],MPI_Comm:[57,2,1,""],MPI_barrier:[58,1,1,""],MPI_compute_local_range:[59,1,1,""],MPI_gather:[60,1,1,""],MPI_global_offset:[61,1,1,""],MPI_index_owner:[62,1,1,""],MPI_is_broadcaster:[63,1,1,""],MPI_is_receiver:[64,1,1,""],MPI_local_range:[65,1,1,""],MPI_max:[66,1,1,""],MPI_min:[67,1,1,""],MPI_rank:[68,1,1,""],MPI_size:[69,1,1,""],MPI_sum:[70,1,1,""],ParameterValue:[71,2,1,""],Parameters:[72,2,1,""],Progress:[73,2,1,""],StringParameter:[74,2,1,""],SubSystemsManager:[75,2,1,""],SubSystemsManager_finalize:[76,1,1,""],SubSystemsManager_init_mpi:[77,1,1,""],SubSystemsManager_init_petsc:[78,1,1,""],SubSystemsManager_mpi_finalized:[79,1,1,""],SubSystemsManager_mpi_initialized:[80,1,1,""],SubSystemsManager_responsible_mpi:[81,1,1,""],SubSystemsManager_responsible_petsc:[82,1,1,""],Table:[83,2,1,""],TableEntry:[84,2,1,""],Timer:[85,2,1,""],UIntArray:[86,2,1,""],Variable:[87,2,1,""],begin:[88,1,1,""],debug:[89,1,1,""],deprecation:[90,1,1,""],dolfin_error:[91,1,1,""],dolfin_version:[92,1,1,""],end:[93,1,1,""],error:[94,1,1,""],get_log_level:[95,1,1,""],git_commit_hash:[96,1,1,""],has_cholmod:[97,1,1,""],has_exodus:[98,1,1,""],has_hdf5:[99,1,1,""],has_mpi:[100,1,1,""],has_openmp:[101,1,1,""],has_parmetis:[102,1,1,""],has_petsc:[103,1,1,""],has_petsc_snes:[104,1,1,""],has_petsc_tao:[105,1,1,""],has_scotch:[106,1,1,""],has_slepc:[107,1,1,""],has_umfpack:[108,1,1,""],has_zlib:[109,1,1,""],info:[111,1,1,""],info_stream:[112,1,1,""],info_underline:[113,1,1,""],init:[114,1,1,""],list_timings:[115,1,1,""],log:[116,1,1,""],monitor_memory_usage:[117,1,1,""],not_working_in_parallel:[118,1,1,""],set_log_active:[119,1,1,""],set_log_level:[120,1,1,""],set_output_stream:[121,1,1,""],sizeof_la_index:[122,1,1,""],summary:[123,1,1,""],tic:[124,1,1,""],time:[125,1,1,""],timing:[126,1,1,""],timings:[127,1,1,""],toc:[128,1,1,""],warning:[129,1,1,""]},"dolfin.cpp.common.BoolParameter":{thisown:[46,3,1,""]},"dolfin.cpp.common.DoubleArray":{array:[47,4,1,""],data:[47,4,1,""],size:[47,4,1,""],str:[47,4,1,""],thisown:[47,3,1,""]},"dolfin.cpp.common.DoubleParameter":{thisown:[48,3,1,""]},"dolfin.cpp.common.Event":{count:[49,4,1,""],maxcount:[49,4,1,""],thisown:[49,3,1,""]},"dolfin.cpp.common.GlobalParameters":{default_parameters:[50,5,1,""],thisown:[50,3,1,""]},"dolfin.cpp.common.IndexSet":{clear:[52,4,1,""],empty:[52,4,1,""],fill:[52,4,1,""],find:[52,4,1,""],has_index:[52,4,1,""],insert:[52,4,1,""],size:[52,4,1,""],thisown:[52,3,1,""]},"dolfin.cpp.common.IntArray":{array:[53,4,1,""],data:[53,4,1,""],size:[53,4,1,""],str:[53,4,1,""],thisown:[53,3,1,""]},"dolfin.cpp.common.IntParameter":{thisown:[54,3,1,""]},"dolfin.cpp.common.MPI":{barrier:[55,5,1,""],compute_local_range:[55,5,1,""],gather:[55,5,1,""],global_offset:[55,5,1,""],index_owner:[55,5,1,""],is_broadcaster:[55,5,1,""],is_receiver:[55,5,1,""],local_range:[55,5,1,""],max:[55,5,1,""],min:[55,5,1,""],rank:[55,5,1,""],size:[55,5,1,""],sum:[55,5,1,""],thisown:[55,3,1,""]},"dolfin.cpp.common.MPIInfo":{thisown:[56,3,1,""]},"dolfin.cpp.common.MPI_Comm":{thisown:[57,3,1,""]},"dolfin.cpp.common.ParameterValue":{access_count:[71,4,1,""],change_count:[71,4,1,""],check_key:[71,5,1,""],data:[71,4,1,""],description:[71,4,1,""],get_range:[71,4,1,""],is_set:[71,4,1,""],key:[71,4,1,""],range_str:[71,4,1,""],reset:[71,4,1,""],set_range:[71,4,1,""],str:[71,4,1,""],thisown:[71,3,1,""],type_str:[71,4,1,""],value:[71,4,1,""],value_str:[71,4,1,""],warn_once:[71,4,1,""]},"dolfin.cpp.common.Parameters":{add:[72,4,1,""],assign:[72,4,1,""],clear:[72,4,1,""],copy:[72,4,1,""],find_parameter:[72,4,1,""],find_parameter_set:[72,4,1,""],get:[72,4,1,""],get_range:[72,4,1,""],has_key:[72,4,1,""],has_parameter:[72,4,1,""],has_parameter_set:[72,4,1,""],items:[72,4,1,""],iterdata:[72,4,1,""],iteritems:[72,4,1,""],iterkeys:[72,4,1,""],itervalues:[72,4,1,""],keys:[72,4,1,""],name:[72,4,1,""],option_string:[72,4,1,""],parse:[72,4,1,""],remove:[72,4,1,""],rename:[72,4,1,""],set_range:[72,4,1,""],str:[72,4,1,""],thisown:[72,3,1,""],to_dict:[72,4,1,""],update:[72,4,1,""],values:[72,4,1,""]},"dolfin.cpp.common.Progress":{thisown:[73,3,1,""],update:[73,4,1,""]},"dolfin.cpp.common.StringParameter":{thisown:[74,3,1,""]},"dolfin.cpp.common.SubSystemsManager":{finalize:[75,5,1,""],init_mpi:[75,5,1,""],init_petsc:[75,5,1,""],mpi_finalized:[75,5,1,""],mpi_initialized:[75,5,1,""],responsible_mpi:[75,5,1,""],responsible_petsc:[75,5,1,""],thisown:[75,3,1,""]},"dolfin.cpp.common.Table":{get:[83,4,1,""],get_value:[83,4,1,""],set:[83,4,1,""],str_latex:[83,4,1,""],thisown:[83,3,1,""],title:[83,4,1,""]},"dolfin.cpp.common.TableEntry":{thisown:[84,3,1,""]},"dolfin.cpp.common.Timer":{start:[85,4,1,""],stop:[85,4,1,""],thisown:[85,3,1,""],value:[85,4,1,""]},"dolfin.cpp.common.UIntArray":{array:[86,4,1,""],data:[86,4,1,""],size:[86,4,1,""],str:[86,4,1,""],thisown:[86,3,1,""]},"dolfin.cpp.common.Variable":{id:[87,4,1,""],label:[87,4,1,""],name:[87,4,1,""],parameters:[87,3,1,""],rename:[87,4,1,""],str:[87,4,1,""],thisown:[87,3,1,""]},"dolfin.cpp.fem":{AdaptiveLinearVariationalSolver:[130,2,1,""],AdaptiveNonlinearVariationalSolver:[131,2,1,""],Assembler:[132,2,1,""],AssemblerBase:[133,2,1,""],BasisFunction:[134,2,1,""],DirichletBC:[135,2,1,""],DirichletBC_default_parameters:[136,1,1,""],DofMap:[137,2,1,""],Equation:[138,2,1,""],ErrorControl:[139,2,1,""],ErrorControl_default_parameters:[140,1,1,""],Extrapolation:[141,2,1,""],Extrapolation_extrapolate:[142,1,1,""],FiniteElement:[143,2,1,""],Form:[144,2,1,""],GenericAdaptiveVariationalSolver:[145,2,1,""],GenericAdaptiveVariationalSolver_default_parameters:[146,1,1,""],GenericDofMap:[147,2,1,""],HierarchicalDirichletBC:[148,2,1,""],HierarchicalErrorControl:[149,2,1,""],HierarchicalForm:[150,2,1,""],HierarchicalFunction:[151,2,1,""],HierarchicalFunctionSpace:[152,2,1,""],HierarchicalLinearVariationalProblem:[153,2,1,""],HierarchicalMesh:[154,2,1,""],HierarchicalNonlinearVariationalProblem:[155,2,1,""],LinearVariationalProblem:[156,2,1,""],LinearVariationalSolver:[157,2,1,""],LinearVariationalSolver_default_parameters:[158,1,1,""],LocalAssembler:[159,2,1,""],LocalAssembler_assemble:[160,1,1,""],LocalAssembler_assemble_cell:[161,1,1,""],LocalAssembler_assemble_exterior_facet:[162,1,1,""],LocalAssembler_assemble_interior_facet:[163,1,1,""],LocalSolver:[164,2,1,""],MultiMeshAssembler:[165,2,1,""],MultiMeshDirichletBC:[166,2,1,""],MultiMeshDofMap:[167,2,1,""],MultiMeshForm:[168,2,1,""],MultiStageScheme:[169,2,1,""],NonlinearVariationalProblem:[170,2,1,""],NonlinearVariationalSolver:[171,2,1,""],NonlinearVariationalSolver_default_parameters:[172,1,1,""],OpenMpAssembler:[173,2,1,""],PointIntegralSolver:[174,2,1,""],PointIntegralSolver_default_parameters:[175,1,1,""],PointSource:[176,2,1,""],RKSolver:[177,2,1,""],SparsityPatternBuilder:[178,2,1,""],SparsityPatternBuilder_build:[179,1,1,""],SparsityPatternBuilder_build_multimesh_sparsity_pattern:[180,1,1,""],SystemAssembler:[181,2,1,""],TimeSeries:[182,2,1,""],TimeSeries_default_parameters:[183,1,1,""],TimeSeries_filename_data:[184,1,1,""],TimeSeries_filename_times:[185,1,1,""],adapt:[186,1,1,""],adapt_markers:[187,1,1,""],assemble:[188,1,1,""],assemble_system:[189,1,1,""],dof_to_vertex_map:[190,1,1,""],dorfler_mark:[191,1,1,""],fem_solve:[192,1,1,""],mark:[194,1,1,""],vertex_to_dof_map:[195,1,1,""]},"dolfin.cpp.fem.AdaptiveLinearVariationalSolver":{thisown:[130,3,1,""]},"dolfin.cpp.fem.AdaptiveNonlinearVariationalSolver":{thisown:[131,3,1,""]},"dolfin.cpp.fem.Assembler":{assemble:[132,4,1,""],assemble_cells:[132,4,1,""],assemble_exterior_facets:[132,4,1,""],assemble_interior_facets:[132,4,1,""],assemble_vertices:[132,4,1,""],thisown:[132,3,1,""]},"dolfin.cpp.fem.AssemblerBase":{add_values:[133,3,1,""],finalize_tensor:[133,3,1,""],init_global_tensor:[133,4,1,""],keep_diagonal:[133,3,1,""],thisown:[133,3,1,""]},"dolfin.cpp.fem.BasisFunction":{eval:[134,4,1,""],eval_derivatives:[134,4,1,""],thisown:[134,3,1,""]},"dolfin.cpp.fem.DirichletBC":{apply:[135,4,1,""],default_parameters:[135,5,1,""],function_space:[135,4,1,""],get_boundary_values:[135,4,1,""],homogenize:[135,4,1,""],is_compatible:[135,4,1,""],markers:[135,4,1,""],method:[135,4,1,""],set_value:[135,4,1,""],thisown:[135,3,1,""],user_sub_domain:[135,4,1,""],value:[135,4,1,""],zero:[135,4,1,""],zero_columns:[135,4,1,""]},"dolfin.cpp.fem.DofMap":{data:[137,4,1,""],thisown:[137,3,1,""]},"dolfin.cpp.fem.Equation":{is_linear:[138,4,1,""],lhs:[138,4,1,""],rhs:[138,4,1,""],rhs_int:[138,4,1,""],thisown:[138,3,1,""]},"dolfin.cpp.fem.ErrorControl":{compute_cell_residual:[139,4,1,""],compute_dual:[139,4,1,""],compute_extrapolation:[139,4,1,""],compute_facet_residual:[139,4,1,""],compute_indicators:[139,4,1,""],default_parameters:[139,5,1,""],estimate_error:[139,4,1,""],residual_representation:[139,4,1,""],thisown:[139,3,1,""]},"dolfin.cpp.fem.Extrapolation":{extrapolate:[141,5,1,""],thisown:[141,3,1,""]},"dolfin.cpp.fem.FiniteElement":{cell_shape:[143,4,1,""],create:[143,4,1,""],create_sub_element:[143,4,1,""],evaluate_basis:[143,4,1,""],evaluate_basis_all:[143,4,1,""],evaluate_basis_derivatives:[143,4,1,""],evaluate_basis_derivatives_all:[143,4,1,""],evaluate_dof:[143,4,1,""],evaluate_dofs:[143,4,1,""],extract_sub_element:[143,4,1,""],geometric_dimension:[143,4,1,""],hash:[143,4,1,""],interpolate_vertex_values:[143,4,1,""],map_from_reference_cell:[143,4,1,""],map_to_reference_cell:[143,4,1,""],num_sub_elements:[143,4,1,""],signature:[143,4,1,""],space_dimension:[143,4,1,""],thisown:[143,3,1,""],topological_dimension:[143,4,1,""],ufc_element:[143,4,1,""],value_dimension:[143,4,1,""],value_rank:[143,4,1,""]},"dolfin.cpp.fem.Form":{cell_domains:[144,4,1,""],check:[144,4,1,""],coefficient:[144,4,1,""],coefficient_name:[144,4,1,""],coefficient_number:[144,4,1,""],coefficients:[144,4,1,""],coloring:[144,4,1,""],exterior_facet_domains:[144,4,1,""],function_space:[144,4,1,""],function_spaces:[144,4,1,""],interior_facet_domains:[144,4,1,""],mesh:[144,4,1,""],mesh_shared_ptr:[144,4,1,""],num_coefficients:[144,4,1,""],rank:[144,4,1,""],set_cell_domains:[144,4,1,""],set_coefficient:[144,4,1,""],set_coefficients:[144,4,1,""],set_exterior_facet_domains:[144,4,1,""],set_interior_facet_domains:[144,4,1,""],set_mesh:[144,4,1,""],set_some_coefficients:[144,4,1,""],set_vertex_domains:[144,4,1,""],thisown:[144,3,1,""],ufc_form:[144,4,1,""],vertex_domains:[144,4,1,""]},"dolfin.cpp.fem.GenericAdaptiveVariationalSolver":{adapt_problem:[145,4,1,""],adaptive_data:[145,4,1,""],default_parameters:[145,5,1,""],evaluate_goal:[145,4,1,""],extract_bcs:[145,4,1,""],solve:[145,4,1,""],solve_primal:[145,4,1,""],summary:[145,4,1,""],thisown:[145,3,1,""]},"dolfin.cpp.fem.GenericDofMap":{block_size:[147,3,1,""],cell_dimension:[147,4,1,""],cell_dofs:[147,4,1,""],clear_sub_map_data:[147,4,1,""],collapse:[147,4,1,""],constrained_domain:[147,3,1,""],copy:[147,4,1,""],create:[147,4,1,""],dofs:[147,4,1,""],extract_sub_dofmap:[147,4,1,""],geometric_dimension:[147,4,1,""],global_dimension:[147,4,1,""],is_view:[147,4,1,""],local_dimension:[147,4,1,""],local_to_global_index:[147,4,1,""],local_to_global_unowned:[147,4,1,""],max_cell_dimension:[147,4,1,""],neighbours:[147,4,1,""],num_entity_dofs:[147,4,1,""],num_facet_dofs:[147,4,1,""],off_process_owner:[147,4,1,""],ownership_range:[147,4,1,""],set:[147,4,1,""],set_x:[147,4,1,""],shared_nodes:[147,4,1,""],tabulate_all_coordinates:[147,4,1,""],tabulate_coordinates:[147,4,1,""],tabulate_entity_dofs:[147,4,1,""],tabulate_facet_dofs:[147,4,1,""],tabulate_local_to_global_dofs:[147,4,1,""],thisown:[147,3,1,""]},"dolfin.cpp.fem.HierarchicalDirichletBC":{child:[148,4,1,""],clear_child:[148,4,1,""],depth:[148,4,1,""],has_child:[148,4,1,""],has_parent:[148,4,1,""],leaf_node:[148,4,1,""],parent:[148,4,1,""],root_node:[148,4,1,""],set_child:[148,4,1,""],set_parent:[148,4,1,""],thisown:[148,3,1,""]},"dolfin.cpp.fem.HierarchicalErrorControl":{child:[149,4,1,""],clear_child:[149,4,1,""],depth:[149,4,1,""],has_child:[149,4,1,""],has_parent:[149,4,1,""],leaf_node:[149,4,1,""],parent:[149,4,1,""],root_node:[149,4,1,""],set_child:[149,4,1,""],set_parent:[149,4,1,""],thisown:[149,3,1,""]},"dolfin.cpp.fem.HierarchicalForm":{child:[150,4,1,""],clear_child:[150,4,1,""],depth:[150,4,1,""],has_child:[150,4,1,""],has_parent:[150,4,1,""],leaf_node:[150,4,1,""],parent:[150,4,1,""],root_node:[150,4,1,""],set_child:[150,4,1,""],set_parent:[150,4,1,""],thisown:[150,3,1,""]},"dolfin.cpp.fem.HierarchicalFunction":{clear_child:[151,4,1,""],depth:[151,4,1,""],has_child:[151,4,1,""],has_parent:[151,4,1,""],set_child:[151,4,1,""],set_parent:[151,4,1,""],thisown:[151,3,1,""]},"dolfin.cpp.fem.HierarchicalFunctionSpace":{clear_child:[152,4,1,""],depth:[152,4,1,""],has_child:[152,4,1,""],has_parent:[152,4,1,""],set_child:[152,4,1,""],set_parent:[152,4,1,""],thisown:[152,3,1,""]},"dolfin.cpp.fem.HierarchicalLinearVariationalProblem":{child:[153,4,1,""],clear_child:[153,4,1,""],depth:[153,4,1,""],has_child:[153,4,1,""],has_parent:[153,4,1,""],leaf_node:[153,4,1,""],parent:[153,4,1,""],root_node:[153,4,1,""],set_child:[153,4,1,""],set_parent:[153,4,1,""],thisown:[153,3,1,""]},"dolfin.cpp.fem.HierarchicalMesh":{clear_child:[154,4,1,""],depth:[154,4,1,""],has_child:[154,4,1,""],has_parent:[154,4,1,""],set_child:[154,4,1,""],set_parent:[154,4,1,""],thisown:[154,3,1,""]},"dolfin.cpp.fem.HierarchicalNonlinearVariationalProblem":{child:[155,4,1,""],clear_child:[155,4,1,""],depth:[155,4,1,""],has_child:[155,4,1,""],has_parent:[155,4,1,""],leaf_node:[155,4,1,""],parent:[155,4,1,""],root_node:[155,4,1,""],set_child:[155,4,1,""],set_parent:[155,4,1,""],thisown:[155,3,1,""]},"dolfin.cpp.fem.LinearVariationalProblem":{bcs:[156,4,1,""],bilinear_form:[156,4,1,""],linear_form:[156,4,1,""],solution:[156,4,1,""],test_space:[156,4,1,""],thisown:[156,3,1,""],trial_space:[156,4,1,""]},"dolfin.cpp.fem.LinearVariationalSolver":{default_parameters:[157,5,1,""],solve:[157,4,1,""],thisown:[157,3,1,""]},"dolfin.cpp.fem.LocalAssembler":{assemble:[159,5,1,""],assemble_cell:[159,5,1,""],assemble_exterior_facet:[159,5,1,""],assemble_interior_facet:[159,5,1,""],thisown:[159,3,1,""]},"dolfin.cpp.fem.LocalSolver":{solve:[164,4,1,""],thisown:[164,3,1,""]},"dolfin.cpp.fem.MultiMeshAssembler":{assemble:[165,4,1,""],thisown:[165,3,1,""]},"dolfin.cpp.fem.MultiMeshDirichletBC":{apply:[166,4,1,""],thisown:[166,3,1,""]},"dolfin.cpp.fem.MultiMeshDofMap":{add:[167,4,1,""],build:[167,4,1,""],clear:[167,4,1,""],global_dimension:[167,4,1,""],num_parts:[167,4,1,""],off_process_owner:[167,4,1,""],ownership_range:[167,4,1,""],part:[167,4,1,""],str:[167,4,1,""],thisown:[167,3,1,""]},"dolfin.cpp.fem.MultiMeshForm":{add:[168,4,1,""],build:[168,4,1,""],clear:[168,4,1,""],function_space:[168,4,1,""],multimesh:[168,4,1,""],num_parts:[168,4,1,""],part:[168,4,1,""],rank:[168,4,1,""],thisown:[168,3,1,""]},"dolfin.cpp.fem.MultiStageScheme":{bcs:[169,4,1,""],dt_stage_offset:[169,4,1,""],implicit:[169,4,1,""],jacobian_index:[169,4,1,""],order:[169,4,1,""],thisown:[169,3,1,""]},"dolfin.cpp.fem.NonlinearVariationalProblem":{bcs:[170,4,1,""],has_jacobian:[170,4,1,""],has_lower_bound:[170,4,1,""],has_upper_bound:[170,4,1,""],jacobian_form:[170,4,1,""],lower_bound:[170,4,1,""],residual_form:[170,4,1,""],set_bounds:[170,4,1,""],solution:[170,4,1,""],test_space:[170,4,1,""],thisown:[170,3,1,""],trial_space:[170,4,1,""],upper_bound:[170,4,1,""]},"dolfin.cpp.fem.NonlinearVariationalSolver":{default_parameters:[171,5,1,""],solve:[171,4,1,""],thisown:[171,3,1,""]},"dolfin.cpp.fem.OpenMpAssembler":{assemble:[173,4,1,""],thisown:[173,3,1,""]},"dolfin.cpp.fem.PointIntegralSolver":{default_parameters:[174,5,1,""],num_jacobian_computations:[174,4,1,""],reset_newton_solver:[174,4,1,""],reset_stage_solutions:[174,4,1,""],step:[174,4,1,""],step_interval:[174,4,1,""],thisown:[174,3,1,""]},"dolfin.cpp.fem.PointSource":{apply:[176,4,1,""],thisown:[176,3,1,""]},"dolfin.cpp.fem.RKSolver":{step:[177,4,1,""],step_interval:[177,4,1,""],thisown:[177,3,1,""]},"dolfin.cpp.fem.SparsityPatternBuilder":{build:[178,5,1,""],build_multimesh_sparsity_pattern:[178,5,1,""],thisown:[178,3,1,""]},"dolfin.cpp.fem.SystemAssembler":{assemble:[181,4,1,""],thisown:[181,3,1,""]},"dolfin.cpp.fem.TimeSeries":{clear:[182,4,1,""],default_parameters:[182,5,1,""],filename_data:[182,5,1,""],filename_times:[182,5,1,""],mesh_times:[182,4,1,""],retrieve:[182,4,1,""],store:[182,4,1,""],thisown:[182,3,1,""],vector_times:[182,4,1,""]},"dolfin.cpp.function":{ALE:[196,2,1,""],ALE_move:[197,1,1,""],Constant:[198,2,1,""],Expression:[199,2,1,""],FacetArea:[200,2,1,""],Function:[201,2,1,""],FunctionAXPY:[202,2,1,""],FunctionAssigner:[203,2,1,""],FunctionSpace:[204,2,1,""],GenericFunction:[205,2,1,""],HierarchicalFunction:[206,2,1,""],HierarchicalFunctionSpace:[207,2,1,""],HierarchicalMesh:[208,2,1,""],Lagrange:[209,2,1,""],LagrangeInterpolator:[210,2,1,""],Legendre:[211,2,1,""],Legendre_d2dx:[212,1,1,""],Legendre_ddx:[213,1,1,""],Legendre_eval:[214,1,1,""],MeshCoordinates:[215,2,1,""],MeshDisplacement:[216,2,1,""],MultiMeshFunction:[217,2,1,""],MultiMeshFunctionSpace:[218,2,1,""],MultiMeshFunctionSpace_default_parameters:[219,1,1,""],MultiMeshSubSpace:[220,2,1,""],SpecialFacetFunction:[221,2,1,""],SubSpace:[222,2,1,""],assign:[223,1,1,""],between:[224,1,1,""],ipow:[226,1,1,""],lt_coordinate:[227,2,1,""],near:[228,1,1,""],rand:[229,1,1,""],seed:[230,1,1,""]},"dolfin.cpp.function.ALE":{move:[196,5,1,""],thisown:[196,3,1,""]},"dolfin.cpp.function.Constant":{assign:[198,4,1,""],thisown:[198,3,1,""]},"dolfin.cpp.function.Expression":{eval:[199,4,1,""],eval_cell:[199,4,1,""],thisown:[199,3,1,""]},"dolfin.cpp.function.FacetArea":{thisown:[200,3,1,""]},"dolfin.cpp.function.Function":{child:[201,4,1,""],compute_vertex_values:[201,4,1,""],copy:[201,4,1,""],eval:[201,4,1,""],extrapolate:[201,4,1,""],function_space:[201,4,1,""],geometric_dimension:[201,4,1,""],interpolate:[201,4,1,""],leaf_node:[201,4,1,""],non_matching_eval:[201,4,1,""],parent:[201,4,1,""],root_node:[201,4,1,""],sub:[201,4,1,""],thisown:[201,3,1,""],vector:[201,4,1,""]},"dolfin.cpp.function.FunctionAXPY":{ADD_ADD:[202,3,1,""],ADD_SUB:[202,3,1,""],SUB_ADD:[202,3,1,""],SUB_SUB:[202,3,1,""],pairs:[202,4,1,""],thisown:[202,3,1,""]},"dolfin.cpp.function.FunctionAssigner":{assign:[203,4,1,""],num_assigning_functions:[203,4,1,""],num_receiving_functions:[203,4,1,""],thisown:[203,3,1,""]},"dolfin.cpp.function.FunctionSpace":{assign:[204,4,1,""],child:[204,4,1,""],collapse:[204,4,1,""],component:[204,4,1,""],dim:[204,4,1,""],dofmap:[204,4,1,""],element:[204,4,1,""],extract_sub_space:[204,4,1,""],has_cell:[204,4,1,""],has_element:[204,4,1,""],interpolate:[204,4,1,""],leaf_node:[204,4,1,""],mesh:[204,4,1,""],parent:[204,4,1,""],print_dofmap:[204,4,1,""],root_node:[204,4,1,""],sub:[204,4,1,""],thisown:[204,3,1,""]},"dolfin.cpp.function.GenericFunction":{compute_vertex_values:[205,4,1,""],eval:[205,4,1,""],eval_cell:[205,4,1,""],restrict:[205,4,1,""],thisown:[205,3,1,""],update:[205,4,1,""],value_dimension:[205,4,1,""],value_rank:[205,4,1,""],value_size:[205,4,1,""]},"dolfin.cpp.function.HierarchicalFunction":{clear_child:[206,4,1,""],depth:[206,4,1,""],has_child:[206,4,1,""],has_parent:[206,4,1,""],set_child:[206,4,1,""],set_parent:[206,4,1,""],thisown:[206,3,1,""]},"dolfin.cpp.function.HierarchicalFunctionSpace":{clear_child:[207,4,1,""],depth:[207,4,1,""],has_child:[207,4,1,""],has_parent:[207,4,1,""],set_child:[207,4,1,""],set_parent:[207,4,1,""],thisown:[207,3,1,""]},"dolfin.cpp.function.HierarchicalMesh":{clear_child:[208,4,1,""],depth:[208,4,1,""],has_child:[208,4,1,""],has_parent:[208,4,1,""],set_child:[208,4,1,""],set_parent:[208,4,1,""],thisown:[208,3,1,""]},"dolfin.cpp.function.Lagrange":{ddx:[209,4,1,""],degree:[209,4,1,""],dqdx:[209,4,1,""],eval:[209,4,1,""],point:[209,4,1,""],set:[209,4,1,""],size:[209,4,1,""],thisown:[209,3,1,""]},"dolfin.cpp.function.LagrangeInterpolator":{interpolate:[210,4,1,""],thisown:[210,3,1,""]},"dolfin.cpp.function.Legendre":{d2dx:[211,5,1,""],ddx:[211,5,1,""],eval:[211,5,1,""],thisown:[211,3,1,""]},"dolfin.cpp.function.MeshCoordinates":{thisown:[215,3,1,""]},"dolfin.cpp.function.MeshDisplacement":{sub:[216,4,1,""],thisown:[216,3,1,""]},"dolfin.cpp.function.MultiMeshFunction":{part:[217,4,1,""],thisown:[217,3,1,""],vector:[217,4,1,""]},"dolfin.cpp.function.MultiMeshFunctionSpace":{add:[218,4,1,""],build:[218,4,1,""],default_parameters:[218,5,1,""],dim:[218,4,1,""],dofmap:[218,4,1,""],multimesh:[218,4,1,""],num_parts:[218,4,1,""],part:[218,4,1,""],thisown:[218,3,1,""],view:[218,4,1,""]},"dolfin.cpp.function.MultiMeshSubSpace":{thisown:[220,3,1,""]},"dolfin.cpp.function.SpecialFacetFunction":{thisown:[221,3,1,""]},"dolfin.cpp.function.SubSpace":{thisown:[222,3,1,""]},"dolfin.cpp.function.lt_coordinate":{TOL:[227,3,1,""],thisown:[227,3,1,""]},"dolfin.cpp.io":{File:[232,2,1,""],File_create_parent_path:[233,1,1,""],File_exists:[234,1,1,""],GenericFile:[235,2,1,""],HierarchicalFunction:[236,2,1,""],HierarchicalFunctionSpace:[237,2,1,""],HierarchicalMesh:[238,2,1,""],VTKPlotter:[239,2,1,""],VTKPlotter_all_interactive:[240,1,1,""],VTKPlotter_default_parameters:[241,1,1,""],VTKPlotter_to_key:[242,1,1,""],interactive:[244,1,1,""],plot:[245,1,1,""]},"dolfin.cpp.io.File":{binary:[232,3,1,""],create_parent_path:[232,5,1,""],exists:[232,5,1,""],raw:[232,3,1,""],svg:[232,3,1,""],thisown:[232,3,1,""],vtk:[232,3,1,""],x3d:[232,3,1,""],xdmf:[232,3,1,""],xml:[232,3,1,""],xyz:[232,3,1,""]},"dolfin.cpp.io.GenericFile":{name:[235,4,1,""],read:[235,4,1,""],thisown:[235,3,1,""],write:[235,4,1,""]},"dolfin.cpp.io.HierarchicalFunction":{clear_child:[236,4,1,""],depth:[236,4,1,""],has_child:[236,4,1,""],has_parent:[236,4,1,""],set_child:[236,4,1,""],set_parent:[236,4,1,""],thisown:[236,3,1,""]},"dolfin.cpp.io.HierarchicalFunctionSpace":{clear_child:[237,4,1,""],depth:[237,4,1,""],has_child:[237,4,1,""],has_parent:[237,4,1,""],set_child:[237,4,1,""],set_parent:[237,4,1,""],thisown:[237,3,1,""]},"dolfin.cpp.io.HierarchicalMesh":{clear_child:[238,4,1,""],depth:[238,4,1,""],has_child:[238,4,1,""],has_parent:[238,4,1,""],set_child:[238,4,1,""],set_parent:[238,4,1,""],thisown:[238,3,1,""]},"dolfin.cpp.io.VTKPlotter":{ALT:[239,3,1,""],CONTROL:[239,3,1,""],SHIFT:[239,3,1,""],add_polygon:[239,4,1,""],all_interactive:[239,5,1,""],azimuth:[239,4,1,""],default_parameters:[239,5,1,""],dolly:[239,4,1,""],elevate:[239,4,1,""],get_widget:[239,4,1,""],interactive:[239,4,1,""],is_compatible:[239,4,1,""],key:[239,4,1,""],key_pressed:[239,4,1,""],plot:[239,4,1,""],set_key:[239,4,1,""],set_min_max:[239,4,1,""],set_viewangle:[239,4,1,""],thisown:[239,3,1,""],to_key:[239,5,1,""],update:[239,4,1,""],write_pdf:[239,4,1,""],write_png:[239,4,1,""],zoom:[239,4,1,""]},"dolfin.cpp.la":{BlockMatrix:[246,2,1,""],BlockVector:[247,2,1,""],CholmodCholeskySolver:[248,2,1,""],CholmodCholeskySolver_default_parameters:[249,1,1,""],CoordinateMatrix:[250,2,1,""],DefaultFactory:[251,2,1,""],DefaultFactory_factory:[252,1,1,""],GenericLUSolver:[253,2,1,""],GenericLinearAlgebraFactory:[254,2,1,""],GenericLinearOperator:[255,2,1,""],GenericLinearSolver:[256,2,1,""],GenericMatrix:[257,2,1,""],GenericPreconditioner:[258,2,1,""],GenericSparsityPattern:[259,2,1,""],GenericTensor:[260,2,1,""],GenericVector:[261,2,1,""],KrylovSolver:[262,2,1,""],KrylovSolver_default_parameters:[263,1,1,""],LUSolver:[264,2,1,""],LUSolver_default_parameters:[265,1,1,""],LinearAlgebraObject:[266,2,1,""],LinearOperator:[267,2,1,""],LinearSolver:[268,2,1,""],LinearSolver_default_parameters:[269,1,1,""],Matrix:[270,2,1,""],NewtonSolver:[271,2,1,""],NewtonSolver_default_parameters:[272,1,1,""],NonlinearProblem:[273,2,1,""],OptimisationProblem:[274,2,1,""],PETScBaseMatrix:[275,2,1,""],PETScFactory:[276,2,1,""],PETScFactory_instance:[277,1,1,""],PETScKrylovSolver:[278,2,1,""],PETScKrylovSolver_default_parameters:[279,1,1,""],PETScKrylovSolver_methods:[280,1,1,""],PETScKrylovSolver_preconditioners:[281,1,1,""],PETScLUSolver:[282,2,1,""],PETScLUSolver_default_parameters:[283,1,1,""],PETScLUSolver_methods:[284,1,1,""],PETScLinearOperator:[285,2,1,""],PETScMatrix:[286,2,1,""],PETScObject:[287,2,1,""],PETScObject_petsc_error:[288,1,1,""],PETScOptions:[289,2,1,""],PETScOptions_clear:[290,1,1,""],PETScOptions_set:[291,1,1,""],PETScPreconditioner:[292,2,1,""],PETScPreconditioner_default_parameters:[293,1,1,""],PETScPreconditioner_preconditioners:[294,1,1,""],PETScSNESSolver:[295,2,1,""],PETScSNESSolver_default_parameters:[296,1,1,""],PETScSNESSolver_methods:[297,1,1,""],PETScTAOSolver:[298,2,1,""],PETScTAOSolver_default_parameters:[299,1,1,""],PETScTAOSolver_methods:[300,1,1,""],PETScUserPreconditioner:[301,2,1,""],PETScVector:[302,2,1,""],SLEPcEigenSolver:[303,2,1,""],SLEPcEigenSolver_default_parameters:[304,1,1,""],STLFactory:[305,2,1,""],STLFactory_instance:[306,1,1,""],STLMatrix:[307,2,1,""],Scalar:[308,2,1,""],SparsityPattern:[309,2,1,""],TAOLinearBoundSolver:[310,2,1,""],TAOLinearBoundSolver_default_parameters:[311,1,1,""],TAOLinearBoundSolver_krylov_solvers:[312,1,1,""],TAOLinearBoundSolver_methods:[313,1,1,""],TAOLinearBoundSolver_preconditioners:[314,1,1,""],UmfpackLUSolver:[315,2,1,""],UmfpackLUSolver_default_parameters:[316,1,1,""],Vector:[317,2,1,""],VectorSpaceBasis:[318,2,1,""],as_backend_type:[319,1,1,""],get_tensor_type:[320,1,1,""],has_krylov_solver_method:[321,1,1,""],has_krylov_solver_preconditioner:[322,1,1,""],has_lu_solver_method:[323,1,1,""],has_type:[324,1,1,""],in_nullspace:[325,1,1,""],krylov_solver_methods:[327,1,1,""],krylov_solver_preconditioners:[328,1,1,""],la_index_dtype:[329,1,1,""],la_solve:[330,1,1,""],linear_algebra_backends:[331,1,1,""],linear_solver_methods:[332,1,1,""],list_krylov_solver_methods:[333,1,1,""],list_krylov_solver_preconditioners:[334,1,1,""],list_linear_algebra_backends:[335,1,1,""],list_linear_solver_methods:[336,1,1,""],list_lu_solver_methods:[337,1,1,""],lu_solver_methods:[338,1,1,""],normalize:[339,1,1,""],residual:[340,1,1,""],uBLASDenseFactory:[341,2,1,""],uBLASDenseFactory_instance:[342,1,1,""],uBLASDenseMatrix:[343,2,1,""],uBLASILUPreconditioner:[344,2,1,""],uBLASKrylovSolver:[345,2,1,""],uBLASKrylovSolver_default_parameters:[346,1,1,""],uBLASKrylovSolver_methods:[347,1,1,""],uBLASKrylovSolver_preconditioners:[348,1,1,""],uBLASLinearOperator:[349,2,1,""],uBLASPreconditioner:[350,2,1,""],uBLASSparseFactory:[351,2,1,""],uBLASSparseFactory_instance:[352,1,1,""],uBLASSparseMatrix:[353,2,1,""],uBLASVector:[354,2,1,""]},"dolfin.cpp.la.BlockMatrix":{apply:[246,4,1,""],get_block:[246,4,1,""],mult:[246,4,1,""],schur_approximation:[246,4,1,""],set_block:[246,4,1,""],size:[246,4,1,""],str:[246,4,1,""],thisown:[246,3,1,""],zero:[246,4,1,""]},"dolfin.cpp.la.BlockVector":{axpy:[247,4,1,""],copy:[247,4,1,""],empty:[247,4,1,""],get_block:[247,4,1,""],inner:[247,4,1,""],max:[247,4,1,""],min:[247,4,1,""],norm:[247,4,1,""],set_block:[247,4,1,""],size:[247,4,1,""],str:[247,4,1,""],thisown:[247,3,1,""]},"dolfin.cpp.la.CholmodCholeskySolver":{default_parameters:[248,5,1,""],factorize:[248,4,1,""],factorized_solve:[248,4,1,""],thisown:[248,3,1,""]},"dolfin.cpp.la.CoordinateMatrix":{base_one:[250,4,1,""],columns:[250,4,1,""],mpi_comm:[250,4,1,""],norm:[250,4,1,""],rows:[250,4,1,""],size:[250,4,1,""],thisown:[250,3,1,""],values:[250,4,1,""]},"dolfin.cpp.la.DefaultFactory":{factory:[251,5,1,""],thisown:[251,3,1,""]},"dolfin.cpp.la.GenericLUSolver":{solve:[253,4,1,""],solve_transpose:[253,4,1,""],thisown:[253,3,1,""]},"dolfin.cpp.la.GenericLinearAlgebraFactory":{create_krylov_solver:[254,4,1,""],create_layout:[254,4,1,""],create_linear_operator:[254,4,1,""],create_lu_solver:[254,4,1,""],create_matrix:[254,4,1,""],create_vector:[254,4,1,""],krylov_solver_methods:[254,4,1,""],krylov_solver_preconditioners:[254,4,1,""],lu_solver_methods:[254,4,1,""],thisown:[254,3,1,""]},"dolfin.cpp.la.GenericLinearOperator":{mult:[255,4,1,""],size:[255,4,1,""],thisown:[255,3,1,""]},"dolfin.cpp.la.GenericLinearSolver":{parameter_type:[256,4,1,""],set_nullspace:[256,4,1,""],set_operator:[256,4,1,""],set_operators:[256,4,1,""],solve:[256,4,1,""],solve_transpose:[256,4,1,""],thisown:[256,3,1,""],update_parameters:[256,4,1,""]},"dolfin.cpp.la.GenericMatrix":{add:[257,4,1,""],add_local:[257,4,1,""],array:[257,4,1,""],assign:[257,4,1,""],axpy:[257,4,1,""],compressed:[257,4,1,""],copy:[257,4,1,""],data:[257,4,1,""],get:[257,4,1,""],getrow:[257,4,1,""],ident:[257,4,1,""],ident_local:[257,4,1,""],ident_zeros:[257,4,1,""],init_vector:[257,4,1,""],is_symmetric:[257,4,1,""],nnz:[257,4,1,""],norm:[257,4,1,""],set:[257,4,1,""],set_diagonal:[257,4,1,""],set_local:[257,4,1,""],setrow:[257,4,1,""],sparray:[257,4,1,""],thisown:[257,3,1,""],transpmult:[257,4,1,""],zero:[257,4,1,""],zero_local:[257,4,1,""]},"dolfin.cpp.la.GenericPreconditioner":{set_coordinates:[258,4,1,""],set_nullspace:[258,4,1,""],thisown:[258,3,1,""]},"dolfin.cpp.la.GenericSparsityPattern":{apply:[259,4,1,""],diagonal_pattern:[259,4,1,""],init:[259,4,1,""],insert_global:[259,4,1,""],insert_local:[259,4,1,""],local_range:[259,4,1,""],mpi_comm:[259,4,1,""],num_local_nonzeros:[259,4,1,""],num_nonzeros:[259,4,1,""],num_nonzeros_diagonal:[259,4,1,""],num_nonzeros_off_diagonal:[259,4,1,""],off_diagonal_pattern:[259,4,1,""],primary_dim:[259,4,1,""],rank:[259,4,1,""],sorted:[259,3,1,""],thisown:[259,3,1,""],unsorted:[259,3,1,""]},"dolfin.cpp.la.GenericTensor":{add:[260,4,1,""],add_local:[260,4,1,""],apply:[260,4,1,""],empty:[260,4,1,""],factory:[260,4,1,""],init:[260,4,1,""],local_range:[260,4,1,""],mpi_comm:[260,4,1,""],rank:[260,4,1,""],set_local:[260,4,1,""],size:[260,4,1,""],thisown:[260,3,1,""],zero:[260,4,1,""]},"dolfin.cpp.la.GenericVector":{abs:[261,4,1,""],add:[261,4,1,""],add_local:[261,4,1,""],array:[261,4,1,""],axpy:[261,4,1,""],copy:[261,4,1,""],gather:[261,4,1,""],gather_on_zero:[261,4,1,""],get_local:[261,4,1,""],init:[261,4,1,""],inner:[261,4,1,""],local_range:[261,4,1,""],local_size:[261,4,1,""],max:[261,4,1,""],min:[261,4,1,""],norm:[261,4,1,""],owns_index:[261,4,1,""],set_local:[261,4,1,""],size:[261,4,1,""],sum:[261,4,1,""],thisown:[261,3,1,""]},"dolfin.cpp.la.KrylovSolver":{default_parameters:[262,5,1,""],solve:[262,4,1,""],thisown:[262,3,1,""]},"dolfin.cpp.la.LUSolver":{default_parameters:[264,5,1,""],solve:[264,4,1,""],solve_transpose:[264,4,1,""],thisown:[264,3,1,""]},"dolfin.cpp.la.LinearAlgebraObject":{shared_instance:[266,4,1,""],thisown:[266,3,1,""]},"dolfin.cpp.la.LinearOperator":{init_layout:[267,4,1,""],mult:[267,4,1,""],shared_instance:[267,4,1,""],size:[267,4,1,""],str:[267,4,1,""],thisown:[267,3,1,""]},"dolfin.cpp.la.LinearSolver":{default_parameters:[268,5,1,""],solve:[268,4,1,""],thisown:[268,3,1,""]},"dolfin.cpp.la.Matrix":{assign:[270,4,1,""],down_cast:[270,4,1,""],shared_instance:[270,4,1,""],thisown:[270,3,1,""],zero:[270,4,1,""]},"dolfin.cpp.la.NewtonSolver":{default_parameters:[271,5,1,""],iteration:[271,4,1,""],linear_solver:[271,4,1,""],relative_residual:[271,4,1,""],residual:[271,4,1,""],solve:[271,4,1,""],thisown:[271,3,1,""]},"dolfin.cpp.la.NonlinearProblem":{F:[273,4,1,""],J:[273,4,1,""],form:[273,4,1,""],thisown:[273,3,1,""]},"dolfin.cpp.la.OptimisationProblem":{F:[274,4,1,""],J:[274,4,1,""],f:[274,4,1,""],form:[274,4,1,""],thisown:[274,3,1,""]},"dolfin.cpp.la.PETScBaseMatrix":{init_vector:[275,4,1,""],local_range:[275,4,1,""],mat:[275,4,1,""],size:[275,4,1,""],thisown:[275,3,1,""]},"dolfin.cpp.la.PETScFactory":{instance:[276,5,1,""],thisown:[276,3,1,""]},"dolfin.cpp.la.PETScKrylovSolver":{default_parameters:[278,5,1,""],get_operator:[278,4,1,""],ksp:[278,4,1,""],methods:[278,5,1,""],preconditioners:[278,5,1,""],set_operator:[278,4,1,""],set_operators:[278,4,1,""],set_options_prefix:[278,4,1,""],solve:[278,4,1,""],thisown:[278,3,1,""]},"dolfin.cpp.la.PETScLUSolver":{default_parameters:[282,5,1,""],get_operator:[282,4,1,""],ksp:[282,4,1,""],methods:[282,5,1,""],set_operator:[282,4,1,""],solve:[282,4,1,""],solve_transpose:[282,4,1,""],thisown:[282,3,1,""]},"dolfin.cpp.la.PETScLinearOperator":{init_layout:[285,4,1,""],mult:[285,4,1,""],size:[285,4,1,""],thisown:[285,3,1,""]},"dolfin.cpp.la.PETScMatrix":{assign:[286,4,1,""],binary_dump:[286,4,1,""],thisown:[286,3,1,""],zero:[286,4,1,""]},"dolfin.cpp.la.PETScObject":{petsc_error:[287,5,1,""],thisown:[287,3,1,""]},"dolfin.cpp.la.PETScOptions":{clear:[289,5,1,""],set:[289,5,1,""],thisown:[289,3,1,""]},"dolfin.cpp.la.PETScPreconditioner":{default_parameters:[292,5,1,""],preconditioners:[292,5,1,""],set:[292,4,1,""],set_fieldsplit:[292,4,1,""],thisown:[292,3,1,""]},"dolfin.cpp.la.PETScSNESSolver":{default_parameters:[295,5,1,""],init:[295,4,1,""],methods:[295,5,1,""],parameters:[295,3,1,""],snes:[295,4,1,""],solve:[295,4,1,""],thisown:[295,3,1,""]},"dolfin.cpp.la.PETScTAOSolver":{default_parameters:[298,5,1,""],init:[298,4,1,""],methods:[298,5,1,""],parameters:[298,3,1,""],solve:[298,4,1,""],tao:[298,4,1,""],thisown:[298,3,1,""]},"dolfin.cpp.la.PETScUserPreconditioner":{setup:[301,5,1,""],solve:[301,4,1,""],thisown:[301,3,1,""]},"dolfin.cpp.la.PETScVector":{add_local:[302,4,1,""],gather:[302,4,1,""],get_local:[302,4,1,""],init:[302,4,1,""],set_local:[302,4,1,""],sum:[302,4,1,""],thisown:[302,3,1,""],update_ghost_values:[302,4,1,""],vec:[302,4,1,""]},"dolfin.cpp.la.SLEPcEigenSolver":{default_parameters:[303,5,1,""],eps:[303,4,1,""],get_eigenpair:[303,4,1,""],get_eigenvalue:[303,4,1,""],get_iteration_number:[303,4,1,""],get_number_converged:[303,4,1,""],set_deflation_space:[303,4,1,""],solve:[303,4,1,""],thisown:[303,3,1,""]},"dolfin.cpp.la.STLFactory":{instance:[305,5,1,""],thisown:[305,3,1,""]},"dolfin.cpp.la.STLMatrix":{block_size:[307,4,1,""],clear:[307,4,1,""],local_nnz:[307,4,1,""],sort:[307,4,1,""],thisown:[307,3,1,""],zero:[307,4,1,""]},"dolfin.cpp.la.Scalar":{add:[308,4,1,""],add_local:[308,4,1,""],add_local_value:[308,4,1,""],copy:[308,4,1,""],get_scalar_value:[308,4,1,""],thisown:[308,3,1,""]},"dolfin.cpp.la.SparsityPattern":{thisown:[309,3,1,""]},"dolfin.cpp.la.TAOLinearBoundSolver":{default_parameters:[310,5,1,""],get_matrix:[310,4,1,""],get_vector:[310,4,1,""],krylov_solvers:[310,5,1,""],methods:[310,5,1,""],preconditioners:[310,5,1,""],set_ksp:[310,4,1,""],set_solver:[310,4,1,""],solve:[310,4,1,""],tao:[310,4,1,""],thisown:[310,3,1,""]},"dolfin.cpp.la.UmfpackLUSolver":{default_parameters:[315,5,1,""],get_operator:[315,4,1,""],solve:[315,4,1,""],thisown:[315,3,1,""]},"dolfin.cpp.la.Vector":{add_local:[317,4,1,""],data:[317,4,1,""],down_cast:[317,4,1,""],gather:[317,4,1,""],get_local:[317,4,1,""],init:[317,4,1,""],set_local:[317,4,1,""],shared_instance:[317,4,1,""],sum:[317,4,1,""],thisown:[317,3,1,""]},"dolfin.cpp.la.VectorSpaceBasis":{dim:[318,4,1,""],is_orthogonal:[318,4,1,""],is_orthonormal:[318,4,1,""],orthogonalize:[318,4,1,""],thisown:[318,3,1,""]},"dolfin.cpp.la.uBLASDenseFactory":{instance:[341,5,1,""],thisown:[341,3,1,""]},"dolfin.cpp.la.uBLASDenseMatrix":{assign:[343,4,1,""],compress:[343,4,1,""],invert:[343,4,1,""],lump:[343,4,1,""],mat:[343,4,1,""],resize:[343,4,1,""],solve:[343,4,1,""],solve_in_place:[343,4,1,""],thisown:[343,3,1,""],zero:[343,4,1,""]},"dolfin.cpp.la.uBLASILUPreconditioner":{thisown:[344,3,1,""]},"dolfin.cpp.la.uBLASKrylovSolver":{default_parameters:[345,5,1,""],get_operator:[345,4,1,""],methods:[345,5,1,""],preconditioners:[345,5,1,""],solve:[345,4,1,""],thisown:[345,3,1,""]},"dolfin.cpp.la.uBLASLinearOperator":{init_layout:[349,4,1,""],mult:[349,4,1,""],size:[349,4,1,""],thisown:[349,3,1,""]},"dolfin.cpp.la.uBLASPreconditioner":{init:[350,4,1,""],solve:[350,4,1,""],thisown:[350,3,1,""]},"dolfin.cpp.la.uBLASSparseFactory":{instance:[351,5,1,""],thisown:[351,3,1,""]},"dolfin.cpp.la.uBLASSparseMatrix":{assign:[353,4,1,""],compress:[353,4,1,""],invert:[353,4,1,""],lump:[353,4,1,""],mat:[353,4,1,""],resize:[353,4,1,""],solve:[353,4,1,""],solve_in_place:[353,4,1,""],thisown:[353,3,1,""],zero:[353,4,1,""]},"dolfin.cpp.la.uBLASVector":{add_local:[354,4,1,""],data:[354,4,1,""],gather:[354,4,1,""],get_local:[354,4,1,""],init:[354,4,1,""],resize:[354,4,1,""],set_local:[354,4,1,""],sum:[354,4,1,""],thisown:[354,3,1,""],vec:[354,4,1,""]},"dolfin.cpp.mesh":{BoostGraphOrdering:[355,2,1,""],BoostGraphOrdering_compute_cuthill_mckee:[356,1,1,""],BoundaryMesh:[357,2,1,""],BoundingBoxTree3D:[359,2,1,""],BoundingBoxTree:[358,2,1,""],BoxMesh:[360,2,1,""],Cell:[361,2,1,""],CellFunction:[362,2,1,""],CellFunctionBool:[363,2,1,""],CellFunctionDouble:[364,2,1,""],CellFunctionInt:[365,2,1,""],CellFunctionSizet:[366,2,1,""],CellType:[367,2,1,""],CellType_create:[368,1,1,""],CellType_string2type:[369,1,1,""],CellType_type2string:[370,1,1,""],DomainBoundary:[371,2,1,""],DynamicMeshEditor:[372,2,1,""],Edge:[373,2,1,""],EdgeFunction:[374,2,1,""],EdgeFunctionBool:[375,2,1,""],EdgeFunctionDouble:[376,2,1,""],EdgeFunctionInt:[377,2,1,""],EdgeFunctionSizet:[378,2,1,""],Face:[379,2,1,""],FaceFunction:[380,2,1,""],FaceFunctionBool:[381,2,1,""],FaceFunctionDouble:[382,2,1,""],FaceFunctionInt:[383,2,1,""],FaceFunctionSizet:[384,2,1,""],Facet:[385,2,1,""],FacetCell:[386,2,1,""],FacetFunction:[387,2,1,""],FacetFunctionBool:[388,2,1,""],FacetFunctionDouble:[389,2,1,""],FacetFunctionInt:[390,2,1,""],FacetFunctionSizet:[391,2,1,""],GenericBoundingBoxTree:[392,2,1,""],Graph:[393,2,1,""],GraphBuilder:[394,2,1,""],GraphBuilder_compute_dual_graph:[395,1,1,""],GraphBuilder_local_graph:[396,1,1,""],HierarchicalFunction:[397,2,1,""],HierarchicalFunctionSpace:[398,2,1,""],HierarchicalMesh:[399,2,1,""],HierarchicalMeshFunctionBool:[400,2,1,""],HierarchicalMeshFunctionDouble:[401,2,1,""],HierarchicalMeshFunctionInt:[402,2,1,""],HierarchicalMeshFunctionSizet:[403,2,1,""],HierarchicalMeshFunctionUInt:[404,2,1,""],IntervalMesh:[405,2,1,""],LocalMeshData:[406,2,1,""],Mesh:[407,2,1,""],MeshColoring:[408,2,1,""],MeshColoring_cell_colors:[409,1,1,""],MeshColoring_color:[410,1,1,""],MeshColoring_color_cells:[411,1,1,""],MeshColoring_compute_colors:[412,1,1,""],MeshColoring_type_to_dim:[413,1,1,""],MeshConnectivity:[414,2,1,""],MeshData:[415,2,1,""],MeshDomains:[416,2,1,""],MeshEditor:[417,2,1,""],MeshEntity:[418,2,1,""],MeshFunction:[419,2,1,""],MeshFunctionBool:[420,2,1,""],MeshFunctionDouble:[421,2,1,""],MeshFunctionInt:[422,2,1,""],MeshFunctionSizet:[423,2,1,""],MeshGeometry:[424,2,1,""],MeshPointIntersection:[425,2,1,""],MeshQuality:[426,2,1,""],MeshQuality_radius_ratio_histogram_data:[427,1,1,""],MeshQuality_radius_ratio_matplotlib_histogram:[428,1,1,""],MeshQuality_radius_ratio_min_max:[429,1,1,""],MeshQuality_radius_ratios:[430,1,1,""],MeshRenumbering:[431,2,1,""],MeshTopology:[432,2,1,""],MeshTransformation:[433,2,1,""],MeshTransformation_rotate:[434,1,1,""],MeshTransformation_translate:[435,1,1,""],MeshValueCollection:[436,2,1,""],MeshValueCollectionBool:[437,2,1,""],MeshValueCollectionDouble:[438,2,1,""],MeshValueCollectionInt:[439,2,1,""],MeshValueCollectionSizet:[440,2,1,""],MultiMesh:[441,2,1,""],MultiMesh_default_parameters:[442,1,1,""],PeriodicBoundaryComputation:[443,2,1,""],PeriodicBoundaryComputation_compute_periodic_pairs:[444,1,1,""],PeriodicBoundaryComputation_masters_slaves:[445,1,1,""],Point:[446,2,1,""],RectangleMesh:[447,2,1,""],Restriction:[448,2,1,""],SCOTCH:[449,2,1,""],SCOTCH_compute_gps:[450,1,1,""],SCOTCH_compute_partition:[451,1,1,""],SubDomain:[452,2,1,""],SubMesh:[453,2,1,""],SubsetIterator:[454,2,1,""],UnitCubeMesh:[455,2,1,""],UnitIntervalMesh:[456,2,1,""],UnitSquareMesh:[457,2,1,""],UnitTetrahedronMesh:[458,2,1,""],UnitTriangleMesh:[459,2,1,""],Vertex:[460,2,1,""],VertexFunction:[461,2,1,""],VertexFunctionBool:[462,2,1,""],VertexFunctionDouble:[463,2,1,""],VertexFunctionInt:[464,2,1,""],VertexFunctionSizet:[465,2,1,""],cells:[466,2,1,""],edges:[467,2,1,""],entities:[468,2,1,""],faces:[469,2,1,""],facets:[470,2,1,""],intersect:[472,1,1,""],refine:[473,1,1,""],vertices:[474,2,1,""]},"dolfin.cpp.mesh.BoostGraphOrdering":{compute_cuthill_mckee:[355,5,1,""],thisown:[355,3,1,""]},"dolfin.cpp.mesh.BoundaryMesh":{entity_map:[357,4,1,""],thisown:[357,3,1,""]},"dolfin.cpp.mesh.BoundingBoxTree":{build:[358,4,1,""],collides:[358,4,1,""],collides_entity:[358,4,1,""],compute_closest_entity:[358,4,1,""],compute_closest_point:[358,4,1,""],compute_collisions:[358,4,1,""],compute_entity_collisions:[358,4,1,""],compute_first_collision:[358,4,1,""],compute_first_entity_collision:[358,4,1,""],thisown:[358,3,1,""]},"dolfin.cpp.mesh.BoundingBoxTree3D":{thisown:[359,3,1,""]},"dolfin.cpp.mesh.BoxMesh":{thisown:[360,3,1,""]},"dolfin.cpp.mesh.Cell":{cell_normal:[361,4,1,""],collides:[361,4,1,""],contains:[361,4,1,""],diameter:[361,4,1,""],distance:[361,4,1,""],facet_area:[361,4,1,""],get_cell_data:[361,4,1,""],get_cell_topology:[361,4,1,""],get_vertex_coordinates:[361,4,1,""],inradius:[361,4,1,""],normal:[361,4,1,""],num_vertices:[361,4,1,""],order:[361,4,1,""],ordered:[361,4,1,""],orientation:[361,4,1,""],radius_ratio:[361,4,1,""],squared_distance:[361,4,1,""],thisown:[361,3,1,""],triangulate_intersection:[361,4,1,""],type:[361,4,1,""],volume:[361,4,1,""]},"dolfin.cpp.mesh.CellFunctionBool":{thisown:[363,3,1,""]},"dolfin.cpp.mesh.CellFunctionDouble":{thisown:[364,3,1,""]},"dolfin.cpp.mesh.CellFunctionInt":{thisown:[365,3,1,""]},"dolfin.cpp.mesh.CellFunctionSizet":{thisown:[366,3,1,""]},"dolfin.cpp.mesh.CellType":{cell_normal:[367,4,1,""],cell_type:[367,4,1,""],collides:[367,4,1,""],create:[367,5,1,""],create_entities:[367,4,1,""],description:[367,4,1,""],diameter:[367,4,1,""],dim:[367,4,1,""],facet_area:[367,4,1,""],facet_type:[367,4,1,""],inradius:[367,4,1,""],interval:[367,3,1,""],normal:[367,4,1,""],num_entities:[367,4,1,""],num_vertices:[367,4,1,""],order:[367,4,1,""],ordered:[367,4,1,""],orientation:[367,4,1,""],point:[367,3,1,""],radius_ratio:[367,4,1,""],refine_cell:[367,4,1,""],squared_distance:[367,4,1,""],string2type:[367,5,1,""],tetrahedron:[367,3,1,""],thisown:[367,3,1,""],triangle:[367,3,1,""],triangulate_intersection:[367,4,1,""],type2string:[367,5,1,""],volume:[367,4,1,""]},"dolfin.cpp.mesh.DomainBoundary":{thisown:[371,3,1,""]},"dolfin.cpp.mesh.DynamicMeshEditor":{add_cell:[372,4,1,""],add_vertex:[372,4,1,""],close:[372,4,1,""],open:[372,4,1,""],thisown:[372,3,1,""]},"dolfin.cpp.mesh.Edge":{dot:[373,4,1,""],length:[373,4,1,""],thisown:[373,3,1,""]},"dolfin.cpp.mesh.EdgeFunctionBool":{thisown:[375,3,1,""]},"dolfin.cpp.mesh.EdgeFunctionDouble":{thisown:[376,3,1,""]},"dolfin.cpp.mesh.EdgeFunctionInt":{thisown:[377,3,1,""]},"dolfin.cpp.mesh.EdgeFunctionSizet":{thisown:[378,3,1,""]},"dolfin.cpp.mesh.Face":{area:[379,4,1,""],normal:[379,4,1,""],thisown:[379,3,1,""]},"dolfin.cpp.mesh.FaceFunctionBool":{thisown:[381,3,1,""]},"dolfin.cpp.mesh.FaceFunctionDouble":{thisown:[382,3,1,""]},"dolfin.cpp.mesh.FaceFunctionInt":{thisown:[383,3,1,""]},"dolfin.cpp.mesh.FaceFunctionSizet":{thisown:[384,3,1,""]},"dolfin.cpp.mesh.Facet":{adjacent_cells:[385,4,1,""],distance:[385,4,1,""],exterior:[385,4,1,""],normal:[385,4,1,""],squared_distance:[385,4,1,""],thisown:[385,3,1,""]},"dolfin.cpp.mesh.FacetCell":{facet_index:[386,4,1,""],thisown:[386,3,1,""]},"dolfin.cpp.mesh.FacetFunctionBool":{thisown:[388,3,1,""]},"dolfin.cpp.mesh.FacetFunctionDouble":{thisown:[389,3,1,""]},"dolfin.cpp.mesh.FacetFunctionInt":{thisown:[390,3,1,""]},"dolfin.cpp.mesh.FacetFunctionSizet":{thisown:[391,3,1,""]},"dolfin.cpp.mesh.GenericBoundingBoxTree":{build:[392,4,1,""],compute_closest_entity:[392,4,1,""],compute_closest_point:[392,4,1,""],compute_collisions:[392,4,1,""],compute_entity_collisions:[392,4,1,""],compute_first_collision:[392,4,1,""],compute_first_entity_collision:[392,4,1,""],thisown:[392,3,1,""]},"dolfin.cpp.mesh.Graph":{thisown:[393,3,1,""]},"dolfin.cpp.mesh.GraphBuilder":{compute_dual_graph:[394,5,1,""],local_graph:[394,5,1,""],thisown:[394,3,1,""]},"dolfin.cpp.mesh.HierarchicalFunction":{clear_child:[397,4,1,""],depth:[397,4,1,""],has_child:[397,4,1,""],has_parent:[397,4,1,""],set_child:[397,4,1,""],set_parent:[397,4,1,""],thisown:[397,3,1,""]},"dolfin.cpp.mesh.HierarchicalFunctionSpace":{clear_child:[398,4,1,""],depth:[398,4,1,""],has_child:[398,4,1,""],has_parent:[398,4,1,""],set_child:[398,4,1,""],set_parent:[398,4,1,""],thisown:[398,3,1,""]},"dolfin.cpp.mesh.HierarchicalMesh":{child:[399,4,1,""],clear_child:[399,4,1,""],depth:[399,4,1,""],has_child:[399,4,1,""],has_parent:[399,4,1,""],leaf_node:[399,4,1,""],parent:[399,4,1,""],root_node:[399,4,1,""],set_child:[399,4,1,""],set_parent:[399,4,1,""],thisown:[399,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionBool":{child:[400,4,1,""],clear_child:[400,4,1,""],depth:[400,4,1,""],has_child:[400,4,1,""],has_parent:[400,4,1,""],leaf_node:[400,4,1,""],parent:[400,4,1,""],root_node:[400,4,1,""],set_child:[400,4,1,""],set_parent:[400,4,1,""],thisown:[400,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionDouble":{child:[401,4,1,""],clear_child:[401,4,1,""],depth:[401,4,1,""],has_child:[401,4,1,""],has_parent:[401,4,1,""],leaf_node:[401,4,1,""],parent:[401,4,1,""],root_node:[401,4,1,""],set_child:[401,4,1,""],set_parent:[401,4,1,""],thisown:[401,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionInt":{child:[402,4,1,""],clear_child:[402,4,1,""],depth:[402,4,1,""],has_child:[402,4,1,""],has_parent:[402,4,1,""],leaf_node:[402,4,1,""],parent:[402,4,1,""],root_node:[402,4,1,""],set_child:[402,4,1,""],set_parent:[402,4,1,""],thisown:[402,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionSizet":{child:[403,4,1,""],clear_child:[403,4,1,""],depth:[403,4,1,""],has_child:[403,4,1,""],has_parent:[403,4,1,""],leaf_node:[403,4,1,""],parent:[403,4,1,""],root_node:[403,4,1,""],set_child:[403,4,1,""],set_parent:[403,4,1,""],thisown:[403,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionUInt":{clear_child:[404,4,1,""],depth:[404,4,1,""],has_child:[404,4,1,""],has_parent:[404,4,1,""],set_child:[404,4,1,""],set_parent:[404,4,1,""],thisown:[404,3,1,""]},"dolfin.cpp.mesh.IntervalMesh":{thisown:[405,3,1,""]},"dolfin.cpp.mesh.LocalMeshData":{broadcast_mesh_data:[406,4,1,""],cell_partition:[406,3,1,""],cell_vertices:[406,3,1,""],clear:[406,4,1,""],domain_data:[406,3,1,""],extract_mesh_data:[406,4,1,""],gdim:[406,3,1,""],global_cell_indices:[406,3,1,""],mpi_comm:[406,4,1,""],num_global_cells:[406,3,1,""],num_global_vertices:[406,3,1,""],num_vertices_per_cell:[406,3,1,""],receive_mesh_data:[406,4,1,""],tdim:[406,3,1,""],thisown:[406,3,1,""],unpack_cell_vertices:[406,4,1,""],unpack_vertex_coordinates:[406,4,1,""],vertex_coordinates:[406,3,1,""],vertex_indices:[406,3,1,""]},"dolfin.cpp.mesh.Mesh":{bounding_box_tree:[407,4,1,""],cell_orientations:[407,4,1,""],cells:[407,4,1,""],clean:[407,4,1,""],clear:[407,4,1,""],color:[407,4,1,""],coordinates:[407,4,1,""],data:[407,4,1,""],domains:[407,4,1,""],geometry:[407,4,1,""],hash:[407,4,1,""],hmax:[407,4,1,""],hmin:[407,4,1,""],init:[407,4,1,""],init_cell_orientations:[407,4,1,""],move:[407,4,1,""],mpi_comm:[407,4,1,""],num_cells:[407,4,1,""],num_edges:[407,4,1,""],num_entities:[407,4,1,""],num_faces:[407,4,1,""],num_facets:[407,4,1,""],num_vertices:[407,4,1,""],order:[407,4,1,""],ordered:[407,4,1,""],renumber_by_color:[407,4,1,""],rmax:[407,4,1,""],rmin:[407,4,1,""],rotate:[407,4,1,""],size:[407,4,1,""],size_global:[407,4,1,""],smooth:[407,4,1,""],smooth_boundary:[407,4,1,""],snap_boundary:[407,4,1,""],thisown:[407,3,1,""],topology:[407,4,1,""],translate:[407,4,1,""],type:[407,4,1,""],ufl_cell:[407,4,1,""],ufl_domain:[407,4,1,""],ufl_id:[407,4,1,""]},"dolfin.cpp.mesh.MeshColoring":{cell_colors:[408,5,1,""],color:[408,5,1,""],color_cells:[408,5,1,""],compute_colors:[408,5,1,""],thisown:[408,3,1,""],type_to_dim:[408,5,1,""]},"dolfin.cpp.mesh.MeshConnectivity":{clear:[414,4,1,""],empty:[414,4,1,""],hash:[414,4,1,""],init:[414,4,1,""],set_global_size:[414,4,1,""],size:[414,4,1,""],size_global:[414,4,1,""],str:[414,4,1,""],thisown:[414,3,1,""]},"dolfin.cpp.mesh.MeshData":{array:[415,4,1,""],clear:[415,4,1,""],create_array:[415,4,1,""],erase_array:[415,4,1,""],exists:[415,4,1,""],thisown:[415,3,1,""]},"dolfin.cpp.mesh.MeshDomains":{clear:[416,4,1,""],get_marker:[416,4,1,""],init:[416,4,1,""],is_empty:[416,4,1,""],markers:[416,4,1,""],max_dim:[416,4,1,""],num_marked:[416,4,1,""],set_marker:[416,4,1,""],thisown:[416,3,1,""]},"dolfin.cpp.mesh.MeshEditor":{add_cell:[417,4,1,""],add_vertex:[417,4,1,""],add_vertex_global:[417,4,1,""],close:[417,4,1,""],init_cells:[417,4,1,""],init_cells_global:[417,4,1,""],init_vertices:[417,4,1,""],init_vertices_global:[417,4,1,""],open:[417,4,1,""],thisown:[417,3,1,""]},"dolfin.cpp.mesh.MeshEntity":{dim:[418,4,1,""],entities:[418,4,1,""],global_index:[418,4,1,""],incident:[418,4,1,""],index:[418,4,1,""],init:[418,4,1,""],is_ghost:[418,4,1,""],is_shared:[418,4,1,""],mesh:[418,4,1,""],mesh_id:[418,4,1,""],midpoint:[418,4,1,""],num_entities:[418,4,1,""],num_global_entities:[418,4,1,""],owner:[418,4,1,""],sharing_processes:[418,4,1,""],str:[418,4,1,""],thisown:[418,3,1,""]},"dolfin.cpp.mesh.MeshFunctionBool":{array:[420,4,1,""],dim:[420,4,1,""],empty:[420,4,1,""],init:[420,4,1,""],mesh:[420,4,1,""],set_all:[420,4,1,""],set_value:[420,4,1,""],set_values:[420,4,1,""],size:[420,4,1,""],thisown:[420,3,1,""],ufl_id:[420,4,1,""]},"dolfin.cpp.mesh.MeshFunctionDouble":{array:[421,4,1,""],dim:[421,4,1,""],empty:[421,4,1,""],init:[421,4,1,""],mesh:[421,4,1,""],set_all:[421,4,1,""],set_value:[421,4,1,""],set_values:[421,4,1,""],size:[421,4,1,""],thisown:[421,3,1,""],ufl_id:[421,4,1,""]},"dolfin.cpp.mesh.MeshFunctionInt":{array:[422,4,1,""],dim:[422,4,1,""],empty:[422,4,1,""],init:[422,4,1,""],mesh:[422,4,1,""],set_all:[422,4,1,""],set_value:[422,4,1,""],set_values:[422,4,1,""],size:[422,4,1,""],thisown:[422,3,1,""],ufl_id:[422,4,1,""]},"dolfin.cpp.mesh.MeshFunctionSizet":{array:[423,4,1,""],dim:[423,4,1,""],empty:[423,4,1,""],init:[423,4,1,""],mesh:[423,4,1,""],set_all:[423,4,1,""],set_value:[423,4,1,""],set_values:[423,4,1,""],size:[423,4,1,""],thisown:[423,3,1,""],ufl_id:[423,4,1,""]},"dolfin.cpp.mesh.MeshGeometry":{clear:[424,4,1,""],dim:[424,4,1,""],hash:[424,4,1,""],init:[424,4,1,""],point:[424,4,1,""],set:[424,4,1,""],size:[424,4,1,""],str:[424,4,1,""],thisown:[424,3,1,""],x:[424,4,1,""]},"dolfin.cpp.mesh.MeshPointIntersection":{intersected_cells:[425,4,1,""],thisown:[425,3,1,""]},"dolfin.cpp.mesh.MeshQuality":{radius_ratio_histogram_data:[426,5,1,""],radius_ratio_matplotlib_histogram:[426,5,1,""],radius_ratio_min_max:[426,5,1,""],radius_ratios:[426,5,1,""],thisown:[426,3,1,""]},"dolfin.cpp.mesh.MeshRenumbering":{renumber_by_color:[431,5,1,""],thisown:[431,3,1,""]},"dolfin.cpp.mesh.MeshTopology":{cell_owner:[432,4,1,""],clear:[432,4,1,""],coloring:[432,3,1,""],dim:[432,4,1,""],ghost_offset:[432,4,1,""],global_indices:[432,4,1,""],hash:[432,4,1,""],have_global_indices:[432,4,1,""],have_shared_entities:[432,4,1,""],init:[432,4,1,""],init_ghost:[432,4,1,""],init_global_indices:[432,4,1,""],set_global_index:[432,4,1,""],shared_entities:[432,4,1,""],size:[432,4,1,""],size_global:[432,4,1,""],str:[432,4,1,""],thisown:[432,3,1,""]},"dolfin.cpp.mesh.MeshTransformation":{rotate:[433,5,1,""],thisown:[433,3,1,""],translate:[433,5,1,""]},"dolfin.cpp.mesh.MeshValueCollectionBool":{assign:[437,4,1,""],clear:[437,4,1,""],dim:[437,4,1,""],empty:[437,4,1,""],get_value:[437,4,1,""],init:[437,4,1,""],mesh:[437,4,1,""],set_value:[437,4,1,""],size:[437,4,1,""],thisown:[437,3,1,""],values:[437,4,1,""]},"dolfin.cpp.mesh.MeshValueCollectionDouble":{assign:[438,4,1,""],clear:[438,4,1,""],dim:[438,4,1,""],empty:[438,4,1,""],get_value:[438,4,1,""],init:[438,4,1,""],mesh:[438,4,1,""],set_value:[438,4,1,""],size:[438,4,1,""],thisown:[438,3,1,""],values:[438,4,1,""]},"dolfin.cpp.mesh.MeshValueCollectionInt":{assign:[439,4,1,""],clear:[439,4,1,""],dim:[439,4,1,""],empty:[439,4,1,""],get_value:[439,4,1,""],init:[439,4,1,""],mesh:[439,4,1,""],set_value:[439,4,1,""],size:[439,4,1,""],thisown:[439,3,1,""],values:[439,4,1,""]},"dolfin.cpp.mesh.MeshValueCollectionSizet":{assign:[440,4,1,""],clear:[440,4,1,""],dim:[440,4,1,""],empty:[440,4,1,""],get_value:[440,4,1,""],init:[440,4,1,""],mesh:[440,4,1,""],set_value:[440,4,1,""],size:[440,4,1,""],thisown:[440,3,1,""],values:[440,4,1,""]},"dolfin.cpp.mesh.MultiMesh":{add:[441,4,1,""],bounding_box_tree:[441,4,1,""],bounding_box_tree_boundary:[441,4,1,""],build:[441,4,1,""],clear:[441,4,1,""],collision_map_cut_cells:[441,4,1,""],covered_cells:[441,4,1,""],cut_cells:[441,4,1,""],default_parameters:[441,5,1,""],facet_normals:[441,4,1,""],num_parts:[441,4,1,""],part:[441,4,1,""],quadrature_rule_cut_cell:[441,4,1,""],quadrature_rule_cut_cells:[441,4,1,""],quadrature_rule_interface:[441,4,1,""],quadrature_rule_overlap:[441,4,1,""],thisown:[441,3,1,""],uncut_cells:[441,4,1,""]},"dolfin.cpp.mesh.PeriodicBoundaryComputation":{compute_periodic_pairs:[443,5,1,""],masters_slaves:[443,5,1,""],thisown:[443,3,1,""]},"dolfin.cpp.mesh.Point":{coordinates:[446,4,1,""],cross:[446,4,1,""],distance:[446,4,1,""],dot:[446,4,1,""],norm:[446,4,1,""],rotate:[446,4,1,""],squared_distance:[446,4,1,""],squared_norm:[446,4,1,""],str:[446,4,1,""],thisown:[446,3,1,""],x:[446,4,1,""],y:[446,4,1,""],z:[446,4,1,""]},"dolfin.cpp.mesh.RectangleMesh":{thisown:[447,3,1,""]},"dolfin.cpp.mesh.Restriction":{contains:[448,4,1,""],dim:[448,4,1,""],mesh:[448,4,1,""],thisown:[448,3,1,""]},"dolfin.cpp.mesh.SCOTCH":{compute_gps:[449,5,1,""],compute_partition:[449,5,1,""],compute_reordering:[449,5,1,""],thisown:[449,3,1,""]},"dolfin.cpp.mesh.SubDomain":{geometric_dimension:[452,4,1,""],inside:[452,4,1,""],map:[452,4,1,""],map_tolerance:[452,3,1,""],mark:[452,4,1,""],mark_cells:[452,4,1,""],mark_facets:[452,4,1,""],snap:[452,4,1,""],thisown:[452,3,1,""]},"dolfin.cpp.mesh.SubMesh":{thisown:[453,3,1,""],ufl_cell:[453,4,1,""],ufl_domain:[453,4,1,""],ufl_id:[453,4,1,""]},"dolfin.cpp.mesh.SubsetIterator":{end:[454,4,1,""],end_iterator:[454,4,1,""],next:[454,4,1,""],thisown:[454,3,1,""]},"dolfin.cpp.mesh.UnitCubeMesh":{thisown:[455,3,1,""]},"dolfin.cpp.mesh.UnitIntervalMesh":{thisown:[456,3,1,""]},"dolfin.cpp.mesh.UnitSquareMesh":{thisown:[457,3,1,""]},"dolfin.cpp.mesh.UnitTetrahedronMesh":{thisown:[458,3,1,""]},"dolfin.cpp.mesh.UnitTriangleMesh":{thisown:[459,3,1,""]},"dolfin.cpp.mesh.Vertex":{point:[460,4,1,""],thisown:[460,3,1,""],x:[460,4,1,""]},"dolfin.cpp.mesh.VertexFunctionBool":{thisown:[462,3,1,""]},"dolfin.cpp.mesh.VertexFunctionDouble":{thisown:[463,3,1,""]},"dolfin.cpp.mesh.VertexFunctionInt":{thisown:[464,3,1,""]},"dolfin.cpp.mesh.VertexFunctionSizet":{thisown:[465,3,1,""]},"dolfin.cpp.mesh.cells":{end:[466,4,1,""],end_iterator:[466,4,1,""],next:[466,4,1,""],pos:[466,4,1,""],thisown:[466,3,1,""]},"dolfin.cpp.mesh.edges":{end:[467,4,1,""],end_iterator:[467,4,1,""],next:[467,4,1,""],pos:[467,4,1,""],thisown:[467,3,1,""]},"dolfin.cpp.mesh.entities":{end:[468,4,1,""],end_iterator:[468,4,1,""],next:[468,4,1,""],pos:[468,4,1,""],thisown:[468,3,1,""]},"dolfin.cpp.mesh.faces":{end:[469,4,1,""],end_iterator:[469,4,1,""],next:[469,4,1,""],pos:[469,4,1,""],thisown:[469,3,1,""]},"dolfin.cpp.mesh.facets":{end:[470,4,1,""],end_iterator:[470,4,1,""],next:[470,4,1,""],pos:[470,4,1,""],thisown:[470,3,1,""]},"dolfin.cpp.mesh.vertices":{end:[474,4,1,""],end_iterator:[474,4,1,""],next:[474,4,1,""],pos:[474,4,1,""],thisown:[474,3,1,""]},"dolfin.deprecation":{down_cast:[475,1,1,""]},"dolfin.fem":{adaptivesolving:[481,0,0,"-"],assembling:[485,0,0,"-"],bcs:[489,0,0,"-"],errorcontrolgenerator:[490,0,0,"-"],form:[492,0,0,"-"],formmanipulations:[496,0,0,"-"],interpolation:[499,0,0,"-"],norms:[502,0,0,"-"],projection:[504,0,0,"-"],solving:[510,0,0,"-"]},"dolfin.fem.adaptivesolving":{AdaptiveLinearVariationalSolver:[477,2,1,""],AdaptiveNonlinearVariationalSolver:[478,2,1,""],generate_error_control:[479,1,1,""],generate_error_control_forms:[480,1,1,""]},"dolfin.fem.adaptivesolving.AdaptiveLinearVariationalSolver":{solve:[477,4,1,""]},"dolfin.fem.adaptivesolving.AdaptiveNonlinearVariationalSolver":{solve:[478,4,1,""]},"dolfin.fem.assembling":{SystemAssembler:[482,2,1,""],assemble:[483,1,1,""],assemble_system:[484,1,1,""]},"dolfin.fem.bcs":{AutoSubDomain:[486,2,1,""],DirichletBC:[487,2,1,""],homogenize:[488,1,1,""]},"dolfin.fem.bcs.AutoSubDomain":{inside:[486,4,1,""]},"dolfin.fem.form":{Form:[491,2,1,""]},"dolfin.fem.formmanipulations":{adjoint:[493,1,1,""],derivative:[494,1,1,""],increase_order:[495,1,1,""],tear:[497,1,1,""]},"dolfin.fem.interpolation":{interpolate:[500,1,1,""]},"dolfin.fem.norms":{errornorm:[501,1,1,""],norm:[503,1,1,""]},"dolfin.fem.projection":{project:[505,1,1,""]},"dolfin.fem.solving":{LinearVariationalProblem:[506,2,1,""],LinearVariationalSolver:[507,2,1,""],NonlinearVariationalProblem:[508,2,1,""],NonlinearVariationalSolver:[509,2,1,""],solve:[511,1,1,""]},"dolfin.fem.solving.LinearVariationalSolver":{default_parameters:[507,5,1,""],solve:[507,4,1,""],thisown:[507,3,1,""]},"dolfin.fem.solving.NonlinearVariationalSolver":{default_parameters:[509,5,1,""],solve:[509,4,1,""],thisown:[509,3,1,""]},"dolfin.functions":{"function":[522,0,0,"-"],constant:[513,0,0,"-"],expression:[515,0,0,"-"],functionspace:[530,0,0,"-"],specialfunctions:[542,0,0,"-"],ufc_functionspace:[545,0,0,"-"]},"dolfin.functions.constant":{Constant:[512,2,1,""]},"dolfin.functions.expression":{Expression:[514,2,1,""]},"dolfin.functions.expression.Expression":{str:[514,4,1,""],ufl_element:[514,4,1,""],ufl_evaluate:[514,4,1,""],value_shape:[514,4,1,""]},"dolfin.functions.function":{Argument:[516,2,1,""],Function:[517,2,1,""],TestFunction:[518,1,1,""],TestFunctions:[519,1,1,""],TrialFunction:[520,1,1,""],TrialFunctions:[521,1,1,""]},"dolfin.functions.function.Argument":{function_space:[516,4,1,""]},"dolfin.functions.function.Function":{assign:[517,4,1,""],split:[517,4,1,""],str:[517,4,1,""],sub:[517,4,1,""],ufl_element:[517,4,1,""],ufl_evaluate:[517,4,1,""]},"dolfin.functions.functionspace":{FunctionSpace:[523,2,1,""],FunctionSpaceBase:[524,2,1,""],FunctionSpaceFromCpp:[525,2,1,""],MixedFunctionSpace:[526,2,1,""],TensorFunctionSpace:[527,2,1,""],VectorFunctionSpace:[528,2,1,""],create_ufc_function_spaces:[529,1,1,""]},"dolfin.functions.functionspace.FunctionSpace":{restriction:[523,4,1,""]},"dolfin.functions.functionspace.FunctionSpaceBase":{cell:[524,4,1,""],collapse:[524,4,1,""],dolfin_element:[524,4,1,""],extract_sub_space:[524,4,1,""],num_sub_spaces:[524,4,1,""],split:[524,4,1,""],sub:[524,4,1,""],ufl_element:[524,4,1,""]},"dolfin.functions.specialfunctions":{CellNormal:[532,1,1,""],CellSize:[533,1,1,""],CellVolume:[534,1,1,""],Circumradius:[535,1,1,""],FacetArea:[536,2,1,""],FacetNormal:[537,1,1,""],MaxFacetEdgeLength:[538,1,1,""],MeshCoordinates:[539,2,1,""],MinFacetEdgeLength:[540,1,1,""],SpatialCoordinate:[541,1,1,""]},"dolfin.functions.ufc_functionspace":{UFCFunctionSpace:[543,2,1,""],create_ufc_function_spaces:[544,1,1,""]},"dolfin.mesh":{ale:[550,0,0,"-"],boundarysubdomainfinder:[557,0,0,"-"],meshes:[562,0,0,"-"],refinement:[563,0,0,"-"],svgtools:[565,0,0,"-"]},"dolfin.mesh.ale":{compute_edge_map:[548,1,1,""],compute_vertex_map:[549,1,1,""],init_parent_edge_indices:[551,1,1,""]},"dolfin.mesh.boundarysubdomainfinder":{create_maps:[552,1,1,""],find_all_subdomains:[553,1,1,""],find_keys_on_one_subdomain:[554,1,1,""],find_new_cell_key:[555,1,1,""],find_subdomain:[556,1,1,""],main:[558,1,1,""],usage:[559,1,1,""],write_file:[560,1,1,""]},"dolfin.mesh.refinement":{refine:[564,1,1,""]},"dolfin.mesh.svgtools":{mesh2svg:[566,1,1,""]},"dolfin.multistage":{factorize:[568,0,0,"-"],multistagescheme:[586,0,0,"-"],multistagesolvers:[589,0,0,"-"],rushlarsenschemes:[596,0,0,"-"]},"dolfin.multistage.factorize":{extract_tested_expressions:[567,1,1,""]},"dolfin.multistage.multistagescheme":{BDF1:[570,2,1,""],BackwardEuler:[571,3,1,""],ButcherMultiStageScheme:[572,2,1,""],CN2:[573,2,1,""],CrankNicolson:[574,3,1,""],ERK1:[576,2,1,""],ERK4:[577,2,1,""],ERK:[575,3,1,""],ESDIRK3:[578,2,1,""],ESDIRK4:[579,2,1,""],ExplicitEuler:[580,3,1,""],ExplicitMidPoint:[581,2,1,""],ForwardEuler:[582,3,1,""],ImplicitEuler:[583,3,1,""],MultiStageScheme:[584,2,1,""],RK4:[585,3,1,""]},"dolfin.multistage.multistagescheme.ButcherMultiStageScheme":{to_adm:[572,4,1,""],to_tlm:[572,4,1,""]},"dolfin.multistage.multistagescheme.MultiStageScheme":{dolfin_stage_forms:[584,4,1,""],dt:[584,4,1,""],last_stage:[584,4,1,""],rhs_form:[584,4,1,""],solution:[584,4,1,""],stage_solutions:[584,4,1,""],t:[584,4,1,""],to_adm:[584,4,1,""],to_tlm:[584,4,1,""],ufl_stage_forms:[584,4,1,""]},"dolfin.multistage.multistagesolvers":{PointIntegralSolver:[587,2,1,""],RKSolver:[588,2,1,""]},"dolfin.multistage.multistagesolvers.PointIntegralSolver":{scheme:[587,4,1,""]},"dolfin.multistage.multistagesolvers.RKSolver":{scheme:[588,4,1,""]},"dolfin.multistage.rushlarsenschemes":{GRL1:[590,2,1,""],GRL2:[591,2,1,""],MultiStageScheme:[592,2,1,""],RL1:[593,2,1,""],RL2:[594,2,1,""],RushLarsenScheme:[595,2,1,""]},"dolfin.multistage.rushlarsenschemes.MultiStageScheme":{dolfin_stage_forms:[592,4,1,""],dt:[592,4,1,""],last_stage:[592,4,1,""],rhs_form:[592,4,1,""],solution:[592,4,1,""],stage_solutions:[592,4,1,""],t:[592,4,1,""],to_adm:[592,4,1,""],to_tlm:[592,4,1,""],ufl_stage_forms:[592,4,1,""]},dolfin:{common:[26,0,0,"-"],compilemodules:[39,0,0,"-"],cpp:[231,0,0,"-"],deprecation:[476,0,0,"-"],fem:[498,0,0,"-"],functions:[531,0,0,"-"],importhandler:[546,0,0,"-"],mesh:[561,0,0,"-"],multistage:[569,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","function","Python function"],"2":["py","class","Python class"],"3":["py","attribute","Python attribute"],"4":["py","method","Python method"],"5":["py","staticmethod","Python static method"]},objtypes:{"0":"py:module","1":"py:function","2":"py:class","3":"py:attribute","4":"py:method","5":"py:staticmethod"},terms:{"15g":[16,18],"1st":523,"2nd":[523,573,581],"3rd":578,"4rd":579,"4th":577,"abstract":[4,15,16,17,18,145,271,295],"boolean":[11,12,13,20,21,72,135,239,289,291,419,420,421,422,423,473,487,564],"break":514,"case":[0,1,6,7,8,9,11,12,13,14,15,19,21,32,37,55,75,76,114,135,138,182,199,239,257,275,295,298,386,407,483,487,493,494,501,514,515],"class":[0,1,2,3,4,7,8,9,10,11,12,13,14,16,17,18,19,20,21,23,33,34,37,42,46,47,48,49,50,52,53,54,55,56,57,71,72,73,74,75,83,84,85,86,87,110,130,131,132,133,134,135,137,138,139,141,143,144,145,147,148,149,150,151,152,153,154,155,156,157,159,164,165,166,167,168,169,170,171,173,174,176,177,178,181,182,193,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,215,216,217,218,220,221,222,225,227,232,235,236,237,238,239,243,246,247,248,250,251,253,254,255,256,257,258,259,260,261,262,264,266,267,268,270,271,273,274,275,276,278,282,285,286,287,289,292,295,298,301,302,303,305,307,308,309,310,315,317,318,319,326,341,343,344,345,349,350,351,353,354,355,357,358,359,360,361,362,363,364,365,366,367,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,397,398,399,400,401,402,403,404,405,406,407,408,414,415,416,417,418,419,420,421,422,423,424,425,426,431,432,433,436,437,438,439,440,441,443,446,447,448,449,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,474,477,478,481,482,485,486,487,489,491,492,506,507,508,509,510,512,513,514,515,516,517,522,523,524,525,526,527,528,530,536,539,542,543,545,562,570,572,573,576,577,578,579,581,584,586,587,588,589,590,591,592,593,594,595,596,597],"const":[21,47,53,86,171,201,216,217,246,247,266,267,270,317,343,353,354,357,407,416,432,437,438,439,440,441,446,460,509,514],"default":[3,9,10,12,13,15,19,20,21,32,34,37,42,50,51,135,136,139,140,145,146,157,158,171,172,174,175,181,182,183,186,201,218,219,232,239,241,242,248,249,251,252,262,263,264,265,268,269,270,271,272,278,279,282,283,292,293,295,296,298,299,303,304,310,311,315,316,317,345,346,357,372,407,417,418,441,442,446,452,468,482,483,487,493,501,503,505,507,509,512,514,517,564],"export":[135,487],"final":[0,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,75,76,79,81,82,246,259,260,308],"float":[20,134,135,139,145,182,191,194,198,199,201,271,360,361,373,385,405,407,417,426,429,433,434,446,447,452,477,478,514],"function":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,27,29,30,31,32,34,35,36,38,40,41,43,44,47,53,55,86,91,94,110,117,118,123,124,130,131,132,133,134,135,139,141,143,144,145,147,165,166,167,168,171,176,178,186,187,193,196,197,198,199,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,239,243,247,254,258,267,273,274,286,289,291,301,302,310,326,343,353,358,360,361,367,368,373,385,405,407,417,418,419,420,421,422,423,426,429,430,437,438,439,440,441,443,445,446,447,452,453,454,455,456,457,471,473,476,477,478,479,480,481,483,485,486,487,489,493,495,496,497,498,499,500,501,502,503,504,505,509,510,511,512,514,516,518,519,520,521,523,524,525,526,527,528,529,532,533,534,535,536,537,538,539,540,541,543,544,547,550,557,558,563,565,566,567,568,572,584,592,595,597],"import":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,34,135,257,275,487],"int":[19,20,21,34,54,71,72,73,91,134,135,144,145,146,167,168,171,182,184,190,198,199,201,204,216,218,221,257,271,275,295,358,361,373,405,407,415,417,418,419,420,421,422,423,424,433,434,436,437,438,439,440,441,446,448,452,455,456,457,487,509,517,523,528],"new":[4,9,19,143,147,182,186,196,197,204,239,355,356,407,416,437,438,439,440,449,450,483,493,494,515,524,555],"null":[14,147,173,239,256,258],"public":[21,37,42,43,514],"return":[2,4,7,8,11,12,13,15,19,20,21,30,34,37,43,47,52,53,55,59,62,65,66,67,68,69,70,71,72,75,79,80,81,82,83,85,86,87,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,125,126,127,128,135,137,138,139,143,144,145,147,156,167,168,169,170,171,182,184,185,186,190,195,196,197,201,202,203,204,205,209,216,217,218,226,229,232,234,239,242,246,247,250,251,252,254,255,256,257,259,260,261,266,267,270,271,272,273,274,275,276,277,278,280,281,282,284,285,287,288,292,294,295,297,298,300,302,303,305,306,307,308,310,312,313,314,315,317,320,321,322,323,324,327,328,329,331,332,338,341,342,343,345,347,348,349,351,352,353,354,358,361,367,373,385,386,407,408,409,414,415,416,418,420,421,422,423,424,425,426,429,430,432,437,438,439,440,441,443,444,445,446,448,452,453,460,466,467,468,469,470,472,473,474,479,480,483,484,486,488,495,497,500,501,503,505,509,514,515,516,517,519,521,524,532,533,534,535,537,538,540,541,564,572,584,587,588,592],"short":[71,111],"static":[50,55,71,75,135,139,141,145,157,159,171,174,178,182,196,211,218,232,239,248,251,262,264,268,271,276,278,282,287,289,292,295,298,301,303,305,310,315,341,345,351,355,367,394,408,426,431,433,441,443,449,507,509],"switch":514,"throw":[94,416],"true":[1,2,4,6,9,10,11,12,13,14,16,18,20,21,30,32,52,71,75,79,80,81,82,83,97,98,99,100,101,102,103,104,105,106,107,108,109,111,119,135,139,147,166,169,182,184,185,186,204,232,234,239,247,257,260,317,321,322,323,354,357,358,361,385,407,414,415,416,417,418,420,421,422,423,437,438,439,440,452,473,483,484,486,487,511,564],"try":15,"void":[21,34,514],"while":[0,3,4,5,7,8,9,10,11,13,19,20,21,73,514],ALE:225,Added:[466,467,468,469,470,474],But:5,EPS:303,For:[0,1,2,3,4,5,6,9,10,11,12,13,14,15,19,21,130,131,190,195,220,222,239,286,302,303,343,353,354,407,416,443,444,477,478,483,484,495,497,501,511],Its:512,Not:20,ODE:572,One:[9,16,17,18,19,203,223,514],Such:8,That:358,The:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,34,37,39,43,45,46,47,48,49,50,52,53,54,55,56,57,71,72,73,74,75,83,84,85,86,87,130,131,132,133,134,135,137,138,139,141,143,144,145,147,148,149,150,151,152,153,154,155,156,157,159,164,165,166,167,168,169,170,171,173,174,176,177,178,181,182,184,185,186,190,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,215,216,217,218,220,221,222,223,227,232,235,236,237,238,239,246,247,248,250,251,253,254,255,256,257,258,259,260,261,262,264,266,267,268,270,271,273,274,275,276,278,282,285,286,287,289,292,295,298,301,302,303,305,307,308,309,310,315,317,318,325,341,343,344,345,349,350,351,353,354,355,357,358,359,360,361,363,364,365,366,367,371,372,373,375,376,377,378,379,381,382,383,384,385,386,388,389,390,391,392,393,394,397,398,399,400,401,402,403,404,405,406,407,408,414,415,416,417,418,419,420,421,422,423,424,425,426,429,430,431,432,433,434,435,436,437,438,439,440,441,443,446,447,448,449,451,452,453,454,455,456,457,458,459,460,462,463,464,465,466,467,468,469,470,472,473,474,477,478,479,480,483,484,485,487,494,498,501,507,509,511,512,514,515,517,524,526,531,546,561,564,569,587,588,597],Then:[0,1,5,7,8,14,20,21],There:[3,9,14,517],These:[4,6,7,8,19,203,289,468,515],Use:[0,1,2,5,6,7,8,9,10,14,15,16,18,21,22,32,43,94,182,528],Useful:[135,361],Using:[2,4,15,16,17,18],With:[0,4,5,6,7,8,9,11,12,13,14,19,21,523],Yes:503,__future__:[3,5,9,16,18,19],__init__:[4,8,514],__new__:515,_bool_:473,_butcher_scheme_gener:572,_cell_:147,_dirichletbc_:482,_domain:514,_double_:446,_form_:482,_function_:[201,221,517],_functionspace_:[144,524],_mesh:[437,438,439,440,514],_mesh_:419,_meshfunction_:436,_multistagescheme_:[587,588],_not_:514,_rush_larsen_scheme_gener:595,_std:[87,171,357,415,509],a_form:[482,484],a_r_dt:139,a_r_t:139,a_star:139,a_tensor:484,aabb:358,abl:[4,14,20],about:[4,6,20,45,91,303,514],abov:[0,1,3,4,5,6,7,8,9,10,11,13,14,15,19,21,91,239,358,484,501],abs:[11,261],absolut:[11,261],absolute_toler:72,accept:34,access:[4,7,8,34,71,72,261,286,295,298,302,343,353,354,386,441,514],access_count:[71,72],accomplish:[10,19],accord:[9,196,197,239,339,357,407,433,435,443,445],accordingli:196,accuraci:[0,501],across:[426,429,564],act:[8,515],action:[4,255,267],activ:119,actual:[0,7,8,10,16,17,18,203,209,255,358],adapt:[22,130,131,145,193,477,478,481,511],adapt_coeffici:186,adapt_mark:193,adapt_problem:145,adapted_mesh:186,adaptive_data:145,adaptive_poisson:0,adaptivelinearvariationalsolv:[0,131,193,481],adaptivenonlinearvariationalsolv:[193,481],adaptivesolv:[477,478,479,480,498],add:[9,72,167,168,176,218,247,257,260,261,302,308,317,354,372,417,441],add_add:202,add_cel:[372,417],add_loc:[257,260,261,302,308,317,354],add_local_valu:308,add_polygon:239,add_sub:202,add_valu:[133,483,484],add_vertex:[372,417],add_vertex_glob:417,added:[37,42,43,72,308,358,493],adding:[9,25,176,501],addit:[6,7,8,10,14,19,34,418,446,468,483,485,494,511,517],additional_declar:34,additional_system_head:34,adj:572,adjac:[385,407],adjacent_cel:385,adjoint:[0,496,572],adjust:[6,239],adopt:6,advanc:[4,32,286,302,343,353,354],advantag:6,affect:239,after:[7,8,135,239,406,487],afterward:19,again:[6,406],aggreg:258,agre:144,aim:[130,131,477,478],ale:[548,549,551,561],ale_mov:225,algebra:[5,9,14,15,257,260,266,267,270,309,317,321,322,323,327,328,331,332,333,334,335,336,337,338,354,483,511],algorithm:[141,303,355,356,431,466,467,468,469,470,474,511],alia:[571,574,575,580,582,583,585],align:358,all:[0,1,5,6,7,8,10,12,13,15,16,17,18,19,20,21,34,42,72,130,131,134,135,143,144,145,147,156,170,182,201,205,239,240,246,257,260,261,266,270,286,287,302,303,307,317,343,353,354,358,392,407,414,415,416,420,421,422,423,424,426,429,430,432,433,434,436,437,438,439,440,441,443,445,448,454,466,467,468,469,470,474,477,478,487,506,508,511,514,517,524,556,572,584,592,597],all_interact:239,all_kei:554,allow:[3,8,9,20,21,24,72,134,170,419,436,514],almost:[15,55,59,65],along:[275,468],alpha:2,alreadi:[12,529],also:[0,1,3,6,7,8,10,11,12,13,15,16,17,18,19,21,32,34,75,78,85,134,135,239,303,325,407,415,483,487,514],alt:239,altern:[7,8,10,32,135,239,446,452,484,487,503,514,523,527,528],alwai:[47,53,86,135,487],amg:[9,15],aneurysm:1,angl:[407,433,434,446],ani:[5,9,14,20,34,37,41,52,144,147,181,186,204,239,245,246,257,260,270,286,307,343,353,358,407,416,432,441,482,484,491,514,517],anim:239,anoth:[135,147,166,198,203,204,223,357,373,418,446,506,508,517,572],ans:[203,223],ansatz:14,anyth:295,appear:[147,167,239],append:239,appli:[0,4,6,7,8,9,10,11,12,13,14,15,21,135,166,176,181,189,246,259,260,308,443,445,482,484,487],applic:[303,453,484],approach:[2,6,135,487],appropri:[262,436,437,438,439,440],approxim:[0,4,6,15,16,17,18,131,139,141,246,258,301,478,501],arang:34,arbitrari:[72,196,260,385,441,448],area:[6,200,361,367,379,536],arg:[32,34,41,46,47,48,49,52,53,54,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,84,85,86,87,88,90,91,94,112,113,114,116,118,120,121,126,129,130,131,134,135,137,138,139,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,166,167,168,169,170,171,174,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,220,221,222,223,224,226,227,228,230,232,233,234,235,236,237,238,239,242,245,248,250,253,254,255,256,257,259,260,261,262,264,267,270,271,275,276,278,282,286,287,288,289,290,291,302,303,305,309,315,317,318,321,322,323,325,330,339,340,341,343,344,345,350,351,353,354,355,356,357,359,360,361,363,364,365,366,367,368,369,370,373,375,376,377,378,379,381,382,383,384,385,386,388,389,390,391,392,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,418,420,421,422,423,424,425,426,427,428,429,430,432,433,434,435,437,438,439,440,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,460,462,463,464,465,466,467,468,469,470,472,473,474,487,507,509,511,517,523],argc:[72,75,77,78],argument:[0,1,3,4,5,6,7,8,10,11,12,13,14,16,17,18,19,20,21,32,34,35,42,43,72,73,75,78,90,91,111,114,130,131,132,134,135,137,139,144,145,147,165,166,167,168,171,173,182,184,185,186,190,191,194,195,198,199,201,203,204,210,216,217,218,221,223,232,233,234,257,271,275,295,298,317,354,357,358,360,361,373,385,405,407,415,417,418,419,420,421,422,423,433,434,435,436,437,438,439,440,441,446,447,448,452,455,456,457,472,473,477,478,479,480,482,483,487,488,493,494,500,501,503,505,506,508,509,511,512,514,515,517,518,520,522,523,524,525,526,527,528,529,532,533,534,535,536,537,538,540,541,548,549,564,587,588],argv:[72,75,77,78,558],argyri:523,aris:[7,8],arnold:523,arnoldi:303,around:[11,18,20,286,407,433,434,446],arpack:303,arrai:[21,34,47,53,86,135,144,147,182,190,198,199,201,204,220,222,257,261,317,354,358,361,407,415,417,420,421,422,423,424,441,446,452,460,487,512,514,524],arrow:239,as_backend_typ:326,as_matrix:21,as_str:30,as_vector:6,ascii:232,ask:5,aspect:4,assembl:[4,5,6,9,14,15,19,83,85,133,144,159,165,173,178,179,180,181,189,193,246,260,415,482,484,498,501,514,597],assemble_cel:[132,159],assemble_exterior_facet:[132,159],assemble_interior_facet:[132,159],assemble_system:[15,193,485],assemble_vertic:132,assemblerbas:[132,165,173,181,193],assert:[34,514],assign:[5,9,72,132,198,203,204,225,257,270,286,343,353,437,438,439,440,517],assigning_func:[203,223],assigning_spac:203,associ:[4,5,15,19,55,69,87,135,176,239,407,415,418,420,421,422,423,436,437,438,439,440],assum:[0,1,6,12,13,21,37,42,43,141,308,358,367,548,549],attach:[14,135,144,204,415,487],attribut:514,auto:[22,239,245],autogener:547,autom:[4,132,139,173,511],automat:[0,4,6,9,12,34,45,114,130,131,135,239,407,477,478,487,511],autosubdomain:489,auxiliari:[407,415],avail:[5,7,8,9,10,15,16,17,18,19,34,72,134,135,198,201,216,217,232,254,257,278,280,281,282,284,292,294,295,297,298,300,310,312,313,314,317,321,322,323,327,328,331,332,333,334,335,336,337,338,345,347,348,354,360,361,373,405,407,415,417,426,429,430,432,446,447,455,456,457,473,487,511,514],averag:[2,126,407],avg:2,avoid:[6,9,47,53,86,135,343,353,487],axes:239,axi:[143,205,257,275,358,407,433,434,446],axial:[405,456],axpi:[202,247,257,261],axpy0:202,axpy1:202,azimuth:239,b_form:[482,484],b_tensor:484,back:441,backend:[5,14,15,251,252,255,257,260,264,267,270,309,317,321,322,323,327,328,331,332,333,334,335,336,337,338,354,483,484,511],backward:4,backwardeul:586,bar:[32,72,73,239,572],barrier:[55,58],base:[4,9,34,46,47,48,49,50,52,53,54,55,56,57,63,64,71,72,73,74,75,83,84,85,86,87,130,131,132,133,134,135,137,138,139,141,143,144,145,147,148,149,150,151,152,153,154,155,156,157,159,164,165,166,167,168,169,170,171,173,174,176,177,178,181,182,186,194,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,215,216,217,218,220,221,222,227,232,235,236,237,238,239,246,247,248,250,251,253,254,255,256,257,258,259,260,261,262,264,266,267,268,270,271,273,274,275,276,278,282,285,286,287,289,292,295,298,301,302,303,305,307,308,309,310,315,317,318,341,343,344,345,349,350,351,353,354,355,357,358,359,360,361,362,363,364,365,366,367,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,397,398,399,400,401,402,403,404,405,406,407,408,414,415,416,417,418,419,420,421,422,423,424,425,426,431,432,433,436,437,438,439,440,441,443,446,447,448,449,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,474,477,478,482,486,487,491,494,506,507,508,509,511,512,514,516,517,523,524,525,526,527,528,536,539,543,570,572,573,576,577,578,579,581,584,587,588,590,591,592,593,594,595,596],base_on:250,basi:[2,4,5,14,19,134,143,201,209,262,318,325,501,517],basic:[15,27,85,468],basisfunct:193,bc0:[1,12,15,16,17,18],bc1:[1,15,16,17,18,511],bc2:[1,15,16,17,18,511],bc3:1,bcl:6,bcp:9,bcr:6,bcs:[6,12,15,16,17,18,19,139,156,169,170,181,189,192,482,483,484,486,487,488,498,505,506,508,511,570,572,573,576,577,578,579,581,584,592],bcu:9,bdf1:[571,583,586],bdfm:523,bdm:[8,32,514,523],becaus:[0,10,11,12,13,21,514],been:[5,6,12,13,14,15,16,17,18,21,71,75,79,80,90,118,144,170,182,218,239,240,244,287,358,406,418,441,511],befor:[1,4,5,7,8,9,10,15,19,20,21,182,204,273,385],begin:[0,1,4,9,13,14,19,91,110,432],behavior:[6,239],behaviour:515,behind:[20,514,515],being:[4,132,141],below:[5,9,10,22,144,239,468,483,503,511,514,523],berkelei:361,beta:17,better:308,between:[2,19,47,53,86,147,190,195,203,225,229,266,358,373,392,407,414,425,472,552],beyond:[466,467,468,469,470,474],biharmon:22,bilinear:[0,1,2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,21,138,139,144,156,168,482,483,493,511],bilinear_form:156,bin:232,binari:[4,182,232,286],binary_dump:286,bit:[466,467,468,469,470,474],block:[135,147,246,257,259,260,261,302,307,308,317,354,514],block_siz:[147,307,309],blockmatrix:326,blockvector:326,blood:1,bodi:[6,19,147],bool:[12,20,21,46,91,135,139,145,146,171,182,184,185,186,201,204,232,234,271,295,357,358,361,407,415,417,418,419,420,421,422,423,436,437,438,439,440,446,452,480,509,524,564],boolparamet:110,boost:[211,343,353,354,355],boostgraphord:471,boostgraphordering_compute_cuthill_mcke:471,both:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,137,203,223,239,257,275,303,407,501,515,548,549],bottom:[8,19,20],bound:[170,171,295,298,310,358,392,407,441,509],boundari:[0,2,4,6,7,8,9,11,13,14,16,17,19,20,21,22,135,137,139,145,156,166,169,170,181,187,189,192,196,197,239,357,371,385,386,407,441,443,445,452,468,482,483,484,487,488,506,508,511,514,552],boundary_mesh:552,boundary_part:483,boundary_valu:135,boundarymesh:[407,471],boundarysourc:8,boundarysubdomainfind:[552,553,554,555,556,558,559,560,561],bounding_box_tre:[407,441],bounding_box_tree_boundari:441,boundingboxtre:[392,441,471],boundingboxtree3d:471,box:[3,358,392,407,441],box_with_d:5,boxmesh:[3,455,471],brezzi:[8,523],broadcast:[55,63],broadcast_mesh_data:406,btmp:15,bubbl:[16,523],build:[132,137,147,167,168,178,179,180,203,218,257,358,392,394,395,396,441],build_multimesh_sparsity_pattern:178,built:[0,4,6,10,11,12,13,14,21,22,239,264,358,407],butchermultistageschem:[570,573,576,577,578,579,581,586],c00:21,c00_file:21,c01:21,c01_file:21,c11:21,c11_file:21,c2v:[554,555,556],c_vec:303,cach:[203,529,544],cahn:22,cahnhilliardequ:4,calcul:[16,18,379,432],call:[0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,47,53,75,76,85,86,117,135,145,205,218,239,273,287,288,358,385,407,441,483,484,487,511,514],callback:514,caller:[209,246,407],camera:239,can:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,32,34,37,45,72,85,134,135,138,141,173,174,177,199,203,204,205,216,223,232,239,258,267,273,275,292,303,325,357,358,407,408,410,411,412,414,419,420,421,422,423,436,437,438,439,440,448,453,483,484,487,511,512,514,517,586,596],canon:[0,1,10,11,12,13,14,21],care:[12,15,515],carri:[484,514],cast:[4,266,319],cauchi:6,cdot:[8,310],cell:[2,3,8,16,17,18,19,20,21,85,132,134,135,137,139,143,144,147,164,173,186,191,194,199,200,201,204,205,357,358,360,367,368,369,370,372,385,386,394,395,405,406,407,408,409,410,411,412,417,418,425,426,427,428,429,430,432,436,437,438,439,440,441,447,448,449,451,452,453,455,456,457,468,471,473,487,512,514,523,524,532,533,534,535,536,538,540,552,555,556,564],cell_color:[408,409],cell_data:514,cell_dimens:[147,361,514],cell_dof:147,cell_domain:[132,144,482,483,484],cell_index:[21,437,438,439,440],cell_mark:[186,473,564],cell_norm:[361,367],cell_orient:407,cell_own:432,cell_partit:[406,449,451],cell_shap:[143,514],cell_typ:367,cell_vertic:406,cellfunct:[19,363,364,365,366,407,426,430,471,514,564],cellfunctionbool:471,cellfunctiondoubl:471,cellfunctionint:471,cellfunctionsizet:471,celliter:514,cellnorm:542,cellsiz:[2,17,542],celltyp:[407,417,471],celltype_cr:471,celltype_string2typ:471,celltype_type2str:471,cellvolum:542,center:[42,407,433,434],certain:[4,72,258,367],cg1:216,chang:[2,6,9,71,72,135,143,483,493,512],change_count:[71,72],changeset:96,check:[4,14,15,21,52,72,75,79,80,135,138,144,170,182,204,224,228,232,234,325,358,361,367,407,415,416,418,432,441,448,452,454,466,467,468,469,470,474,487],check_kei:71,check_midpoint:[135,166,452,487],chemic:4,child:[148,149,150,153,155,201,204,399,400,401,402,403],choic:[0,7,8,511],choleski:248,cholmod:[97,248],cholmodcholeskysolv:326,cholmodcholeskysolver_default_paramet:326,choos:[0,6,199],choosen:15,chord:514,chorin:9,chosen:[10,40,262],circumradiu:[361,367,407,426,429,430,542],cise:[248,315],classic:[7,15,16,17,18],clean:[169,407],clear:[52,72,115,126,127,147,167,168,182,289,290,307,406,407,414,415,416,424,432,437,438,439,440,441],clear_child:[148,149,150,151,152,153,154,155,206,207,208,236,237,238,397,398,399,400,401,402,403,404],clear_sub_map_data:147,clock:124,close:[19,135,228,372,417,487,501],closest:[182,303,358,392],cloud:[358,392],cmath:514,cn2:[574,586],coarsest:[201,204],code:[34,35,37,43,144,198,201,217,232,310,360,361,373,405,407,417,426,429,430,446,447,455,456,457,473,485,512,514],codimens:[361,362,363,364,365,366,385,387,388,389,390,391,407],coeffici:[5,9,11,14,16,18,19,144,186,199,201,204,205,217,494,512,514,515,517,536,539],coefficient_deriv:494,coefficient_nam:144,coefficient_numb:144,col:[83,257],collaps:[147,204,524],collapsed_dof:[204,524],collect:[6,9,12,15,16,17,18,23,218,257,420,421,422,423,436,437,438,439,440,441],collid:[358,361,367,441],collides_ent:358,collis:[358,392,407,441],collision_map_cut_cel:441,color:[32,144,239,407,408,409,410,411,412,413,432],color_cel:408,coloring_typ:[394,396,407,408,409],colormap:239,column:[14,135,199,250,257,259,275,307],com:407,combin:[7,8,10,11,14,202,307,493,511,517],comm:[34,55,60,65,232,261,302,317,354,360,405,447,455,456,457],command:[11,12,13,21,72,75,78,114,511],common:[6,28,30,32,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,135,139,144,145,147,157,168,169,171,174,182,196,197,204,205,209,218,231,239,255,256,257,258,259,260,261,266,271,275,292,303,310,367,406,407,415,420,421,422,423,437,438,439,440,441,468,501,507,509,547,548,549],commonli:[4,597],commun:[34,55,68,69,232,259,260,360,405,407,415,447,455,456,457],compar:7,compat:[36,135,203,232,257,275,420,421,422,423],compil:[0,2,4,6,10,11,13,14,15,21,34,36,37,38,40,41,42,43,44,97,98,99,100,101,102,103,106,107,108,109,231,483,485,491,501,506,508,512,514,515,523,529],compile_express:[38,515],compile_extension_modul:36,compile_subdomain:44,compiledmodul:515,compiledsubdomain:[6,43,44],compilemodul:[6,34,35,37,41,42,43,547],compiletim:45,complement:2,complet:[37,42,43,135,441,597],complex:[3,5,21,514],complic:[19,514],compon:[2,4,6,7,8,10,14,16,17,18,21,143,147,204,220,222,361,367,379,385,514,517,519,521,524,528,567,568],compos:[15,16,17,18],composit:[165,168,217],compress:[4,6,182,184,185,257,343,353],compresss:257,comput:[0,1,2,4,5,6,7,8,9,10,11,12,13,16,17,18,21,73,134,135,139,141,142,147,178,182,190,191,194,195,201,205,211,218,239,255,267,273,274,285,303,340,343,349,353,355,356,358,361,367,373,379,385,392,407,408,412,418,425,426,429,430,443,444,446,449,450,451,472,487,493,494,499,501,502,503,504,511,548,549,572],computation:5,compute_cell_residu:139,compute_closest_ent:[358,392],compute_closest_point:[358,392],compute_collis:[358,392],compute_color:408,compute_cuthill_mcke:[355,356],compute_du:139,compute_dual_graph:394,compute_edge_map:550,compute_entity_collis:[358,392],compute_extrapol:139,compute_facet_residu:139,compute_first_collis:[358,392],compute_first_entity_collis:[358,392],compute_gp:449,compute_ind:139,compute_local_rang:55,compute_partit:449,compute_periodic_pair:443,compute_reord:449,compute_vertex_map:550,compute_vertex_valu:[201,205],concret:[266,267,270,317,320,407],condit:[0,2,4,6,7,8,9,11,13,14,16,17,19,20,21,22,135,139,145,156,166,169,170,181,187,189,192,239,371,443,445,452,482,484,487,488,506,508,511],conduct:21,conductivity_cod:21,configur:[5,14,15,55,292,511],conform:[2,130,131,239,477,478],confus:358,connect:[7,8,182,385,394,395,406,407,414,432,466,467,468,469,470,474,556],consequ:14,consid:[0,1,2,5,6,9,10,11,12,13,14,15,16,17,18,19,21,501],consider:4,consist:[0,1,5,7,8,9,10,11,13,14,21,37,147,407,432,458,459,526],constant:[1,2,6,9,10,11,12,13,14,15,16,17,18,19,21,26,209,225,514,531,584,592],constrain:[137,170,298,310,523],constrained_boundari:137,constrained_domain:[12,137,147,523,524,525,527,528],constraint:[6,9,10,14,171,295,509],construct:[2,3,5,7,8,15,19,47,53,85,86,147,204,354,437,438,439,440,587,588],constructor:[4,49,50,87,132,133,135,144,165,167,169,173,174,177,181,198,199,200,201,202,204,209,215,216,235,247,248,250,251,262,264,270,273,274,282,285,286,287,301,302,315,317,318,343,344,349,353,354,371,372,379,385,405,414,415,417,418,420,421,422,423,424,432,446,452,454,456,466,467,468,469,470,474,487],conta:517,contain:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,37,42,43,45,91,144,199,201,358,361,407,415,416,448,449,451,530,548,549],contigu:441,contin:0,continu:[0,1,2,4,5,6,7,8,9,11,13,15,16,17,18,21,117,523],contract:[584,592],control:[0,4,12,13,20,21,130,131,139,186,239,303,357,483,511,514],conveni:[4,27,371,415,453],convent:[357,407],converg:[4,11,15,171,271,295,303,509],convergence_criterion:4,convert:[72,367,369,370,408,413],convex:4,coordin:[3,12,19,134,143,147,196,197,199,201,215,250,258,361,372,406,407,417,424,433,434,446,452,460,514,539,541],coordinatematrix:326,copi:[4,16,18,47,53,72,86,87,135,137,147,164,198,199,201,202,204,209,216,247,257,261,270,286,302,308,317,343,353,354,407,414,420,421,422,423,424,432,446,454,466,467,468,469,470,474,487,517],corner:[3,135,487],correct:[9,20,21,257],correctli:[12,72],correspond:[5,6,9,15,16,17,18,19,130,131,144,147,386,394,406,407,436,437,438,439,440,441,453,477,478,483,485,494,497,519,521],cos:[6,514],cost:52,costli:15,could:[4,34,135,358,441,487,523],count:[49,71,493],counter:239,coupl:[4,9],cover:[7,8,441],covered_cel:441,cpp:[32,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,472,473,474,477,478,482,486,487,491,492,506,507,508,509,512,515,517,524,529,536,539,543,547,584,587,588,589,592],cpp_assembl:485,cpp_optim:[2,4,6],cpparg:37,cppcode:[21,42,43,514],cpu:[124,125,128],crank:4,cranknicolson:586,creat:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,46,47,48,52,53,54,72,73,74,83,84,85,86,87,130,131,134,135,137,138,139,143,144,147,156,157,166,168,170,171,176,182,198,199,201,203,204,209,216,217,218,220,221,222,232,239,246,254,267,268,270,271,278,286,292,295,298,302,303,307,308,309,310,317,343,345,353,354,357,358,360,361,362,367,368,373,374,380,386,387,406,407,414,415,416,417,420,421,422,423,424,426,427,428,432,437,438,439,440,441,446,448,453,454,455,457,458,459,460,461,466,467,468,469,470,473,474,477,478,479,480,482,483,486,487,491,493,494,506,507,508,509,512,513,514,515,517,518,519,520,521,523,524,525,526,527,528,536,539,552],create_arrai:415,create_compiled_expression_class:515,create_ent:367,create_krylov_solv:254,create_layout:254,create_linear_oper:254,create_lu_solv:254,create_map:557,create_matrix:254,create_parent_path:232,create_python_derived_expression_class:515,create_sub_el:143,create_ufc_function_spac:[530,545],create_vector:254,creation:515,criterion:564,cross:[3,446,447,457],crouzeix:523,crude:246,csg:3,cube:[3,6,15,18,455],cubic:16,curl:[503,523],current:[4,9,20,30,55,63,64,125,147,239,244,259,271,273,307,321,322,323,327,328,332,333,334,336,337,338,407,415,466,467,468,469,470,474],curv:[135,487],custom:[132,514],cut:[165,168,217,441],cut_cel:441,cuthil:[355,356],cutting_cell_index:441,cylind:[135,487],d2dx:211,damp:49,darci:[7,8],data:[0,1,4,7,8,10,11,13,19,21,47,52,53,71,72,86,111,135,137,143,144,145,147,182,184,185,199,201,204,218,232,239,257,307,317,345,354,358,361,406,407,414,415,416,418,420,421,422,423,424,426,427,432,436,437,438,439,440,449,451,453,472,487,512,514,551],data_label:[145,146],databas:50,dataset:415,dbc:12,ddx:[209,211],deal:15,dealt:4,debug:[110,116,204,443,445],debug_level:88,decid:[135,239,267,407,420,421,422,423,453,487],declar:[0,4,6,10,11,13,14,21,34,514],decreas:93,deduc:[527,528],deep:[16,18],deepcopi:[16,18,201,257,317,354,517],def:[2,4,7,8,11,12,13,15,19,20,21,514],default_paramet:[50,135,139,145,157,171,174,182,218,239,248,262,264,268,271,278,282,292,295,298,303,310,315,345,441,507,509,511],defaultfactori:326,defaultfactory_factori:326,defici:14,defin:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,40,43,50,135,139,168,170,171,176,199,204,216,217,255,257,260,261,262,267,271,301,310,318,361,407,419,420,421,422,423,433,435,436,437,438,439,440,441,448,452,453,468,483,487,490,492,501,509,512,514,515,523,530,542,564,586,596],definit:[15,37,452],deflat:303,deform:6,degener:[361,426,429,430],degre:[0,7,8,10,11,13,21,135,137,167,201,204,209,407,433,434,487,495,501,514,523,527,528],degree_rais:501,degree_ris:501,delta:[17,176,514],demo:[0,1,2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],demo_auto:0,demo_bc:1,demo_biharmon:2,demo_built:3,demo_cahn:4,demo_eigenvalu:5,demo_hyperelast:6,demo_mix:[7,8],demo_navi:9,demo_neumann:10,demo_nonlinear:11,demo_period:12,demo_poisson:[13,22],demo_singular:14,demo_stok:[15,16,18],demo_subdomain:[19,20],demo_tensorweight:21,demonstr:[1,3,4,6,19],denot:[0,2,6,8,9,10,11,13,19,21,517],dens:350,depend:[0,4,6,9,21,199,385,483,511,514,515],deprec:[43,110,123,475,547],depth:[72,148,149,150,151,152,153,154,155,206,207,208,236,237,238,397,398,399,400,401,402,403,404],deriv:[0,2,4,6,10,13,14,19,134,143,209,211,212,213,287,496,514,517,572],descret:0,describ:[0,1,10,11,13,14,15,19,21,584,589,592],descript:[0,1,10,11,13,14,15,16,19,21,71,87,239,367],design:[130,131,392,477,478],desir:[12,13,21,449,451],destin:[449,451],destroi:[85,257,307,317,343,353,354],destruct:[257,317,354],destructor:[75,76],det:6,detail:[3,7,8,10,12,13,15,19,21],detect:358,determin:[10,14,34,55,63,64,124,209,232,261,418,483,514,523],develop:[91,94,343,353,358,415,441],dfdc:4,dg_0:139,diag_val:135,diagnost:9,diagon:[3,135,257,259,447,457,483,487],diagonal_pattern:259,diamet:[361,367,407],dict:[35,72,514,524,529],dictionari:6,diff:4,differ:[3,4,9,15,16,17,18,19,20,134,135,181,218,239,266,307,358,367,414,436,437,438,439,440,482,483,487,514,515,586,596],differenti:[0,1,2,4,5,7,8,9,10,11,12,13,14,21,135,487,511],dim0:[199,394,396],dim1:[199,394,396],dim:[20,72,147,198,199,204,218,221,257,259,261,275,309,318,361,367,407,415,416,418,419,420,421,422,423,424,432,436,437,438,439,440,443,444,445,446,448,452,466,467,468,469,470,474,483,528],dimens:[4,5,6,20,21,143,144,147,167,199,201,204,205,216,218,221,246,255,257,258,259,260,261,267,275,285,318,349,357,358,361,367,372,373,374,375,376,377,378,379,380,381,382,383,384,392,407,408,410,412,413,414,415,416,417,418,419,420,421,422,423,424,432,436,437,438,439,440,441,443,444,445,446,448,452,453,460,461,462,463,464,465,466,467,468,469,470,474,512,514,527,528],dimension:[0,6,448],dirac:176,direct:[0,3,4,6,10,11,13,21,202,248,282,303,315,360,361,367,405,407,424,447,455,456,457,494],directli:[0,9,47,53,86,255,295,298,515],directori:45,dirichlet:[0,1,2,6,7,11,12,13,15,16,17,18,19,21,135,166,186,189,487],dirichletbc:[0,1,2,6,7,8,9,11,12,13,15,16,17,18,19,21,32,139,145,193,482,484,488,489,505,597],dirichletbc_default_paramet:193,dirichletboundari:[2,11,12],disabl:[47,53,86,239],discontinu:[2,7,8,135,487,497,505,523],discret:[0,4,7,8,14,130,131,139,419,420,421,422,423,477,478,517,523,530],displac:[6,196,197,216,239,407],displai:[49,559],display_width:566,distanc:[358,361,367,385,392,446],distinct:[19,209],distribut:[229,358,394,395,417,473,564],div:[2,8,9,15,16,17,18,503],diverg:9,divid:[0,7,8,10,11,13,14,21],divis:416,dmu:4,doc:[343,353,354],docstr:[24,25,26,27,29,31,33,36,38,39,40,44,45,110,193,225,231,243,326,437,438,439,440,471,476,481,485,489,490,492,496,498,499,502,504,510,513,515,522,530,531,542,545,546,547,550,557,561,562,563,565,568,569,586,589,596],document:[3,343,353,354,407,597],doe:[47,53,86,144,170,218,292,358,406,416,436,437,438,439,440,484,501],doesn:14,dof:[135,137,143,147,166,167,178,190,195,201,203,204,218,487,524],dof_to_vertex_map:193,dofmap0:[394,396],dofmap1:[394,396],dofmap:[14,147,167,193,201,204,218,394,396,514],doing:[16,17,18,19],dolfin:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,28,30,32,34,35,37,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,472,473,474,475,477,478,479,480,482,483,484,486,487,488,491,493,494,495,497,500,501,503,505,506,507,508,509,511,512,514,516,517,518,519,520,521,523,524,525,526,527,528,529,532,533,534,535,536,537,538,539,540,541,543,544,548,549,551,552,553,554,555,556,558,559,560,564,566,567,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,587,588,590,591,592,593,594,595,597],dolfin_cel:201,dolfin_el:524,dolfin_ep:[0,7,8,9,11,12,13,15,20,21,24,224,228],dolfin_error:[94,110],dolfin_fin:[16,17,18,20],dolfin_fine_subdomain:[16,17,18],dolfin_pi:[12,24],dolfin_plot_:239,dolfin_sqrt_ep:24,dolfin_stage_form:[584,592],dolfin_vers:110,dolfinerrorcontrolgener:490,dolli:239,dolphin:[18,20],domain:[0,1,2,4,6,7,8,9,10,11,12,13,14,16,17,19,20,21,135,144,189,203,407,416,419,420,421,422,423,441,448,452,453,483,487,514],domain_data:406,domain_mark:448,domain_numb:448,domainboundari:471,don:[10,295,432,441],done:[5,7,8,10,14,15,16,17,18,20],dorfler:191,dorfler_mark:193,dot:[1,4,5,6,7,8,12,19,373,446,572],doubl:[20,21,34,48,71,72,91,135,145,146,239,289,291,303,358,419,426,430,436,441,446,452,514],doublearrai:110,doubleparamet:110,dougla:[8,523],down:[0,11,12,13,14,21,361,441],down_cast:[270,317,476],download:22,dqdx:209,draw:239,driven:9,drt:[7,523],dt_stage_offset:[169,584,592],dtype:329,dual:[0,22,130,131,139,141,394,395,477,478,511],dual_variational_solv:0,dualiti:0,dummi:15,dump:286,duplic:358,dure:[6,9,12,13,21,73,514],dynam:[372,515],dynamicmesheditor:471,each:[0,4,6,7,8,9,10,11,13,14,19,20,21,43,72,135,137,144,145,218,221,261,302,317,354,360,367,385,406,414,415,416,441,447,449,451,455,457,483,487,514,536,539,567,568],eas:358,easi:[5,9,15,55,176,501],easiest:19,easili:[0,5,9,10,11,13,14,15,16,17,18,21],edg:[19,355,356,407,408,411,468,471,538,540,548],edgefunct:[375,376,377,378,471],edgefunctionbool:471,edgefunctiondoubl:471,edgefunctionint:471,edgefunctionsizet:471,edit:[372,417],editor:[372,417],edu:[248,315,361],effect:[8,10,239],effici:[0,6,10,11,13,14,21,47,52,53,86,182,210,372,407],eigenfunct:5,eigenpair:[5,303],eigenproblem:[5,303],eigensolv:[5,303],eigenvalu:[22,303],eigenvector:5,either:[0,15,20,37,72,73,138,173,199,239,257,303,414,415,466,467,468,469,470,474,483,511,512,517],elaps:128,element:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,19,21,22,32,134,135,143,144,147,165,167,168,198,199,201,204,205,217,360,361,426,429,430,455,457,487,494,499,500,501,504,505,514,517,523,524,525,526,527,528,530,597],elemj:361,elev:239,elif:15,elimin:[6,343,353],eliminate_zero:6,ellipt:[0,1,2,10,12,13,14,21],els:[9,15,21,239,514],elsewher:5,embed:[361,367],empti:[52,71,72,83,168,173,182,204,218,247,254,260,270,286,302,307,309,317,343,353,354,358,361,406,407,414,416,420,421,422,423,424,432,437,438,439,440,441,483],enabl:[47,53,86,104,105,239,407],encapsul:[196,197,216,407],encod:232,end:[0,4,9,85,110,432,454,466,467,468,469,470,474],end_iter:[454,466,467,468,469,470,474],enforc:8,enhanc:303,enough:[16,18],enrich:16,ensur:[4,5,135,287,483],enter:[239,240,244],entir:[135,173,371,414,487],entiti:[16,17,18,19,144,147,239,357,358,361,367,372,373,392,407,414,416,417,418,419,420,421,422,423,432,436,437,438,439,440,443,444,445,448,452,454,460,466,467,469,470,471,474,483],entity_dim:144,entity_index:[437,438,439,440],entity_map:357,entri:[21,83,84,147,246,257,259,260,261,270,286,302,307,317,343,353,354,449,451,483],envelop:392,epetra:[15,83],eps:303,equal:[6,20,55,59,65,216,358,414,441],equat:[5,20,22,135,192,193,271,484,487],equilater:361,equival:[329,358,432],eras:415,erase_arrai:415,erk1:[575,580,582,586],erk4:[585,586],erk:586,error:[0,1,11,12,13,21,91,110,130,131,139,145,186,191,194,287,288,319,343,353,416,418,441,477,478,501,511,564],error_control:0,errorcontrol:[130,131,186,193,479,480],errorcontrol_default_paramet:193,errorcontrolgener:498,errornorm:502,esdirk3:586,esdirk4:586,especi:12,essenti:[6,7,8,15,19,192],estim:[0,130,131,139,477,478,511],estimate_error:139,eta_t:139,etc:[144,168,220,222,358,446,500],euclidean:[373,424,446],euler:4,eulerian:196,eval:[2,4,8,12,21,134,199,201,205,209,211,514],eval_cel:[8,199,205,514],eval_deriv:134,evalu:[2,8,19,21,134,139,143,145,199,201,205,211,212,213,214,216,419,420,421,422,423,483,501,514,517,536,539],evaluate_basi:[134,143],evaluate_basis_al:143,evaluate_basis_deriv:[134,143],evaluate_basis_derivatives_al:143,evaluate_dof:[134,143],evaluate_go:145,evalut:501,even:[75,80,239,240,244,484],event:110,everi:[4,239,483],exactli:4,examin:[5,7,8,10],exampl:[4,5,6,7,8,11,12,13,16,17,18,19,21,32,34,42,43,49,73,83,135,147,198,201,209,217,220,222,232,239,310,360,361,373,405,407,417,419,420,421,422,423,426,429,430,446,447,455,456,457,468,473,483,484,487,500,501,503,505,511,512,514,517,523,526,527,528,529,532,533,534,535,536,537,538,540,541,564],except:[94,407],excess:9,exchang:[47,53,86],exclus:[190,195],exhaust:111,exist:[9,10,14,144,218,232,234,239,407,415,416,437,438,439,440],exit:[5,14,15],exodu:98,exp:[0,7,8,10,12,13,14,19,21,514],expand:501,expans:[201,204,205,217,517],expansion_coeffici:204,expicit:596,explain:[90,91,511],explicit:[19,246,576,577,578,579,581],expliciteul:586,explicitli:[15,75,76,85,186,232,407,483],explicitmidpoint:586,expos:231,expr:[35,567],express:[0,1,2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,27,32,35,37,39,42,43,196,197,198,200,205,210,215,216,221,225,239,245,318,343,353,407,443,445,499,500,501,504,505,531,536,539,567,568,597],expression_to_code_frag:36,expressionmetaclass:515,ext_modul:34,extens:[34,36],exterior:[19,132,144,173,357,385],exterior_facet_domain:[132,144,482,483,484],extern:[12,357],extra:[12,52,303],extract:[5,7,8,10,16,17,18,19,35,143,144,145,147,168,201,204,216,420,421,422,423,517,524,567,568],extract_bc:145,extract_mesh_data:406,extract_sub_dofmap:147,extract_sub_el:143,extract_sub_spac:[204,524],extract_tested_express:568,extrapol:[0,139,142,193,201],extrapolation_extrapol:193,f_e:221,face:[407,468,471],facefunct:[381,382,383,384,471],facefunctionbool:471,facefunctiondoubl:471,facefunctionint:471,facefunctionsizet:471,facet:[2,8,16,17,18,19,20,132,135,139,144,147,173,199,200,221,357,361,367,386,407,408,411,415,441,448,452,468,471,487,514,523,536,537,538,540],facet_area:[361,367],facet_index:386,facet_norm:441,facet_orient:415,facet_typ:367,facetarea:[225,542],facetcel:471,facetfunct:[19,388,389,390,391,471],facetfunctionbool:471,facetfunctiondoubl:471,facetfunctionint:471,facetfunctionsizet:471,facetnorm:[2,19,542],facilit:203,fact:19,factor:[9,248,282,315,344,426,429,430,567,569],factori:[171,251,260,271,367,368,509],factorized_solv:248,fail:[14,15,91],failur:91,fals:[6,9,11,12,13,20,21,32,71,72,111,115,123,127,135,182,186,201,239,240,244,257,286,302,317,354,355,356,357,385,415,416,437,438,439,440,483,484,487,517,524,564],famili:[0,4,7,8,10,11,13,21,523,527,528],familiar:[5,15,19],fanci:32,fashion:[15,484],fast:52,faster:[4,135,487],fastest:307,featur:[6,90],feec:[523,528],fem:[130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,231,477,478,479,480,482,483,484,486,487,488,491,493,494,495,497,500,501,503,505,506,507,508,509,511,514,547,584,587,588,592],fem_solv:193,fenic:[11,22,144],ffc:[6,144,485,492],ffc_option:6,field:[4,6,8,9,501,523,528],figur:[144,441],file:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,45,91,144,182,184,185,201,233,234,239,243,406,420,421,422,423,436,437,438,439,440,514],file_bool:20,file_create_parent_path:243,file_doubl:20,file_exist:243,filenam:[182,184,185,201,232,233,234,239,407,419,420,421,422,423,436,437,438,439,440,517],filename_data:182,filename_dofdata:201,filename_tim:182,filename_vector:201,fill:[52,259,358,361],filter:[75,78],finalis:[75,79,80],finalize_tensor:[133,483,484],find:[0,1,2,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,21,52,55,61,130,131,156,170,310,477,478,506,508,555,556],find_all_subdomain:557,find_keys_on_one_subdomain:557,find_new_cell_kei:557,find_paramet:72,find_parameter_set:72,find_subdomain:557,finest:[201,204],finish:[372,417],finit:[0,1,2,4,5,6,7,8,10,11,12,13,14,15,16,18,19,21,32,134,143,144,147,165,167,168,199,201,204,205,217,360,361,455,457,494,499,500,504,505,514,517,523,524,525,526,527,528,530,597],finite_el:143,finiteel:[32,134,193,204,514,524,525],first:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,135,198,211,213,220,222,303,358,385,392,406,407,414,417,436,437,438,439,440,487,501,514,517,570,576,590,593],fix:[11,414,419,420,421,422,423],fixm:[20,169,174,177,441],flag:[4,30,46,47,48,49,50,52,53,54,55,56,57,71,72,73,74,75,83,84,85,86,87,130,131,132,133,134,135,137,138,139,141,143,144,145,147,148,149,150,151,152,153,154,155,156,157,159,164,165,166,167,168,169,170,171,173,174,176,177,178,181,182,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,215,216,217,218,220,221,222,227,232,235,236,237,238,239,246,247,248,250,251,253,254,255,256,257,258,259,260,261,262,264,266,267,268,270,271,273,274,275,276,278,282,285,286,287,289,292,295,298,301,302,303,305,307,308,309,310,315,317,318,341,343,344,345,349,350,351,353,354,355,357,358,359,360,361,363,364,365,366,367,371,372,373,375,376,377,378,379,381,382,383,384,385,386,388,389,390,391,392,393,394,397,398,399,400,401,402,403,404,405,406,407,408,414,415,416,417,418,420,421,422,423,424,425,426,431,432,433,437,438,439,440,441,443,446,447,448,449,452,453,454,455,456,457,458,459,460,462,463,464,465,466,467,468,469,470,474,507,509],flat:367,flatten:[198,361,441],flip:[15,16,17,18],flow:[7,8,9],flux:[7,8],focu:20,focus:[3,6],follow:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,24,34,72,139,218,239,303,406,407,415,441,468,483,511,514,564],foo:[72,475],forc:[6,34],form:[0,1,2,5,6,7,8,9,10,11,12,13,14,16,17,18,21,40,41,130,131,132,138,139,145,156,165,168,170,173,178,179,180,181,186,193,199,205,216,248,271,273,274,278,282,315,345,477,478,479,480,482,483,484,485,490,493,494,498,501,506,508,511,514,515,516,518,520,523,528,529,584,592],form_compil:[2,4,6,41,483],form_compiler_paramet:[6,482,483,484,491,505,506,508,511],form_degre:[523,528],format:[2,6,9,11,13,15,16,17,18,21,90,91,147,182,184,185,232,286,407],formmanipul:[493,494,495,497,498],formul:[0,2,15,16,17,22,139],formula:[0,10,11,13,14,19,21],fortin:523,fortun:5,forwardeul:586,found:[232,358,418],four:[16,17,18,20],fourth:[2,4,12,20,417],fraction:[191,194],framework:[15,16,17,18],free:[9,267],freedom:[8,135,137,167,204,487,523],freeli:9,from:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,34,35,41,47,53,72,86,91,130,131,132,135,139,141,142,143,144,147,165,167,168,173,181,198,201,204,210,218,231,239,267,270,287,308,317,343,353,354,357,358,367,368,369,370,373,394,395,396,406,407,418,420,421,422,423,432,436,437,438,439,440,441,443,444,446,448,449,451,453,460,479,482,486,487,491,494,501,514,515,517,524,527,528,529,548,549],fs0:529,fs1:529,full:[7,8,10,16,17,18,19,37,218,357,448],func0:202,func1:202,func:202,function_spac:[135,144,168,201,218,514,516],function_space_0:168,function_space_1:168,functionassign:225,functionaxpi:225,functionspac:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,135,144,190,195,201,203,218,222,223,225,487,500,505,514,516,517,524,525,526,527,528,529,531,543,597],functionspacebas:[523,525,526,527,530],functionspacefromcpp:530,further:[0,10,11,13,14,16,18,21,91,501],furthermor:[220,222],futur:483,g_l:19,g_r:19,galerkin:[0,2,11,523],gateaux:494,gather:[55,60,135,261,302,317,354],gather_on_zero:261,gdim:[358,361,372,406,417],gen_hermitian:303,gen_non_hermitian:303,gener:[0,3,4,5,6,8,10,11,12,13,14,19,21,34,37,42,43,45,91,130,131,132,144,147,173,202,230,256,258,259,268,303,309,361,367,394,396,437,438,439,440,441,468,477,478,485,511,512,514,523,562,572,590,591,595],generate_error_control:481,generate_error_control_form:481,generateswigcod:45,generic_function_memb:[35,37],genericadaptivevariationalsolv:[130,131,193],genericadaptivevariationalsolver_default_paramet:193,genericboundingboxtre:[359,471],genericdofmap:[137,167,193,204,258,514],genericfil:[232,243],genericfunct:[135,144,166,186,199,201,204,210,225,407,487,514],genericlinearalgebrafactori:[251,271,276,305,326,341,351],genericlinearoper:[257,267,285,326,349],genericlinearsolv:[248,253,262,268,271,278,326,345],genericlusolv:[264,282,315,326],genericmatrix:[135,166,255,270,286,307,325,326,343,353],genericprecondition:[292,326],genericsparsitypattern:[309,326],generictensor:[132,165,257,261,308,326],genericvector:[135,166,171,182,201,204,217,270,271,295,298,302,317,326,354,509,517],genericvtkplott:239,genet:[289,291],geometr:[9,135,147,199,201,216,258,358,372,406,417,441,452,487,512,514],geometri:[3,8,9,19,407,424],geometric_dimens:[6,143,147,201,426,429,430,452,514],geq:310,get:[11,15,16,18,20,72,83,87,95,135,144,246,247,257,261,278,282,302,303,308,317,354,357,358,361,407,416,418,432,436,437,438,439,440,501,514,523],get_block:[246,247],get_boundary_valu:135,get_cell_data:361,get_cell_topolog:361,get_eigenpair:[5,303],get_eigenvalu:303,get_iteration_numb:303,get_loc:[261,302,317,354],get_log_level:110,get_mark:416,get_matrix:310,get_number_converg:303,get_oper:[278,282,315,345],get_rang:[71,72],get_scalar_valu:308,get_tensor_typ:326,get_valu:[83,437,438,439,440],get_vector:310,get_vertex_coordin:361,get_widget:239,getrow:257,ghost:[2,205,261,302,317,354,418,432,466,467,468,469,470,474],ghost_indic:[261,302,317,354],ghost_mod:2,ghost_offset:432,ghost_proc:[449,451],gibb:[449,450],git:96,git_commit_hash:110,give:[3,14,20,21,303,414,511],given:[0,1,3,4,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,32,52,55,59,65,72,73,87,116,126,130,131,132,134,135,139,141,143,144,145,147,157,165,168,171,173,176,178,179,180,182,194,199,200,201,204,205,209,215,216,217,220,222,232,246,247,255,257,260,261,267,270,271,285,286,295,301,302,303,307,317,319,324,325,339,343,349,353,354,357,358,360,361,362,367,372,373,374,380,385,386,387,392,405,406,407,408,410,411,412,414,415,416,417,418,420,421,422,423,424,432,433,434,435,436,437,438,439,440,441,446,447,452,453,454,455,456,457,460,461,466,467,468,469,470,474,477,478,483,484,486,488,491,493,495,497,500,501,503,505,507,509,511,512,513,514,517,524,525,532,533,534,535,536,537,538,539,540,541,564],global:[25,50,55,61,66,67,85,137,147,164,167,196,197,204,218,257,259,260,261,286,302,307,308,343,353,357,361,385,406,407,414,417,418,419,420,421,422,423,432,436,437,438,439,440,453,483,523],global_cell_indic:406,global_dimens:[147,167],global_index:[417,418],global_indic:432,global_norm:407,global_offset:55,global_s:432,global_vertex_indic:361,globalis:295,globalparamet:[26,110],globalparameters_default_paramet:110,glyph:[32,239],gmre:[9,14,511],gmres_restart:72,goal:[0,130,131,139,145,477,478,479,480,511],goalfunct:[130,131],goe:[0,1,10,11,13,14,15,16,19,21,85],going:[20,587,588],good:361,grad:[0,1,2,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,21,483],gradient:[6,8,11,19,274],graph:[355,356,394,395,396,471],graphbuild:471,graphbuilder_compute_dual_graph:471,graphbuilder_local_graph:471,greater:564,green:6,grl1:596,grl2:596,group:[55,69,514],guess:[11,298],gurante:14,h10:503,h_avg:2,half:21,hand:[2,6,8,9,10,14,15,19,135,138,176,301],handl:[8,55,72,114,135,137,167,487,490,505,515,522],hardcopy_prefix:32,harmon:407,harmonic_smooth:407,has:[0,1,3,4,5,6,14,15,16,17,18,47,53,71,72,75,79,80,86,90,118,144,170,204,218,239,240,244,287,303,307,358,406,407,418,426,429,430,441,454,466,467,468,469,470,474,483,494,511,564,567],has_cel:204,has_child:[148,149,150,151,152,153,154,155,206,207,208,236,237,238,397,398,399,400,401,402,403,404],has_cholmod:110,has_el:204,has_exodu:110,has_hdf5:110,has_index:52,has_jacobian:170,has_kei:72,has_krylov_solver_method:[15,326],has_krylov_solver_precondition:[9,15,326],has_linear_algebra_backend:[5,14,15],has_lower_bound:170,has_lu_solver_method:326,has_mpi:110,has_openmp:110,has_par:[148,149,150,151,152,153,154,155,206,207,208,236,237,238,397,398,399,400,401,402,403,404],has_paramet:72,has_parameter_set:72,has_parmeti:110,has_petsc:[1,110],has_petsc_sn:110,has_petsc_tao:110,has_scotch:110,has_slepc:[5,110],has_typ:326,has_umfpack:110,has_upper_bound:170,has_zlib:110,hash:[96,143,407,414,424,432],have:[0,1,5,10,11,12,13,14,15,16,17,18,19,20,21,22,135,144,170,182,257,358,449,451,487,514,523,548,549],have_global_indic:432,have_shared_ent:432,hcurl0:503,hcurl:503,hdf5:99,hdiv0:503,hdiv:503,header:[34,514],heavi:515,height:239,help:[35,239],helper:187,helptext:239,henc:[0,5,6,7,8,10,11,13,14,21],her:[301,523],here:[0,1,4,5,6,7,8,9,10,11,12,13,16,17,18,19,21,139,220,222,407,514,523,597],hermit:523,hermitian:303,hessian:274,hex:34,hide:[32,239],hide_abov:239,hide_below:239,hierarchi:[201,204,255],hierarchicaldirichletbc:[135,193],hierarchicalerrorcontrol:[139,193],hierarchicalform:[144,193],hierarchicalfunct:[193,201,225,243,471],hierarchicalfunctionspac:[193,204,225,243,471],hierarchicallinearvariationalproblem:[156,193],hierarchicalmesh:[193,225,243,407,471],hierarchicalmeshfunctionbool:[420,471],hierarchicalmeshfunctiondoubl:[421,471],hierarchicalmeshfunctionint:[422,471],hierarchicalmeshfunctionsizet:[423,471],hierarchicalmeshfunctionuint:471,hierarchicalnonlinearvariationalproblem:[170,193],high:501,higher:[0,20,141,441,483,494,495,501],highest:494,hilliard:22,histogram:[426,427,428],histor:307,hmax:407,hmin:407,hold:[4,6,9,32,407,483],homogen:[135,139,489],hood:[9,15,22],hookean:6,horizont:[3,457],hover:239,how:[0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,34,144,468,511,514],howev:[9,10,12,13,15,19,21,144,483,493,501,514],htm:[343,353,354],http:[248,315,343,353,354,361,407],human_form:[169,584,592],hyperelast:22,hypr:15,hypre_amg:511,ident:[6,257,361,483],ident_loc:257,ident_zero:[257,483],identifi:[2,19,72,87,135,143,166,415,432,448,452,487],iff:[139,358,361,407,483],ifilenam:553,ignor:[9,239,488],illustr:[0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,468,514],ilu:[344,511],imaginari:303,immedi:[13,21],impact:564,implement:[34,37,42,43,118,134,141,157,165,171,196,205,248,278,282,286,295,298,301,302,307,308,309,315,343,344,345,353,354,358,367,392,431,433,483,507,509,514,572],impli:523,implicit:[15,169,570,573,578,579],impliciteul:586,importhandl:547,impos:[2,9,14],improv:9,in_nullspac:326,in_valu:[55,60],inact:441,incarn:307,incid:[386,414,418,432,466,467,468,469,470,474],includ:[22,34,37,135,147,174,177,232,255,295,487,502,503,511,514,523],inclus:[224,405,514],incomplet:[9,344],incompress:[15,22],incorpor:19,increas:88,increase_ord:496,increment:[4,6,181,308],indefinit:15,indent:[9,88,93],independ:[255,407],index:[8,16,17,18,20,21,23,52,55,61,62,134,135,144,147,168,182,184,190,195,201,204,216,257,261,343,353,354,357,358,361,373,385,386,416,417,418,420,421,422,423,424,432,436,437,438,439,440,441,443,444,460,468,487,494,514],index_own:55,indexset:110,indic:[0,2,3,4,19,22,52,111,132,135,139,147,190,191,194,195,199,220,222,257,259,260,261,286,302,307,308,317,343,353,354,358,361,416,417,425,426,429,430,432,441,457,487,511,564],individu:414,inequ:[295,310],infin:503,inflow:[9,15,16,17,18,20],info:[14,15,47,53,83,86,110,484,511,514],info_stream:110,info_underlin:110,inform:[1,8,16,17,18,19,20,45,47,53,72,83,86,87,94,135,167,246,247,267,303,414,418,424,432,446,487,505,514,517],ingredi:[0,11,12,13,21],inherit:[239,267,514,515],init:[110,259,260,261,295,298,302,317,350,354,407,414,416,418,420,421,422,423,424,432,437,438,439,440],init_cel:417,init_cell_orient:407,init_cells_glob:417,init_ghost:432,init_global_indic:432,init_global_tensor:133,init_layout:[267,285,349],init_mpi:[75,77],init_parent_edge_indic:550,init_petsc:[75,78],init_vector:[257,275],init_vertic:417,init_vertices_glob:417,initi:[0,4,5,6,10,11,12,13,15,16,17,18,19,21,42,72,75,78,114,144,204,257,259,260,261,275,298,302,317,354,385,407,414,416,418,420,421,422,423,424,432,480,514,517,551],initialcondit:4,initialis:[7,8,75,77,80,81,82,204,261,287,298,350,432,437,438,439,440],inlet:1,inlin:[343,353],inner:[0,2,9,10,11,13,14,15,16,17,18,19,21,176,247,261,483],input:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,258,483],input_kei:239,inradiu:[361,367,407,426,429,430],inscrib:[361,407],insert:[8,52,257,259,416,437,438,439,440],insert_glob:259,insert_loc:259,insid:[0,2,11,12,13,19,20,21,43,135,181,358,452,486,487,514],inside_funct:486,instal:[22,248,315],instanc:[5,10,12,14,16,17,18,19,20,42,43,130,131,143,251,252,266,267,270,276,277,305,306,317,341,342,351,352,483,484,488,494,515],instanti:[4,515,517,529],instead:[0,8,11,12,13,15,21,43,47,53,86,94,239,255,406,483,484,515,517,523,528],intact:[135,487],intarrai:110,integ:[16,17,18,19,20,30,87,239,289,291,303,416,517],integr:[2,7,8,10,19,483,501,596],intend:[137,143,201,204],intens:5,intention:[286,302,343,353,354],inter:357,interact:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,32,239,240,243],interest:[0,16,18],interfac:[4,34,134,135,147,199,201,205,211,239,255,257,259,260,261,262,267,286,295,301,302,307,308,309,343,350,353,354,367,372,407,441,449,452,487,514,515],interior:[2,19,20,132,135,144,173,196,303,357,415,487],interior_facet_domain:[132,144,482,483,484],intermedi:202,intern:[94,124,128,135,137,201,255,407,415,487,567],interpol:[4,143,182,186,196,199,201,204,210,498,501,514],interpolate_vertex_valu:143,interpret:[22,37,42,43,514],intersect:[168,217,358,361,367,425,471],intersected_cel:425,interv:[3,9,174,177,367,372,405,456],intervalmesh:[456,471],intial:4,intparamet:110,introduc:[4,7,8,10],invari:6,invers:[55,62,343,353],invert:[303,343,353],invok:511,involv:[0,4,6,7,11,13,14,21,33,514],ipow:225,ipython:[565,566],is_broadcast:55,is_compat:[135,239],is_empti:416,is_ghost:418,is_linear:[138,139],is_orthogon:318,is_orthonorm:318,is_receiv:55,is_set:71,is_shar:418,is_symmetr:257,is_view:147,issu:90,item:[43,72],iter:[6,9,11,14,15,21,72,73,171,239,271,278,295,298,303,345,386,407,454,466,467,468,469,470,474,509],iterdata:72,iteritem:72,iterkei:72,itervalu:72,its:[6,14,19,72,218,273,274,443,444,514,524],itself:[201,361,517],jacobian:[4,6,11,170,271,273,295,508,511],jacobian_form:170,jacobian_index:169,jacobian_indic:[169,584,592],jit:[21,34,39,485,491,514,515],jonathan:361,jrs:361,jump:2,just:[6,7,8,16,18,34,41,407,432,501],keep:[246,257,260,270,286,307,343,353,407],keep_diagon:[133,483,484],kei:[46,48,54,71,72,74,239,242,416,555],kept:[5,9,257,317,354,483],key_press:239,keyboard:4,keyword:6,kind:[466,467,468,469,470,474,515,523],kinemat:[6,9],known:[4,15,16,18,19,73,96,372,437,438,439,440],krylov:[14,15,254,262,278,301,303,310,312,321,327,333,344,345,350,511],krylov_method:15,krylov_solv:[256,310],krylov_solver_method:[254,326],krylov_solver_precondition:[254,326],krylovsolv:[14,15,326,597],krylovsolver_default_paramet:326,ksp:[278,282,310],ksp_type:[298,310],kwarg:[32,34,37,41,42,71,72,75,145,147,205,253,254,255,256,257,259,260,261,275,276,305,341,350,351,359,367,392,407,487,511,514,517],l_r_dt:139,l_r_t:139,l_star:139,la_index:[122,137,195,329],la_index_dtyp:326,la_solv:326,label:[16,17,18,19,87,135,203,239,454,487,514],lagrang:[0,2,4,5,6,7,9,10,11,13,16,21,210,225,500,505,523,526],lagrangeinterpol:225,lagrangian:196,lambda:[5,6,303],lame:6,lanczo:303,lapack:303,larg:[239,501,564],larger:406,largest:[5,303],larsen:[590,591,593,594,596],last:[0,3,4,16,17,18,584,592],last_stag:[169,584,592],later:[2,4,11,12,13,15,19,21,75,80,204,493],latex:83,latter:19,layer:[481,510],layout:[147,254,257,260,275,307],lb_func:170,lead:[2,17,144],leaf:[145,358],leaf_nod:[0,148,149,150,153,155,201,204,399,400,401,402,403],least:[131,478],left:[3,6,12,14,15,19,20,21,42,43,138,325,361,447,457],legendr:225,legendre_d2dx:225,legendre_ddx:225,legendre_ev:225,length:[9,200,358,361,367,373,415,441,446,536,538,540],less:[0,11,15,19,21,145,477,478],let:[1,5,7,8,19],letter:392,level:[0,20,34,75,77,88,93,95,116,120,220,222,239],lhs:[9,19,138],lib:[343,353,354],librai:143,librari:[3,5,45,137,201],lie:14,like:[11,21,91,135,199,446,466,467,468,469,470,474,487,514],limit:[49,259,567],line:[4,6,72,75,78,111,114,295,405],linear:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,21,130,132,135,138,139,143,144,156,157,166,168,171,173,186,192,202,248,253,254,255,256,257,260,262,264,266,267,268,270,271,278,282,301,309,310,315,317,321,322,323,327,328,330,331,332,333,334,335,336,337,338,345,350,354,361,477,482,483,506,507,509,511,517,523,597],linear_algebra_backend:[14,267,326],linear_form:156,linear_solv:[0,4,271,511],linear_solver_method:326,linearalgebraobject:[255,260,326],linearis:[4,572],linearoper:[255,326],linearsolv:[256,326],linearsolver_default_paramet:326,linearvariationalproblem:[0,130,193,477,479,480,510,597],linearvariationalsolv:[193,510,511,597],linearvariationalsolver_default_paramet:193,linf:503,link:[343,353,407],linux:30,list:[6,7,8,9,10,12,34,37,43,72,115,139,144,145,147,156,170,192,203,221,232,254,278,280,281,282,284,292,294,295,297,298,300,310,312,313,314,327,328,332,333,334,335,336,337,338,345,347,348,358,385,406,407,424,425,441,446,482,484,488,505,511,512,526],list_krylov_method:511,list_krylov_solver_method:326,list_krylov_solver_precondition:326,list_linear_algebra_backend:326,list_linear_solver_method:326,list_lu_method:511,list_lu_solver_method:326,list_precondition:511,list_solver_method:511,list_tim:[85,110,123],literatur:144,live:[0,1,11,12,13,21,261,317],lmbda:[4,6],load:[5,9,15,16,17,18,483],local:[0,55,59,65,135,137,147,164,167,169,190,204,205,257,259,260,261,275,302,307,308,317,354,357,358,361,367,372,386,394,396,406,407,408,414,417,418,424,425,432,436,437,438,439,440,443,444,449,451,473,487,548,549,563],local_dimens:147,local_ent:[147,437,438,439,440],local_facet:[8,514],local_graph:[394,396],local_index:417,local_nnz:307,local_rang:[55,62,65,259,260,261,275],local_s:[261,432],local_to_glob:309,local_to_global_index:147,local_to_global_map:[261,302,317,354],local_to_global_unown:147,localassembl:193,localassembler_assembl:193,localassembler_assemble_cel:193,localassembler_assemble_exterior_facet:193,localassembler_assemble_interior_facet:193,localmeshdata:[394,395,471],localsolv:193,locat:[91,135,487],log:[9,20,91,95,110,119,120],logg:139,logic:[43,514,515],longer:4,look:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,511],loop:[4,9,145],low:34,lower:[141,170,201,239,295,298,448],lower_bound:170,lowercas:91,lshape:9,lt_coordin:225,lu_solv:256,lu_solver_method:[254,326],lump:[343,353],lusolv:[326,597],lusolver_default_paramet:326,machin:[0,11,12,13,19,21],made:[2,16,17,18,19],magic:[514,515],magnitud:[4,5,176,303],mai:[0,1,3,4,5,9,10,12,14,16,18,19,20,72,73,75,76,78,85,91,132,135,143,144,173,199,205,218,239,303,358,385,407,414,415,419,420,421,422,423,432,436,437,438,439,440,441,452,483,484,487,494,501,506,508,511,512,514,515,526,564],main:[19,547,557],mainli:441,maintain:15,make:[2,3,4,9,12,14,20,34,135,239,240,244,407,441,515],manag:75,mani:[9,466,467,468,469,470,474],manifold:532,manipul:[5,11,12,13,15,21],manner:15,manual:[7,8,9,10],map:[12,19,32,135,137,143,144,147,167,178,190,195,203,204,239,307,355,356,357,406,415,432,436,437,438,439,440,441,443,444,445,449,450,452,453,494,515,523,524,548,549,552],map_from_reference_cel:143,map_to_reference_cel:143,map_tol:452,map_toler:452,mardal:523,marini:[8,523],mark:[0,6,16,17,18,19,22,135,137,191,193,416,419,420,421,422,423,443,445,452,453,483,487,514,564],mark_cel:452,mark_facet:452,marker:[16,17,18,20,135,186,191,194,416,419,420,421,422,423,437,438,439,440,448,452,487,564],marker_valu:[437,438,439,440],marking_fract:[145,146],marking_strategi:[145,146],mass:[407,433,434],master:[443,444,445],masters_slav:443,mat:[275,286,343,353],mat_mumps_icntl_14:[1,289],match:[12,27,135,144,201,210,358,407,453,454,487,493],materi:[6,19,514],math:[26,28,144,310,514],mathemat:[0,10,11,13,14,21],mathworld:407,matplotlib:[426,428],matric:[9,135,248,255,257,259,275,303,514],matrix:[4,5,14,15,21,37,135,144,147,166,181,199,246,248,250,254,255,256,257,258,262,267,275,278,282,285,286,303,307,310,315,317,326,343,345,349,350,353,354,483,484,511,514,597],max:[55,66,247,261,358,360,418,447],max_cell_dimens:147,max_dim:416,max_dimens:[145,146],max_iter:[145,146],max_valu:71,maxcount:49,maxfacetedgelength:542,maxim:407,maximum:[30,49,147,247,261,303,405,407,416,426,429,432,517,538],maximum_iter:303,mayavi:9,mayb:511,mckee:[355,356],mean:[0,10,19,21,47,53,86,135,144,358,436,437,438,439,440,487],measur:[0,2,19,124,361],mechan:[176,266],media:[6,7,8],member:[4,37,42,43,343,353,407],membership:[46,47,48,49,50,52,53,54,55,56,57,71,72,73,74,75,83,84,85,86,87,130,131,132,133,134,135,137,138,139,141,143,144,145,147,148,149,150,151,152,153,154,155,156,157,159,164,165,166,167,168,169,170,171,173,174,176,177,178,181,182,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,215,216,217,218,220,221,222,227,232,235,236,237,238,239,246,247,248,250,251,253,254,255,256,257,258,259,260,261,262,264,266,267,268,270,271,273,274,275,276,278,282,285,286,287,289,292,295,298,301,302,303,305,307,308,309,310,315,317,318,341,343,344,345,349,350,351,353,354,355,357,358,359,360,361,363,364,365,366,367,371,372,373,375,376,377,378,379,381,382,383,384,385,386,388,389,390,391,392,393,394,397,398,399,400,401,402,403,404,405,406,407,408,414,415,416,417,418,420,421,422,423,424,425,426,431,432,433,437,438,439,440,441,443,446,447,448,449,452,453,454,455,456,457,458,459,460,462,463,464,465,466,467,468,469,470,474,507,509],memori:[1,4,26,30,117,147],memory_usag:29,mere:406,mesh0:[196,197,548,549],mesh1:[196,197,548,549],mesh2svg:565,mesh:[0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,32,135,137,141,144,145,147,168,173,182,186,196,197,199,200,201,204,205,210,215,216,217,231,239,245,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,472,473,474,483,486,487,500,501,503,505,511,514,523,524,525,526,527,528,529,530,532,533,534,535,536,537,538,539,540,541,543,544,547,548,549,551,552,553,554,555,556,558,559,560,564,566,597],mesh_a:392,mesh_b:392,mesh_copi:407,mesh_displac:216,mesh_fil:21,mesh_funct:[186,436,437,438,439,440],mesh_id:418,mesh_identifi:514,mesh_shared_ptr:144,mesh_tim:182,meshcolor:471,meshcoloring_cell_color:471,meshcoloring_color:471,meshcoloring_color_cel:471,meshcoloring_compute_color:471,meshcoloring_type_to_dim:471,meshconnect:471,meshcoordin:[225,542],meshdata:[407,471],meshdisplac:[196,197,225,407],meshdomain:[407,420,421,422,423,471],mesheditor:[372,471],meshent:[361,373,379,385,460,466,467,468,469,470,471,474],meshentityiter:[454,468],meshentityiteratorbas:[466,467,469,470,474],meshfunct:[16,17,18,19,20,21,32,132,135,139,144,173,191,194,203,362,363,364,365,366,374,375,376,377,378,380,381,382,383,384,387,388,389,390,391,408,409,420,421,422,423,432,436,437,438,439,440,443,445,448,452,454,461,462,463,464,465,471,473,483,487,514,523,548,549,564,597],meshfunctionbool:[363,375,381,388,462,471],meshfunctiondoubl:[364,376,382,389,463,471],meshfunctionint:[365,377,383,390,464,471],meshfunctionsizet:[366,378,384,391,465,471],meshgeometri:[407,471],meshpointintersect:[471,472],meshqual:471,meshquality_radius_ratio:471,meshquality_radius_ratio_histogram_data:471,meshquality_radius_ratio_matplotlib_histogram:471,meshquality_radius_ratio_min_max:471,meshrenumb:471,meshtopolog:[407,471],meshtransform:471,meshtransformation_rot:471,meshtransformation_transl:471,meshvaluecollecion:[420,421,422,423],meshvaluecollect:[420,421,422,423,437,438,439,440,452,453,471],meshvaluecollectionbool:471,meshvaluecollectiondoubl:471,meshvaluecollectionint:471,meshvaluecollectionsizet:471,mess:[7,8,144,169],messag:[9,20,49,89,90,91,94,112,113,116,287,288],meta:515,method:[2,4,5,6,7,8,11,14,15,17,19,135,166,170,196,199,203,239,254,257,262,264,268,278,280,282,284,295,297,298,300,301,310,313,317,321,323,327,332,333,336,337,338,345,347,354,487,511,514,515],middl:20,midpoint:[21,135,418,452,487],might:[135,501],min:[55,67,247,261,360,447],min_valu:71,minfacetedgelength:542,mini:22,minim:[0,6],minimis:[6,298],minimum:[6,14,247,261,405,407,426,429,540],minr:15,minu:20,minut:5,miscellan:361,miss:[437,438,439,440],misspel:6,mix:[2,10,15,16,17,18,19,22,143,203,223,494,500,517,519,521,524,526],mixedel:494,mixedfunctionspac:[4,7,8,15,16,17,18,190,195,517,528,530],mixtur:4,mode:[6,32,144,239,240,244,245],model:[1,4,6],modifi:[10,12,13,21],modul:[0,1,2,3,4,6,7,8,9,10,11,12,13,14,16,17,18,20,21,34,501,547],module_nam:34,modulo:147,modulu:6,momentum:9,monitor:117,monitor_converg:72,monitor_memory_usag:110,mor:523,more:[3,4,5,6,7,8,10,12,13,15,19,21,32,37,94,132,168,173,217,358,372,425,441,466,467,468,469,470,474,484,505,514],moreov:15,morlei:523,most:[5,6,12,13,14,114,144,309,597],mostli:[202,259],move:[3,9,19,135,196,197,407,487],mpi:[4,34,75,77,79,80,81,100,110,232,259,260,360,405,407,424,447,455,456,457,514],mpi_:[55,61],mpi_barri:110,mpi_comm:[34,37,42,110,250,259,260,309,406,407,514],mpi_comm_world:[4,34],mpi_compute_local_rang:110,mpi_fin:75,mpi_gath:110,mpi_global_offset:110,mpi_group:34,mpi_index_own:110,mpi_initi:75,mpi_is_broadcast:110,mpi_is_receiv:110,mpi_local_rang:110,mpi_max:110,mpi_min:110,mpi_rank:110,mpi_siz:110,mpi_sum:[55,61,110],mpi_world_comm:34,mpiinfo:110,msg:[71,88],mshr:3,mtw:523,mu0:4,mu_:4,mu_mid:4,much:[12,13,20,21],mult:[246,255,267,285,349],multi:144,multigrid:[9,258],multimesh:[165,166,167,168,178,180,217,218,220,471],multimesh_default_paramet:471,multimeshassembl:193,multimeshdirichletbc:193,multimeshdofmap:[193,218],multimeshform:193,multimeshfunct:225,multimeshfunctionspac:[166,168,217,220,225],multimeshfunctionspace_default_paramet:225,multimeshsubspac:225,multiphys:453,multipl:[22,247,257,261,449,451,484,526],multipli:[2,7,8,10,441],multistag:[547,567,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,587,588,590,591,592,593,594,595],multistageschem:[193,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,585,587,588,595,596],multistagesolv:[569,587,588],mump:1,must:[0,1,2,3,4,9,11,13,14,15,16,17,18,19,20,21,22,47,53,86,138,145,147,176,199,203,223,257,261,287,303,317,325,343,353,385,407,446,483,493,517],mutabl:407,my_paramet:72,myexpression0:514,myexpression1:514,myfunc:514,myplot:32,myvectorvalu:517,n1curl:523,n2curl:523,name:[5,6,7,8,32,34,37,41,42,43,72,87,90,91,144,169,182,184,185,201,231,232,233,234,235,239,278,407,415,436,437,438,439,440,453,468,512,514,517,523,548,549,584,592],namespac:[34,231,514],natur:[7,8,10],navier:[15,22],ncell:514,ndofs_per_cel:514,necessari:[10,12,75,76,135,141,144],necessarili:484,nedelec:523,need:[0,2,4,5,6,7,8,10,11,12,13,14,16,17,18,19,21,34,42,47,49,53,86,114,144,169,199,204,257,267,301,317,354,386,416,432,436,437,438,439,440,483,514,515,517],neg:[7,8,181],neighbor:407,neighbour:147,neo:6,nest:[72,512],nested_paramet:72,neumann:[0,6,7,11,13,14,19,21,22],new_boundari:[196,197],newton:[4,6,11,170,171,181,271,273,295,509],newton_solv:11,newtonsolv:[4,326],newtonsolver_default_paramet:326,next:[0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,239,454,466,467,468,469,470,474],nicolson:4,nls_type:295,nnz:257,nodal:209,node:[11,12,145,147],non:[4,6,7,8,14,15,16,17,18,47,53,86,135,201,210,217,247,254,257,259,266,270,303,307,317,343,353,354,432],non_hermitian:303,non_matching_ev:201,none:[35,37,42,72,147,239,303,319,482,483,484,491,493,494,501,503,505,506,508,512,514,516,518,520,523,524,525,527,528,529,544,564,570,573,576,577,578,579,581,584,590,591,592,593,594],nonlinear:[4,6,22,131,135,138,166,170,171,186,192,271,273,274,295,298,478,508,509,511],nonlinear_funct:[271,295],nonlinear_poisson:11,nonlinear_problem:295,nonlinearproblem:[4,271,274,295,326],nonlinearvariationalproblem:[131,193,478,479,480,510,597],nonlinearvariationalsolv:[193,510,511,597],nonlinearvariationalsolver_default_paramet:193,nonloc:[147,167],nonzero:259,norm:[4,14,16,18,239,247,250,257,261,446,498,501],norm_typ:[501,503],normal:[0,2,4,8,10,11,13,14,19,21,135,199,326,357,361,367,379,385,407,426,429,430,441,514,532,537],noslip:[1,9,15,16,17,18,20],not_working_in_parallel:110,notat:[139,144,523,528],note:[0,4,5,6,9,10,11,12,13,14,19,21,30,43,47,53,72,75,78,86,91,94,135,144,145,199,218,303,343,353,358,406,407,415,416,432,441,487,514],notebook:[565,566],noth:9,notic:12,now:[0,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,483],null_spac:14,null_vec:14,nullspac:[147,318,325],num_assigning_funct:203,num_cel:[407,417,514],num_coeffici:144,num_connect:414,num_edg:407,num_ent:[367,407,414,418],num_entity_dof:147,num_fac:407,num_facet:407,num_facet_dof:147,num_global_cel:[372,406,417],num_global_ent:418,num_global_vertic:[372,406,417],num_iter:[298,407],num_jacobian_comput:174,num_local_cel:417,num_local_nonzero:259,num_local_vertic:417,num_mark:416,num_nonzero:259,num_nonzeros_diagon:259,num_nonzeros_off_diagon:259,num_part:[167,168,218,441],num_receiving_funct:203,num_row:[257,260,261,308],num_simplic:361,num_sub_el:143,num_sub_spac:524,num_vertic:[361,367,407,417],num_vertices_per_cel:406,number:[0,3,4,6,7,8,10,11,12,13,16,17,18,20,21,49,55,69,71,73,90,135,143,144,147,167,168,171,190,195,203,209,217,218,223,229,230,247,257,259,260,271,275,278,295,298,303,307,345,360,361,367,372,405,406,407,414,416,417,418,419,420,421,422,423,424,426,427,432,433,434,436,437,438,439,440,441,447,449,451,452,455,456,457,487,494,501,509,516,517,524,528,548,549],numer:[19,343,353,354,511],numeric_limit:358,numerical_limit:418,numpi:[34,47,53,86,135,144,147,182,190,198,199,201,204,257,261,329,358,361,407,415,417,420,421,422,423,441,452,487,512,524],object:[0,4,6,8,14,32,37,47,49,52,53,55,56,57,71,72,73,75,84,85,86,87,111,130,131,133,135,138,139,141,143,148,149,150,151,152,153,154,155,159,164,166,167,168,176,177,178,182,186,196,198,199,201,202,203,204,206,207,208,210,211,216,217,227,232,235,236,237,238,239,242,246,247,250,254,258,266,273,274,278,287,289,292,295,298,318,350,355,357,358,362,367,372,374,380,387,392,393,394,397,398,399,400,401,402,403,404,407,408,414,416,417,418,419,420,421,422,423,424,425,426,431,432,433,436,443,446,448,449,452,453,454,461,466,467,468,469,470,474,479,480,487,490,493,514,528],obstacl:19,obtain:[0,7,8,9,11,141],occur:[43,526],off:[0,9,11,12,13,21,119,205,259,501],off_diagonal_pattern:259,off_process_own:[147,167,309],offset:[55,61,190,195,218,432],ofilenam:553,often:[0,5,9,11,12,13,21],old:[182,204,355,356,449,450,524],oldest:9,omit:[3,11,494],on_boundari:[2,6,9,11,12,15,19,20,42,135,452,486,487],onc:[261,354],one:[0,1,3,4,5,6,7,8,9,20,21,34,37,47,53,55,60,86,111,135,168,174,177,191,194,203,209,217,220,222,223,239,257,303,307,358,386,407,408,410,411,412,426,429,430,441,443,444,483,484,487,494,501,523],ones:[12,18,20],onli:[3,7,8,9,10,12,14,15,20,21,30,32,49,135,137,143,144,190,195,199,201,239,255,257,261,267,301,303,317,354,358,407,415,418,419,420,421,422,423,432,436,437,438,439,440,443,444,487,514,523,564],onlin:361,onto:[499,504,505],open:[9,372,417],openmp:101,openmpassembl:193,oper:[0,1,2,4,5,7,8,10,11,12,13,14,15,16,17,18,19,21,72,147,198,202,204,216,247,254,255,256,257,258,261,267,270,278,282,286,315,318,325,343,345,353,446,493,494],opposit:[2,3,361,493],opt:[466,467,468,469,470,474],optim:[2,4,6,21,52,501,511],optimis:[274,298],optimisation_problem:298,optimisationproblem:[298,326],option:[2,3,4,6,16,18,20,21,72,91,111,115,126,127,135,144,147,166,182,186,199,203,205,232,239,259,278,289,290,291,325,357,385,419,436,457,466,467,468,469,470,473,474,482,484,487,501,503,505,506,508,511,512,514,517,524,527,528,564],option_str:72,oral:310,order:[0,2,4,5,6,7,8,10,11,12,13,14,15,16,18,19,21,22,43,134,141,143,144,169,176,211,212,213,214,355,356,357,361,367,372,385,407,417,441,449,450,484,493,501,570,572,573,576,577,578,579,581,584,590,591,592,593,594,595],org:[343,353,354],organ:597,orient:[0,130,131,139,145,357,361,367,407,415,477,478,511],origin:[5,34,141,218,357,386,446,473,514,542,584,592],orthogon:[0,14,141,318],orthonorm:318,oscil:9,ostream:232,other:[4,5,6,8,9,11,19,20,21,47,53,72,73,86,135,144,145,358,373,407,441,443,445,488,493,501,502,511,523],other_paramet:72,otherwis:[6,15,16,17,18,30,71,114,239,257,317,354,415,416,514],our:[0,1,3,7,8,10,11,12,13,14,16,17,18,20,21],out:[85,144,343,353,371,407,441,484],out_valu:[55,60],outcom:144,outfil:232,outfilenam:560,outflow:[9,15,16,17,18,20],outlet:1,outlin:483,output:[4,9,11,12,13,21,121,418,446],outsid:[11,12,13,21],outstream:232,outward:[0,2,4,8,10,11,13,21,357,407],over:[3,7,8,9,16,17,18,19,20,21,72,85,132,135,139,144,165,173,203,239,357,360,386,407,415,424,432,452,454,455,457,466,467,468,469,470,473,474,483,487,490,523,530,548,549,564],overlap:441,overload:[8,46,47,48,53,54,55,60,65,71,73,74,75,77,78,83,86,87,88,130,131,135,137,138,144,145,156,157,166,167,168,169,170,171,176,181,182,186,188,189,192,196,197,198,199,201,202,203,204,205,209,210,216,217,218,220,221,222,223,232,239,245,246,247,248,253,254,256,257,260,261,262,264,266,267,268,270,271,278,282,286,289,291,295,298,302,303,307,308,309,310,315,317,343,345,350,353,354,355,356,357,358,360,361,367,368,372,373,379,385,392,394,396,405,406,407,408,409,414,415,416,417,418,420,421,422,423,424,432,433,434,437,438,439,440,441,446,447,448,452,453,454,455,456,457,460,466,467,468,469,470,473,474,487,507,509,514,516,518,519,520,521],overridden:483,overrul:[512,517],overwrit:[19,20,437,438,439,440],own:[32,55,62,147,167,261,292,301,432,443,444],owner:[418,443,444],ownership:[47,53,86,147,167,239,260,261,302,317,354,418],ownership_rang:[147,167,309],owns_index:261,p2v:526,p_in:9,pair:[9,15,18,135,171,202,271,295,307,407,414,432,437,438,439,440,441,509],paper:361,parabol:4,parallel:[4,9,55,63,64,118,135,137,147,190,205,257,275,406,419,420,421,422,423,449],paramet:[0,2,9,11,14,25,37,41,46,48,50,51,54,71,74,75,78,87,110,111,135,136,139,140,145,146,157,158,171,172,174,175,177,182,183,218,219,239,241,245,248,249,256,262,263,264,265,267,268,269,271,272,278,279,282,283,289,292,293,295,296,298,299,303,304,310,311,315,316,345,346,441,442,483,505,506,507,508,509,511,514,572],parameter_typ:256,parametervalu:[46,48,54,74,110],paramt:1,paraview:9,parent:[148,149,150,153,155,201,204,399,400,401,402,403,453,548,549],parent_edge_indic:551,parent_vertex_indic:[415,453,548,549],parmeti:102,pars:[72,75,78,406],part:[2,4,5,6,7,8,10,11,12,13,16,17,18,19,20,21,144,167,168,217,218,261,303,308,441,483,516,518,520],part_numb:441,partial:[0,1,2,5,7,8,9,10,11,12,13,14,21,135,487],particular:[0,1,4,5,7,8,10,11,12,13,21,135,144,196,266,278,292,295,298,303,345,487,530],particularli:216,partit:[135,147,259,385,406,449,451],partli:523,pass:[4,6,34,47,53,86,174,177,203,319,506,508,511,514,517,586,596],path:[21,232,233],pattern:[178,179,180,259,261,309,414,483],pbc:12,pc_type:[298,310],pde:[485,588],pdf:[239,361],penalti:2,per:[6,190,191,194,195],perform:[4,7,8,9,10,16,17,18,203,239,407],period:[22,137,443,445,452],periodicboundari:12,periodicboundarycomput:471,periodicboundarycomputation_compute_periodic_pair:471,periodicboundarycomputation_masters_slav:471,permit:[4,289],perserv:484,perturb:[572,584,592],petsc4pi:[275,278,282,295,302],petsc:[1,5,14,15,34,75,78,82,83,103,104,105,114,275,278,282,286,287,288,289,290,291,292,295,298,302,303,310],petsc_error:287,petsc_exp:34,petscbasematrix:[285,286,326],petscfactori:326,petscfactory_inst:326,petsckrylovsolv:[275,292,326],petsckrylovsolver_default_paramet:326,petsckrylovsolver_method:326,petsckrylovsolver_precondition:326,petsclinearoper:326,petsclusolv:326,petsclusolver_default_paramet:326,petsclusolver_method:326,petscmatrix:[5,326,483],petscobject:[275,278,282,292,295,298,301,302,303,310,326],petscobject_petsc_error:326,petscopt:[1,326],petscoptions_clear:326,petscoptions_set:326,petscprecondition:[278,301,326],petscpreconditioner_default_paramet:326,petscpreconditioner_precondition:326,petscsnessolv:326,petscsnessolver_default_paramet:326,petscsnessolver_method:326,petsctaosolv:326,petsctaosolver_default_paramet:326,petsctaosolver_method:326,petscuserprecondition:326,petscvec:34,petscvector:[34,298,326],pfile:9,pfile_pvd:[15,16,17,18],phase:4,phrase:8,physic:[0,541],pick:[15,371],piec:[7,8,303],piecewis:[0,1,5,6,9,11,13,15,16,17,18,21,501],pixel:239,place:[6,7,8,343,353,406,415,494],plai:15,plot:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,26,239,240,242,243,244,426,428],plot_mesh:[145,146],plotfil:32,plotter:[239,242],plugin:3,png:239,point:[0,1,3,6,8,11,12,13,20,21,55,58,134,143,176,199,201,205,209,211,212,213,214,239,273,357,358,361,367,372,385,392,405,406,407,417,418,424,425,433,434,435,441,449,451,452,460,466,467,468,469,470,471,472,474,486],pointer:[47,53,86,135,144,156,157,167,168,170,171,173,217,218,267,286,298,302,416,441,448,507,509],pointintegr:587,pointintegralsolv:[193,586,589,596],pointintegralsolver_default_paramet:193,pointload:[135,487],pointsourc:193,pointwis:[135,487],poisson:[1,2,5,6,15,22],polici:[55,63,64],polynomi:[0,1,4,5,6,7,8,10,11,13,21,209,211,212,213,214,495,501,528],pool:[449,450],popul:19,porou:[7,8],portion:[6,55,59,65,406],pos:[466,467,468,469,470,474],pos_gen_non_hermitian:303,pose:10,posit:[15,16,17,18,52,303,437,438,439,440,466,467,468,469,470,474],possibl:[4,6,15,20,32,34,47,53,85,86,134,135,141,168,201,210,217,303,407,441,448,483,487,503,511],post:505,potenti:[4,6,483],pow:[0,7,8,10,13,14,19,21],power:[226,303,514],practic:21,pre:186,prec:9,precis:[0,11,12,13,19,21,124],precomput:407,precompute_basis_const:6,precompute_ip_const:6,precondition:[9,15,147,254,256,258,262,268,278,281,292,294,310,314,322,328,334,344,345,348,350,511],preconditioner_typ:505,predefin:19,prefer:91,prefix:[239,278,289],preprocess:485,prescrib:[1,2,6,7,8,16,17,18,19,483],presenc:4,present:[4,145,182,267],preserv:[181,482,484],press:[239,240,244],pressur:[9,15,16,17,18,220,222],pretti:[47,53,72,83,86,87,167,246,247,267,414,418,424,432,446],prevent:1,previou:[4,6,19,441],previous:[0,11,12,13,21],primal:[0,130,131,139,141,145,477,478,479,480],primari:259,primary_dim:[259,307,309],primit:91,print:[3,5,9,16,18,19,20,34,47,49,53,72,83,85,86,87,91,94,111,112,113,116,129,167,204,246,247,267,287,288,414,418,424,432,446,468,503],print_dofmap:204,print_funct:[3,5,9,16,18,19],printf:91,prior:[205,308],priori:372,prism:[3,360],probabl:5,problem:[15,33,130,131,135,139,141,145,156,157,164,166,170,171,176,186,192,271,273,274,295,298,303,310,477,478,479,480,501,506,507,508,509,511,597],problem_typ:303,proce:[10,21],procedur:[0,11,22],process:[4,9,12,13,21,30,55,59,60,62,65,68,69,117,125,135,147,167,205,257,259,261,302,317,354,357,407,417,418,424,426,429,432,436,437,438,439,440,443,444,449,451,466,467,468,469,470,474,487,505,564],processor:[34,190,406],produc:[3,20,357],product:[7,8,9,10,15,16,17,18,176,205,246,247,255,257,261,267,275,285,349,373,446],program:[4,9,20,23,117,144],progress:110,project:[9,19,498],promis:246,propag:37,properti:[0,19,514],propos:9,proven:307,provid:[0,3,4,10,11,13,14,16,17,18,19,21,33,36,38,41,44,47,52,53,55,73,83,86,132,133,147,173,176,178,181,196,205,256,258,266,268,270,271,286,289,302,303,310,317,343,353,354,367,371,372,407,426,449,453,466,467,468,469,470,474,481,482,483,485,490,493,494,499,502,504,510,527,528,562,563,565],psi:6,ptr:[130,131,266,270,317],puh:441,punctuat:91,pure:[14,22],purpos:[19,47,53,86],put:[12,407],pvd:[1,2,4,6,9,11,12,13,15,16,17,18,20,21,232],pydolfin:[36,516,518,519,520,521],python:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,25,33,34,45,47,53,86,144,199,201,216,308,441,481,485,510,514,515,522,562,589],qmr:15,quadrant:9,quadrat:[2,6,9,15,18],quadratur:[4,441,501,523],quadrature_rule_cut_cel:441,quadrature_rule_interfac:441,quadrature_rule_overlap:441,qualiti:[361,426,427,428],quantifi:426,quantiti:[0,6,19,308],quasi:181,queri:514,quicker:597,r_dt:139,r_t:139,r_vec:303,radii:[407,426,429],radiu:[135,361,426,429,430,487],radius_ratio:[361,367,426],radius_ratio_histogram_data:426,radius_ratio_matplotlib_histogram:426,radius_ratio_min_max:426,rais:441,rand:225,random:[4,229,230],rang:[14,19,49,55,59,65,71,72,73,147,167,239,259,260,261,275,302,317,354,426,429,430,432,454],range_max:239,range_min:239,range_str:71,rank:[4,14,37,55,68,143,144,168,199,205,216,259,260,483,514],rather:[15,16,17,18,218],ratio:[6,361,426,427,429,430],raviart:[7,523],raw:232,reach:[4,454,466,467,468,469,470,474],read:[0,1,2,4,7,8,10,11,12,13,14,15,16,17,18,19,20,21,91,182,232,235,436,437,438,439,440],readabl:9,readi:[1,5,7,8,15,20],readili:505,readm:91,real:[5,10,274,303,308,523],realli:[239,240,244,418],reason:91,rebuild:407,receiv:[55,64,203,223],receive_mesh_data:406,receiving_func:[203,223],receiving_process:[55,60],receiving_spac:203,recent:6,recogn:415,recommend:5,recomput:239,rectangl:[3,19,447],rectanglemesh:[3,457,471],rectangular:[3,360],recurs:72,redefin:10,redistribut:[406,473,564],reduc:[4,147],reduct:[55,61],refer:[0,3,4,6,7,8,9,47,53,86,143,145,146,167,168,218,257,317,343,353,354,441],refin:[0,186,187,367,419,420,421,422,423,471,511,561],refine_cel:367,refined_mesh:473,reflect:[135,144],regener:[2,9],region:[16,17,18,19,295],regist:41,regular:[432,466,467,468,469,470,474],reimplement:[199,485],rel:[0,1,5,11,12,13,14,21,135,139,204,271,357,358,361,367,385,407,436,437,438,439,440,487],relat:[407,414,432,468],relative_residu:271,relative_toler:[4,11,72],releas:90,relev:[7,8,564],reli:[5,134,170,466,467,468,469,470,474,485],remain:[7,8,9,10,15,135,487],remaind:[6,19],remedi:[135,487],rememb:9,remov:[9,14,20,72,90,257,308],renam:[72,87,485],render:[32,239,565,566],renumb:431,renumber_by_color:[407,431],reorder:[137,449,450],reordered_argu:493,repartit:406,repeat:[239,261,354],repeatedli:[218,441],rephras:4,replac:[8,261,441],report:118,repres:[0,4,11,12,13,16,17,18,19,21,84,134,138,156,168,170,198,199,200,201,202,204,215,217,218,220,222,232,308,386,415,418,425,441,446,448,506,508,512,514,517,523,525,526,527,528,536,539],represen:501,represent:[4,34,47,53,72,83,86,87,139,167,216,246,247,257,261,267,275,278,282,295,302,303,407,414,418,424,432,446,501,516,517],request:273,requir:[1,2,4,5,6,8,10,12,14,75,77,147,170,258,303,480,512],required_thread_level:[75,77],rescal:[9,239],research:[248,315],reserv:6,reset:[71,115,123,127,483],reset_newton_solv:174,reset_stage_solut:174,resid:[203,223,517],residu:[0,4,11,14,130,131,139,141,170,271,326,477,478,511],residual_form:170,residual_represent:139,resiz:[3,343,353,354],respect:[0,1,2,4,6,14,18,19,318,361,367,386,468,572],respet:1,respons:[75,81,82,209,407],responsible_mpi:75,responsible_petsc:75,rest:19,restrict:[2,205,471,523,527,528],result:[4,5,7,8,9,10,14,15,16,18,164,210,425,494,515],retriev:[72,182,289],reus:[144,182,218],revers:[355,356],rhs:[9,19,138,181,202,517,584,592],rhs_form:[570,572,573,576,577,578,579,581,584,590,591,592,593,594,595],rhs_int:138,richard:361,right:[2,3,5,6,8,9,10,12,14,15,19,20,21,42,43,135,138,144,176,301,325,357,361,447,457,483],right_justifi:83,rigid:147,rk4:586,rksolver:[193,586,589],rl1:596,rl2:596,rmax:407,rmin:407,robust:19,robustli:[436,437,438,439,440],rogn:139,root:9,root_nod:[0,148,149,150,153,155,201,204,399,400,401,402,403],rotat:[3,9,147,407,433,434,446],roughli:2,round:[0,11,12,13,21,501],rout:20,routin:34,row:[83,135,199,250,257,258,259,260,261,270,275,286,302,307,308,317,343,353,354],rule:441,run:[0,4,10,11,13,14,20,21,22,137,205,267,511],runtim:[45,515],rush:[590,591,593,594,596],rushlarsenschem:[569,590,591,592,593,594],safe:[47,53,86],safeguard:[466,467,468,469,470,474],safisfi:10,sai:[0,11,12,13,21],same:[6,7,8,12,15,19,20,43,141,144,182,203,223,239,358,361,407,420,421,422,423,441,453,494,495,501,514,517,526],sampl:[182,483],satisfi:[0,1,6,7,8,10,12,13,15,19,21,130,131,477,478],save:[1,2,4,6,9,11,12,13,15,16,17,18,20,21,239,408,410,411],save_data:[145,146],scalar:[4,6,9,17,37,42,43,176,188,198,199,202,221,239,326,446,483,512,514,528,567,568],scalarbar:[32,239],scale:[6,32,239],scan:[55,61,514],scene:[20,514],scheme:[169,419,420,421,422,423,432,570,573,576,577,578,579,581,587,588,590,591,593,594,596],schur:[246,303],schur_approxim:246,scipi:257,scope:85,scotch:[106,471],scotch_compute_gp:471,scotch_compute_partit:471,screen:[2,4,6,32],script:45,search:[135,295,487],second:[0,2,3,4,7,8,10,11,13,14,16,17,18,20,21,124,198,211,212,358,417,436,437,438,439,440,517,591,594],see:[2,6,8,239,361,484,501,503,505,514,515,523,527,528],seed:[4,225],seem:124,seen:10,select:[261,302,354],self:[2,4,8,11,12,19,20,72,514],semi:573,semicolon:11,semidefinit:303,semilinear:11,send:0,sens:441,sent:[75,78,515],separ:[4,7,8,10,15,16,17,18,19,221,432,441],sequenc:4,seri:[182,184,185],serial:[417,564],series_nam:[182,184,185],set:[0,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,25,32,34,52,55,58,71,72,83,120,121,135,144,147,166,170,173,209,218,239,240,244,246,247,256,257,258,260,261,270,278,282,286,289,291,292,295,302,303,307,310,317,343,353,354,357,407,414,416,418,419,420,421,422,423,424,432,437,438,439,440,441,449,451,452,468,483,487,514,564],set_al:[19,20,420,421,422,423,564],set_block:[246,247],set_bound:170,set_cell_domain:144,set_child:[148,149,150,151,152,153,154,155,206,207,208,236,237,238,397,398,399,400,401,402,403,404],set_coeffici:144,set_coordin:258,set_deflation_spac:303,set_diagon:257,set_exterior_facet_domain:144,set_fieldsplit:292,set_global_index:432,set_global_s:414,set_interior_facet_domain:144,set_kei:239,set_ksp:310,set_loc:[257,260,261,302,317,354],set_log_act:110,set_log_level:[20,110],set_mark:416,set_mesh:144,set_min_max:239,set_nullspac:[14,256,258],set_oper:[15,256,278,282],set_options_prefix:278,set_output_stream:110,set_par:[148,149,150,151,152,153,154,155,206,207,208,236,237,238,397,398,399,400,401,402,403,404],set_rang:[71,72],set_solv:310,set_some_coeffici:144,set_valu:[135,420,421,422,423,437,438,439,440],set_vertex_domain:144,set_viewangl:239,set_x:147,setrow:257,setup:301,sever:[0,144,203,223,239,358,567],shall:[0,1,10,11,12,13,14,15,16,17,18,21],shallow:[16,18,201],shape:[9,20,143,198,199,216,514,527],share:[2,47,53,86,130,131,135,143,144,147,156,157,167,168,170,171,201,204,217,218,266,267,270,317,407,416,418,432,441,443,444,448,449,451,507,509,517],shared_ent:432,shared_facet:2,shared_inst:[266,267,270,317],shared_nod:147,shared_ptr:[21,34,171,203,245,278,420,421,422,423,437,438,439,440,441,509,514],sharing_process:418,shewchuk:361,shift:[239,303],should:[4,8,9,11,12,13,15,16,17,18,21,34,55,63,64,91,94,111,114,124,128,135,144,173,186,190,195,239,254,255,289,357,358,407,416,437,438,439,440,441,452,473,487,494,501,514,564],show:[5,10,34,239,468],shown:[5,239],side:[2,6,8,9,10,14,15,19,135,138,176,301,485],sigma:[7,8],sign:[15,16,17,18],signal:9,signatur:143,significantli:514,similar:454,similarli:407,simpl:[0,10,11,12,13,14,21,22,47,53,73,86,143,199,286,302,307,343,353,354,417,499,501,502,504,514,562,565],simplest:[32,135,483,487],simpli:[0,11,12,13,21,32],simplic:[19,361],simplici:417,simplifi:72,simul:0,simultan:[15,16,17,18],sin:[0,2,6,7,8,9,10,11,12,13,14,15,16,17,18,500,505,514],sinc:[0,4,6,8,9,10,11,13,14,16,17,18,20,21,114,135,358,432,466,467,468,469,470,474,485,501],singl:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,156,170,192,203,223,358,453,458,459,482,494,512,514],singleton:[75,276,277,305,306,341,342,351,352],singular:[22,256,318],size:[2,4,9,17,47,52,53,55,59,65,69,86,147,199,203,205,209,223,246,247,250,255,257,260,261,267,275,285,302,307,317,349,354,355,356,407,414,415,420,421,422,423,424,432,437,438,439,440,533],size_glob:[407,414,432],size_t:[16,17,18,19,20,21,91,135,144,186,204,298,407,415,418,419,436,437,438,439,440,441,452,483,514],size_t_:87,sizeof:122,sizeof_la_index:110,slave:[443,444,445],slepc4pi:303,slepc:[5,107,303],slepceigensolv:[5,326],slepceigensolver_default_paramet:326,slip:[9,15,16,17,18,20],slower:514,small:[0,11,12,13,21,303,501,510],smallest:303,smooth:[258,407],smooth_boundari:407,smoother:216,snap:[407,452],snap_boundari:407,sne:[104,295],snippet:35,sole:19,solid:3,solut:[0,1,2,4,6,7,8,10,11,12,13,14,15,16,17,18,19,21,130,131,135,139,141,145,156,170,181,248,267,282,298,303,315,441,477,478,487,511,570,572,573,576,577,578,579,581,584,590,591,592,593,594,595],solv:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,83,145,157,164,171,192,248,253,256,262,264,268,271,278,282,295,298,301,303,310,315,330,343,345,350,353,477,478,498,505,506,507,508,509,587,588,597],solvabl:14,solve_in_plac:[343,353],solve_prim:145,solve_transpos:[253,256,264,282],solver:[0,1,2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,157,170,171,174,177,181,253,254,255,256,262,264,268,271,273,278,280,282,284,295,297,298,300,303,310,312,313,332,336,344,345,347,350,507,509,510,511,572],solver_paramet:[11,511],solver_typ:505,some:[1,2,3,4,5,6,11,15,17,19,27,72,133,144,303,357,418,468,483,511,542,564,597],someth:501,sometim:[4,5,111,135,487],somewhat:515,sorri:15,sort:[5,259,307],sought:[6,10],sourc:[0,1,2,7,8,9,10,11,12,13,14,19,21,22,34,91,176],space:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,72,135,141,143,144,147,156,165,166,167,168,170,176,186,190,195,199,201,203,204,217,218,220,222,223,256,258,303,318,325,367,415,418,441,446,487,494,495,497,499,500,501,504,505,506,508,514,517,519,521,523,524,525,526,527,528,530],space_dimens:143,span:14,sparrai:257,spars:[132,173,246,248,250,257,260,270,286,307,315,343,350,353,414],sparsiti:[178,179,180,259,261,309,483],sparsity_pattern:302,sparsitypattern:326,sparsitypatternbuild:193,sparsitypatternbuilder_build:193,sparsitypatternbuilder_build_multimesh_sparsity_pattern:193,spatial:[4,6,147],spatialcoordin:542,special:[19,75,76,358,394,396,515,542],specialfacetfunct:[139,225],specialfunct:[531,532,533,534,535,536,537,538,539,540,541],specialis:[343,353],specif:[5,6,10,25,137,367,418,468,483,523],specifi:[0,1,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,32,132,135,144,147,166,170,173,209,220,222,232,301,303,350,371,385,407,408,410,412,414,415,417,454,473,483,487,503,506,508,511,514,527,528,564],spectral:303,spectral_shift:303,spectral_transform:303,spectrum:303,sphere:[135,361,407,487],split:[2,4,7,8,9,10,15,16,17,18,55,59,65,517,524],sqr:27,squar:[0,2,3,4,7,8,9,10,11,12,13,14,16,19,20,21,361,367,385,446,457,501,523],squared_dist:[361,367,385,446],squared_norm:446,stabil:22,stabl:[7,8,15,18,501],stage:[169,584,592],stage_form:169,stage_solut:[169,584,592],stand:523,standard:[2,4,5,11,12,13,14,15,18,19,218,286,302,343,353,354,407,441,446,483,484,500,502,503,523],start:[15,19,20,85,117,124,144,441],start_vertex:556,statement:[4,484],stationari:139,std:[21,34,91,135,137,144,145,146,186,195,203,204,232,298,307,358,407,415,418,420,421,422,423,436,437,438,439,440,441,452,457,514],std_out_all_process:9,step:[0,4,5,9,10,11,13,14,15,16,19,21,33,73,174,177,485],step_interv:[174,177],stiff:[5,49,483],still:[135,441,487],stl:[307,466,467,468,469,470,474],stlfactori:326,stlfactory_inst:326,stlmatrix:326,stockmey:[449,450],stoke:[20,22,220,222],stop:[0,85],storag:[52,83,257,432],store:[1,2,4,7,8,9,10,14,15,16,17,18,19,20,21,72,85,115,127,135,137,145,182,201,307,406,407,414,415,416,419,420,421,422,423,425,432,436,437,438,439,440,441,453,483],store_connect:182,str:[34,37,43,47,53,71,72,73,86,87,90,91,135,144,166,167,182,184,185,194,201,232,233,234,246,247,267,407,414,415,417,418,419,420,421,422,423,424,432,436,437,438,439,440,446,447,457,487,512,514,517],str_latex:83,strain:6,strategi:[4,6,9,130,131,194,477,478],stream:[112,121,232],string2typ:367,string:[0,4,10,11,13,14,21,30,37,38,42,43,44,47,49,53,55,60,71,72,74,83,86,87,90,91,92,111,135,143,145,146,166,167,239,246,247,267,289,291,325,367,368,369,370,414,415,418,419,424,426,428,432,436,446,457,466,467,468,469,470,474,487,514,523,527,528],string_:357,stringparamet:110,strong:[16,17,135,139,487],structur:[52,218,246,257,260,270,286,307,343,353,358,407,414,514],studi:19,style:91,sub:[4,6,7,8,11,12,15,16,17,18,19,20,75,135,137,143,147,189,201,203,204,205,216,223,247,407,415,419,420,421,422,423,448,453,487,517,524],sub_add:202,sub_compon:[220,222],sub_domain:[16,17,18,20,135,166,407,448,452,453,487],sub_domains_bool:20,sub_domains_doubl:20,sub_sub:202,subclass:[2,4,8,12,34,37,42,43,47,53,86,144,145,196,197,254,319,320,324,407,486,514,515],subdomain:[1,2,6,11,12,13,16,17,18,21,22,27,39,42,43,132,135,137,166,173,371,407,416,420,421,422,423,448,453,471,483,486,487,491,523,560,597],subdomains_bool:20,subdomains_doubl:20,subdomian:6,subel:[519,521],subfunct:[201,216],subject:181,submesh:[415,471,551],subregion:19,subscript:2,subsequ:[9,11,130,131,216,406,477,478],subset:[9,72,135,144,416,436,437,438,439,440,448,453,454,487],subset_it:454,subsetiter:471,subspac:[0,7,8,15,204,220,225,303,494,517,524],subsystem:[75,76],subsystemsmanag:[110,287],subsystemsmanager_fin:110,subsystemsmanager_init_mpi:110,subsystemsmanager_init_petsc:110,subsystemsmanager_mpi_fin:110,subsystemsmanager_mpi_initi:110,subsystemsmanager_responsible_mpi:110,subsystemsmanager_responsible_petsc:110,subtract:[9,501],suffer:501,suffix:[9,11,12,13,21,232,239],suggest:[5,15,19],suitabl:[1,2,6,10,11,12,13,14,15,19,21,181,441,479],sum:[4,55,70,203,223,261,302,317,354,501],summari:[0,1,11,12,13,21,85,110,111,115,127,145,239],superspac:204,suppli:[6,144,199,239,301,511],support:[3,15,75,77,137,239,245,298,408,415,446,523],suppos:[7,8],sure:14,surfac:4,svg:[232,565,566],svgtool:[561,566],swig:[34,45,515,547,562],swigimportinfo:39,symbol:[532,534,535,537,538,540,541],symmetr:[15,16,17,18,21,257,484,527],symmetri:[15,181,246,482,484,527],synchron:[55,58],synonym:11,syntax:[0,2,4,6,10,11,13,14,21,42,43],synthes:239,system:[4,9,11,14,16,17,18,20,30,34,49,75,132,135,166,173,181,189,248,253,256,262,264,267,268,271,278,282,289,295,301,303,315,330,345,350,424,482,484,511,597],systemassembl:[193,485],tabl:[84,110,127,239],tableentri:110,tabul:147,tabulate_all_coordin:147,tabulate_all_dof:258,tabulate_coordin:147,tabulate_entity_dof:147,tabulate_facet_dof:147,tabulate_local_to_global_dof:147,tag:[16,17,18,19],tai:523,take:[0,1,3,4,5,7,8,11,12,13,19,20,21,47,53,86,239,289,291,292,406,515,572],taken:[0,15],tan:514,tangent:572,tao:[105,298,310,313],tao_typ:298,taolinearboundsolv:326,taolinearboundsolver_default_paramet:326,taolinearboundsolver_krylov_solv:326,taolinearboundsolver_method:326,taolinearboundsolver_precondition:326,target:[12,303],task:[4,6,85,88,91,93,115,126,127],tau:[7,8],taylor:[9,15,22],taylorhood:18,tdim:[358,361,372,392,406,417],tear:496,techniqu:[0,295],tell:[4,6,11],temam:9,tend:5,tensor:[4,5,6,22,132,144,165,173,188,198,199,246,247,254,259,260,261,309,319,320,324,483,484,501,512,514,527],tensor_layout:261,tensorfunctionspac:530,tent:9,term:[0,1,2,6,7,8,10,11,12,13,14,21,23,255,267,501,503,530],termin:[4,15],test:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,19,21,141,144,156,170,257,308,318,325,458,459,493,506,508,511,518,567,568],test_spac:[156,170],testfunct:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,522,597],tetrahedr:[6,360,455],tetrahedra:[5,360,455],tetrahedron:[32,367,372,458],tetrahedroncel:358,text:239,tfqmr:15,than:[0,9,11,15,16,17,18,20,21,37,135,145,358,477,478,494,514,564],thei:[4,5,16,18,19,43,205,501],them:[9,12],themselv:358,therebi:[3,141],therefor:[3,5,6,9,14,15,17,75,81,82,441,514],theri:7,theta:[4,6,446],thi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,30,33,34,36,38,40,43,44,45,47,50,52,53,55,72,73,75,76,83,84,86,91,94,114,117,123,130,131,132,133,134,135,137,138,141,143,144,147,156,157,165,166,167,168,169,170,171,173,176,178,181,182,196,198,199,200,201,202,203,204,205,209,210,215,216,217,218,220,222,232,239,248,253,254,255,256,257,258,259,260,261,262,266,267,268,270,271,273,274,275,278,282,286,287,292,295,298,301,302,303,307,308,309,310,315,317,318,343,344,345,350,353,354,355,357,358,360,361,367,371,372,373,385,386,394,405,406,407,408,417,418,425,426,429,430,431,432,433,437,438,439,440,441,443,444,445,446,447,448,449,452,455,456,457,458,459,473,477,478,481,482,483,485,487,490,492,494,499,501,502,504,505,506,507,508,509,510,514,515,516,517,518,519,520,521,522,530,536,539,542,562,563,565,567,572,586,589,596],think:19,third:[0,1,3,4,7,8,10,11,13,20,21,135,198,417,487],thisown:[46,47,48,49,50,52,53,54,55,56,57,71,72,73,74,75,83,84,85,86,87,130,131,132,133,134,135,137,138,139,141,143,144,145,147,148,149,150,151,152,153,154,155,156,157,159,164,165,166,167,168,169,170,171,173,174,176,177,178,181,182,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,215,216,217,218,220,221,222,227,232,235,236,237,238,239,246,247,248,250,251,253,254,255,256,257,258,259,260,261,262,264,266,267,268,270,271,273,274,275,276,278,282,285,286,287,289,292,295,298,301,302,303,305,307,308,309,310,315,317,318,341,343,344,345,349,350,351,353,354,355,357,358,359,360,361,363,364,365,366,367,371,372,373,375,376,377,378,379,381,382,383,384,385,386,388,389,390,391,392,393,394,397,398,399,400,401,402,403,404,405,406,407,408,414,415,416,417,418,420,421,422,423,424,425,426,431,432,433,437,438,439,440,441,443,446,447,448,449,452,453,454,455,456,457,458,459,460,462,463,464,465,466,467,468,469,470,474,507,509],thoma:[7,523],those:[11,12,13,19,21,182,432],thousand:501,thread:[75,77,144],three:[1,3,5,6,7,8,9,11,12,13,20,21,135,487,517],through:[0,1,7,8,10,11,13,14,15,16,19,20,21,134,239,407,433,434,436,437,438,439,440,441],throughout:21,thu:[0,1,10,11,13,14,19,20,21,501,512,515],tic:110,tied:137,tile:239,tile_window:239,time:[0,9,10,11,13,14,21,26,34,41,49,71,83,85,110,115,124,128,174,177,181,182,184,185,239,267,361,407,482,512,514,572,584,592,595],timer:110,timeseri:193,timeseries_default_paramet:193,timeseries_filename_data:193,timeseries_filename_tim:193,timestep:169,tite:32,titl:[0,3,9,11,19,21,32,73,83,239,245],to_adm:[572,584,592],to_dict:72,to_kei:239,to_tlm:[572,584,592],toc:110,togeth:[0,6,20,37,72,135,203,257,273,317,354,487],toi:34,tol:[0,72,130,131,145,192,227,477,478,511],toler:[0,4,11,130,131,145,303,452,477,478,511],too:564,tool:505,top:[8,19,20,239,441,481,510],top_bottom:15,topic:597,topolog:[20,21,135,166,358,361,362,363,364,365,366,367,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,406,407,408,410,411,412,413,414,416,417,418,419,420,421,422,423,432,436,437,438,439,440,448,452,453,460,461,462,463,464,465,466,467,468,469,470,474,483,487],topological_dimens:[21,143,514],total:[3,6,259,360,405,414,447,455,456,457,517],tpetsc:14,traction:6,transfer:[186,239],transform:[14,303,433],translat:[407,433,435],transpmult:257,transpos:[246,282,318],tree:[91,358,392,407,424,441],trial:[0,1,2,4,6,7,8,9,10,11,12,13,14,21,135,144,156,170,487,493,506,508,520],trial_spac:[156,170],trialfunct:[0,1,2,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,21,522,597],triangl:[0,7,8,10,11,13,14,21,367,372,379,447,457,459],triangul:[2,361,367],triangular:[21,447,457],triangulate_intersect:[361,367],trigger:9,trilino:15,trival:14,trust:295,tupl:[30,37,72,480,488,493,494,512,514,519,521,526],turn:[5,9,119,407,418,446],twice:2,two:[0,1,2,3,4,6,7,8,9,10,11,13,14,15,16,17,18,19,21,205,209,220,222,358,367,385,407,420,421,422,423,436,437,438,439,440,453,501,511],type2str:367,type:[4,5,6,7,8,10,16,17,18,19,20,21,46,48,54,71,72,74,91,122,135,144,147,182,184,185,203,223,232,239,245,256,258,262,266,292,303,325,329,339,345,357,361,367,368,369,370,372,407,408,410,411,412,413,417,419,436,468,483,487,488,501,503,512,514],type_nam:[182,184,185],type_str:71,type_to_dim:408,typemap:[34,441],typic:[4,15,16,17,18,19,33,147,220,222,318,406,523],u_h:[130,131,477,478,501],u_infti:514,u_init:4,ub_func:170,ubla:[83,257,317,343,344,345,350,353,354],ublas_vector:354,ublasdensefactori:326,ublasdensefactory_inst:326,ublasdensematrix:326,ublasiluprecondition:326,ublaskrylovsolv:326,ublaskrylovsolver_default_paramet:326,ublaskrylovsolver_method:326,ublaskrylovsolver_precondition:326,ublaslinearoper:326,ublasmatrix:[343,353],ublasprecondition:[326,344,345],ublassparsefactori:326,ublassparsefactory_inst:326,ublassparsematrix:326,ublasvector:326,ufc:[21,134,137,143,144,199,201,205,357,361,407,492,514,529],ufc_cel:[8,201,514],ufc_dofmap:[137,543],ufc_el:143,ufc_finite_el:543,ufc_form0:529,ufc_form1:529,ufc_form:[144,529,544],ufc_functionspac:[531,543,544],ufcfunctionspac:545,ufil:9,ufile_pvd:[15,16,17,18],ufl:[0,1,2,4,6,7,8,10,11,12,13,14,19,21,144,248,315,407,420,421,422,423,453,480,482,483,490,493,494,512,514,515,516,517,518,519,520,521,524,525,536,539,584,592],ufl_cel:[407,453],ufl_domain:[407,453],ufl_el:[514,517,524],ufl_evalu:[514,517],ufl_id:[407,420,421,422,423,453],ufl_stage_form:[584,592],uint:[21,514,524],uintarrai:110,umfpack:[108,315],umfpacklusolv:326,umfpacklusolver_default_paramet:326,unanticip:[47,53,86],unchang:135,unconstrain:298,uncut:441,uncut_cel:441,undergon:307,underlai:[257,317,354],underli:[137,143,259,343,353,354],underlin:113,underscor:415,undocu:567,uniform:[360,455,457,563],uniformli:[186,229,367,473,564],union:2,uniqu:[72,87,239,415,418],unit:[0,2,3,4,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,357,446,455,456,457,458,459,523],unitcubemesh:[3,6,15,471],unitintervalmesh:[3,471],unitsquar:[32,407,523,532,533,534,535,536,537,538,540,541],unitsquaremesh:[0,2,3,4,7,8,10,11,12,13,14,19,21,471],unittetrahedronmesh:471,unittrianglemesh:471,unknown:[4,7,8,9,10,14,73,96,511,512,528],unless:[6,232],unmark:416,unnam:87,unordered_map:[135,204],unown:147,unpack_cell_vertic:406,unpack_vertex_coordin:406,unrefin:0,unrestrict:448,unset:[46,48,54,74],unsign:[358,419,436,441],unsort:259,until:[4,218,441],unwrap:[266,267,270,317],updat:[9,72,73,135,205,239,256,514],update_ghost_valu:302,update_paramet:256,upon:[0,11,12,13,21,407],upper:[9,21,170,239,295,298],upper_bound:170,uppercas:91,usag:[30,32,34,42,43,72,83,85,117,143,286,302,343,353,354,483,484,500,503,505,512,523,526,527,528,529,532,533,534,535,536,537,538,540,541,557,564,567],use:[0,1,3,4,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,32,34,91,123,134,135,137,147,170,181,201,204,255,286,302,343,353,354,358,372,407,415,420,421,422,423,453,468,483,484,487,514,515,565,587,588],use_gpu:[286,302],used:[0,4,6,7,9,11,12,13,14,20,21,33,34,73,85,94,124,125,128,133,134,135,139,141,147,166,173,182,199,201,202,203,216,239,255,256,258,267,273,275,303,309,310,318,357,406,407,408,409,415,419,420,421,422,423,436,437,438,439,440,443,445,452,483,485,487,501,511,514,515,517,523,528,584,592,597],useful:[2,16,17,18,19,20,27,135,144,196,204,216,218,256,386,441,443,445,458,459,505],user:[4,7,8,10,21,24,132,135,199,239,255,267,289,295,298,301,415,417,487,493,514,515],user_paramet:514,user_sub_domain:135,uses:[2,10,21,41,218,355],using:[0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,34,47,53,86,135,144,170,174,177,191,204,248,257,258,259,260,261,271,286,302,308,315,317,343,345,353,354,355,356,449,450,452,483,485,487,501,514],usual:[4,8,19],utel:45,util:55,v2c:[554,556],v_0:144,v_1:144,v_h:[130,131,477,478,497],vaiation:21,valid:[239,418,484],valu:[1,2,4,6,8,9,11,12,13,16,17,18,19,20,21,32,37,42,46,48,50,51,54,55,60,66,67,70,71,72,74,83,85,134,135,136,138,139,140,143,145,146,147,157,158,166,171,172,174,175,182,183,186,198,199,201,205,209,216,218,219,221,239,241,247,248,249,250,257,260,261,262,263,264,265,267,268,269,271,272,274,278,279,282,283,289,291,292,293,295,296,298,299,302,303,304,307,308,310,311,315,316,317,345,346,354,357,407,415,416,417,420,421,422,423,424,436,437,438,439,440,441,442,446,460,483,487,507,509,511,512,513,514,516,518,519,520,521,527,528],value0:198,value1:198,value2:198,value_collect:[420,421,422,423],value_dimens:[143,205],value_rank:[143,205],value_s:205,value_shap:[4,8,198,199,514],value_str:71,vanish:[0,8],vari:[19,21],variabl:[4,6,7,8,9,15,16,17,18,42,43,47,53,83,86,110,111,135,139,144,145,147,157,169,171,174,182,204,205,209,218,239,242,245,256,259,266,271,275,292,303,310,406,407,415,420,421,422,423,437,438,439,440,441,487,507,509,514,515],variant:[11,516,518,519,520,521],variat:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,130,131,132,138,139,145,156,157,168,170,171,173,176,186,192,199,295,310,477,478,483,506,507,508,509,511,514,597],variationalproblem:510,variationalsolv:481,variou:[4,6,11,12,13,19,21,75,239,307,394,433,502,511],vec:[34,302,354],vecexp:34,vector:[4,5,6,7,8,9,14,15,16,17,18,32,37,135,137,144,147,164,166,176,181,182,195,198,199,201,203,204,217,221,239,246,247,254,255,257,259,261,262,267,270,271,275,285,295,298,302,307,310,318,325,326,339,343,349,353,354,358,407,415,420,421,422,423,432,433,435,441,446,449,451,483,502,503,511,512,514,517,528,597],vector_:415,vector_tim:182,vectorfunctionspac:[6,9,15,16,17,18,517,526,530],vectorspacebasi:[14,326],veloc:[9,15,16,17,18,220,222],verbos:[111,418,446,517],veri:[13,15,52,111],version:[3,19,46,47,48,53,54,55,60,65,71,73,74,75,77,78,83,86,87,88,90,92,130,131,135,137,138,144,156,157,166,167,168,169,170,171,174,176,177,181,182,186,188,189,192,196,197,198,199,201,202,203,204,205,209,210,216,217,218,220,221,222,223,232,239,245,246,247,248,253,256,257,260,261,262,264,266,267,268,270,271,278,282,286,289,291,295,298,302,303,307,308,309,310,315,317,343,345,350,353,354,355,356,357,358,360,361,367,368,372,373,379,385,392,394,396,405,406,407,408,409,414,415,416,417,418,420,421,422,423,424,432,433,434,437,438,439,440,441,446,447,448,449,452,453,454,455,456,457,460,466,467,468,469,470,473,474,487,488,507,509],version_deprec:90,version_remov:90,vertex:[135,143,144,190,195,361,372,406,407,408,411,417,432,468,471,539,548,549],vertex_coordin:406,vertex_domain:144,vertex_indic:406,vertex_to_dof_map:193,vertex_valu:201,vertexfunct:[462,463,464,465,471],vertexfunctionbool:471,vertexfunctiondoubl:471,vertexfunctionint:471,vertexfunctionsizet:471,vertic:[3,4,6,11,132,135,190,195,196,197,201,205,360,361,367,372,405,406,407,417,433,434,447,453,455,456,457,458,459,471,548,549,552],vessel:1,via:[9,10,211,289,295,298,514],view:[47,53,86,137,147,218,361,367,420,421,422,423,523],virtual:[4,350],viscos:9,visit:454,visual:[4,5,11,12,13,21,32,239,505],visualis:[408,409,443,445],vmtk:[135,487],vol:[532,534,535,538,540,541],volum:[6,361,367,534],vtk:[2,4,6,9,11,12,13,15,16,17,18,20,21,232],vtkplotter:243,vtkplotter_all_interact:243,vtkplotter_default_paramet:243,vtkplotter_to_kei:243,wai:[5,11,12,13,15,16,17,18,19,20,21,73,135,239,308,371,415,436,437,438,439,440,453,487,499,502,504,511],wait:4,wall:1,want:[0,5,6,7,8,10,11,12,13,14,15,16,18,19,20,21,22,295,298,514],warn:[90,110,201],warn_onc:71,warp:[32,239],weak:[0,2,4,16,17,139],weakli:2,weight:[0,19,22,130,131,441,477,478,511],well:[10,176,298,510],were:6,wether:324,what:[0,12,19,20,34,190,195,361,407],when:[0,1,4,6,9,11,12,15,16,18,20,21,55,85,135,137,141,144,182,205,239,372,407,436,452,487,514,515,523,564],where:[0,1,2,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,135,144,147,156,170,174,177,181,201,202,386,416,432,485,487,506,508,511,514,517],whether:[5,19,21,52,55,63,64,111,135,138,170,171,224,228,261,271,295,325,357,358,361,367,416,418,432,441,448,452,487,509,527,564],which:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,34,35,37,45,47,49,53,55,62,75,86,90,91,124,134,135,138,141,144,145,170,181,182,199,201,203,204,216,267,273,274,303,343,353,354,357,358,361,371,407,408,410,411,412,414,420,421,422,423,433,434,436,437,438,439,440,441,443,445,448,473,482,483,485,487,494,501,503,505,511,512,514,515,523,548,549,564,586,596],who:132,whole:[20,169,515],wide:14,widget:239,width:239,window:[9,239,240],window_height:239,window_width:239,winther:523,wirefram:[32,239],wise:[0,11,12,13,21,164,259],wish:[0,6,132,301],within:[4,19,224,228,432],without:[2,6,9,75,78,144,156,170,192,512],wll:483,wolfram:407,word:[0,11,13,21,144,441],work:[0,12,20,22,30,118,190,195,407,441],world:5,would:[2,4,7,8,19,135,441,487],wrap:[34,40,239,485,492],wrapper:[47,53,55,61,86,143,256,278,282,286,292,302,303,310,343,353,354,486,562,589],write:[0,1,11,12,13,14,16,17,18,19,21,144,182,232,235],write_fil:557,write_pdf:239,write_png:239,written:[2,4,11,232,523],wrong:319,www:[248,315,343,353,354,361],x3d:232,x_lleq:310,x_u:310,xd3:232,xdmf:232,xhat:143,xml:[1,5,9,16,17,18,20,21,232,406,407,436,437,438,439,440,517],xyz:232,y_n:572,yet:[118,295],yleq:310,you:[0,5,15,19,22],young:6,your:32,yourself:19,zero:[0,6,11,12,13,14,15,16,17,18,21,135,144,209,246,257,259,260,261,270,286,303,307,308,343,353,407,414,415,425,426,429,430,483,501],zero_column:135,zero_loc:257,zlib:109,zoom:[9,239]},titles:["1. Auto adaptive Poisson equation","2. Set boundary conditions for meshes that include boundary indicators","3. Biharmonic equation","4. Built-in meshes","5. Cahn-Hilliard equation","6. A simple eigenvalue solver","7. Hyperelasticity","8. Dual-mixed formulation for Poisson equation","9. Mixed formulation for Poisson equation","10. Incompressible Navier-Stokes equations","11. Poisson equation with pure Neumann boundary conditions","12. Nonlinear Poisson equation","13. Poisson equation with periodic boundary conditions","14. Poisson equation","15. Singular Poisson","16. Stokes equations","17. Stokes equations with Mini elements","18. Stokes equations with stabilized first order elements","19. Stokes equations with Taylor-Hood elements","20. Poisson equation with multiple subdomains","21. Marking subdomains of a mesh","22. Tensor-weighted Poisson","Collection of documented demos","Documentation for DOLFIN-1.5.0 (Python)","dolfin.common.constants module","dolfin.common.globalparameters module","dolfin.common module","dolfin.common.math module","sqr","dolfin.common.memory module","memory_usage","dolfin.common.plotting module","plot","dolfin.common.time module","compile_extension_module","expression_to_code_fragments","dolfin.compilemodules.compilemodule module","compile_expressions","dolfin.compilemodules.expressions module","dolfin.compilemodules module","dolfin.compilemodules.jit module","jit","CompiledSubDomain","compile_subdomains","dolfin.compilemodules.subdomains module","dolfin.compilemodules.swigimportinfo module","BoolParameter","DoubleArray","DoubleParameter","Event","GlobalParameters","GlobalParameters_default_parameters","IndexSet","IntArray","IntParameter","MPI","MPIInfo","MPI_Comm","MPI_barrier","MPI_compute_local_range","MPI_gather","MPI_global_offset","MPI_index_owner","MPI_is_broadcaster","MPI_is_receiver","MPI_local_range","MPI_max","MPI_min","MPI_rank","MPI_size","MPI_sum","ParameterValue","Parameters","Progress","StringParameter","SubSystemsManager","SubSystemsManager_finalize","SubSystemsManager_init_mpi","SubSystemsManager_init_petsc","SubSystemsManager_mpi_finalized","SubSystemsManager_mpi_initialized","SubSystemsManager_responsible_mpi","SubSystemsManager_responsible_petsc","Table","TableEntry","Timer","UIntArray","Variable","begin","debug","deprecation","dolfin_error","dolfin_version","end","error","get_log_level","git_commit_hash","has_cholmod","has_exodus","has_hdf5","has_mpi","has_openmp","has_parmetis","has_petsc","has_petsc_snes","has_petsc_tao","has_scotch","has_slepc","has_umfpack","has_zlib","dolfin.cpp.common module","info","info_stream","info_underline","init","list_timings","log","monitor_memory_usage","not_working_in_parallel","set_log_active","set_log_level","set_output_stream","sizeof_la_index","summary","tic","time","timing","timings","toc","warning","AdaptiveLinearVariationalSolver","AdaptiveNonlinearVariationalSolver","Assembler","AssemblerBase","BasisFunction","DirichletBC","DirichletBC_default_parameters","DofMap","Equation","ErrorControl","ErrorControl_default_parameters","Extrapolation","Extrapolation_extrapolate","FiniteElement","Form","GenericAdaptiveVariationalSolver","GenericAdaptiveVariationalSolver_default_parameters","GenericDofMap","HierarchicalDirichletBC","HierarchicalErrorControl","HierarchicalForm","HierarchicalFunction","HierarchicalFunctionSpace","HierarchicalLinearVariationalProblem","HierarchicalMesh","HierarchicalNonlinearVariationalProblem","LinearVariationalProblem","LinearVariationalSolver","LinearVariationalSolver_default_parameters","LocalAssembler","LocalAssembler_assemble","LocalAssembler_assemble_cell","LocalAssembler_assemble_exterior_facet","LocalAssembler_assemble_interior_facet","LocalSolver","MultiMeshAssembler","MultiMeshDirichletBC","MultiMeshDofMap","MultiMeshForm","MultiStageScheme","NonlinearVariationalProblem","NonlinearVariationalSolver","NonlinearVariationalSolver_default_parameters","OpenMpAssembler","PointIntegralSolver","PointIntegralSolver_default_parameters","PointSource","RKSolver","SparsityPatternBuilder","SparsityPatternBuilder_build","SparsityPatternBuilder_build_multimesh_sparsity_pattern","SystemAssembler","TimeSeries","TimeSeries_default_parameters","TimeSeries_filename_data","TimeSeries_filename_times","adapt","adapt_markers","assemble","assemble_system","dof_to_vertex_map","dorfler_mark","fem_solve","dolfin.cpp.fem module","mark","vertex_to_dof_map","ALE","ALE_move","Constant","Expression","FacetArea","Function","FunctionAXPY","FunctionAssigner","FunctionSpace","GenericFunction","HierarchicalFunction","HierarchicalFunctionSpace","HierarchicalMesh","Lagrange","LagrangeInterpolator","Legendre","Legendre_d2dx","Legendre_ddx","Legendre_eval","MeshCoordinates","MeshDisplacement","MultiMeshFunction","MultiMeshFunctionSpace","MultiMeshFunctionSpace_default_parameters","MultiMeshSubSpace","SpecialFacetFunction","SubSpace","assign","between","dolfin.cpp.function module","ipow","lt_coordinate","near","rand","seed","dolfin.cpp module","File","File_create_parent_path","File_exists","GenericFile","HierarchicalFunction","HierarchicalFunctionSpace","HierarchicalMesh","VTKPlotter","VTKPlotter_all_interactive","VTKPlotter_default_parameters","VTKPlotter_to_key","dolfin.cpp.io module","interactive","plot","BlockMatrix","BlockVector","CholmodCholeskySolver","CholmodCholeskySolver_default_parameters","CoordinateMatrix","DefaultFactory","DefaultFactory_factory","GenericLUSolver","GenericLinearAlgebraFactory","GenericLinearOperator","GenericLinearSolver","GenericMatrix","GenericPreconditioner","GenericSparsityPattern","GenericTensor","GenericVector","KrylovSolver","KrylovSolver_default_parameters","LUSolver","LUSolver_default_parameters","LinearAlgebraObject","LinearOperator","LinearSolver","LinearSolver_default_parameters","Matrix","NewtonSolver","NewtonSolver_default_parameters","NonlinearProblem","OptimisationProblem","PETScBaseMatrix","PETScFactory","PETScFactory_instance","PETScKrylovSolver","PETScKrylovSolver_default_parameters","PETScKrylovSolver_methods","PETScKrylovSolver_preconditioners","PETScLUSolver","PETScLUSolver_default_parameters","PETScLUSolver_methods","PETScLinearOperator","PETScMatrix","PETScObject","PETScObject_petsc_error","PETScOptions","PETScOptions_clear","PETScOptions_set","PETScPreconditioner","PETScPreconditioner_default_parameters","PETScPreconditioner_preconditioners","PETScSNESSolver","PETScSNESSolver_default_parameters","PETScSNESSolver_methods","PETScTAOSolver","PETScTAOSolver_default_parameters","PETScTAOSolver_methods","PETScUserPreconditioner","PETScVector","SLEPcEigenSolver","SLEPcEigenSolver_default_parameters","STLFactory","STLFactory_instance","STLMatrix","Scalar","SparsityPattern","TAOLinearBoundSolver","TAOLinearBoundSolver_default_parameters","TAOLinearBoundSolver_krylov_solvers","TAOLinearBoundSolver_methods","TAOLinearBoundSolver_preconditioners","UmfpackLUSolver","UmfpackLUSolver_default_parameters","Vector","VectorSpaceBasis","as_backend_type","get_tensor_type","has_krylov_solver_method","has_krylov_solver_preconditioner","has_lu_solver_method","has_type","in_nullspace","dolfin.cpp.la module","krylov_solver_methods","krylov_solver_preconditioners","la_index_dtype","la_solve","linear_algebra_backends","linear_solver_methods","list_krylov_solver_methods","list_krylov_solver_preconditioners","list_linear_algebra_backends","list_linear_solver_methods","list_lu_solver_methods","lu_solver_methods","normalize","residual","uBLASDenseFactory","uBLASDenseFactory_instance","uBLASDenseMatrix","uBLASILUPreconditioner","uBLASKrylovSolver","uBLASKrylovSolver_default_parameters","uBLASKrylovSolver_methods","uBLASKrylovSolver_preconditioners","uBLASLinearOperator","uBLASPreconditioner","uBLASSparseFactory","uBLASSparseFactory_instance","uBLASSparseMatrix","uBLASVector","BoostGraphOrdering","BoostGraphOrdering_compute_cuthill_mckee","BoundaryMesh","BoundingBoxTree","BoundingBoxTree3D","BoxMesh","Cell","CellFunction","CellFunctionBool","CellFunctionDouble","CellFunctionInt","CellFunctionSizet","CellType","CellType_create","CellType_string2type","CellType_type2string","DomainBoundary","DynamicMeshEditor","Edge","EdgeFunction","EdgeFunctionBool","EdgeFunctionDouble","EdgeFunctionInt","EdgeFunctionSizet","Face","FaceFunction","FaceFunctionBool","FaceFunctionDouble","FaceFunctionInt","FaceFunctionSizet","Facet","FacetCell","FacetFunction","FacetFunctionBool","FacetFunctionDouble","FacetFunctionInt","FacetFunctionSizet","GenericBoundingBoxTree","Graph","GraphBuilder","GraphBuilder_compute_dual_graph","GraphBuilder_local_graph","HierarchicalFunction","HierarchicalFunctionSpace","HierarchicalMesh","HierarchicalMeshFunctionBool","HierarchicalMeshFunctionDouble","HierarchicalMeshFunctionInt","HierarchicalMeshFunctionSizet","HierarchicalMeshFunctionUInt","IntervalMesh","LocalMeshData","Mesh","MeshColoring","MeshColoring_cell_colors","MeshColoring_color","MeshColoring_color_cells","MeshColoring_compute_colors","MeshColoring_type_to_dim","MeshConnectivity","MeshData","MeshDomains","MeshEditor","MeshEntity","MeshFunction","MeshFunctionBool","MeshFunctionDouble","MeshFunctionInt","MeshFunctionSizet","MeshGeometry","MeshPointIntersection","MeshQuality","MeshQuality_radius_ratio_histogram_data","MeshQuality_radius_ratio_matplotlib_histogram","MeshQuality_radius_ratio_min_max","MeshQuality_radius_ratios","MeshRenumbering","MeshTopology","MeshTransformation","MeshTransformation_rotate","MeshTransformation_translate","MeshValueCollection","MeshValueCollectionBool","MeshValueCollectionDouble","MeshValueCollectionInt","MeshValueCollectionSizet","MultiMesh","MultiMesh_default_parameters","PeriodicBoundaryComputation","PeriodicBoundaryComputation_compute_periodic_pairs","PeriodicBoundaryComputation_masters_slaves","Point","RectangleMesh","Restriction","SCOTCH","SCOTCH_compute_gps","SCOTCH_compute_partition","SubDomain","SubMesh","SubsetIterator","UnitCubeMesh","UnitIntervalMesh","UnitSquareMesh","UnitTetrahedronMesh","UnitTriangleMesh","Vertex","VertexFunction","VertexFunctionBool","VertexFunctionDouble","VertexFunctionInt","VertexFunctionSizet","cells","edges","entities","faces","facets","dolfin.cpp.mesh module","intersect","refine","vertices","down_cast","dolfin.deprecation module","AdaptiveLinearVariationalSolver","AdaptiveNonlinearVariationalSolver","generate_error_control","generate_error_control_forms","dolfin.fem.adaptivesolving module","SystemAssembler","assemble","assemble_system","dolfin.fem.assembling module","AutoSubDomain","DirichletBC","homogenize","dolfin.fem.bcs module","dolfin.fem.errorcontrolgenerator module","Form","dolfin.fem.form module","adjoint","derivative","increase_order","dolfin.fem.formmanipulations module","tear","dolfin.fem module","dolfin.fem.interpolation module","interpolate","errornorm","dolfin.fem.norms module","norm","dolfin.fem.projection module","project","LinearVariationalProblem","LinearVariationalSolver","NonlinearVariationalProblem","NonlinearVariationalSolver","dolfin.fem.solving module","solve","Constant","dolfin.functions.constant module","Expression","dolfin.functions.expression module","Argument","Function","TestFunction","TestFunctions","TrialFunction","TrialFunctions","dolfin.functions.function module","FunctionSpace","FunctionSpaceBase","FunctionSpaceFromCpp","MixedFunctionSpace","TensorFunctionSpace","VectorFunctionSpace","create_ufc_function_spaces","dolfin.functions.functionspace module","dolfin.functions module","CellNormal","CellSize","CellVolume","Circumradius","FacetArea","FacetNormal","MaxFacetEdgeLength","MeshCoordinates","MinFacetEdgeLength","SpatialCoordinate","dolfin.functions.specialfunctions module","UFCFunctionSpace","create_ufc_function_spaces","dolfin.functions.ufc_functionspace module","dolfin.importhandler module","Programmer&#8217;s reference for DOLFIN (Python)","compute_edge_map","compute_vertex_map","dolfin.mesh.ale module","init_parent_edge_indices","create_maps","find_all_subdomains","find_keys_on_one_subdomain","find_new_cell_key","find_subdomain","dolfin.mesh.boundarysubdomainfinder module","main","usage","write_file","dolfin.mesh module","dolfin.mesh.meshes module","dolfin.mesh.refinement module","refine","dolfin.mesh.svgtools module","mesh2svg","extract_tested_expressions","dolfin.multistage.factorize module","dolfin.multistage module","BDF1","BackwardEuler","ButcherMultiStageScheme","CN2","CrankNicolson","ERK","ERK1","ERK4","ESDIRK3","ESDIRK4","ExplicitEuler","ExplicitMidPoint","ForwardEuler","ImplicitEuler","MultiStageScheme","RK4","dolfin.multistage.multistagescheme module","PointIntegralSolver","RKSolver","dolfin.multistage.multistagesolvers module","GRL1","GRL2","MultiStageScheme","RL1","RL2","RushLarsenScheme","dolfin.multistage.rushlarsenschemes module","Quick Programmer&#8217;s Reference (Python)"],titleterms:{"function":[201,225,513,515,517,522,530,531,542,545],ALE:196,The:23,adapt:[0,186],adapt_mark:187,adaptivelinearvariationalsolv:[130,477],adaptivenonlinearvariationalsolv:[131,478],adaptivesolv:481,adjoint:493,ale:550,ale_mov:197,argument:516,as_backend_typ:319,assembl:[132,188,483,485],assemble_system:[189,484],assemblerbas:133,assign:223,auto:0,autosubdomain:486,backwardeul:571,basisfunct:134,bcs:489,bdf1:570,begin:88,between:224,biharmon:2,blockmatrix:246,blockvector:247,boolparamet:46,boostgraphord:355,boostgraphordering_compute_cuthill_mcke:356,boundari:[1,10,12,15,18],boundarymesh:357,boundarysubdomainfind:557,boundingboxtre:358,boundingboxtree3d:359,boxmesh:360,built:3,butchermultistageschem:572,cahn:4,cell:[361,466],cellfunct:362,cellfunctionbool:363,cellfunctiondoubl:364,cellfunctionint:365,cellfunctionsizet:366,cellnorm:532,cellsiz:533,celltyp:367,celltype_cr:368,celltype_string2typ:369,celltype_type2str:370,cellvolum:534,cholmodcholeskysolv:248,cholmodcholeskysolver_default_paramet:249,circumradiu:535,cn2:573,code:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],collect:22,common:[24,25,26,27,29,31,33,110],compile_express:37,compile_extension_modul:34,compile_subdomain:43,compiledsubdomain:42,compilemodul:[36,38,39,40,44,45],complet:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],compute_edge_map:548,compute_vertex_map:549,condit:[1,10,12,15,18],constant:[24,198,512,513],coordinatematrix:250,cpp:[110,193,225,231,243,326,471],cranknicolson:574,create_map:552,create_ufc_function_spac:[529,544],debug:89,defaultfactori:251,defaultfactory_factori:252,definit:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21],demo:[4,6,22,23],densiti:6,deprec:[90,476],deriv:494,dirichletbc:[135,487],dirichletbc_default_paramet:136,discretis:4,document:[22,23],dof_to_vertex_map:190,dofmap:137,dolfin:[23,24,25,26,27,29,31,33,36,38,39,40,44,45,110,193,225,231,243,326,471,476,481,485,489,490,492,496,498,499,502,504,510,513,515,522,530,531,542,545,546,547,550,557,561,562,563,565,568,569,586,589,596],dolfin_error:91,dolfin_vers:92,domain:[15,18],domainboundari:371,dorfler_mark:191,doublearrai:47,doubleparamet:48,down_cast:475,dual:7,dynamicmesheditor:372,edg:[373,467],edgefunct:374,edgefunctionbool:375,edgefunctiondoubl:376,edgefunctionint:377,edgefunctionsizet:378,eigenvalu:5,elast:6,element:[16,17,18],end:93,energi:6,entiti:468,equat:[0,1,2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,138],erk1:576,erk4:577,erk:575,error:94,errorcontrol:139,errorcontrol_default_paramet:140,errorcontrolgener:490,errornorm:501,esdirk3:578,esdirk4:579,event:49,expliciteul:580,explicitmidpoint:581,express:[38,199,514,515],expression_to_code_frag:35,extract_tested_express:567,extrapol:141,extrapolation_extrapol:142,face:[379,469],facefunct:380,facefunctionbool:381,facefunctiondoubl:382,facefunctionint:383,facefunctionsizet:384,facet:[385,470],facetarea:[200,536],facetcel:386,facetfunct:387,facetfunctionbool:388,facetfunctiondoubl:389,facetfunctionint:390,facetfunctionsizet:391,facetnorm:537,factor:568,fem:[193,481,485,489,490,492,496,498,499,502,504,510],fem_solv:192,file:232,file_create_parent_path:233,file_exist:234,find_all_subdomain:553,find_keys_on_one_subdomain:554,find_new_cell_kei:555,find_subdomain:556,finiteel:143,first:17,form:[4,15,19,144,491,492],formmanipul:496,formul:[7,8,18],forwardeul:582,functionassign:203,functionaxpi:202,functionspac:[204,523,530],functionspacebas:524,functionspacefromcpp:525,generate_data:21,generate_error_control:479,generate_error_control_form:480,genericadaptivevariationalsolv:145,genericadaptivevariationalsolver_default_paramet:146,genericboundingboxtre:392,genericdofmap:147,genericfil:235,genericfunct:205,genericlinearalgebrafactori:254,genericlinearoper:255,genericlinearsolv:256,genericlusolv:253,genericmatrix:257,genericprecondition:258,genericsparsitypattern:259,generictensor:260,genericvector:261,get_log_level:95,get_tensor_typ:320,git_commit_hash:96,globalparamet:[25,50],globalparameters_default_paramet:51,graph:393,graphbuild:394,graphbuilder_compute_dual_graph:395,graphbuilder_local_graph:396,grl1:590,grl2:591,has_cholmod:97,has_exodu:98,has_hdf5:99,has_krylov_solver_method:321,has_krylov_solver_precondition:322,has_lu_solver_method:323,has_mpi:100,has_openmp:101,has_parmeti:102,has_petsc:103,has_petsc_sn:104,has_petsc_tao:105,has_scotch:106,has_slepc:107,has_typ:324,has_umfpack:108,has_zlib:109,hierarchicaldirichletbc:148,hierarchicalerrorcontrol:149,hierarchicalform:150,hierarchicalfunct:[151,206,236,397],hierarchicalfunctionspac:[152,207,237,398],hierarchicallinearvariationalproblem:153,hierarchicalmesh:[154,208,238,399],hierarchicalmeshfunctionbool:400,hierarchicalmeshfunctiondoubl:401,hierarchicalmeshfunctionint:402,hierarchicalmeshfunctionsizet:403,hierarchicalmeshfunctionuint:404,hierarchicalnonlinearvariationalproblem:155,hilliard:4,homogen:488,hood:18,hyperelast:6,implement:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],impliciteul:583,importhandl:546,in_nullspac:325,includ:1,incompress:9,increase_ord:495,indexset:52,indic:1,info:111,info_stream:112,info_underlin:113,init:114,init_parent_edge_indic:551,intarrai:53,interact:244,interpol:[499,500],intersect:472,intervalmesh:405,intparamet:54,ipow:226,jit:[40,41],krylov_solver_method:327,krylov_solver_precondition:328,krylovsolv:262,krylovsolver_default_paramet:263,la_index_dtyp:329,la_solv:330,lagrang:209,lagrangeinterpol:210,legendr:211,legendre_d2dx:212,legendre_ddx:213,legendre_ev:214,linear:15,linear_algebra_backend:331,linear_solver_method:332,linearalgebraobject:266,linearoper:267,linearsolv:268,linearsolver_default_paramet:269,linearvariationalproblem:[156,506],linearvariationalsolv:[157,507],linearvariationalsolver_default_paramet:158,list_krylov_solver_method:333,list_krylov_solver_precondition:334,list_linear_algebra_backend:335,list_linear_solver_method:336,list_lu_solver_method:337,list_tim:115,localassembl:159,localassembler_assembl:160,localassembler_assemble_cel:161,localassembler_assemble_exterior_facet:162,localassembler_assemble_interior_facet:163,localmeshdata:406,localsolv:164,log:116,lt_coordin:227,lu_solver_method:338,lusolv:264,lusolver_default_paramet:265,main:558,mark:[20,194],math:27,matrix:270,maxfacetedgelength:538,memori:29,memory_usag:30,mesh2svg:566,mesh:[1,3,20,407,471,550,557,561,562,563,565],meshcolor:408,meshcoloring_cell_color:409,meshcoloring_color:410,meshcoloring_color_cel:411,meshcoloring_compute_color:412,meshcoloring_type_to_dim:413,meshconnect:414,meshcoordin:[215,539],meshdata:415,meshdisplac:216,meshdomain:416,mesheditor:417,meshent:418,meshfunct:419,meshfunctionbool:420,meshfunctiondoubl:421,meshfunctionint:422,meshfunctionsizet:423,meshgeometri:424,meshpointintersect:425,meshqual:426,meshquality_radius_ratio:430,meshquality_radius_ratio_histogram_data:427,meshquality_radius_ratio_matplotlib_histogram:428,meshquality_radius_ratio_min_max:429,meshrenumb:431,meshtopolog:432,meshtransform:433,meshtransformation_rot:434,meshtransformation_transl:435,meshvaluecollect:436,meshvaluecollectionbool:437,meshvaluecollectiondoubl:438,meshvaluecollectionint:439,meshvaluecollectionsizet:440,method:9,minfacetedgelength:540,mini:16,mix:[4,7,8],mixedfunctionspac:526,modul:[23,24,25,26,27,29,31,33,36,38,39,40,44,45,110,193,225,231,243,326,471,476,481,485,489,490,492,496,498,499,502,504,510,513,515,522,530,531,542,545,546,550,557,561,562,563,565,568,569,586,589,596],monitor_memory_usag:117,mpi:55,mpi_barri:58,mpi_comm:57,mpi_compute_local_rang:59,mpi_gath:60,mpi_global_offset:61,mpi_index_own:62,mpi_is_broadcast:63,mpi_is_receiv:64,mpi_local_rang:65,mpi_max:66,mpi_min:67,mpi_rank:68,mpi_siz:69,mpi_sum:70,mpiinfo:56,multimesh:441,multimesh_default_paramet:442,multimeshassembl:165,multimeshdirichletbc:166,multimeshdofmap:167,multimeshform:168,multimeshfunct:217,multimeshfunctionspac:218,multimeshfunctionspace_default_paramet:219,multimeshsubspac:220,multipl:19,multistag:[568,569,586,589,596],multistageschem:[169,584,586,592],multistagesolv:589,navier:9,neumann:10,newtonsolv:271,newtonsolver_default_paramet:272,nonlinear:11,nonlinearproblem:273,nonlinearvariationalproblem:[170,508],nonlinearvariationalsolv:[171,509],nonlinearvariationalsolver_default_paramet:172,norm:[502,503],normal:339,not_working_in_parallel:118,openmpassembl:173,optimisationproblem:274,order:17,paramet:[4,6,72],parametervalu:71,period:12,periodicboundarycomput:443,periodicboundarycomputation_compute_periodic_pair:444,periodicboundarycomputation_masters_slav:445,petscbasematrix:275,petscfactori:276,petscfactory_inst:277,petsckrylovsolv:278,petsckrylovsolver_default_paramet:279,petsckrylovsolver_method:280,petsckrylovsolver_precondition:281,petsclinearoper:285,petsclusolv:282,petsclusolver_default_paramet:283,petsclusolver_method:284,petscmatrix:286,petscobject:287,petscobject_petsc_error:288,petscopt:289,petscoptions_clear:290,petscoptions_set:291,petscprecondition:292,petscpreconditioner_default_paramet:293,petscpreconditioner_precondition:294,petscsnessolv:295,petscsnessolver_default_paramet:296,petscsnessolver_method:297,petsctaosolv:298,petsctaosolver_default_paramet:299,petsctaosolver_method:300,petscuserprecondition:301,petscvector:302,plot:[31,32,245],point:446,pointintegralsolv:[174,587],pointintegralsolver_default_paramet:175,pointsourc:176,poisson:[0,7,8,10,11,12,13,14,19,21],precondit:15,problem:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21],programm:[23,547,597],progress:73,project:[504,505],pure:10,python:[23,547,597],quick:597,rand:229,rectanglemesh:447,refer:[23,547,597],refin:[473,563,564],residu:340,restrict:448,rk4:585,rksolver:[177,588],rl1:593,rl2:594,rushlarsenschem:[595,596],scalar:308,scotch:449,scotch_compute_gp:450,scotch_compute_partit:451,seed:230,set:1,set_log_act:119,set_log_level:120,set_output_stream:121,simpl:5,singular:14,sizeof_la_index:122,slepceigensolv:303,slepceigensolver_default_paramet:304,solut:9,solv:[510,511],solver:5,sparsitypattern:309,sparsitypatternbuild:178,sparsitypatternbuilder_build:179,sparsitypatternbuilder_build_multimesh_sparsity_pattern:180,spatialcoordin:541,specialfacetfunct:221,specialfunct:542,sqr:28,stabil:17,stlfactori:305,stlfactory_inst:306,stlmatrix:307,stoke:[9,15,16,17,18],store:6,stringparamet:74,strong:[15,18],subdomain:[19,20,44,452],submesh:453,subsetiter:454,subspac:222,subsystemsmanag:75,subsystemsmanager_fin:76,subsystemsmanager_init_mpi:77,subsystemsmanager_init_petsc:78,subsystemsmanager_mpi_fin:79,subsystemsmanager_mpi_initi:80,subsystemsmanager_responsible_mpi:81,subsystemsmanager_responsible_petsc:82,summari:123,svgtool:565,swigimportinfo:45,system:15,systemassembl:[181,482],tabl:83,tableentri:84,taolinearboundsolv:310,taolinearboundsolver_default_paramet:311,taolinearboundsolver_krylov_solv:312,taolinearboundsolver_method:313,taolinearboundsolver_precondition:314,taylor:18,tear:497,tensor:21,tensorfunctionspac:527,testfunct:[518,519],tic:124,time:[4,33,125,126,127],timer:85,timeseri:182,timeseries_default_paramet:183,timeseries_filename_data:184,timeseries_filename_tim:185,toc:128,trialfunct:[520,521],ublasdensefactori:341,ublasdensefactory_inst:342,ublasdensematrix:343,ublasiluprecondition:344,ublaskrylovsolv:345,ublaskrylovsolver_default_paramet:346,ublaskrylovsolver_method:347,ublaskrylovsolver_precondition:348,ublaslinearoper:349,ublasprecondition:350,ublassparsefactori:351,ublassparsefactory_inst:352,ublassparsematrix:353,ublasvector:354,ufc_functionspac:545,ufcfunctionspac:543,uintarrai:86,umfpacklusolv:315,umfpacklusolver_default_paramet:316,unitcubemesh:455,unitintervalmesh:456,unitsquaremesh:457,unittetrahedronmesh:458,unittrianglemesh:459,usag:559,variabl:87,variat:19,vector:317,vectorfunctionspac:528,vectorspacebasi:318,vertex:460,vertex_to_dof_map:195,vertexfunct:461,vertexfunctionbool:462,vertexfunctiondoubl:463,vertexfunctionint:464,vertexfunctionsizet:465,vertic:474,vtkplotter:239,vtkplotter_all_interact:240,vtkplotter_default_paramet:241,vtkplotter_to_kei:242,warn:129,weak:[15,18],weight:21,write_fil:560}})