Search.setIndex({docnames:["demo/documented/auto-adaptive-poisson/python/documentation","demo/documented/bcs/python/documentation","demo/documented/biharmonic/python/documentation","demo/documented/built-in-meshes/python/documentation","demo/documented/cahn-hilliard/python/documentation","demo/documented/eigenvalue/python/documentation","demo/documented/hyperelasticity/python/documentation","demo/documented/mixed-poisson-dual/python/documentation","demo/documented/mixed-poisson/python/documentation","demo/documented/navier-stokes/python/documentation","demo/documented/neumann-poisson/python/documentation","demo/documented/nonlinear-poisson/python/documentation","demo/documented/periodic/python/documentation","demo/documented/poisson/python/documentation","demo/documented/singular-poisson/python/documentation","demo/documented/stokes-iterative/python/documentation","demo/documented/stokes-mini/python/documentation","demo/documented/stokes-stabilized/python/documentation","demo/documented/stokes-taylor-hood/python/documentation","demo/documented/subdomains-poisson/python/documentation","demo/documented/subdomains/python/documentation","demo/documented/tensor-weighted-poisson/python/documentation","demo/index","index","programmers-reference/common/constants/index","programmers-reference/common/globalparameters/index","programmers-reference/common/index","programmers-reference/common/math/index","programmers-reference/common/math/sqr","programmers-reference/common/memory/index","programmers-reference/common/memory/memory_usage","programmers-reference/common/plotting/index","programmers-reference/common/plotting/plot","programmers-reference/common/time/index","programmers-reference/compilemodules/compilemodule/compile_extension_module","programmers-reference/compilemodules/compilemodule/expression_to_code_fragments","programmers-reference/compilemodules/compilemodule/index","programmers-reference/compilemodules/expressions/compile_expressions","programmers-reference/compilemodules/expressions/index","programmers-reference/compilemodules/index","programmers-reference/compilemodules/jit/index","programmers-reference/compilemodules/jit/jit","programmers-reference/compilemodules/subdomains/CompiledSubDomain","programmers-reference/compilemodules/subdomains/index","programmers-reference/compilemodules/swigimportinfo/index","programmers-reference/cpp/common/BoolParameter","programmers-reference/cpp/common/DoubleArray","programmers-reference/cpp/common/DoubleParameter","programmers-reference/cpp/common/Event","programmers-reference/cpp/common/GlobalParameters","programmers-reference/cpp/common/GlobalParameters_default_parameters","programmers-reference/cpp/common/IndexSet","programmers-reference/cpp/common/IntArray","programmers-reference/cpp/common/IntParameter","programmers-reference/cpp/common/MPI","programmers-reference/cpp/common/MPIInfo","programmers-reference/cpp/common/MPI_Comm","programmers-reference/cpp/common/MPI_MPI_AVG","programmers-reference/cpp/common/MPI_avg","programmers-reference/cpp/common/MPI_barrier","programmers-reference/cpp/common/MPI_compute_local_range","programmers-reference/cpp/common/MPI_gather","programmers-reference/cpp/common/MPI_global_offset","programmers-reference/cpp/common/MPI_index_owner","programmers-reference/cpp/common/MPI_is_broadcaster","programmers-reference/cpp/common/MPI_is_receiver","programmers-reference/cpp/common/MPI_local_range","programmers-reference/cpp/common/MPI_max","programmers-reference/cpp/common/MPI_min","programmers-reference/cpp/common/MPI_rank","programmers-reference/cpp/common/MPI_size","programmers-reference/cpp/common/MPI_sum","programmers-reference/cpp/common/ParameterValue","programmers-reference/cpp/common/Parameters","programmers-reference/cpp/common/Progress","programmers-reference/cpp/common/StringParameter","programmers-reference/cpp/common/SubSystemsManager","programmers-reference/cpp/common/SubSystemsManager_finalize","programmers-reference/cpp/common/SubSystemsManager_init_mpi","programmers-reference/cpp/common/SubSystemsManager_init_petsc","programmers-reference/cpp/common/SubSystemsManager_mpi_finalized","programmers-reference/cpp/common/SubSystemsManager_mpi_initialized","programmers-reference/cpp/common/SubSystemsManager_responsible_mpi","programmers-reference/cpp/common/SubSystemsManager_responsible_petsc","programmers-reference/cpp/common/Table","programmers-reference/cpp/common/TableEntry","programmers-reference/cpp/common/Timer","programmers-reference/cpp/common/UIntArray","programmers-reference/cpp/common/Variable","programmers-reference/cpp/common/begin","programmers-reference/cpp/common/debug","programmers-reference/cpp/common/deprecation","programmers-reference/cpp/common/dolfin_error","programmers-reference/cpp/common/dolfin_version","programmers-reference/cpp/common/dump_timings_to_xml","programmers-reference/cpp/common/end","programmers-reference/cpp/common/error","programmers-reference/cpp/common/f","programmers-reference/cpp/common/get_log_level","programmers-reference/cpp/common/git_commit_hash","programmers-reference/cpp/common/has_cholmod","programmers-reference/cpp/common/has_hdf5","programmers-reference/cpp/common/has_mpi","programmers-reference/cpp/common/has_openmp","programmers-reference/cpp/common/has_parmetis","programmers-reference/cpp/common/has_petsc","programmers-reference/cpp/common/has_scotch","programmers-reference/cpp/common/has_slepc","programmers-reference/cpp/common/has_tao","programmers-reference/cpp/common/has_umfpack","programmers-reference/cpp/common/has_zlib","programmers-reference/cpp/common/index","programmers-reference/cpp/common/info","programmers-reference/cpp/common/info_stream","programmers-reference/cpp/common/info_underline","programmers-reference/cpp/common/init","programmers-reference/cpp/common/list_timings","programmers-reference/cpp/common/log","programmers-reference/cpp/common/monitor_memory_usage","programmers-reference/cpp/common/not_working_in_parallel","programmers-reference/cpp/common/set_log_active","programmers-reference/cpp/common/set_log_level","programmers-reference/cpp/common/set_output_stream","programmers-reference/cpp/common/sizeof_la_index","programmers-reference/cpp/common/tic","programmers-reference/cpp/common/time","programmers-reference/cpp/common/timing","programmers-reference/cpp/common/timings","programmers-reference/cpp/common/toc","programmers-reference/cpp/common/warning","programmers-reference/cpp/fem/AdaptiveLinearVariationalSolver","programmers-reference/cpp/fem/AdaptiveNonlinearVariationalSolver","programmers-reference/cpp/fem/Assembler","programmers-reference/cpp/fem/AssemblerBase","programmers-reference/cpp/fem/BasisFunction","programmers-reference/cpp/fem/DirichletBC","programmers-reference/cpp/fem/DirichletBC_default_parameters","programmers-reference/cpp/fem/DofMap","programmers-reference/cpp/fem/Equation","programmers-reference/cpp/fem/ErrorControl","programmers-reference/cpp/fem/ErrorControl_default_parameters","programmers-reference/cpp/fem/Extrapolation","programmers-reference/cpp/fem/Extrapolation_extrapolate","programmers-reference/cpp/fem/FiniteElement","programmers-reference/cpp/fem/Form","programmers-reference/cpp/fem/GenericAdaptiveVariationalSolver","programmers-reference/cpp/fem/GenericAdaptiveVariationalSolver_default_parameters","programmers-reference/cpp/fem/GenericDofMap","programmers-reference/cpp/fem/HierarchicalDirichletBC","programmers-reference/cpp/fem/HierarchicalErrorControl","programmers-reference/cpp/fem/HierarchicalForm","programmers-reference/cpp/fem/HierarchicalFunction","programmers-reference/cpp/fem/HierarchicalFunctionSpace","programmers-reference/cpp/fem/HierarchicalLinearVariationalProblem","programmers-reference/cpp/fem/HierarchicalMesh","programmers-reference/cpp/fem/HierarchicalNonlinearVariationalProblem","programmers-reference/cpp/fem/LinearVariationalProblem","programmers-reference/cpp/fem/LinearVariationalSolver","programmers-reference/cpp/fem/LinearVariationalSolver_default_parameters","programmers-reference/cpp/fem/LocalAssembler","programmers-reference/cpp/fem/LocalAssembler_assemble","programmers-reference/cpp/fem/LocalAssembler_assemble_cell","programmers-reference/cpp/fem/LocalAssembler_assemble_exterior_facet","programmers-reference/cpp/fem/LocalAssembler_assemble_interior_facet","programmers-reference/cpp/fem/LocalSolver","programmers-reference/cpp/fem/MultiMeshAssembler","programmers-reference/cpp/fem/MultiMeshDirichletBC","programmers-reference/cpp/fem/MultiMeshDofMap","programmers-reference/cpp/fem/MultiMeshForm","programmers-reference/cpp/fem/MultiStageScheme","programmers-reference/cpp/fem/NonlinearVariationalProblem","programmers-reference/cpp/fem/NonlinearVariationalSolver","programmers-reference/cpp/fem/NonlinearVariationalSolver_default_parameters","programmers-reference/cpp/fem/OpenMpAssembler","programmers-reference/cpp/fem/PointIntegralSolver","programmers-reference/cpp/fem/PointIntegralSolver_default_parameters","programmers-reference/cpp/fem/PointSource","programmers-reference/cpp/fem/RKSolver","programmers-reference/cpp/fem/SparsityPatternBuilder","programmers-reference/cpp/fem/SparsityPatternBuilder_build","programmers-reference/cpp/fem/SparsityPatternBuilder_build_multimesh_sparsity_pattern","programmers-reference/cpp/fem/SystemAssembler","programmers-reference/cpp/fem/adapt","programmers-reference/cpp/fem/adapt_markers","programmers-reference/cpp/fem/assemble","programmers-reference/cpp/fem/assemble_system","programmers-reference/cpp/fem/dof_to_vertex_map","programmers-reference/cpp/fem/dorfler_mark","programmers-reference/cpp/fem/fem_solve","programmers-reference/cpp/fem/index","programmers-reference/cpp/fem/mark","programmers-reference/cpp/fem/vertex_to_dof_map","programmers-reference/cpp/function/ALE","programmers-reference/cpp/function/ALE_move","programmers-reference/cpp/function/Constant","programmers-reference/cpp/function/Expression","programmers-reference/cpp/function/FacetArea","programmers-reference/cpp/function/Function","programmers-reference/cpp/function/FunctionAXPY","programmers-reference/cpp/function/FunctionAssigner","programmers-reference/cpp/function/FunctionSpace","programmers-reference/cpp/function/GenericFunction","programmers-reference/cpp/function/HierarchicalFunction","programmers-reference/cpp/function/HierarchicalFunctionSpace","programmers-reference/cpp/function/HierarchicalMesh","programmers-reference/cpp/function/Lagrange","programmers-reference/cpp/function/LagrangeInterpolator","programmers-reference/cpp/function/Legendre","programmers-reference/cpp/function/Legendre_d2dx","programmers-reference/cpp/function/Legendre_ddx","programmers-reference/cpp/function/Legendre_eval","programmers-reference/cpp/function/MeshCoordinates","programmers-reference/cpp/function/MeshDisplacement","programmers-reference/cpp/function/MultiMeshFunction","programmers-reference/cpp/function/MultiMeshFunctionSpace","programmers-reference/cpp/function/MultiMeshFunctionSpace_default_parameters","programmers-reference/cpp/function/MultiMeshSubSpace","programmers-reference/cpp/function/SpecialFacetFunction","programmers-reference/cpp/function/SubSpace","programmers-reference/cpp/function/assign","programmers-reference/cpp/function/between","programmers-reference/cpp/function/index","programmers-reference/cpp/function/ipow","programmers-reference/cpp/function/lt_coordinate","programmers-reference/cpp/function/near","programmers-reference/cpp/function/rand","programmers-reference/cpp/function/seed","programmers-reference/cpp/index","programmers-reference/cpp/io/File","programmers-reference/cpp/io/File_create_parent_path","programmers-reference/cpp/io/File_exists","programmers-reference/cpp/io/GenericFile","programmers-reference/cpp/io/HierarchicalFunction","programmers-reference/cpp/io/HierarchicalFunctionSpace","programmers-reference/cpp/io/HierarchicalMesh","programmers-reference/cpp/io/VTKPlotter","programmers-reference/cpp/io/VTKPlotter_all_interactive","programmers-reference/cpp/io/VTKPlotter_default_parameters","programmers-reference/cpp/io/VTKPlotter_to_key","programmers-reference/cpp/io/index","programmers-reference/cpp/io/interactive","programmers-reference/cpp/io/plot","programmers-reference/cpp/la/BlockMatrix","programmers-reference/cpp/la/BlockVector","programmers-reference/cpp/la/CoordinateMatrix","programmers-reference/cpp/la/DefaultFactory","programmers-reference/cpp/la/DefaultFactory_factory","programmers-reference/cpp/la/EigenFactory","programmers-reference/cpp/la/EigenFactory_instance","programmers-reference/cpp/la/EigenKrylovSolver","programmers-reference/cpp/la/EigenKrylovSolver_default_parameters","programmers-reference/cpp/la/EigenKrylovSolver_methods","programmers-reference/cpp/la/EigenKrylovSolver_preconditioners","programmers-reference/cpp/la/EigenLUSolver","programmers-reference/cpp/la/EigenLUSolver_default_parameters","programmers-reference/cpp/la/EigenLUSolver_methods","programmers-reference/cpp/la/EigenMatrix","programmers-reference/cpp/la/EigenVector","programmers-reference/cpp/la/GenericLUSolver","programmers-reference/cpp/la/GenericLinearAlgebraFactory","programmers-reference/cpp/la/GenericLinearOperator","programmers-reference/cpp/la/GenericLinearSolver","programmers-reference/cpp/la/GenericMatrix","programmers-reference/cpp/la/GenericPreconditioner","programmers-reference/cpp/la/GenericSparsityPattern","programmers-reference/cpp/la/GenericTensor","programmers-reference/cpp/la/GenericVector","programmers-reference/cpp/la/KrylovSolver","programmers-reference/cpp/la/KrylovSolver_default_parameters","programmers-reference/cpp/la/LUSolver","programmers-reference/cpp/la/LUSolver_default_parameters","programmers-reference/cpp/la/LinearAlgebraObject","programmers-reference/cpp/la/LinearOperator","programmers-reference/cpp/la/LinearSolver","programmers-reference/cpp/la/LinearSolver_default_parameters","programmers-reference/cpp/la/Matrix","programmers-reference/cpp/la/NewtonSolver","programmers-reference/cpp/la/NewtonSolver_default_parameters","programmers-reference/cpp/la/NonlinearProblem","programmers-reference/cpp/la/OptimisationProblem","programmers-reference/cpp/la/PETScBaseMatrix","programmers-reference/cpp/la/PETScFactory","programmers-reference/cpp/la/PETScFactory_instance","programmers-reference/cpp/la/PETScKrylovSolver","programmers-reference/cpp/la/PETScKrylovSolver_default_parameters","programmers-reference/cpp/la/PETScKrylovSolver_methods","programmers-reference/cpp/la/PETScKrylovSolver_preconditioners","programmers-reference/cpp/la/PETScLUSolver","programmers-reference/cpp/la/PETScLUSolver_default_parameters","programmers-reference/cpp/la/PETScLUSolver_methods","programmers-reference/cpp/la/PETScLinearOperator","programmers-reference/cpp/la/PETScMatrix","programmers-reference/cpp/la/PETScObject","programmers-reference/cpp/la/PETScObject_petsc_error","programmers-reference/cpp/la/PETScOptions","programmers-reference/cpp/la/PETScOptions_clear","programmers-reference/cpp/la/PETScOptions_set","programmers-reference/cpp/la/PETScPreconditioner","programmers-reference/cpp/la/PETScPreconditioner_default_parameters","programmers-reference/cpp/la/PETScPreconditioner_preconditioners","programmers-reference/cpp/la/PETScSNESSolver","programmers-reference/cpp/la/PETScSNESSolver_default_parameters","programmers-reference/cpp/la/PETScSNESSolver_methods","programmers-reference/cpp/la/PETScUserPreconditioner","programmers-reference/cpp/la/PETScVector","programmers-reference/cpp/la/SLEPcEigenSolver","programmers-reference/cpp/la/SLEPcEigenSolver_default_parameters","programmers-reference/cpp/la/STLFactory","programmers-reference/cpp/la/STLFactory_instance","programmers-reference/cpp/la/STLMatrix","programmers-reference/cpp/la/Scalar","programmers-reference/cpp/la/SparsityPattern","programmers-reference/cpp/la/TensorLayout","programmers-reference/cpp/la/Vector","programmers-reference/cpp/la/VectorSpaceBasis","programmers-reference/cpp/la/as_backend_type","programmers-reference/cpp/la/get_tensor_type","programmers-reference/cpp/la/has_krylov_solver_method","programmers-reference/cpp/la/has_krylov_solver_preconditioner","programmers-reference/cpp/la/has_lu_solver_method","programmers-reference/cpp/la/has_type","programmers-reference/cpp/la/in_nullspace","programmers-reference/cpp/la/index","programmers-reference/cpp/la/krylov_solver_methods","programmers-reference/cpp/la/krylov_solver_preconditioners","programmers-reference/cpp/la/la_index_dtype","programmers-reference/cpp/la/la_solve","programmers-reference/cpp/la/linear_algebra_backends","programmers-reference/cpp/la/linear_solver_methods","programmers-reference/cpp/la/list_krylov_solver_methods","programmers-reference/cpp/la/list_krylov_solver_preconditioners","programmers-reference/cpp/la/list_linear_algebra_backends","programmers-reference/cpp/la/list_linear_solver_methods","programmers-reference/cpp/la/list_lu_solver_methods","programmers-reference/cpp/la/lu_solver_methods","programmers-reference/cpp/la/normalize","programmers-reference/cpp/la/residual","programmers-reference/cpp/mesh/BoostGraphOrdering","programmers-reference/cpp/mesh/BoostGraphOrdering_compute_cuthill_mckee","programmers-reference/cpp/mesh/BoundaryMesh","programmers-reference/cpp/mesh/BoundingBoxTree","programmers-reference/cpp/mesh/BoundingBoxTree3D","programmers-reference/cpp/mesh/BoxMesh","programmers-reference/cpp/mesh/Cell","programmers-reference/cpp/mesh/CellFunction","programmers-reference/cpp/mesh/CellFunctionBool","programmers-reference/cpp/mesh/CellFunctionDouble","programmers-reference/cpp/mesh/CellFunctionInt","programmers-reference/cpp/mesh/CellFunctionSizet","programmers-reference/cpp/mesh/CellType","programmers-reference/cpp/mesh/CellType_create","programmers-reference/cpp/mesh/CellType_string2type","programmers-reference/cpp/mesh/CellType_type2string","programmers-reference/cpp/mesh/DomainBoundary","programmers-reference/cpp/mesh/DynamicMeshEditor","programmers-reference/cpp/mesh/Edge","programmers-reference/cpp/mesh/EdgeFunction","programmers-reference/cpp/mesh/EdgeFunctionBool","programmers-reference/cpp/mesh/EdgeFunctionDouble","programmers-reference/cpp/mesh/EdgeFunctionInt","programmers-reference/cpp/mesh/EdgeFunctionSizet","programmers-reference/cpp/mesh/Face","programmers-reference/cpp/mesh/FaceFunction","programmers-reference/cpp/mesh/FaceFunctionBool","programmers-reference/cpp/mesh/FaceFunctionDouble","programmers-reference/cpp/mesh/FaceFunctionInt","programmers-reference/cpp/mesh/FaceFunctionSizet","programmers-reference/cpp/mesh/Facet","programmers-reference/cpp/mesh/FacetCell","programmers-reference/cpp/mesh/FacetFunction","programmers-reference/cpp/mesh/FacetFunctionBool","programmers-reference/cpp/mesh/FacetFunctionDouble","programmers-reference/cpp/mesh/FacetFunctionInt","programmers-reference/cpp/mesh/FacetFunctionSizet","programmers-reference/cpp/mesh/GenericBoundingBoxTree","programmers-reference/cpp/mesh/Graph","programmers-reference/cpp/mesh/GraphBuilder","programmers-reference/cpp/mesh/GraphBuilder_compute_dual_graph","programmers-reference/cpp/mesh/GraphBuilder_local_graph","programmers-reference/cpp/mesh/HierarchicalFunction","programmers-reference/cpp/mesh/HierarchicalFunctionSpace","programmers-reference/cpp/mesh/HierarchicalMesh","programmers-reference/cpp/mesh/HierarchicalMeshFunctionBool","programmers-reference/cpp/mesh/HierarchicalMeshFunctionDouble","programmers-reference/cpp/mesh/HierarchicalMeshFunctionInt","programmers-reference/cpp/mesh/HierarchicalMeshFunctionSizet","programmers-reference/cpp/mesh/HierarchicalMeshFunctionUInt","programmers-reference/cpp/mesh/IntervalMesh","programmers-reference/cpp/mesh/LocalMeshData","programmers-reference/cpp/mesh/Mesh","programmers-reference/cpp/mesh/MeshColoring","programmers-reference/cpp/mesh/MeshColoring_cell_colors","programmers-reference/cpp/mesh/MeshColoring_color","programmers-reference/cpp/mesh/MeshColoring_color_cells","programmers-reference/cpp/mesh/MeshColoring_compute_colors","programmers-reference/cpp/mesh/MeshColoring_type_to_dim","programmers-reference/cpp/mesh/MeshConnectivity","programmers-reference/cpp/mesh/MeshData","programmers-reference/cpp/mesh/MeshDomains","programmers-reference/cpp/mesh/MeshEditor","programmers-reference/cpp/mesh/MeshEntity","programmers-reference/cpp/mesh/MeshFunction","programmers-reference/cpp/mesh/MeshFunctionBool","programmers-reference/cpp/mesh/MeshFunctionDouble","programmers-reference/cpp/mesh/MeshFunctionInt","programmers-reference/cpp/mesh/MeshFunctionSizet","programmers-reference/cpp/mesh/MeshGeometry","programmers-reference/cpp/mesh/MeshHierarchy","programmers-reference/cpp/mesh/MeshPartitioning","programmers-reference/cpp/mesh/MeshPartitioning_build_distributed_mesh","programmers-reference/cpp/mesh/MeshPointIntersection","programmers-reference/cpp/mesh/MeshQuality","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_histogram_data","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_matplotlib_histogram","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_min_max","programmers-reference/cpp/mesh/MeshQuality_radius_ratios","programmers-reference/cpp/mesh/MeshRenumbering","programmers-reference/cpp/mesh/MeshRenumbering_renumber_by_color","programmers-reference/cpp/mesh/MeshTopology","programmers-reference/cpp/mesh/MeshTransformation","programmers-reference/cpp/mesh/MeshTransformation_rotate","programmers-reference/cpp/mesh/MeshTransformation_translate","programmers-reference/cpp/mesh/MeshValueCollection","programmers-reference/cpp/mesh/MeshValueCollectionBool","programmers-reference/cpp/mesh/MeshValueCollectionDouble","programmers-reference/cpp/mesh/MeshValueCollectionInt","programmers-reference/cpp/mesh/MeshValueCollectionSizet","programmers-reference/cpp/mesh/MultiMesh","programmers-reference/cpp/mesh/MultiMesh_default_parameters","programmers-reference/cpp/mesh/PeriodicBoundaryComputation","programmers-reference/cpp/mesh/PeriodicBoundaryComputation_compute_periodic_pairs","programmers-reference/cpp/mesh/PeriodicBoundaryComputation_masters_slaves","programmers-reference/cpp/mesh/Point","programmers-reference/cpp/mesh/RectangleMesh","programmers-reference/cpp/mesh/Restriction","programmers-reference/cpp/mesh/SCOTCH","programmers-reference/cpp/mesh/SCOTCH_compute_gps","programmers-reference/cpp/mesh/SCOTCH_compute_partition","programmers-reference/cpp/mesh/SubDomain","programmers-reference/cpp/mesh/SubMesh","programmers-reference/cpp/mesh/SubsetIterator","programmers-reference/cpp/mesh/UnitCubeMesh","programmers-reference/cpp/mesh/UnitHexMesh","programmers-reference/cpp/mesh/UnitIntervalMesh","programmers-reference/cpp/mesh/UnitQuadMesh","programmers-reference/cpp/mesh/UnitSquareMesh","programmers-reference/cpp/mesh/UnitTetrahedronMesh","programmers-reference/cpp/mesh/UnitTriangleMesh","programmers-reference/cpp/mesh/Vertex","programmers-reference/cpp/mesh/VertexFunction","programmers-reference/cpp/mesh/VertexFunctionBool","programmers-reference/cpp/mesh/VertexFunctionDouble","programmers-reference/cpp/mesh/VertexFunctionInt","programmers-reference/cpp/mesh/VertexFunctionSizet","programmers-reference/cpp/mesh/cells","programmers-reference/cpp/mesh/edges","programmers-reference/cpp/mesh/entities","programmers-reference/cpp/mesh/faces","programmers-reference/cpp/mesh/facets","programmers-reference/cpp/mesh/index","programmers-reference/cpp/mesh/intersect","programmers-reference/cpp/mesh/refine","programmers-reference/cpp/mesh/vertices","programmers-reference/deprecation/down_cast","programmers-reference/deprecation/index","programmers-reference/fem/adaptivesolving/AdaptiveLinearVariationalSolver","programmers-reference/fem/adaptivesolving/AdaptiveNonlinearVariationalSolver","programmers-reference/fem/adaptivesolving/generate_error_control","programmers-reference/fem/adaptivesolving/generate_error_control_forms","programmers-reference/fem/adaptivesolving/index","programmers-reference/fem/assembling/SystemAssembler","programmers-reference/fem/assembling/assemble","programmers-reference/fem/assembling/assemble_system","programmers-reference/fem/assembling/index","programmers-reference/fem/bcs/AutoSubDomain","programmers-reference/fem/bcs/DirichletBC","programmers-reference/fem/bcs/homogenize","programmers-reference/fem/bcs/index","programmers-reference/fem/errorcontrolgenerator/index","programmers-reference/fem/form/Form","programmers-reference/fem/form/index","programmers-reference/fem/formmanipulations/adjoint","programmers-reference/fem/formmanipulations/derivative","programmers-reference/fem/formmanipulations/increase_order","programmers-reference/fem/formmanipulations/index","programmers-reference/fem/formmanipulations/tear","programmers-reference/fem/index","programmers-reference/fem/interpolation/index","programmers-reference/fem/interpolation/interpolate","programmers-reference/fem/norms/errornorm","programmers-reference/fem/norms/index","programmers-reference/fem/norms/norm","programmers-reference/fem/projection/index","programmers-reference/fem/projection/project","programmers-reference/fem/solving/LinearVariationalProblem","programmers-reference/fem/solving/LinearVariationalSolver","programmers-reference/fem/solving/LocalSolver","programmers-reference/fem/solving/NonlinearVariationalProblem","programmers-reference/fem/solving/NonlinearVariationalSolver","programmers-reference/fem/solving/index","programmers-reference/fem/solving/solve","programmers-reference/functions/constant/Constant","programmers-reference/functions/constant/index","programmers-reference/functions/expression/Expression","programmers-reference/functions/expression/index","programmers-reference/functions/function/Argument","programmers-reference/functions/function/Function","programmers-reference/functions/function/TestFunction","programmers-reference/functions/function/TestFunctions","programmers-reference/functions/function/TrialFunction","programmers-reference/functions/function/TrialFunctions","programmers-reference/functions/function/index","programmers-reference/functions/functionspace/FunctionSpace","programmers-reference/functions/functionspace/FunctionSpaceBase","programmers-reference/functions/functionspace/FunctionSpaceFromCpp","programmers-reference/functions/functionspace/MixedFunctionSpace","programmers-reference/functions/functionspace/TensorFunctionSpace","programmers-reference/functions/functionspace/VectorFunctionSpace","programmers-reference/functions/functionspace/create_ufc_function_spaces","programmers-reference/functions/functionspace/index","programmers-reference/functions/index","programmers-reference/functions/specialfunctions/CellNormal","programmers-reference/functions/specialfunctions/CellSize","programmers-reference/functions/specialfunctions/CellVolume","programmers-reference/functions/specialfunctions/Circumradius","programmers-reference/functions/specialfunctions/FacetArea","programmers-reference/functions/specialfunctions/FacetNormal","programmers-reference/functions/specialfunctions/MaxFacetEdgeLength","programmers-reference/functions/specialfunctions/MeshCoordinates","programmers-reference/functions/specialfunctions/MinFacetEdgeLength","programmers-reference/functions/specialfunctions/SpatialCoordinate","programmers-reference/functions/specialfunctions/index","programmers-reference/functions/ufc_functionspace/UFCFunctionSpace","programmers-reference/functions/ufc_functionspace/create_ufc_function_spaces","programmers-reference/functions/ufc_functionspace/index","programmers-reference/importhandler/index","programmers-reference/index","programmers-reference/mesh/ale/compute_edge_map","programmers-reference/mesh/ale/compute_vertex_map","programmers-reference/mesh/ale/index","programmers-reference/mesh/ale/init_parent_edge_indices","programmers-reference/mesh/boundarysubdomainfinder/create_maps","programmers-reference/mesh/boundarysubdomainfinder/find_all_subdomains","programmers-reference/mesh/boundarysubdomainfinder/find_keys_on_one_subdomain","programmers-reference/mesh/boundarysubdomainfinder/find_new_cell_key","programmers-reference/mesh/boundarysubdomainfinder/find_subdomain","programmers-reference/mesh/boundarysubdomainfinder/index","programmers-reference/mesh/boundarysubdomainfinder/main","programmers-reference/mesh/boundarysubdomainfinder/usage","programmers-reference/mesh/boundarysubdomainfinder/write_file","programmers-reference/mesh/index","programmers-reference/mesh/meshes/index","programmers-reference/mesh/refinement/index","programmers-reference/mesh/refinement/refine","programmers-reference/mesh/svgtools/index","programmers-reference/mesh/svgtools/mesh2svg","programmers-reference/multistage/factorize/extract_tested_expressions","programmers-reference/multistage/factorize/index","programmers-reference/multistage/index","programmers-reference/multistage/multistagescheme/BDF1","programmers-reference/multistage/multistagescheme/BackwardEuler","programmers-reference/multistage/multistagescheme/ButcherMultiStageScheme","programmers-reference/multistage/multistagescheme/CN2","programmers-reference/multistage/multistagescheme/CrankNicolson","programmers-reference/multistage/multistagescheme/ERK","programmers-reference/multistage/multistagescheme/ERK1","programmers-reference/multistage/multistagescheme/ERK4","programmers-reference/multistage/multistagescheme/ESDIRK3","programmers-reference/multistage/multistagescheme/ESDIRK4","programmers-reference/multistage/multistagescheme/ExplicitEuler","programmers-reference/multistage/multistagescheme/ExplicitMidPoint","programmers-reference/multistage/multistagescheme/ForwardEuler","programmers-reference/multistage/multistagescheme/ImplicitEuler","programmers-reference/multistage/multistagescheme/MultiStageScheme","programmers-reference/multistage/multistagescheme/RK4","programmers-reference/multistage/multistagescheme/index","programmers-reference/multistage/multistagesolvers/PointIntegralSolver","programmers-reference/multistage/multistagesolvers/RKSolver","programmers-reference/multistage/multistagesolvers/index","programmers-reference/multistage/rushlarsenschemes/GRL1","programmers-reference/multistage/rushlarsenschemes/GRL2","programmers-reference/multistage/rushlarsenschemes/MultiStageScheme","programmers-reference/multistage/rushlarsenschemes/RL1","programmers-reference/multistage/rushlarsenschemes/RL2","programmers-reference/multistage/rushlarsenschemes/RushLarsenScheme","programmers-reference/multistage/rushlarsenschemes/index","quick_reference"],envversion:50,filenames:["demo/documented/auto-adaptive-poisson/python/documentation.rst","demo/documented/bcs/python/documentation.rst","demo/documented/biharmonic/python/documentation.rst","demo/documented/built-in-meshes/python/documentation.rst","demo/documented/cahn-hilliard/python/documentation.rst","demo/documented/eigenvalue/python/documentation.rst","demo/documented/hyperelasticity/python/documentation.rst","demo/documented/mixed-poisson-dual/python/documentation.rst","demo/documented/mixed-poisson/python/documentation.rst","demo/documented/navier-stokes/python/documentation.rst","demo/documented/neumann-poisson/python/documentation.rst","demo/documented/nonlinear-poisson/python/documentation.rst","demo/documented/periodic/python/documentation.rst","demo/documented/poisson/python/documentation.rst","demo/documented/singular-poisson/python/documentation.rst","demo/documented/stokes-iterative/python/documentation.rst","demo/documented/stokes-mini/python/documentation.rst","demo/documented/stokes-stabilized/python/documentation.rst","demo/documented/stokes-taylor-hood/python/documentation.rst","demo/documented/subdomains-poisson/python/documentation.rst","demo/documented/subdomains/python/documentation.rst","demo/documented/tensor-weighted-poisson/python/documentation.rst","demo/index.rst","index.rst","programmers-reference/common/constants/index.rst","programmers-reference/common/globalparameters/index.rst","programmers-reference/common/index.rst","programmers-reference/common/math/index.rst","programmers-reference/common/math/sqr.rst","programmers-reference/common/memory/index.rst","programmers-reference/common/memory/memory_usage.rst","programmers-reference/common/plotting/index.rst","programmers-reference/common/plotting/plot.rst","programmers-reference/common/time/index.rst","programmers-reference/compilemodules/compilemodule/compile_extension_module.rst","programmers-reference/compilemodules/compilemodule/expression_to_code_fragments.rst","programmers-reference/compilemodules/compilemodule/index.rst","programmers-reference/compilemodules/expressions/compile_expressions.rst","programmers-reference/compilemodules/expressions/index.rst","programmers-reference/compilemodules/index.rst","programmers-reference/compilemodules/jit/index.rst","programmers-reference/compilemodules/jit/jit.rst","programmers-reference/compilemodules/subdomains/CompiledSubDomain.rst","programmers-reference/compilemodules/subdomains/index.rst","programmers-reference/compilemodules/swigimportinfo/index.rst","programmers-reference/cpp/common/BoolParameter.rst","programmers-reference/cpp/common/DoubleArray.rst","programmers-reference/cpp/common/DoubleParameter.rst","programmers-reference/cpp/common/Event.rst","programmers-reference/cpp/common/GlobalParameters.rst","programmers-reference/cpp/common/GlobalParameters_default_parameters.rst","programmers-reference/cpp/common/IndexSet.rst","programmers-reference/cpp/common/IntArray.rst","programmers-reference/cpp/common/IntParameter.rst","programmers-reference/cpp/common/MPI.rst","programmers-reference/cpp/common/MPIInfo.rst","programmers-reference/cpp/common/MPI_Comm.rst","programmers-reference/cpp/common/MPI_MPI_AVG.rst","programmers-reference/cpp/common/MPI_avg.rst","programmers-reference/cpp/common/MPI_barrier.rst","programmers-reference/cpp/common/MPI_compute_local_range.rst","programmers-reference/cpp/common/MPI_gather.rst","programmers-reference/cpp/common/MPI_global_offset.rst","programmers-reference/cpp/common/MPI_index_owner.rst","programmers-reference/cpp/common/MPI_is_broadcaster.rst","programmers-reference/cpp/common/MPI_is_receiver.rst","programmers-reference/cpp/common/MPI_local_range.rst","programmers-reference/cpp/common/MPI_max.rst","programmers-reference/cpp/common/MPI_min.rst","programmers-reference/cpp/common/MPI_rank.rst","programmers-reference/cpp/common/MPI_size.rst","programmers-reference/cpp/common/MPI_sum.rst","programmers-reference/cpp/common/ParameterValue.rst","programmers-reference/cpp/common/Parameters.rst","programmers-reference/cpp/common/Progress.rst","programmers-reference/cpp/common/StringParameter.rst","programmers-reference/cpp/common/SubSystemsManager.rst","programmers-reference/cpp/common/SubSystemsManager_finalize.rst","programmers-reference/cpp/common/SubSystemsManager_init_mpi.rst","programmers-reference/cpp/common/SubSystemsManager_init_petsc.rst","programmers-reference/cpp/common/SubSystemsManager_mpi_finalized.rst","programmers-reference/cpp/common/SubSystemsManager_mpi_initialized.rst","programmers-reference/cpp/common/SubSystemsManager_responsible_mpi.rst","programmers-reference/cpp/common/SubSystemsManager_responsible_petsc.rst","programmers-reference/cpp/common/Table.rst","programmers-reference/cpp/common/TableEntry.rst","programmers-reference/cpp/common/Timer.rst","programmers-reference/cpp/common/UIntArray.rst","programmers-reference/cpp/common/Variable.rst","programmers-reference/cpp/common/begin.rst","programmers-reference/cpp/common/debug.rst","programmers-reference/cpp/common/deprecation.rst","programmers-reference/cpp/common/dolfin_error.rst","programmers-reference/cpp/common/dolfin_version.rst","programmers-reference/cpp/common/dump_timings_to_xml.rst","programmers-reference/cpp/common/end.rst","programmers-reference/cpp/common/error.rst","programmers-reference/cpp/common/f.rst","programmers-reference/cpp/common/get_log_level.rst","programmers-reference/cpp/common/git_commit_hash.rst","programmers-reference/cpp/common/has_cholmod.rst","programmers-reference/cpp/common/has_hdf5.rst","programmers-reference/cpp/common/has_mpi.rst","programmers-reference/cpp/common/has_openmp.rst","programmers-reference/cpp/common/has_parmetis.rst","programmers-reference/cpp/common/has_petsc.rst","programmers-reference/cpp/common/has_scotch.rst","programmers-reference/cpp/common/has_slepc.rst","programmers-reference/cpp/common/has_tao.rst","programmers-reference/cpp/common/has_umfpack.rst","programmers-reference/cpp/common/has_zlib.rst","programmers-reference/cpp/common/index.rst","programmers-reference/cpp/common/info.rst","programmers-reference/cpp/common/info_stream.rst","programmers-reference/cpp/common/info_underline.rst","programmers-reference/cpp/common/init.rst","programmers-reference/cpp/common/list_timings.rst","programmers-reference/cpp/common/log.rst","programmers-reference/cpp/common/monitor_memory_usage.rst","programmers-reference/cpp/common/not_working_in_parallel.rst","programmers-reference/cpp/common/set_log_active.rst","programmers-reference/cpp/common/set_log_level.rst","programmers-reference/cpp/common/set_output_stream.rst","programmers-reference/cpp/common/sizeof_la_index.rst","programmers-reference/cpp/common/tic.rst","programmers-reference/cpp/common/time.rst","programmers-reference/cpp/common/timing.rst","programmers-reference/cpp/common/timings.rst","programmers-reference/cpp/common/toc.rst","programmers-reference/cpp/common/warning.rst","programmers-reference/cpp/fem/AdaptiveLinearVariationalSolver.rst","programmers-reference/cpp/fem/AdaptiveNonlinearVariationalSolver.rst","programmers-reference/cpp/fem/Assembler.rst","programmers-reference/cpp/fem/AssemblerBase.rst","programmers-reference/cpp/fem/BasisFunction.rst","programmers-reference/cpp/fem/DirichletBC.rst","programmers-reference/cpp/fem/DirichletBC_default_parameters.rst","programmers-reference/cpp/fem/DofMap.rst","programmers-reference/cpp/fem/Equation.rst","programmers-reference/cpp/fem/ErrorControl.rst","programmers-reference/cpp/fem/ErrorControl_default_parameters.rst","programmers-reference/cpp/fem/Extrapolation.rst","programmers-reference/cpp/fem/Extrapolation_extrapolate.rst","programmers-reference/cpp/fem/FiniteElement.rst","programmers-reference/cpp/fem/Form.rst","programmers-reference/cpp/fem/GenericAdaptiveVariationalSolver.rst","programmers-reference/cpp/fem/GenericAdaptiveVariationalSolver_default_parameters.rst","programmers-reference/cpp/fem/GenericDofMap.rst","programmers-reference/cpp/fem/HierarchicalDirichletBC.rst","programmers-reference/cpp/fem/HierarchicalErrorControl.rst","programmers-reference/cpp/fem/HierarchicalForm.rst","programmers-reference/cpp/fem/HierarchicalFunction.rst","programmers-reference/cpp/fem/HierarchicalFunctionSpace.rst","programmers-reference/cpp/fem/HierarchicalLinearVariationalProblem.rst","programmers-reference/cpp/fem/HierarchicalMesh.rst","programmers-reference/cpp/fem/HierarchicalNonlinearVariationalProblem.rst","programmers-reference/cpp/fem/LinearVariationalProblem.rst","programmers-reference/cpp/fem/LinearVariationalSolver.rst","programmers-reference/cpp/fem/LinearVariationalSolver_default_parameters.rst","programmers-reference/cpp/fem/LocalAssembler.rst","programmers-reference/cpp/fem/LocalAssembler_assemble.rst","programmers-reference/cpp/fem/LocalAssembler_assemble_cell.rst","programmers-reference/cpp/fem/LocalAssembler_assemble_exterior_facet.rst","programmers-reference/cpp/fem/LocalAssembler_assemble_interior_facet.rst","programmers-reference/cpp/fem/LocalSolver.rst","programmers-reference/cpp/fem/MultiMeshAssembler.rst","programmers-reference/cpp/fem/MultiMeshDirichletBC.rst","programmers-reference/cpp/fem/MultiMeshDofMap.rst","programmers-reference/cpp/fem/MultiMeshForm.rst","programmers-reference/cpp/fem/MultiStageScheme.rst","programmers-reference/cpp/fem/NonlinearVariationalProblem.rst","programmers-reference/cpp/fem/NonlinearVariationalSolver.rst","programmers-reference/cpp/fem/NonlinearVariationalSolver_default_parameters.rst","programmers-reference/cpp/fem/OpenMpAssembler.rst","programmers-reference/cpp/fem/PointIntegralSolver.rst","programmers-reference/cpp/fem/PointIntegralSolver_default_parameters.rst","programmers-reference/cpp/fem/PointSource.rst","programmers-reference/cpp/fem/RKSolver.rst","programmers-reference/cpp/fem/SparsityPatternBuilder.rst","programmers-reference/cpp/fem/SparsityPatternBuilder_build.rst","programmers-reference/cpp/fem/SparsityPatternBuilder_build_multimesh_sparsity_pattern.rst","programmers-reference/cpp/fem/SystemAssembler.rst","programmers-reference/cpp/fem/adapt.rst","programmers-reference/cpp/fem/adapt_markers.rst","programmers-reference/cpp/fem/assemble.rst","programmers-reference/cpp/fem/assemble_system.rst","programmers-reference/cpp/fem/dof_to_vertex_map.rst","programmers-reference/cpp/fem/dorfler_mark.rst","programmers-reference/cpp/fem/fem_solve.rst","programmers-reference/cpp/fem/index.rst","programmers-reference/cpp/fem/mark.rst","programmers-reference/cpp/fem/vertex_to_dof_map.rst","programmers-reference/cpp/function/ALE.rst","programmers-reference/cpp/function/ALE_move.rst","programmers-reference/cpp/function/Constant.rst","programmers-reference/cpp/function/Expression.rst","programmers-reference/cpp/function/FacetArea.rst","programmers-reference/cpp/function/Function.rst","programmers-reference/cpp/function/FunctionAXPY.rst","programmers-reference/cpp/function/FunctionAssigner.rst","programmers-reference/cpp/function/FunctionSpace.rst","programmers-reference/cpp/function/GenericFunction.rst","programmers-reference/cpp/function/HierarchicalFunction.rst","programmers-reference/cpp/function/HierarchicalFunctionSpace.rst","programmers-reference/cpp/function/HierarchicalMesh.rst","programmers-reference/cpp/function/Lagrange.rst","programmers-reference/cpp/function/LagrangeInterpolator.rst","programmers-reference/cpp/function/Legendre.rst","programmers-reference/cpp/function/Legendre_d2dx.rst","programmers-reference/cpp/function/Legendre_ddx.rst","programmers-reference/cpp/function/Legendre_eval.rst","programmers-reference/cpp/function/MeshCoordinates.rst","programmers-reference/cpp/function/MeshDisplacement.rst","programmers-reference/cpp/function/MultiMeshFunction.rst","programmers-reference/cpp/function/MultiMeshFunctionSpace.rst","programmers-reference/cpp/function/MultiMeshFunctionSpace_default_parameters.rst","programmers-reference/cpp/function/MultiMeshSubSpace.rst","programmers-reference/cpp/function/SpecialFacetFunction.rst","programmers-reference/cpp/function/SubSpace.rst","programmers-reference/cpp/function/assign.rst","programmers-reference/cpp/function/between.rst","programmers-reference/cpp/function/index.rst","programmers-reference/cpp/function/ipow.rst","programmers-reference/cpp/function/lt_coordinate.rst","programmers-reference/cpp/function/near.rst","programmers-reference/cpp/function/rand.rst","programmers-reference/cpp/function/seed.rst","programmers-reference/cpp/index.rst","programmers-reference/cpp/io/File.rst","programmers-reference/cpp/io/File_create_parent_path.rst","programmers-reference/cpp/io/File_exists.rst","programmers-reference/cpp/io/GenericFile.rst","programmers-reference/cpp/io/HierarchicalFunction.rst","programmers-reference/cpp/io/HierarchicalFunctionSpace.rst","programmers-reference/cpp/io/HierarchicalMesh.rst","programmers-reference/cpp/io/VTKPlotter.rst","programmers-reference/cpp/io/VTKPlotter_all_interactive.rst","programmers-reference/cpp/io/VTKPlotter_default_parameters.rst","programmers-reference/cpp/io/VTKPlotter_to_key.rst","programmers-reference/cpp/io/index.rst","programmers-reference/cpp/io/interactive.rst","programmers-reference/cpp/io/plot.rst","programmers-reference/cpp/la/BlockMatrix.rst","programmers-reference/cpp/la/BlockVector.rst","programmers-reference/cpp/la/CoordinateMatrix.rst","programmers-reference/cpp/la/DefaultFactory.rst","programmers-reference/cpp/la/DefaultFactory_factory.rst","programmers-reference/cpp/la/EigenFactory.rst","programmers-reference/cpp/la/EigenFactory_instance.rst","programmers-reference/cpp/la/EigenKrylovSolver.rst","programmers-reference/cpp/la/EigenKrylovSolver_default_parameters.rst","programmers-reference/cpp/la/EigenKrylovSolver_methods.rst","programmers-reference/cpp/la/EigenKrylovSolver_preconditioners.rst","programmers-reference/cpp/la/EigenLUSolver.rst","programmers-reference/cpp/la/EigenLUSolver_default_parameters.rst","programmers-reference/cpp/la/EigenLUSolver_methods.rst","programmers-reference/cpp/la/EigenMatrix.rst","programmers-reference/cpp/la/EigenVector.rst","programmers-reference/cpp/la/GenericLUSolver.rst","programmers-reference/cpp/la/GenericLinearAlgebraFactory.rst","programmers-reference/cpp/la/GenericLinearOperator.rst","programmers-reference/cpp/la/GenericLinearSolver.rst","programmers-reference/cpp/la/GenericMatrix.rst","programmers-reference/cpp/la/GenericPreconditioner.rst","programmers-reference/cpp/la/GenericSparsityPattern.rst","programmers-reference/cpp/la/GenericTensor.rst","programmers-reference/cpp/la/GenericVector.rst","programmers-reference/cpp/la/KrylovSolver.rst","programmers-reference/cpp/la/KrylovSolver_default_parameters.rst","programmers-reference/cpp/la/LUSolver.rst","programmers-reference/cpp/la/LUSolver_default_parameters.rst","programmers-reference/cpp/la/LinearAlgebraObject.rst","programmers-reference/cpp/la/LinearOperator.rst","programmers-reference/cpp/la/LinearSolver.rst","programmers-reference/cpp/la/LinearSolver_default_parameters.rst","programmers-reference/cpp/la/Matrix.rst","programmers-reference/cpp/la/NewtonSolver.rst","programmers-reference/cpp/la/NewtonSolver_default_parameters.rst","programmers-reference/cpp/la/NonlinearProblem.rst","programmers-reference/cpp/la/OptimisationProblem.rst","programmers-reference/cpp/la/PETScBaseMatrix.rst","programmers-reference/cpp/la/PETScFactory.rst","programmers-reference/cpp/la/PETScFactory_instance.rst","programmers-reference/cpp/la/PETScKrylovSolver.rst","programmers-reference/cpp/la/PETScKrylovSolver_default_parameters.rst","programmers-reference/cpp/la/PETScKrylovSolver_methods.rst","programmers-reference/cpp/la/PETScKrylovSolver_preconditioners.rst","programmers-reference/cpp/la/PETScLUSolver.rst","programmers-reference/cpp/la/PETScLUSolver_default_parameters.rst","programmers-reference/cpp/la/PETScLUSolver_methods.rst","programmers-reference/cpp/la/PETScLinearOperator.rst","programmers-reference/cpp/la/PETScMatrix.rst","programmers-reference/cpp/la/PETScObject.rst","programmers-reference/cpp/la/PETScObject_petsc_error.rst","programmers-reference/cpp/la/PETScOptions.rst","programmers-reference/cpp/la/PETScOptions_clear.rst","programmers-reference/cpp/la/PETScOptions_set.rst","programmers-reference/cpp/la/PETScPreconditioner.rst","programmers-reference/cpp/la/PETScPreconditioner_default_parameters.rst","programmers-reference/cpp/la/PETScPreconditioner_preconditioners.rst","programmers-reference/cpp/la/PETScSNESSolver.rst","programmers-reference/cpp/la/PETScSNESSolver_default_parameters.rst","programmers-reference/cpp/la/PETScSNESSolver_methods.rst","programmers-reference/cpp/la/PETScUserPreconditioner.rst","programmers-reference/cpp/la/PETScVector.rst","programmers-reference/cpp/la/SLEPcEigenSolver.rst","programmers-reference/cpp/la/SLEPcEigenSolver_default_parameters.rst","programmers-reference/cpp/la/STLFactory.rst","programmers-reference/cpp/la/STLFactory_instance.rst","programmers-reference/cpp/la/STLMatrix.rst","programmers-reference/cpp/la/Scalar.rst","programmers-reference/cpp/la/SparsityPattern.rst","programmers-reference/cpp/la/TensorLayout.rst","programmers-reference/cpp/la/Vector.rst","programmers-reference/cpp/la/VectorSpaceBasis.rst","programmers-reference/cpp/la/as_backend_type.rst","programmers-reference/cpp/la/get_tensor_type.rst","programmers-reference/cpp/la/has_krylov_solver_method.rst","programmers-reference/cpp/la/has_krylov_solver_preconditioner.rst","programmers-reference/cpp/la/has_lu_solver_method.rst","programmers-reference/cpp/la/has_type.rst","programmers-reference/cpp/la/in_nullspace.rst","programmers-reference/cpp/la/index.rst","programmers-reference/cpp/la/krylov_solver_methods.rst","programmers-reference/cpp/la/krylov_solver_preconditioners.rst","programmers-reference/cpp/la/la_index_dtype.rst","programmers-reference/cpp/la/la_solve.rst","programmers-reference/cpp/la/linear_algebra_backends.rst","programmers-reference/cpp/la/linear_solver_methods.rst","programmers-reference/cpp/la/list_krylov_solver_methods.rst","programmers-reference/cpp/la/list_krylov_solver_preconditioners.rst","programmers-reference/cpp/la/list_linear_algebra_backends.rst","programmers-reference/cpp/la/list_linear_solver_methods.rst","programmers-reference/cpp/la/list_lu_solver_methods.rst","programmers-reference/cpp/la/lu_solver_methods.rst","programmers-reference/cpp/la/normalize.rst","programmers-reference/cpp/la/residual.rst","programmers-reference/cpp/mesh/BoostGraphOrdering.rst","programmers-reference/cpp/mesh/BoostGraphOrdering_compute_cuthill_mckee.rst","programmers-reference/cpp/mesh/BoundaryMesh.rst","programmers-reference/cpp/mesh/BoundingBoxTree.rst","programmers-reference/cpp/mesh/BoundingBoxTree3D.rst","programmers-reference/cpp/mesh/BoxMesh.rst","programmers-reference/cpp/mesh/Cell.rst","programmers-reference/cpp/mesh/CellFunction.rst","programmers-reference/cpp/mesh/CellFunctionBool.rst","programmers-reference/cpp/mesh/CellFunctionDouble.rst","programmers-reference/cpp/mesh/CellFunctionInt.rst","programmers-reference/cpp/mesh/CellFunctionSizet.rst","programmers-reference/cpp/mesh/CellType.rst","programmers-reference/cpp/mesh/CellType_create.rst","programmers-reference/cpp/mesh/CellType_string2type.rst","programmers-reference/cpp/mesh/CellType_type2string.rst","programmers-reference/cpp/mesh/DomainBoundary.rst","programmers-reference/cpp/mesh/DynamicMeshEditor.rst","programmers-reference/cpp/mesh/Edge.rst","programmers-reference/cpp/mesh/EdgeFunction.rst","programmers-reference/cpp/mesh/EdgeFunctionBool.rst","programmers-reference/cpp/mesh/EdgeFunctionDouble.rst","programmers-reference/cpp/mesh/EdgeFunctionInt.rst","programmers-reference/cpp/mesh/EdgeFunctionSizet.rst","programmers-reference/cpp/mesh/Face.rst","programmers-reference/cpp/mesh/FaceFunction.rst","programmers-reference/cpp/mesh/FaceFunctionBool.rst","programmers-reference/cpp/mesh/FaceFunctionDouble.rst","programmers-reference/cpp/mesh/FaceFunctionInt.rst","programmers-reference/cpp/mesh/FaceFunctionSizet.rst","programmers-reference/cpp/mesh/Facet.rst","programmers-reference/cpp/mesh/FacetCell.rst","programmers-reference/cpp/mesh/FacetFunction.rst","programmers-reference/cpp/mesh/FacetFunctionBool.rst","programmers-reference/cpp/mesh/FacetFunctionDouble.rst","programmers-reference/cpp/mesh/FacetFunctionInt.rst","programmers-reference/cpp/mesh/FacetFunctionSizet.rst","programmers-reference/cpp/mesh/GenericBoundingBoxTree.rst","programmers-reference/cpp/mesh/Graph.rst","programmers-reference/cpp/mesh/GraphBuilder.rst","programmers-reference/cpp/mesh/GraphBuilder_compute_dual_graph.rst","programmers-reference/cpp/mesh/GraphBuilder_local_graph.rst","programmers-reference/cpp/mesh/HierarchicalFunction.rst","programmers-reference/cpp/mesh/HierarchicalFunctionSpace.rst","programmers-reference/cpp/mesh/HierarchicalMesh.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionBool.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionDouble.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionInt.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionSizet.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionUInt.rst","programmers-reference/cpp/mesh/IntervalMesh.rst","programmers-reference/cpp/mesh/LocalMeshData.rst","programmers-reference/cpp/mesh/Mesh.rst","programmers-reference/cpp/mesh/MeshColoring.rst","programmers-reference/cpp/mesh/MeshColoring_cell_colors.rst","programmers-reference/cpp/mesh/MeshColoring_color.rst","programmers-reference/cpp/mesh/MeshColoring_color_cells.rst","programmers-reference/cpp/mesh/MeshColoring_compute_colors.rst","programmers-reference/cpp/mesh/MeshColoring_type_to_dim.rst","programmers-reference/cpp/mesh/MeshConnectivity.rst","programmers-reference/cpp/mesh/MeshData.rst","programmers-reference/cpp/mesh/MeshDomains.rst","programmers-reference/cpp/mesh/MeshEditor.rst","programmers-reference/cpp/mesh/MeshEntity.rst","programmers-reference/cpp/mesh/MeshFunction.rst","programmers-reference/cpp/mesh/MeshFunctionBool.rst","programmers-reference/cpp/mesh/MeshFunctionDouble.rst","programmers-reference/cpp/mesh/MeshFunctionInt.rst","programmers-reference/cpp/mesh/MeshFunctionSizet.rst","programmers-reference/cpp/mesh/MeshGeometry.rst","programmers-reference/cpp/mesh/MeshHierarchy.rst","programmers-reference/cpp/mesh/MeshPartitioning.rst","programmers-reference/cpp/mesh/MeshPartitioning_build_distributed_mesh.rst","programmers-reference/cpp/mesh/MeshPointIntersection.rst","programmers-reference/cpp/mesh/MeshQuality.rst","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_histogram_data.rst","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_matplotlib_histogram.rst","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_min_max.rst","programmers-reference/cpp/mesh/MeshQuality_radius_ratios.rst","programmers-reference/cpp/mesh/MeshRenumbering.rst","programmers-reference/cpp/mesh/MeshRenumbering_renumber_by_color.rst","programmers-reference/cpp/mesh/MeshTopology.rst","programmers-reference/cpp/mesh/MeshTransformation.rst","programmers-reference/cpp/mesh/MeshTransformation_rotate.rst","programmers-reference/cpp/mesh/MeshTransformation_translate.rst","programmers-reference/cpp/mesh/MeshValueCollection.rst","programmers-reference/cpp/mesh/MeshValueCollectionBool.rst","programmers-reference/cpp/mesh/MeshValueCollectionDouble.rst","programmers-reference/cpp/mesh/MeshValueCollectionInt.rst","programmers-reference/cpp/mesh/MeshValueCollectionSizet.rst","programmers-reference/cpp/mesh/MultiMesh.rst","programmers-reference/cpp/mesh/MultiMesh_default_parameters.rst","programmers-reference/cpp/mesh/PeriodicBoundaryComputation.rst","programmers-reference/cpp/mesh/PeriodicBoundaryComputation_compute_periodic_pairs.rst","programmers-reference/cpp/mesh/PeriodicBoundaryComputation_masters_slaves.rst","programmers-reference/cpp/mesh/Point.rst","programmers-reference/cpp/mesh/RectangleMesh.rst","programmers-reference/cpp/mesh/Restriction.rst","programmers-reference/cpp/mesh/SCOTCH.rst","programmers-reference/cpp/mesh/SCOTCH_compute_gps.rst","programmers-reference/cpp/mesh/SCOTCH_compute_partition.rst","programmers-reference/cpp/mesh/SubDomain.rst","programmers-reference/cpp/mesh/SubMesh.rst","programmers-reference/cpp/mesh/SubsetIterator.rst","programmers-reference/cpp/mesh/UnitCubeMesh.rst","programmers-reference/cpp/mesh/UnitHexMesh.rst","programmers-reference/cpp/mesh/UnitIntervalMesh.rst","programmers-reference/cpp/mesh/UnitQuadMesh.rst","programmers-reference/cpp/mesh/UnitSquareMesh.rst","programmers-reference/cpp/mesh/UnitTetrahedronMesh.rst","programmers-reference/cpp/mesh/UnitTriangleMesh.rst","programmers-reference/cpp/mesh/Vertex.rst","programmers-reference/cpp/mesh/VertexFunction.rst","programmers-reference/cpp/mesh/VertexFunctionBool.rst","programmers-reference/cpp/mesh/VertexFunctionDouble.rst","programmers-reference/cpp/mesh/VertexFunctionInt.rst","programmers-reference/cpp/mesh/VertexFunctionSizet.rst","programmers-reference/cpp/mesh/cells.rst","programmers-reference/cpp/mesh/edges.rst","programmers-reference/cpp/mesh/entities.rst","programmers-reference/cpp/mesh/faces.rst","programmers-reference/cpp/mesh/facets.rst","programmers-reference/cpp/mesh/index.rst","programmers-reference/cpp/mesh/intersect.rst","programmers-reference/cpp/mesh/refine.rst","programmers-reference/cpp/mesh/vertices.rst","programmers-reference/deprecation/down_cast.rst","programmers-reference/deprecation/index.rst","programmers-reference/fem/adaptivesolving/AdaptiveLinearVariationalSolver.rst","programmers-reference/fem/adaptivesolving/AdaptiveNonlinearVariationalSolver.rst","programmers-reference/fem/adaptivesolving/generate_error_control.rst","programmers-reference/fem/adaptivesolving/generate_error_control_forms.rst","programmers-reference/fem/adaptivesolving/index.rst","programmers-reference/fem/assembling/SystemAssembler.rst","programmers-reference/fem/assembling/assemble.rst","programmers-reference/fem/assembling/assemble_system.rst","programmers-reference/fem/assembling/index.rst","programmers-reference/fem/bcs/AutoSubDomain.rst","programmers-reference/fem/bcs/DirichletBC.rst","programmers-reference/fem/bcs/homogenize.rst","programmers-reference/fem/bcs/index.rst","programmers-reference/fem/errorcontrolgenerator/index.rst","programmers-reference/fem/form/Form.rst","programmers-reference/fem/form/index.rst","programmers-reference/fem/formmanipulations/adjoint.rst","programmers-reference/fem/formmanipulations/derivative.rst","programmers-reference/fem/formmanipulations/increase_order.rst","programmers-reference/fem/formmanipulations/index.rst","programmers-reference/fem/formmanipulations/tear.rst","programmers-reference/fem/index.rst","programmers-reference/fem/interpolation/index.rst","programmers-reference/fem/interpolation/interpolate.rst","programmers-reference/fem/norms/errornorm.rst","programmers-reference/fem/norms/index.rst","programmers-reference/fem/norms/norm.rst","programmers-reference/fem/projection/index.rst","programmers-reference/fem/projection/project.rst","programmers-reference/fem/solving/LinearVariationalProblem.rst","programmers-reference/fem/solving/LinearVariationalSolver.rst","programmers-reference/fem/solving/LocalSolver.rst","programmers-reference/fem/solving/NonlinearVariationalProblem.rst","programmers-reference/fem/solving/NonlinearVariationalSolver.rst","programmers-reference/fem/solving/index.rst","programmers-reference/fem/solving/solve.rst","programmers-reference/functions/constant/Constant.rst","programmers-reference/functions/constant/index.rst","programmers-reference/functions/expression/Expression.rst","programmers-reference/functions/expression/index.rst","programmers-reference/functions/function/Argument.rst","programmers-reference/functions/function/Function.rst","programmers-reference/functions/function/TestFunction.rst","programmers-reference/functions/function/TestFunctions.rst","programmers-reference/functions/function/TrialFunction.rst","programmers-reference/functions/function/TrialFunctions.rst","programmers-reference/functions/function/index.rst","programmers-reference/functions/functionspace/FunctionSpace.rst","programmers-reference/functions/functionspace/FunctionSpaceBase.rst","programmers-reference/functions/functionspace/FunctionSpaceFromCpp.rst","programmers-reference/functions/functionspace/MixedFunctionSpace.rst","programmers-reference/functions/functionspace/TensorFunctionSpace.rst","programmers-reference/functions/functionspace/VectorFunctionSpace.rst","programmers-reference/functions/functionspace/create_ufc_function_spaces.rst","programmers-reference/functions/functionspace/index.rst","programmers-reference/functions/index.rst","programmers-reference/functions/specialfunctions/CellNormal.rst","programmers-reference/functions/specialfunctions/CellSize.rst","programmers-reference/functions/specialfunctions/CellVolume.rst","programmers-reference/functions/specialfunctions/Circumradius.rst","programmers-reference/functions/specialfunctions/FacetArea.rst","programmers-reference/functions/specialfunctions/FacetNormal.rst","programmers-reference/functions/specialfunctions/MaxFacetEdgeLength.rst","programmers-reference/functions/specialfunctions/MeshCoordinates.rst","programmers-reference/functions/specialfunctions/MinFacetEdgeLength.rst","programmers-reference/functions/specialfunctions/SpatialCoordinate.rst","programmers-reference/functions/specialfunctions/index.rst","programmers-reference/functions/ufc_functionspace/UFCFunctionSpace.rst","programmers-reference/functions/ufc_functionspace/create_ufc_function_spaces.rst","programmers-reference/functions/ufc_functionspace/index.rst","programmers-reference/importhandler/index.rst","programmers-reference/index.rst","programmers-reference/mesh/ale/compute_edge_map.rst","programmers-reference/mesh/ale/compute_vertex_map.rst","programmers-reference/mesh/ale/index.rst","programmers-reference/mesh/ale/init_parent_edge_indices.rst","programmers-reference/mesh/boundarysubdomainfinder/create_maps.rst","programmers-reference/mesh/boundarysubdomainfinder/find_all_subdomains.rst","programmers-reference/mesh/boundarysubdomainfinder/find_keys_on_one_subdomain.rst","programmers-reference/mesh/boundarysubdomainfinder/find_new_cell_key.rst","programmers-reference/mesh/boundarysubdomainfinder/find_subdomain.rst","programmers-reference/mesh/boundarysubdomainfinder/index.rst","programmers-reference/mesh/boundarysubdomainfinder/main.rst","programmers-reference/mesh/boundarysubdomainfinder/usage.rst","programmers-reference/mesh/boundarysubdomainfinder/write_file.rst","programmers-reference/mesh/index.rst","programmers-reference/mesh/meshes/index.rst","programmers-reference/mesh/refinement/index.rst","programmers-reference/mesh/refinement/refine.rst","programmers-reference/mesh/svgtools/index.rst","programmers-reference/mesh/svgtools/mesh2svg.rst","programmers-reference/multistage/factorize/extract_tested_expressions.rst","programmers-reference/multistage/factorize/index.rst","programmers-reference/multistage/index.rst","programmers-reference/multistage/multistagescheme/BDF1.rst","programmers-reference/multistage/multistagescheme/BackwardEuler.rst","programmers-reference/multistage/multistagescheme/ButcherMultiStageScheme.rst","programmers-reference/multistage/multistagescheme/CN2.rst","programmers-reference/multistage/multistagescheme/CrankNicolson.rst","programmers-reference/multistage/multistagescheme/ERK.rst","programmers-reference/multistage/multistagescheme/ERK1.rst","programmers-reference/multistage/multistagescheme/ERK4.rst","programmers-reference/multistage/multistagescheme/ESDIRK3.rst","programmers-reference/multistage/multistagescheme/ESDIRK4.rst","programmers-reference/multistage/multistagescheme/ExplicitEuler.rst","programmers-reference/multistage/multistagescheme/ExplicitMidPoint.rst","programmers-reference/multistage/multistagescheme/ForwardEuler.rst","programmers-reference/multistage/multistagescheme/ImplicitEuler.rst","programmers-reference/multistage/multistagescheme/MultiStageScheme.rst","programmers-reference/multistage/multistagescheme/RK4.rst","programmers-reference/multistage/multistagescheme/index.rst","programmers-reference/multistage/multistagesolvers/PointIntegralSolver.rst","programmers-reference/multistage/multistagesolvers/RKSolver.rst","programmers-reference/multistage/multistagesolvers/index.rst","programmers-reference/multistage/rushlarsenschemes/GRL1.rst","programmers-reference/multistage/rushlarsenschemes/GRL2.rst","programmers-reference/multistage/rushlarsenschemes/MultiStageScheme.rst","programmers-reference/multistage/rushlarsenschemes/RL1.rst","programmers-reference/multistage/rushlarsenschemes/RL2.rst","programmers-reference/multistage/rushlarsenschemes/RushLarsenScheme.rst","programmers-reference/multistage/rushlarsenschemes/index.rst","quick_reference.rst"],objects:{"":{dolfin:[536,0,0,"-"]},"dolfin.common":{constants:[24,0,0,"-"],globalparameters:[25,0,0,"-"],math:[27,0,0,"-"],memory:[29,0,0,"-"],plotting:[31,0,0,"-"],time:[33,0,0,"-"]},"dolfin.common.math":{sqr:[28,1,1,""]},"dolfin.common.memory":{memory_usage:[30,1,1,""]},"dolfin.common.plotting":{plot:[32,1,1,""]},"dolfin.compilemodules":{compilemodule:[36,0,0,"-"],expressions:[38,0,0,"-"],jit:[40,0,0,"-"],subdomains:[43,0,0,"-"],swigimportinfo:[44,0,0,"-"]},"dolfin.compilemodules.compilemodule":{compile_extension_module:[34,1,1,""],expression_to_code_fragments:[35,1,1,""]},"dolfin.compilemodules.expressions":{compile_expressions:[37,1,1,""]},"dolfin.compilemodules.jit":{jit:[41,1,1,""]},"dolfin.compilemodules.subdomains":{CompiledSubDomain:[42,1,1,""]},"dolfin.cpp":{"function":[221,0,0,"-"],common:[111,0,0,"-"],fem:[189,0,0,"-"],io:[239,0,0,"-"],la:[322,0,0,"-"],mesh:[459,0,0,"-"]},"dolfin.cpp.common":{BoolParameter:[45,2,1,""],DoubleArray:[46,2,1,""],DoubleParameter:[47,2,1,""],Event:[48,2,1,""],GlobalParameters:[49,2,1,""],GlobalParameters_default_parameters:[50,1,1,""],IndexSet:[51,2,1,""],IntArray:[52,2,1,""],IntParameter:[53,2,1,""],MPI:[54,2,1,""],MPIInfo:[55,2,1,""],MPI_Comm:[56,2,1,""],MPI_MPI_AVG:[57,1,1,""],MPI_avg:[58,1,1,""],MPI_barrier:[59,1,1,""],MPI_compute_local_range:[60,1,1,""],MPI_gather:[61,1,1,""],MPI_global_offset:[62,1,1,""],MPI_index_owner:[63,1,1,""],MPI_is_broadcaster:[64,1,1,""],MPI_is_receiver:[65,1,1,""],MPI_local_range:[66,1,1,""],MPI_max:[67,1,1,""],MPI_min:[68,1,1,""],MPI_rank:[69,1,1,""],MPI_size:[70,1,1,""],MPI_sum:[71,1,1,""],ParameterValue:[72,2,1,""],Parameters:[73,2,1,""],Progress:[74,2,1,""],StringParameter:[75,2,1,""],SubSystemsManager:[76,2,1,""],SubSystemsManager_finalize:[77,1,1,""],SubSystemsManager_init_mpi:[78,1,1,""],SubSystemsManager_init_petsc:[79,1,1,""],SubSystemsManager_mpi_finalized:[80,1,1,""],SubSystemsManager_mpi_initialized:[81,1,1,""],SubSystemsManager_responsible_mpi:[82,1,1,""],SubSystemsManager_responsible_petsc:[83,1,1,""],Table:[84,2,1,""],TableEntry:[85,2,1,""],Timer:[86,2,1,""],UIntArray:[87,2,1,""],Variable:[88,2,1,""],begin:[89,1,1,""],debug:[90,1,1,""],deprecation:[91,1,1,""],dolfin_error:[92,1,1,""],dolfin_version:[93,1,1,""],dump_timings_to_xml:[94,1,1,""],end:[95,1,1,""],error:[96,1,1,""],f:[97,1,1,""],get_log_level:[98,1,1,""],git_commit_hash:[99,1,1,""],has_cholmod:[100,1,1,""],has_hdf5:[101,1,1,""],has_mpi:[102,1,1,""],has_openmp:[103,1,1,""],has_parmetis:[104,1,1,""],has_petsc:[105,1,1,""],has_scotch:[106,1,1,""],has_slepc:[107,1,1,""],has_tao:[108,1,1,""],has_umfpack:[109,1,1,""],has_zlib:[110,1,1,""],info:[112,1,1,""],info_stream:[113,1,1,""],info_underline:[114,1,1,""],init:[115,1,1,""],list_timings:[116,1,1,""],log:[117,1,1,""],monitor_memory_usage:[118,1,1,""],not_working_in_parallel:[119,1,1,""],set_log_active:[120,1,1,""],set_log_level:[121,1,1,""],set_output_stream:[122,1,1,""],sizeof_la_index:[123,1,1,""],tic:[124,1,1,""],time:[125,1,1,""],timing:[126,1,1,""],timings:[127,1,1,""],toc:[128,1,1,""],warning:[129,1,1,""]},"dolfin.cpp.common.BoolParameter":{thisown:[45,3,1,""]},"dolfin.cpp.common.DoubleArray":{array:[46,4,1,""],data:[46,4,1,""],size:[46,4,1,""],str:[46,4,1,""],thisown:[46,3,1,""]},"dolfin.cpp.common.DoubleParameter":{thisown:[47,3,1,""]},"dolfin.cpp.common.Event":{count:[48,4,1,""],maxcount:[48,4,1,""],thisown:[48,3,1,""]},"dolfin.cpp.common.GlobalParameters":{default_parameters:[49,5,1,""],thisown:[49,3,1,""]},"dolfin.cpp.common.IndexSet":{clear:[51,4,1,""],empty:[51,4,1,""],fill:[51,4,1,""],find:[51,4,1,""],has_index:[51,4,1,""],insert:[51,4,1,""],size:[51,4,1,""],thisown:[51,3,1,""]},"dolfin.cpp.common.IntArray":{array:[52,4,1,""],data:[52,4,1,""],size:[52,4,1,""],str:[52,4,1,""],thisown:[52,3,1,""]},"dolfin.cpp.common.IntParameter":{thisown:[53,3,1,""]},"dolfin.cpp.common.MPI":{MPI_AVG:[54,5,1,""],avg:[54,5,1,""],barrier:[54,5,1,""],compute_local_range:[54,5,1,""],gather:[54,5,1,""],global_offset:[54,5,1,""],index_owner:[54,5,1,""],is_broadcaster:[54,5,1,""],is_receiver:[54,5,1,""],local_range:[54,5,1,""],max:[54,5,1,""],min:[54,5,1,""],rank:[54,5,1,""],size:[54,5,1,""],sum:[54,5,1,""],thisown:[54,3,1,""]},"dolfin.cpp.common.MPIInfo":{thisown:[55,3,1,""]},"dolfin.cpp.common.MPI_Comm":{thisown:[56,3,1,""]},"dolfin.cpp.common.ParameterValue":{access_count:[72,4,1,""],change_count:[72,4,1,""],check_key:[72,5,1,""],data:[72,4,1,""],description:[72,4,1,""],get_range:[72,4,1,""],is_set:[72,4,1,""],key:[72,4,1,""],range_str:[72,4,1,""],reset:[72,4,1,""],set_range:[72,4,1,""],str:[72,4,1,""],thisown:[72,3,1,""],type_str:[72,4,1,""],value:[72,4,1,""],value_str:[72,4,1,""],warn_once:[72,4,1,""]},"dolfin.cpp.common.Parameters":{add:[73,4,1,""],assign:[73,4,1,""],clear:[73,4,1,""],copy:[73,4,1,""],find_parameter:[73,4,1,""],find_parameter_set:[73,4,1,""],get:[73,4,1,""],get_range:[73,4,1,""],has_key:[73,4,1,""],has_parameter:[73,4,1,""],has_parameter_set:[73,4,1,""],items:[73,4,1,""],iterdata:[73,4,1,""],iteritems:[73,4,1,""],iterkeys:[73,4,1,""],itervalues:[73,4,1,""],keys:[73,4,1,""],name:[73,4,1,""],option_string:[73,4,1,""],parse:[73,4,1,""],remove:[73,4,1,""],rename:[73,4,1,""],set_range:[73,4,1,""],str:[73,4,1,""],thisown:[73,3,1,""],to_dict:[73,4,1,""],update:[73,4,1,""],values:[73,4,1,""]},"dolfin.cpp.common.Progress":{thisown:[74,3,1,""],update:[74,4,1,""]},"dolfin.cpp.common.StringParameter":{thisown:[75,3,1,""]},"dolfin.cpp.common.SubSystemsManager":{finalize:[76,5,1,""],init_mpi:[76,5,1,""],init_petsc:[76,5,1,""],mpi_finalized:[76,5,1,""],mpi_initialized:[76,5,1,""],responsible_mpi:[76,5,1,""],responsible_petsc:[76,5,1,""],thisown:[76,3,1,""]},"dolfin.cpp.common.Table":{get:[84,4,1,""],get_value:[84,4,1,""],set:[84,4,1,""],str_latex:[84,4,1,""],thisown:[84,3,1,""]},"dolfin.cpp.common.TableEntry":{thisown:[85,3,1,""]},"dolfin.cpp.common.Timer":{elapsed:[86,4,1,""],resume:[86,4,1,""],start:[86,4,1,""],stop:[86,4,1,""],thisown:[86,3,1,""],value:[86,4,1,""]},"dolfin.cpp.common.UIntArray":{array:[87,4,1,""],data:[87,4,1,""],size:[87,4,1,""],str:[87,4,1,""],thisown:[87,3,1,""]},"dolfin.cpp.common.Variable":{id:[88,4,1,""],label:[88,4,1,""],name:[88,4,1,""],parameters:[88,3,1,""],rename:[88,4,1,""],str:[88,4,1,""],thisown:[88,3,1,""]},"dolfin.cpp.fem":{AdaptiveLinearVariationalSolver:[130,2,1,""],AdaptiveNonlinearVariationalSolver:[131,2,1,""],Assembler:[132,2,1,""],AssemblerBase:[133,2,1,""],BasisFunction:[134,2,1,""],DirichletBC:[135,2,1,""],DirichletBC_default_parameters:[136,1,1,""],DofMap:[137,2,1,""],Equation:[138,2,1,""],ErrorControl:[139,2,1,""],ErrorControl_default_parameters:[140,1,1,""],Extrapolation:[141,2,1,""],Extrapolation_extrapolate:[142,1,1,""],FiniteElement:[143,2,1,""],Form:[144,2,1,""],GenericAdaptiveVariationalSolver:[145,2,1,""],GenericAdaptiveVariationalSolver_default_parameters:[146,1,1,""],GenericDofMap:[147,2,1,""],HierarchicalDirichletBC:[148,2,1,""],HierarchicalErrorControl:[149,2,1,""],HierarchicalForm:[150,2,1,""],HierarchicalFunction:[151,2,1,""],HierarchicalFunctionSpace:[152,2,1,""],HierarchicalLinearVariationalProblem:[153,2,1,""],HierarchicalMesh:[154,2,1,""],HierarchicalNonlinearVariationalProblem:[155,2,1,""],LinearVariationalProblem:[156,2,1,""],LinearVariationalSolver:[157,2,1,""],LinearVariationalSolver_default_parameters:[158,1,1,""],LocalAssembler:[159,2,1,""],LocalAssembler_assemble:[160,1,1,""],LocalAssembler_assemble_cell:[161,1,1,""],LocalAssembler_assemble_exterior_facet:[162,1,1,""],LocalAssembler_assemble_interior_facet:[163,1,1,""],LocalSolver:[164,2,1,""],MultiMeshAssembler:[165,2,1,""],MultiMeshDirichletBC:[166,2,1,""],MultiMeshDofMap:[167,2,1,""],MultiMeshForm:[168,2,1,""],MultiStageScheme:[169,2,1,""],NonlinearVariationalProblem:[170,2,1,""],NonlinearVariationalSolver:[171,2,1,""],NonlinearVariationalSolver_default_parameters:[172,1,1,""],OpenMpAssembler:[173,2,1,""],PointIntegralSolver:[174,2,1,""],PointIntegralSolver_default_parameters:[175,1,1,""],PointSource:[176,2,1,""],RKSolver:[177,2,1,""],SparsityPatternBuilder:[178,2,1,""],SparsityPatternBuilder_build:[179,1,1,""],SparsityPatternBuilder_build_multimesh_sparsity_pattern:[180,1,1,""],SystemAssembler:[181,2,1,""],adapt:[182,1,1,""],adapt_markers:[183,1,1,""],assemble:[184,1,1,""],assemble_system:[185,1,1,""],dof_to_vertex_map:[186,1,1,""],dorfler_mark:[187,1,1,""],fem_solve:[188,1,1,""],mark:[190,1,1,""],vertex_to_dof_map:[191,1,1,""]},"dolfin.cpp.fem.AdaptiveLinearVariationalSolver":{thisown:[130,3,1,""]},"dolfin.cpp.fem.AdaptiveNonlinearVariationalSolver":{thisown:[131,3,1,""]},"dolfin.cpp.fem.Assembler":{assemble:[132,4,1,""],assemble_cells:[132,4,1,""],assemble_exterior_facets:[132,4,1,""],assemble_interior_facets:[132,4,1,""],assemble_vertices:[132,4,1,""],thisown:[132,3,1,""]},"dolfin.cpp.fem.AssemblerBase":{add_values:[133,3,1,""],finalize_tensor:[133,3,1,""],init_global_tensor:[133,4,1,""],keep_diagonal:[133,3,1,""],thisown:[133,3,1,""]},"dolfin.cpp.fem.BasisFunction":{eval:[134,4,1,""],eval_derivatives:[134,4,1,""],thisown:[134,3,1,""]},"dolfin.cpp.fem.DirichletBC":{apply:[135,4,1,""],default_parameters:[135,5,1,""],function_space:[135,4,1,""],get_boundary_values:[135,4,1,""],homogenize:[135,4,1,""],is_compatible:[135,4,1,""],markers:[135,4,1,""],method:[135,4,1,""],set_value:[135,4,1,""],thisown:[135,3,1,""],user_sub_domain:[135,4,1,""],value:[135,4,1,""],zero:[135,4,1,""],zero_columns:[135,4,1,""]},"dolfin.cpp.fem.DofMap":{dofs:[137,4,1,""],thisown:[137,3,1,""]},"dolfin.cpp.fem.Equation":{is_linear:[138,4,1,""],lhs:[138,4,1,""],rhs:[138,4,1,""],rhs_int:[138,4,1,""],thisown:[138,3,1,""]},"dolfin.cpp.fem.ErrorControl":{compute_cell_residual:[139,4,1,""],compute_dual:[139,4,1,""],compute_extrapolation:[139,4,1,""],compute_facet_residual:[139,4,1,""],compute_indicators:[139,4,1,""],default_parameters:[139,5,1,""],estimate_error:[139,4,1,""],residual_representation:[139,4,1,""],thisown:[139,3,1,""]},"dolfin.cpp.fem.Extrapolation":{extrapolate:[141,5,1,""],thisown:[141,3,1,""]},"dolfin.cpp.fem.FiniteElement":{cell_shape:[143,4,1,""],create:[143,4,1,""],create_sub_element:[143,4,1,""],evaluate_basis:[143,4,1,""],evaluate_basis_all:[143,4,1,""],evaluate_basis_derivatives:[143,4,1,""],evaluate_basis_derivatives_all:[143,4,1,""],evaluate_dof:[143,4,1,""],evaluate_dofs:[143,4,1,""],extract_sub_element:[143,4,1,""],geometric_dimension:[143,4,1,""],hash:[143,4,1,""],interpolate_vertex_values:[143,4,1,""],map_from_reference_cell:[143,4,1,""],map_to_reference_cell:[143,4,1,""],num_sub_elements:[143,4,1,""],signature:[143,4,1,""],space_dimension:[143,4,1,""],thisown:[143,3,1,""],topological_dimension:[143,4,1,""],ufc_element:[143,4,1,""],value_dimension:[143,4,1,""],value_rank:[143,4,1,""]},"dolfin.cpp.fem.Form":{cell_domains:[144,4,1,""],check:[144,4,1,""],coefficient:[144,4,1,""],coefficient_name:[144,4,1,""],coefficient_number:[144,4,1,""],coefficients:[144,4,1,""],coloring:[144,4,1,""],exterior_facet_domains:[144,4,1,""],function_space:[144,4,1,""],function_spaces:[144,4,1,""],interior_facet_domains:[144,4,1,""],mesh:[144,4,1,""],mesh_shared_ptr:[144,4,1,""],num_coefficients:[144,4,1,""],rank:[144,4,1,""],set_cell_domains:[144,4,1,""],set_coefficient:[144,4,1,""],set_coefficients:[144,4,1,""],set_exterior_facet_domains:[144,4,1,""],set_interior_facet_domains:[144,4,1,""],set_mesh:[144,4,1,""],set_some_coefficients:[144,4,1,""],set_vertex_domains:[144,4,1,""],thisown:[144,3,1,""],ufc_form:[144,4,1,""],vertex_domains:[144,4,1,""]},"dolfin.cpp.fem.GenericAdaptiveVariationalSolver":{adapt_problem:[145,4,1,""],adaptive_data:[145,4,1,""],default_parameters:[145,5,1,""],evaluate_goal:[145,4,1,""],extract_bcs:[145,4,1,""],solve:[145,4,1,""],solve_primal:[145,4,1,""],summary:[145,4,1,""],thisown:[145,3,1,""]},"dolfin.cpp.fem.GenericDofMap":{block_size:[147,3,1,""],cell_dimension:[147,4,1,""],cell_dofs:[147,4,1,""],clear_sub_map_data:[147,4,1,""],collapse:[147,4,1,""],constrained_domain:[147,3,1,""],copy:[147,4,1,""],create:[147,4,1,""],dofs:[147,4,1,""],extract_sub_dofmap:[147,4,1,""],global_dimension:[147,4,1,""],is_view:[147,4,1,""],local_dimension:[147,4,1,""],local_to_global_index:[147,4,1,""],local_to_global_unowned:[147,4,1,""],max_cell_dimension:[147,4,1,""],max_element_dofs:[147,4,1,""],neighbours:[147,4,1,""],num_element_dofs:[147,4,1,""],num_entity_dofs:[147,4,1,""],num_facet_dofs:[147,4,1,""],off_process_owner:[147,4,1,""],ownership_range:[147,4,1,""],set:[147,4,1,""],set_x:[147,4,1,""],shared_nodes:[147,4,1,""],tabulate_all_coordinates:[147,4,1,""],tabulate_coordinates:[147,4,1,""],tabulate_entity_dofs:[147,4,1,""],tabulate_facet_dofs:[147,4,1,""],tabulate_local_to_global_dofs:[147,4,1,""],thisown:[147,3,1,""]},"dolfin.cpp.fem.HierarchicalDirichletBC":{child:[148,4,1,""],clear_child:[148,4,1,""],depth:[148,4,1,""],has_child:[148,4,1,""],has_parent:[148,4,1,""],leaf_node:[148,4,1,""],parent:[148,4,1,""],root_node:[148,4,1,""],set_child:[148,4,1,""],set_parent:[148,4,1,""],thisown:[148,3,1,""]},"dolfin.cpp.fem.HierarchicalErrorControl":{child:[149,4,1,""],clear_child:[149,4,1,""],depth:[149,4,1,""],has_child:[149,4,1,""],has_parent:[149,4,1,""],leaf_node:[149,4,1,""],parent:[149,4,1,""],root_node:[149,4,1,""],set_child:[149,4,1,""],set_parent:[149,4,1,""],thisown:[149,3,1,""]},"dolfin.cpp.fem.HierarchicalForm":{child:[150,4,1,""],clear_child:[150,4,1,""],depth:[150,4,1,""],has_child:[150,4,1,""],has_parent:[150,4,1,""],leaf_node:[150,4,1,""],parent:[150,4,1,""],root_node:[150,4,1,""],set_child:[150,4,1,""],set_parent:[150,4,1,""],thisown:[150,3,1,""]},"dolfin.cpp.fem.HierarchicalFunction":{clear_child:[151,4,1,""],depth:[151,4,1,""],has_child:[151,4,1,""],has_parent:[151,4,1,""],set_child:[151,4,1,""],set_parent:[151,4,1,""],thisown:[151,3,1,""]},"dolfin.cpp.fem.HierarchicalFunctionSpace":{clear_child:[152,4,1,""],depth:[152,4,1,""],has_child:[152,4,1,""],has_parent:[152,4,1,""],set_child:[152,4,1,""],set_parent:[152,4,1,""],thisown:[152,3,1,""]},"dolfin.cpp.fem.HierarchicalLinearVariationalProblem":{child:[153,4,1,""],clear_child:[153,4,1,""],depth:[153,4,1,""],has_child:[153,4,1,""],has_parent:[153,4,1,""],leaf_node:[153,4,1,""],parent:[153,4,1,""],root_node:[153,4,1,""],set_child:[153,4,1,""],set_parent:[153,4,1,""],thisown:[153,3,1,""]},"dolfin.cpp.fem.HierarchicalMesh":{clear_child:[154,4,1,""],depth:[154,4,1,""],has_child:[154,4,1,""],has_parent:[154,4,1,""],set_child:[154,4,1,""],set_parent:[154,4,1,""],thisown:[154,3,1,""]},"dolfin.cpp.fem.HierarchicalNonlinearVariationalProblem":{child:[155,4,1,""],clear_child:[155,4,1,""],depth:[155,4,1,""],has_child:[155,4,1,""],has_parent:[155,4,1,""],leaf_node:[155,4,1,""],parent:[155,4,1,""],root_node:[155,4,1,""],set_child:[155,4,1,""],set_parent:[155,4,1,""],thisown:[155,3,1,""]},"dolfin.cpp.fem.LinearVariationalProblem":{bcs:[156,4,1,""],bilinear_form:[156,4,1,""],linear_form:[156,4,1,""],solution:[156,4,1,""],test_space:[156,4,1,""],thisown:[156,3,1,""],trial_space:[156,4,1,""]},"dolfin.cpp.fem.LinearVariationalSolver":{default_parameters:[157,5,1,""],solve:[157,4,1,""],thisown:[157,3,1,""]},"dolfin.cpp.fem.LocalAssembler":{assemble:[159,5,1,""],assemble_cell:[159,5,1,""],assemble_exterior_facet:[159,5,1,""],assemble_interior_facet:[159,5,1,""],thisown:[159,3,1,""]},"dolfin.cpp.fem.LocalSolver":{Cholesky:[164,3,1,""],LU:[164,3,1,""],clear_factorization:[164,4,1,""],factorize:[164,4,1,""],solve_global_rhs:[164,4,1,""],solve_local:[164,4,1,""],solve_local_rhs:[164,4,1,""],thisown:[164,3,1,""]},"dolfin.cpp.fem.MultiMeshAssembler":{assemble:[165,4,1,""],extend_cut_cell_integration:[165,3,1,""],thisown:[165,3,1,""]},"dolfin.cpp.fem.MultiMeshDirichletBC":{apply:[166,4,1,""],thisown:[166,3,1,""]},"dolfin.cpp.fem.MultiMeshDofMap":{add:[167,4,1,""],build:[167,4,1,""],clear:[167,4,1,""],global_dimension:[167,4,1,""],num_parts:[167,4,1,""],off_process_owner:[167,4,1,""],ownership_range:[167,4,1,""],part:[167,4,1,""],str:[167,4,1,""],thisown:[167,3,1,""]},"dolfin.cpp.fem.MultiMeshForm":{add:[168,4,1,""],build:[168,4,1,""],clear:[168,4,1,""],function_space:[168,4,1,""],multimesh:[168,4,1,""],num_parts:[168,4,1,""],part:[168,4,1,""],rank:[168,4,1,""],thisown:[168,3,1,""]},"dolfin.cpp.fem.MultiStageScheme":{bcs:[169,4,1,""],dt_stage_offset:[169,4,1,""],implicit:[169,4,1,""],jacobian_index:[169,4,1,""],order:[169,4,1,""],thisown:[169,3,1,""]},"dolfin.cpp.fem.NonlinearVariationalProblem":{bcs:[170,4,1,""],has_jacobian:[170,4,1,""],has_lower_bound:[170,4,1,""],has_upper_bound:[170,4,1,""],jacobian_form:[170,4,1,""],lower_bound:[170,4,1,""],residual_form:[170,4,1,""],set_bounds:[170,4,1,""],solution:[170,4,1,""],test_space:[170,4,1,""],thisown:[170,3,1,""],trial_space:[170,4,1,""],upper_bound:[170,4,1,""]},"dolfin.cpp.fem.NonlinearVariationalSolver":{default_parameters:[171,5,1,""],solve:[171,4,1,""],thisown:[171,3,1,""]},"dolfin.cpp.fem.OpenMpAssembler":{assemble:[173,4,1,""],thisown:[173,3,1,""]},"dolfin.cpp.fem.PointIntegralSolver":{default_parameters:[174,5,1,""],num_jacobian_computations:[174,4,1,""],reset_newton_solver:[174,4,1,""],reset_stage_solutions:[174,4,1,""],step:[174,4,1,""],step_interval:[174,4,1,""],thisown:[174,3,1,""]},"dolfin.cpp.fem.PointSource":{apply:[176,4,1,""],thisown:[176,3,1,""]},"dolfin.cpp.fem.RKSolver":{step:[177,4,1,""],step_interval:[177,4,1,""],thisown:[177,3,1,""]},"dolfin.cpp.fem.SparsityPatternBuilder":{build:[178,5,1,""],build_multimesh_sparsity_pattern:[178,5,1,""],thisown:[178,3,1,""]},"dolfin.cpp.fem.SystemAssembler":{assemble:[181,4,1,""],thisown:[181,3,1,""]},"dolfin.cpp.function":{ALE:[192,2,1,""],ALE_move:[193,1,1,""],Constant:[194,2,1,""],Expression:[195,2,1,""],FacetArea:[196,2,1,""],Function:[197,2,1,""],FunctionAXPY:[198,2,1,""],FunctionAssigner:[199,2,1,""],FunctionSpace:[200,2,1,""],GenericFunction:[201,2,1,""],HierarchicalFunction:[202,2,1,""],HierarchicalFunctionSpace:[203,2,1,""],HierarchicalMesh:[204,2,1,""],Lagrange:[205,2,1,""],LagrangeInterpolator:[206,2,1,""],Legendre:[207,2,1,""],Legendre_d2dx:[208,1,1,""],Legendre_ddx:[209,1,1,""],Legendre_eval:[210,1,1,""],MeshCoordinates:[211,2,1,""],MeshDisplacement:[212,2,1,""],MultiMeshFunction:[213,2,1,""],MultiMeshFunctionSpace:[214,2,1,""],MultiMeshFunctionSpace_default_parameters:[215,1,1,""],MultiMeshSubSpace:[216,2,1,""],SpecialFacetFunction:[217,2,1,""],SubSpace:[218,2,1,""],assign:[219,1,1,""],between:[220,1,1,""],ipow:[222,1,1,""],lt_coordinate:[223,2,1,""],near:[224,1,1,""],rand:[225,1,1,""],seed:[226,1,1,""]},"dolfin.cpp.function.ALE":{move:[192,5,1,""],thisown:[192,3,1,""]},"dolfin.cpp.function.Constant":{assign:[194,4,1,""],thisown:[194,3,1,""]},"dolfin.cpp.function.Expression":{eval:[195,4,1,""],eval_cell:[195,4,1,""],thisown:[195,3,1,""]},"dolfin.cpp.function.FacetArea":{thisown:[196,3,1,""]},"dolfin.cpp.function.Function":{child:[197,4,1,""],compute_vertex_values:[197,4,1,""],copy:[197,4,1,""],eval:[197,4,1,""],extrapolate:[197,4,1,""],function_space:[197,4,1,""],geometric_dimension:[197,4,1,""],get_allow_extrapolation:[197,4,1,""],interpolate:[197,4,1,""],leaf_node:[197,4,1,""],non_matching_eval:[197,4,1,""],parent:[197,4,1,""],root_node:[197,4,1,""],set_allow_extrapolation:[197,4,1,""],sub:[197,4,1,""],thisown:[197,3,1,""],vector:[197,4,1,""]},"dolfin.cpp.function.FunctionAXPY":{ADD_ADD:[198,3,1,""],ADD_SUB:[198,3,1,""],SUB_ADD:[198,3,1,""],SUB_SUB:[198,3,1,""],pairs:[198,4,1,""],thisown:[198,3,1,""]},"dolfin.cpp.function.FunctionAssigner":{assign:[199,4,1,""],num_assigning_functions:[199,4,1,""],num_receiving_functions:[199,4,1,""],thisown:[199,3,1,""]},"dolfin.cpp.function.FunctionSpace":{assign:[200,4,1,""],child:[200,4,1,""],collapse:[200,4,1,""],component:[200,4,1,""],dim:[200,4,1,""],dofmap:[200,4,1,""],element:[200,4,1,""],extract_sub_space:[200,4,1,""],has_cell:[200,4,1,""],has_element:[200,4,1,""],interpolate:[200,4,1,""],leaf_node:[200,4,1,""],mesh:[200,4,1,""],parent:[200,4,1,""],print_dofmap:[200,4,1,""],root_node:[200,4,1,""],sub:[200,4,1,""],thisown:[200,3,1,""]},"dolfin.cpp.function.GenericFunction":{compute_vertex_values:[201,4,1,""],eval:[201,4,1,""],eval_cell:[201,4,1,""],restrict:[201,4,1,""],thisown:[201,3,1,""],update:[201,4,1,""],value_dimension:[201,4,1,""],value_rank:[201,4,1,""],value_size:[201,4,1,""]},"dolfin.cpp.function.HierarchicalFunction":{clear_child:[202,4,1,""],depth:[202,4,1,""],has_child:[202,4,1,""],has_parent:[202,4,1,""],set_child:[202,4,1,""],set_parent:[202,4,1,""],thisown:[202,3,1,""]},"dolfin.cpp.function.HierarchicalFunctionSpace":{clear_child:[203,4,1,""],depth:[203,4,1,""],has_child:[203,4,1,""],has_parent:[203,4,1,""],set_child:[203,4,1,""],set_parent:[203,4,1,""],thisown:[203,3,1,""]},"dolfin.cpp.function.HierarchicalMesh":{clear_child:[204,4,1,""],depth:[204,4,1,""],has_child:[204,4,1,""],has_parent:[204,4,1,""],set_child:[204,4,1,""],set_parent:[204,4,1,""],thisown:[204,3,1,""]},"dolfin.cpp.function.Lagrange":{ddx:[205,4,1,""],degree:[205,4,1,""],dqdx:[205,4,1,""],eval:[205,4,1,""],point:[205,4,1,""],set:[205,4,1,""],size:[205,4,1,""],thisown:[205,3,1,""]},"dolfin.cpp.function.LagrangeInterpolator":{interpolate:[206,4,1,""],thisown:[206,3,1,""]},"dolfin.cpp.function.Legendre":{d2dx:[207,5,1,""],ddx:[207,5,1,""],eval:[207,5,1,""],thisown:[207,3,1,""]},"dolfin.cpp.function.MeshCoordinates":{thisown:[211,3,1,""]},"dolfin.cpp.function.MeshDisplacement":{sub:[212,4,1,""],thisown:[212,3,1,""]},"dolfin.cpp.function.MultiMeshFunction":{part:[213,4,1,""],thisown:[213,3,1,""],vector:[213,4,1,""]},"dolfin.cpp.function.MultiMeshFunctionSpace":{add:[214,4,1,""],build:[214,4,1,""],default_parameters:[214,5,1,""],dim:[214,4,1,""],dofmap:[214,4,1,""],multimesh:[214,4,1,""],num_parts:[214,4,1,""],part:[214,4,1,""],thisown:[214,3,1,""],view:[214,4,1,""]},"dolfin.cpp.function.MultiMeshSubSpace":{thisown:[216,3,1,""]},"dolfin.cpp.function.SpecialFacetFunction":{thisown:[217,3,1,""]},"dolfin.cpp.function.SubSpace":{thisown:[218,3,1,""]},"dolfin.cpp.function.lt_coordinate":{TOL:[223,3,1,""],thisown:[223,3,1,""]},"dolfin.cpp.io":{File:[228,2,1,""],File_create_parent_path:[229,1,1,""],File_exists:[230,1,1,""],GenericFile:[231,2,1,""],HierarchicalFunction:[232,2,1,""],HierarchicalFunctionSpace:[233,2,1,""],HierarchicalMesh:[234,2,1,""],VTKPlotter:[235,2,1,""],VTKPlotter_all_interactive:[236,1,1,""],VTKPlotter_default_parameters:[237,1,1,""],VTKPlotter_to_key:[238,1,1,""],interactive:[240,1,1,""],plot:[241,1,1,""]},"dolfin.cpp.io.File":{binary:[228,3,1,""],create_parent_path:[228,5,1,""],exists:[228,5,1,""],raw:[228,3,1,""],svg:[228,3,1,""],thisown:[228,3,1,""],vtk:[228,3,1,""],x3d:[228,3,1,""],xdmf:[228,3,1,""],xml:[228,3,1,""],xyz:[228,3,1,""]},"dolfin.cpp.io.GenericFile":{name:[231,4,1,""],read:[231,4,1,""],thisown:[231,3,1,""],write:[231,4,1,""]},"dolfin.cpp.io.HierarchicalFunction":{clear_child:[232,4,1,""],depth:[232,4,1,""],has_child:[232,4,1,""],has_parent:[232,4,1,""],set_child:[232,4,1,""],set_parent:[232,4,1,""],thisown:[232,3,1,""]},"dolfin.cpp.io.HierarchicalFunctionSpace":{clear_child:[233,4,1,""],depth:[233,4,1,""],has_child:[233,4,1,""],has_parent:[233,4,1,""],set_child:[233,4,1,""],set_parent:[233,4,1,""],thisown:[233,3,1,""]},"dolfin.cpp.io.HierarchicalMesh":{clear_child:[234,4,1,""],depth:[234,4,1,""],has_child:[234,4,1,""],has_parent:[234,4,1,""],set_child:[234,4,1,""],set_parent:[234,4,1,""],thisown:[234,3,1,""]},"dolfin.cpp.io.VTKPlotter":{ALT:[235,3,1,""],CONTROL:[235,3,1,""],SHIFT:[235,3,1,""],add_polygon:[235,4,1,""],all_interactive:[235,5,1,""],azimuth:[235,4,1,""],default_parameters:[235,5,1,""],dolly:[235,4,1,""],elevate:[235,4,1,""],get_widget:[235,4,1,""],interactive:[235,4,1,""],is_compatible:[235,4,1,""],key:[235,4,1,""],key_pressed:[235,4,1,""],plot:[235,4,1,""],set_key:[235,4,1,""],set_min_max:[235,4,1,""],set_viewangle:[235,4,1,""],thisown:[235,3,1,""],to_key:[235,5,1,""],update:[235,4,1,""],write_pdf:[235,4,1,""],write_png:[235,4,1,""],zoom:[235,4,1,""]},"dolfin.cpp.la":{BlockMatrix:[242,2,1,""],BlockVector:[243,2,1,""],CoordinateMatrix:[244,2,1,""],DefaultFactory:[245,2,1,""],DefaultFactory_factory:[246,1,1,""],EigenFactory:[247,2,1,""],EigenFactory_instance:[248,1,1,""],EigenKrylovSolver:[249,2,1,""],EigenKrylovSolver_default_parameters:[250,1,1,""],EigenKrylovSolver_methods:[251,1,1,""],EigenKrylovSolver_preconditioners:[252,1,1,""],EigenLUSolver:[253,2,1,""],EigenLUSolver_default_parameters:[254,1,1,""],EigenLUSolver_methods:[255,1,1,""],EigenMatrix:[256,2,1,""],EigenVector:[257,2,1,""],GenericLUSolver:[258,2,1,""],GenericLinearAlgebraFactory:[259,2,1,""],GenericLinearOperator:[260,2,1,""],GenericLinearSolver:[261,2,1,""],GenericMatrix:[262,2,1,""],GenericPreconditioner:[263,2,1,""],GenericSparsityPattern:[264,2,1,""],GenericTensor:[265,2,1,""],GenericVector:[266,2,1,""],KrylovSolver:[267,2,1,""],KrylovSolver_default_parameters:[268,1,1,""],LUSolver:[269,2,1,""],LUSolver_default_parameters:[270,1,1,""],LinearAlgebraObject:[271,2,1,""],LinearOperator:[272,2,1,""],LinearSolver:[273,2,1,""],LinearSolver_default_parameters:[274,1,1,""],Matrix:[275,2,1,""],NewtonSolver:[276,2,1,""],NewtonSolver_default_parameters:[277,1,1,""],NonlinearProblem:[278,2,1,""],OptimisationProblem:[279,2,1,""],PETScBaseMatrix:[280,2,1,""],PETScFactory:[281,2,1,""],PETScFactory_instance:[282,1,1,""],PETScKrylovSolver:[283,2,1,""],PETScKrylovSolver_default_parameters:[284,1,1,""],PETScKrylovSolver_methods:[285,1,1,""],PETScKrylovSolver_preconditioners:[286,1,1,""],PETScLUSolver:[287,2,1,""],PETScLUSolver_default_parameters:[288,1,1,""],PETScLUSolver_methods:[289,1,1,""],PETScLinearOperator:[290,2,1,""],PETScMatrix:[291,2,1,""],PETScObject:[292,2,1,""],PETScObject_petsc_error:[293,1,1,""],PETScOptions:[294,2,1,""],PETScOptions_clear:[295,1,1,""],PETScOptions_set:[296,1,1,""],PETScPreconditioner:[297,2,1,""],PETScPreconditioner_default_parameters:[298,1,1,""],PETScPreconditioner_preconditioners:[299,1,1,""],PETScSNESSolver:[300,2,1,""],PETScSNESSolver_default_parameters:[301,1,1,""],PETScSNESSolver_methods:[302,1,1,""],PETScUserPreconditioner:[303,2,1,""],PETScVector:[304,2,1,""],SLEPcEigenSolver:[305,2,1,""],SLEPcEigenSolver_default_parameters:[306,1,1,""],STLFactory:[307,2,1,""],STLFactory_instance:[308,1,1,""],STLMatrix:[309,2,1,""],Scalar:[310,2,1,""],SparsityPattern:[311,2,1,""],TensorLayout:[312,2,1,""],Vector:[313,2,1,""],VectorSpaceBasis:[314,2,1,""],as_backend_type:[315,1,1,""],get_tensor_type:[316,1,1,""],has_krylov_solver_method:[317,1,1,""],has_krylov_solver_preconditioner:[318,1,1,""],has_lu_solver_method:[319,1,1,""],has_type:[320,1,1,""],in_nullspace:[321,1,1,""],krylov_solver_methods:[323,1,1,""],krylov_solver_preconditioners:[324,1,1,""],la_index_dtype:[325,1,1,""],la_solve:[326,1,1,""],linear_algebra_backends:[327,1,1,""],linear_solver_methods:[328,1,1,""],list_krylov_solver_methods:[329,1,1,""],list_krylov_solver_preconditioners:[330,1,1,""],list_linear_algebra_backends:[331,1,1,""],list_linear_solver_methods:[332,1,1,""],list_lu_solver_methods:[333,1,1,""],lu_solver_methods:[334,1,1,""],normalize:[335,1,1,""],residual:[336,1,1,""]},"dolfin.cpp.la.BlockMatrix":{apply:[242,4,1,""],get_block:[242,4,1,""],mult:[242,4,1,""],schur_approximation:[242,4,1,""],set_block:[242,4,1,""],size:[242,4,1,""],str:[242,4,1,""],thisown:[242,3,1,""],zero:[242,4,1,""]},"dolfin.cpp.la.BlockVector":{axpy:[243,4,1,""],copy:[243,4,1,""],empty:[243,4,1,""],get_block:[243,4,1,""],inner:[243,4,1,""],max:[243,4,1,""],min:[243,4,1,""],norm:[243,4,1,""],set_block:[243,4,1,""],size:[243,4,1,""],str:[243,4,1,""],thisown:[243,3,1,""]},"dolfin.cpp.la.CoordinateMatrix":{base_one:[244,4,1,""],columns:[244,4,1,""],mpi_comm:[244,4,1,""],norm:[244,4,1,""],rows:[244,4,1,""],size:[244,4,1,""],thisown:[244,3,1,""],values:[244,4,1,""]},"dolfin.cpp.la.DefaultFactory":{factory:[245,5,1,""],thisown:[245,3,1,""]},"dolfin.cpp.la.EigenFactory":{instance:[247,5,1,""],thisown:[247,3,1,""]},"dolfin.cpp.la.EigenKrylovSolver":{default_parameters:[249,5,1,""],get_operator:[249,4,1,""],methods:[249,5,1,""],preconditioners:[249,5,1,""],set_operator:[249,4,1,""],set_operators:[249,4,1,""],solve:[249,4,1,""],thisown:[249,3,1,""]},"dolfin.cpp.la.EigenLUSolver":{default_parameters:[253,5,1,""],get_operator:[253,4,1,""],methods:[253,5,1,""],set_operator:[253,4,1,""],solve:[253,4,1,""],solve_transpose:[253,4,1,""],thisown:[253,3,1,""]},"dolfin.cpp.la.EigenMatrix":{assign:[256,4,1,""],compress:[256,4,1,""],data:[256,4,1,""],mat:[256,4,1,""],resize:[256,4,1,""],sparray:[256,4,1,""],thisown:[256,3,1,""],zero:[256,4,1,""]},"dolfin.cpp.la.EigenVector":{add_local:[257,4,1,""],data:[257,4,1,""],gather:[257,4,1,""],get_local:[257,4,1,""],init:[257,4,1,""],resize:[257,4,1,""],set_local:[257,4,1,""],sum:[257,4,1,""],thisown:[257,3,1,""],vec:[257,4,1,""]},"dolfin.cpp.la.GenericLUSolver":{solve:[258,4,1,""],solve_transpose:[258,4,1,""],thisown:[258,3,1,""]},"dolfin.cpp.la.GenericLinearAlgebraFactory":{create_krylov_solver:[259,4,1,""],create_layout:[259,4,1,""],create_linear_operator:[259,4,1,""],create_lu_solver:[259,4,1,""],create_matrix:[259,4,1,""],create_vector:[259,4,1,""],krylov_solver_methods:[259,4,1,""],krylov_solver_preconditioners:[259,4,1,""],lu_solver_methods:[259,4,1,""],thisown:[259,3,1,""]},"dolfin.cpp.la.GenericLinearOperator":{mult:[260,4,1,""],size:[260,4,1,""],thisown:[260,3,1,""]},"dolfin.cpp.la.GenericLinearSolver":{parameter_type:[261,4,1,""],set_nullspace:[261,4,1,""],set_operator:[261,4,1,""],set_operators:[261,4,1,""],solve:[261,4,1,""],solve_transpose:[261,4,1,""],thisown:[261,3,1,""],update_parameters:[261,4,1,""]},"dolfin.cpp.la.GenericMatrix":{add:[262,4,1,""],add_local:[262,4,1,""],array:[262,4,1,""],assign:[262,4,1,""],axpy:[262,4,1,""],copy:[262,4,1,""],get:[262,4,1,""],get_diagonal:[262,4,1,""],getrow:[262,4,1,""],ident:[262,4,1,""],ident_local:[262,4,1,""],ident_zeros:[262,4,1,""],init_vector:[262,4,1,""],is_symmetric:[262,4,1,""],nnz:[262,4,1,""],norm:[262,4,1,""],set:[262,4,1,""],set_diagonal:[262,4,1,""],set_local:[262,4,1,""],setrow:[262,4,1,""],thisown:[262,3,1,""],transpmult:[262,4,1,""],zero:[262,4,1,""],zero_local:[262,4,1,""]},"dolfin.cpp.la.GenericPreconditioner":{set_coordinates:[263,4,1,""],set_nullspace:[263,4,1,""],thisown:[263,3,1,""]},"dolfin.cpp.la.GenericSparsityPattern":{apply:[264,4,1,""],diagonal_pattern:[264,4,1,""],init:[264,4,1,""],insert_global:[264,4,1,""],insert_local:[264,4,1,""],local_range:[264,4,1,""],mpi_comm:[264,4,1,""],num_local_nonzeros:[264,4,1,""],num_nonzeros:[264,4,1,""],num_nonzeros_diagonal:[264,4,1,""],num_nonzeros_off_diagonal:[264,4,1,""],off_diagonal_pattern:[264,4,1,""],primary_dim:[264,4,1,""],rank:[264,4,1,""],sorted:[264,3,1,""],thisown:[264,3,1,""],unsorted:[264,3,1,""]},"dolfin.cpp.la.GenericTensor":{add:[265,4,1,""],add_local:[265,4,1,""],apply:[265,4,1,""],empty:[265,4,1,""],factory:[265,4,1,""],init:[265,4,1,""],local_range:[265,4,1,""],mpi_comm:[265,4,1,""],rank:[265,4,1,""],set_local:[265,4,1,""],size:[265,4,1,""],thisown:[265,3,1,""],zero:[265,4,1,""]},"dolfin.cpp.la.GenericVector":{abs:[266,4,1,""],add:[266,4,1,""],add_local:[266,4,1,""],array:[266,4,1,""],axpy:[266,4,1,""],copy:[266,4,1,""],gather:[266,4,1,""],gather_on_zero:[266,4,1,""],get_local:[266,4,1,""],init:[266,4,1,""],inner:[266,4,1,""],local_range:[266,4,1,""],local_size:[266,4,1,""],max:[266,4,1,""],min:[266,4,1,""],norm:[266,4,1,""],owns_index:[266,4,1,""],set_local:[266,4,1,""],size:[266,4,1,""],sum:[266,4,1,""],thisown:[266,3,1,""]},"dolfin.cpp.la.KrylovSolver":{default_parameters:[267,5,1,""],solve:[267,4,1,""],thisown:[267,3,1,""]},"dolfin.cpp.la.LUSolver":{default_parameters:[269,5,1,""],solve:[269,4,1,""],solve_transpose:[269,4,1,""],thisown:[269,3,1,""]},"dolfin.cpp.la.LinearAlgebraObject":{shared_instance:[271,4,1,""],thisown:[271,3,1,""]},"dolfin.cpp.la.LinearOperator":{init_layout:[272,4,1,""],mult:[272,4,1,""],shared_instance:[272,4,1,""],size:[272,4,1,""],str:[272,4,1,""],thisown:[272,3,1,""]},"dolfin.cpp.la.LinearSolver":{default_parameters:[273,5,1,""],solve:[273,4,1,""],thisown:[273,3,1,""]},"dolfin.cpp.la.Matrix":{assign:[275,4,1,""],down_cast:[275,4,1,""],shared_instance:[275,4,1,""],thisown:[275,3,1,""],zero:[275,4,1,""]},"dolfin.cpp.la.NewtonSolver":{converged:[276,4,1,""],default_parameters:[276,5,1,""],iteration:[276,4,1,""],linear_solver:[276,4,1,""],relative_residual:[276,4,1,""],residual:[276,4,1,""],solve:[276,4,1,""],thisown:[276,3,1,""]},"dolfin.cpp.la.NonlinearProblem":{F:[278,4,1,""],J:[278,4,1,""],form:[278,4,1,""],thisown:[278,3,1,""]},"dolfin.cpp.la.OptimisationProblem":{F:[279,4,1,""],J:[279,4,1,""],f:[279,4,1,""],form:[279,4,1,""],thisown:[279,3,1,""]},"dolfin.cpp.la.PETScBaseMatrix":{init_vector:[280,4,1,""],local_range:[280,4,1,""],mat:[280,4,1,""],size:[280,4,1,""],thisown:[280,3,1,""]},"dolfin.cpp.la.PETScFactory":{instance:[281,5,1,""],thisown:[281,3,1,""]},"dolfin.cpp.la.PETScKrylovSolver":{default_parameters:[283,5,1,""],get_operator:[283,4,1,""],get_options_prefix:[283,4,1,""],ksp:[283,4,1,""],methods:[283,5,1,""],preconditioners:[283,5,1,""],set_options_prefix:[283,4,1,""],set_reuse_preconditioner:[283,4,1,""],solve:[283,4,1,""],thisown:[283,3,1,""]},"dolfin.cpp.la.PETScLUSolver":{default_parameters:[287,5,1,""],get_operator:[287,4,1,""],get_options_prefix:[287,4,1,""],ksp:[287,4,1,""],methods:[287,5,1,""],set_operator:[287,4,1,""],set_options_prefix:[287,4,1,""],solve:[287,4,1,""],solve_transpose:[287,4,1,""],thisown:[287,3,1,""]},"dolfin.cpp.la.PETScLinearOperator":{init_layout:[290,4,1,""],mult:[290,4,1,""],size:[290,4,1,""],thisown:[290,3,1,""]},"dolfin.cpp.la.PETScMatrix":{assign:[291,4,1,""],binary_dump:[291,4,1,""],get_options_prefix:[291,4,1,""],set_nullspace:[291,4,1,""],set_options_prefix:[291,4,1,""],thisown:[291,3,1,""],zero:[291,4,1,""]},"dolfin.cpp.la.PETScObject":{petsc_error:[292,5,1,""],thisown:[292,3,1,""]},"dolfin.cpp.la.PETScOptions":{clear:[294,5,1,""],set:[294,5,1,""],thisown:[294,3,1,""]},"dolfin.cpp.la.PETScPreconditioner":{default_parameters:[297,5,1,""],preconditioners:[297,5,1,""],set:[297,4,1,""],set_fieldsplit:[297,4,1,""],thisown:[297,3,1,""]},"dolfin.cpp.la.PETScSNESSolver":{default_parameters:[300,5,1,""],init:[300,4,1,""],methods:[300,5,1,""],parameters:[300,3,1,""],snes:[300,4,1,""],solve:[300,4,1,""],thisown:[300,3,1,""]},"dolfin.cpp.la.PETScUserPreconditioner":{setup:[303,5,1,""],solve:[303,4,1,""],thisown:[303,3,1,""]},"dolfin.cpp.la.PETScVector":{add_local:[304,4,1,""],gather:[304,4,1,""],get_local:[304,4,1,""],get_options_prefix:[304,4,1,""],init:[304,4,1,""],set_local:[304,4,1,""],set_options_prefix:[304,4,1,""],sum:[304,4,1,""],thisown:[304,3,1,""],update_ghost_values:[304,4,1,""],vec:[304,4,1,""]},"dolfin.cpp.la.SLEPcEigenSolver":{default_parameters:[305,5,1,""],eps:[305,4,1,""],get_eigenpair:[305,4,1,""],get_eigenvalue:[305,4,1,""],get_iteration_number:[305,4,1,""],get_number_converged:[305,4,1,""],set_deflation_space:[305,4,1,""],solve:[305,4,1,""],thisown:[305,3,1,""]},"dolfin.cpp.la.STLFactory":{instance:[307,5,1,""],thisown:[307,3,1,""]},"dolfin.cpp.la.STLMatrix":{block_size:[309,4,1,""],clear:[309,4,1,""],local_nnz:[309,4,1,""],sort:[309,4,1,""],thisown:[309,3,1,""],zero:[309,4,1,""]},"dolfin.cpp.la.Scalar":{add_local:[310,4,1,""],add_local_value:[310,4,1,""],copy:[310,4,1,""],get_scalar_value:[310,4,1,""],thisown:[310,3,1,""]},"dolfin.cpp.la.SparsityPattern":{thisown:[311,3,1,""]},"dolfin.cpp.la.TensorLayout":{block_size:[312,3,1,""],init:[312,4,1,""],local_range:[312,4,1,""],local_to_global_map:[312,3,1,""],mpi_comm:[312,4,1,""],primary_dim:[312,3,1,""],rank:[312,4,1,""],size:[312,4,1,""],sparsity_pattern:[312,4,1,""],thisown:[312,3,1,""]},"dolfin.cpp.la.Vector":{add_local:[313,4,1,""],down_cast:[313,4,1,""],gather:[313,4,1,""],get_local:[313,4,1,""],init:[313,4,1,""],set_local:[313,4,1,""],shared_instance:[313,4,1,""],sum:[313,4,1,""],thisown:[313,3,1,""]},"dolfin.cpp.la.VectorSpaceBasis":{dim:[314,4,1,""],is_orthogonal:[314,4,1,""],is_orthonormal:[314,4,1,""],orthogonalize:[314,4,1,""],thisown:[314,3,1,""]},"dolfin.cpp.mesh":{BoostGraphOrdering:[337,2,1,""],BoostGraphOrdering_compute_cuthill_mckee:[338,1,1,""],BoundaryMesh:[339,2,1,""],BoundingBoxTree3D:[341,2,1,""],BoundingBoxTree:[340,2,1,""],BoxMesh:[342,2,1,""],Cell:[343,2,1,""],CellFunction:[344,2,1,""],CellFunctionBool:[345,2,1,""],CellFunctionDouble:[346,2,1,""],CellFunctionInt:[347,2,1,""],CellFunctionSizet:[348,2,1,""],CellType:[349,2,1,""],CellType_create:[350,1,1,""],CellType_string2type:[351,1,1,""],CellType_type2string:[352,1,1,""],DomainBoundary:[353,2,1,""],DynamicMeshEditor:[354,2,1,""],Edge:[355,2,1,""],EdgeFunction:[356,2,1,""],EdgeFunctionBool:[357,2,1,""],EdgeFunctionDouble:[358,2,1,""],EdgeFunctionInt:[359,2,1,""],EdgeFunctionSizet:[360,2,1,""],Face:[361,2,1,""],FaceFunction:[362,2,1,""],FaceFunctionBool:[363,2,1,""],FaceFunctionDouble:[364,2,1,""],FaceFunctionInt:[365,2,1,""],FaceFunctionSizet:[366,2,1,""],Facet:[367,2,1,""],FacetCell:[368,2,1,""],FacetFunction:[369,2,1,""],FacetFunctionBool:[370,2,1,""],FacetFunctionDouble:[371,2,1,""],FacetFunctionInt:[372,2,1,""],FacetFunctionSizet:[373,2,1,""],GenericBoundingBoxTree:[374,2,1,""],Graph:[375,2,1,""],GraphBuilder:[376,2,1,""],GraphBuilder_compute_dual_graph:[377,1,1,""],GraphBuilder_local_graph:[378,1,1,""],HierarchicalFunction:[379,2,1,""],HierarchicalFunctionSpace:[380,2,1,""],HierarchicalMesh:[381,2,1,""],HierarchicalMeshFunctionBool:[382,2,1,""],HierarchicalMeshFunctionDouble:[383,2,1,""],HierarchicalMeshFunctionInt:[384,2,1,""],HierarchicalMeshFunctionSizet:[385,2,1,""],HierarchicalMeshFunctionUInt:[386,2,1,""],IntervalMesh:[387,2,1,""],LocalMeshData:[388,2,1,""],Mesh:[389,2,1,""],MeshColoring:[390,2,1,""],MeshColoring_cell_colors:[391,1,1,""],MeshColoring_color:[392,1,1,""],MeshColoring_color_cells:[393,1,1,""],MeshColoring_compute_colors:[394,1,1,""],MeshColoring_type_to_dim:[395,1,1,""],MeshConnectivity:[396,2,1,""],MeshData:[397,2,1,""],MeshDomains:[398,2,1,""],MeshEditor:[399,2,1,""],MeshEntity:[400,2,1,""],MeshFunction:[401,2,1,""],MeshFunctionBool:[402,2,1,""],MeshFunctionDouble:[403,2,1,""],MeshFunctionInt:[404,2,1,""],MeshFunctionSizet:[405,2,1,""],MeshGeometry:[406,2,1,""],MeshHierarchy:[407,2,1,""],MeshPartitioning:[408,2,1,""],MeshPartitioning_build_distributed_mesh:[409,1,1,""],MeshPointIntersection:[410,2,1,""],MeshQuality:[411,2,1,""],MeshQuality_radius_ratio_histogram_data:[412,1,1,""],MeshQuality_radius_ratio_matplotlib_histogram:[413,1,1,""],MeshQuality_radius_ratio_min_max:[414,1,1,""],MeshQuality_radius_ratios:[415,1,1,""],MeshRenumbering:[416,2,1,""],MeshRenumbering_renumber_by_color:[417,1,1,""],MeshTopology:[418,2,1,""],MeshTransformation:[419,2,1,""],MeshTransformation_rotate:[420,1,1,""],MeshTransformation_translate:[421,1,1,""],MeshValueCollection:[422,2,1,""],MeshValueCollectionBool:[423,2,1,""],MeshValueCollectionDouble:[424,2,1,""],MeshValueCollectionInt:[425,2,1,""],MeshValueCollectionSizet:[426,2,1,""],MultiMesh:[427,2,1,""],MultiMesh_default_parameters:[428,1,1,""],PeriodicBoundaryComputation:[429,2,1,""],PeriodicBoundaryComputation_compute_periodic_pairs:[430,1,1,""],PeriodicBoundaryComputation_masters_slaves:[431,1,1,""],Point:[432,2,1,""],RectangleMesh:[433,2,1,""],Restriction:[434,2,1,""],SCOTCH:[435,2,1,""],SCOTCH_compute_gps:[436,1,1,""],SCOTCH_compute_partition:[437,1,1,""],SubDomain:[438,2,1,""],SubMesh:[439,2,1,""],SubsetIterator:[440,2,1,""],UnitCubeMesh:[441,2,1,""],UnitHexMesh:[442,2,1,""],UnitIntervalMesh:[443,2,1,""],UnitQuadMesh:[444,2,1,""],UnitSquareMesh:[445,2,1,""],UnitTetrahedronMesh:[446,2,1,""],UnitTriangleMesh:[447,2,1,""],Vertex:[448,2,1,""],VertexFunction:[449,2,1,""],VertexFunctionBool:[450,2,1,""],VertexFunctionDouble:[451,2,1,""],VertexFunctionInt:[452,2,1,""],VertexFunctionSizet:[453,2,1,""],cells:[454,2,1,""],edges:[455,2,1,""],entities:[456,2,1,""],faces:[457,2,1,""],facets:[458,2,1,""],intersect:[460,1,1,""],refine:[461,1,1,""],vertices:[462,2,1,""]},"dolfin.cpp.mesh.BoostGraphOrdering":{compute_cuthill_mckee:[337,5,1,""],thisown:[337,3,1,""]},"dolfin.cpp.mesh.BoundaryMesh":{entity_map:[339,4,1,""],thisown:[339,3,1,""]},"dolfin.cpp.mesh.BoundingBoxTree":{build:[340,4,1,""],collides:[340,4,1,""],collides_entity:[340,4,1,""],compute_closest_entity:[340,4,1,""],compute_closest_point:[340,4,1,""],compute_collisions:[340,4,1,""],compute_entity_collisions:[340,4,1,""],compute_first_collision:[340,4,1,""],compute_first_entity_collision:[340,4,1,""],thisown:[340,3,1,""]},"dolfin.cpp.mesh.BoundingBoxTree3D":{thisown:[341,3,1,""]},"dolfin.cpp.mesh.BoxMesh":{thisown:[342,3,1,""]},"dolfin.cpp.mesh.Cell":{cell_normal:[343,4,1,""],collides:[343,4,1,""],contains:[343,4,1,""],diameter:[343,4,1,""],distance:[343,4,1,""],facet_area:[343,4,1,""],get_cell_data:[343,4,1,""],get_cell_topology:[343,4,1,""],get_vertex_coordinates:[343,4,1,""],inradius:[343,4,1,""],normal:[343,4,1,""],num_vertices:[343,4,1,""],order:[343,4,1,""],ordered:[343,4,1,""],orientation:[343,4,1,""],radius_ratio:[343,4,1,""],squared_distance:[343,4,1,""],thisown:[343,3,1,""],triangulate_intersection:[343,4,1,""],type:[343,4,1,""],volume:[343,4,1,""]},"dolfin.cpp.mesh.CellFunctionBool":{thisown:[345,3,1,""]},"dolfin.cpp.mesh.CellFunctionDouble":{thisown:[346,3,1,""]},"dolfin.cpp.mesh.CellFunctionInt":{thisown:[347,3,1,""]},"dolfin.cpp.mesh.CellFunctionSizet":{thisown:[348,3,1,""]},"dolfin.cpp.mesh.CellType":{cell_normal:[349,4,1,""],cell_type:[349,4,1,""],collides:[349,4,1,""],create:[349,5,1,""],create_entities:[349,4,1,""],description:[349,4,1,""],diameter:[349,4,1,""],dim:[349,4,1,""],entity_type:[349,4,1,""],facet_area:[349,4,1,""],facet_type:[349,4,1,""],hexahedron:[349,3,1,""],inradius:[349,4,1,""],interval:[349,3,1,""],normal:[349,4,1,""],num_entities:[349,4,1,""],num_vertices:[349,4,1,""],order:[349,4,1,""],ordered:[349,4,1,""],orientation:[349,4,1,""],point:[349,3,1,""],quadrilateral:[349,3,1,""],radius_ratio:[349,4,1,""],refine_cell:[349,4,1,""],squared_distance:[349,4,1,""],string2type:[349,5,1,""],tetrahedron:[349,3,1,""],thisown:[349,3,1,""],triangle:[349,3,1,""],triangulate_intersection:[349,4,1,""],type2string:[349,5,1,""],volume:[349,4,1,""],vtk_mapping:[349,4,1,""]},"dolfin.cpp.mesh.DomainBoundary":{thisown:[353,3,1,""]},"dolfin.cpp.mesh.DynamicMeshEditor":{add_cell:[354,4,1,""],add_vertex:[354,4,1,""],close:[354,4,1,""],open:[354,4,1,""],thisown:[354,3,1,""]},"dolfin.cpp.mesh.Edge":{dot:[355,4,1,""],length:[355,4,1,""],thisown:[355,3,1,""]},"dolfin.cpp.mesh.EdgeFunctionBool":{thisown:[357,3,1,""]},"dolfin.cpp.mesh.EdgeFunctionDouble":{thisown:[358,3,1,""]},"dolfin.cpp.mesh.EdgeFunctionInt":{thisown:[359,3,1,""]},"dolfin.cpp.mesh.EdgeFunctionSizet":{thisown:[360,3,1,""]},"dolfin.cpp.mesh.Face":{area:[361,4,1,""],normal:[361,4,1,""],thisown:[361,3,1,""]},"dolfin.cpp.mesh.FaceFunctionBool":{thisown:[363,3,1,""]},"dolfin.cpp.mesh.FaceFunctionDouble":{thisown:[364,3,1,""]},"dolfin.cpp.mesh.FaceFunctionInt":{thisown:[365,3,1,""]},"dolfin.cpp.mesh.FaceFunctionSizet":{thisown:[366,3,1,""]},"dolfin.cpp.mesh.Facet":{distance:[367,4,1,""],exterior:[367,4,1,""],normal:[367,4,1,""],squared_distance:[367,4,1,""],thisown:[367,3,1,""]},"dolfin.cpp.mesh.FacetCell":{facet_index:[368,4,1,""],thisown:[368,3,1,""]},"dolfin.cpp.mesh.FacetFunctionBool":{thisown:[370,3,1,""]},"dolfin.cpp.mesh.FacetFunctionDouble":{thisown:[371,3,1,""]},"dolfin.cpp.mesh.FacetFunctionInt":{thisown:[372,3,1,""]},"dolfin.cpp.mesh.FacetFunctionSizet":{thisown:[373,3,1,""]},"dolfin.cpp.mesh.GenericBoundingBoxTree":{build:[374,4,1,""],compute_closest_entity:[374,4,1,""],compute_closest_point:[374,4,1,""],compute_collisions:[374,4,1,""],compute_entity_collisions:[374,4,1,""],compute_first_collision:[374,4,1,""],compute_first_entity_collision:[374,4,1,""],thisown:[374,3,1,""]},"dolfin.cpp.mesh.Graph":{thisown:[375,3,1,""]},"dolfin.cpp.mesh.GraphBuilder":{compute_dual_graph:[376,5,1,""],local_graph:[376,5,1,""],thisown:[376,3,1,""]},"dolfin.cpp.mesh.HierarchicalFunction":{clear_child:[379,4,1,""],depth:[379,4,1,""],has_child:[379,4,1,""],has_parent:[379,4,1,""],set_child:[379,4,1,""],set_parent:[379,4,1,""],thisown:[379,3,1,""]},"dolfin.cpp.mesh.HierarchicalFunctionSpace":{clear_child:[380,4,1,""],depth:[380,4,1,""],has_child:[380,4,1,""],has_parent:[380,4,1,""],set_child:[380,4,1,""],set_parent:[380,4,1,""],thisown:[380,3,1,""]},"dolfin.cpp.mesh.HierarchicalMesh":{child:[381,4,1,""],clear_child:[381,4,1,""],depth:[381,4,1,""],has_child:[381,4,1,""],has_parent:[381,4,1,""],leaf_node:[381,4,1,""],parent:[381,4,1,""],root_node:[381,4,1,""],set_child:[381,4,1,""],set_parent:[381,4,1,""],thisown:[381,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionBool":{child:[382,4,1,""],clear_child:[382,4,1,""],depth:[382,4,1,""],has_child:[382,4,1,""],has_parent:[382,4,1,""],leaf_node:[382,4,1,""],parent:[382,4,1,""],root_node:[382,4,1,""],set_child:[382,4,1,""],set_parent:[382,4,1,""],thisown:[382,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionDouble":{child:[383,4,1,""],clear_child:[383,4,1,""],depth:[383,4,1,""],has_child:[383,4,1,""],has_parent:[383,4,1,""],leaf_node:[383,4,1,""],parent:[383,4,1,""],root_node:[383,4,1,""],set_child:[383,4,1,""],set_parent:[383,4,1,""],thisown:[383,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionInt":{child:[384,4,1,""],clear_child:[384,4,1,""],depth:[384,4,1,""],has_child:[384,4,1,""],has_parent:[384,4,1,""],leaf_node:[384,4,1,""],parent:[384,4,1,""],root_node:[384,4,1,""],set_child:[384,4,1,""],set_parent:[384,4,1,""],thisown:[384,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionSizet":{child:[385,4,1,""],clear_child:[385,4,1,""],depth:[385,4,1,""],has_child:[385,4,1,""],has_parent:[385,4,1,""],leaf_node:[385,4,1,""],parent:[385,4,1,""],root_node:[385,4,1,""],set_child:[385,4,1,""],set_parent:[385,4,1,""],thisown:[385,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionUInt":{clear_child:[386,4,1,""],depth:[386,4,1,""],has_child:[386,4,1,""],has_parent:[386,4,1,""],set_child:[386,4,1,""],set_parent:[386,4,1,""],thisown:[386,3,1,""]},"dolfin.cpp.mesh.IntervalMesh":{thisown:[387,3,1,""]},"dolfin.cpp.mesh.LocalMeshData":{broadcast_mesh_data:[388,4,1,""],cell_partition:[388,3,1,""],cell_type:[388,3,1,""],cell_vertices:[388,3,1,""],cell_weight:[388,3,1,""],clear:[388,4,1,""],domain_data:[388,3,1,""],extract_mesh_data:[388,4,1,""],gdim:[388,3,1,""],global_cell_indices:[388,3,1,""],mpi_comm:[388,4,1,""],num_global_cells:[388,3,1,""],num_global_vertices:[388,3,1,""],num_vertices_per_cell:[388,3,1,""],receive_mesh_data:[388,4,1,""],tdim:[388,3,1,""],thisown:[388,3,1,""],unpack_cell_vertices:[388,4,1,""],unpack_vertex_coordinates:[388,4,1,""],vertex_coordinates:[388,3,1,""],vertex_indices:[388,3,1,""]},"dolfin.cpp.mesh.Mesh":{bounding_box_tree:[389,4,1,""],cell_orientations:[389,4,1,""],cells:[389,4,1,""],clean:[389,4,1,""],clear:[389,4,1,""],color:[389,4,1,""],coordinates:[389,4,1,""],data:[389,4,1,""],domains:[389,4,1,""],geometry:[389,4,1,""],hash:[389,4,1,""],hmax:[389,4,1,""],hmin:[389,4,1,""],init:[389,4,1,""],init_cell_orientations:[389,4,1,""],move:[389,4,1,""],mpi_comm:[389,4,1,""],num_cells:[389,4,1,""],num_edges:[389,4,1,""],num_entities:[389,4,1,""],num_faces:[389,4,1,""],num_facets:[389,4,1,""],num_vertices:[389,4,1,""],order:[389,4,1,""],ordered:[389,4,1,""],renumber_by_color:[389,4,1,""],rmax:[389,4,1,""],rmin:[389,4,1,""],rotate:[389,4,1,""],size:[389,4,1,""],size_global:[389,4,1,""],smooth:[389,4,1,""],smooth_boundary:[389,4,1,""],snap_boundary:[389,4,1,""],thisown:[389,3,1,""],topology:[389,4,1,""],translate:[389,4,1,""],type:[389,4,1,""],ufl_cell:[389,4,1,""],ufl_domain:[389,4,1,""],ufl_id:[389,4,1,""]},"dolfin.cpp.mesh.MeshColoring":{cell_colors:[390,5,1,""],color:[390,5,1,""],color_cells:[390,5,1,""],compute_colors:[390,5,1,""],thisown:[390,3,1,""],type_to_dim:[390,5,1,""]},"dolfin.cpp.mesh.MeshConnectivity":{clear:[396,4,1,""],empty:[396,4,1,""],hash:[396,4,1,""],init:[396,4,1,""],set_global_size:[396,4,1,""],size:[396,4,1,""],size_global:[396,4,1,""],str:[396,4,1,""],thisown:[396,3,1,""]},"dolfin.cpp.mesh.MeshData":{array:[397,4,1,""],clear:[397,4,1,""],create_array:[397,4,1,""],erase_array:[397,4,1,""],exists:[397,4,1,""],thisown:[397,3,1,""]},"dolfin.cpp.mesh.MeshDomains":{clear:[398,4,1,""],get_marker:[398,4,1,""],init:[398,4,1,""],is_empty:[398,4,1,""],markers:[398,4,1,""],max_dim:[398,4,1,""],num_marked:[398,4,1,""],set_marker:[398,4,1,""],thisown:[398,3,1,""]},"dolfin.cpp.mesh.MeshEditor":{add_cell:[399,4,1,""],add_vertex:[399,4,1,""],add_vertex_global:[399,4,1,""],close:[399,4,1,""],init_cells:[399,4,1,""],init_cells_global:[399,4,1,""],init_vertices:[399,4,1,""],init_vertices_global:[399,4,1,""],open:[399,4,1,""],thisown:[399,3,1,""]},"dolfin.cpp.mesh.MeshEntity":{dim:[400,4,1,""],entities:[400,4,1,""],global_index:[400,4,1,""],incident:[400,4,1,""],index:[400,4,1,""],init:[400,4,1,""],is_ghost:[400,4,1,""],is_shared:[400,4,1,""],mesh:[400,4,1,""],mesh_id:[400,4,1,""],midpoint:[400,4,1,""],num_entities:[400,4,1,""],num_global_entities:[400,4,1,""],owner:[400,4,1,""],sharing_processes:[400,4,1,""],str:[400,4,1,""],thisown:[400,3,1,""]},"dolfin.cpp.mesh.MeshFunctionBool":{array:[402,4,1,""],dim:[402,4,1,""],empty:[402,4,1,""],init:[402,4,1,""],mesh:[402,4,1,""],set_all:[402,4,1,""],set_value:[402,4,1,""],set_values:[402,4,1,""],size:[402,4,1,""],thisown:[402,3,1,""],ufl_id:[402,4,1,""]},"dolfin.cpp.mesh.MeshFunctionDouble":{array:[403,4,1,""],dim:[403,4,1,""],empty:[403,4,1,""],init:[403,4,1,""],mesh:[403,4,1,""],set_all:[403,4,1,""],set_value:[403,4,1,""],set_values:[403,4,1,""],size:[403,4,1,""],thisown:[403,3,1,""],ufl_id:[403,4,1,""]},"dolfin.cpp.mesh.MeshFunctionInt":{array:[404,4,1,""],dim:[404,4,1,""],empty:[404,4,1,""],init:[404,4,1,""],mesh:[404,4,1,""],set_all:[404,4,1,""],set_value:[404,4,1,""],set_values:[404,4,1,""],size:[404,4,1,""],thisown:[404,3,1,""],ufl_id:[404,4,1,""]},"dolfin.cpp.mesh.MeshFunctionSizet":{array:[405,4,1,""],dim:[405,4,1,""],empty:[405,4,1,""],init:[405,4,1,""],mesh:[405,4,1,""],set_all:[405,4,1,""],set_value:[405,4,1,""],set_values:[405,4,1,""],size:[405,4,1,""],thisown:[405,3,1,""],ufl_id:[405,4,1,""]},"dolfin.cpp.mesh.MeshGeometry":{clear:[406,4,1,""],dim:[406,4,1,""],hash:[406,4,1,""],init:[406,4,1,""],point:[406,4,1,""],set:[406,4,1,""],size:[406,4,1,""],str:[406,4,1,""],thisown:[406,3,1,""],x:[406,4,1,""]},"dolfin.cpp.mesh.MeshHierarchy":{coarsen:[407,4,1,""],coarsest:[407,4,1,""],finest:[407,4,1,""],rebalance:[407,4,1,""],refine:[407,4,1,""],size:[407,4,1,""],thisown:[407,3,1,""],unrefine:[407,4,1,""],weight:[407,4,1,""]},"dolfin.cpp.mesh.MeshPartitioning":{build_distributed_mesh:[408,5,1,""],thisown:[408,3,1,""]},"dolfin.cpp.mesh.MeshPointIntersection":{intersected_cells:[410,4,1,""],thisown:[410,3,1,""]},"dolfin.cpp.mesh.MeshQuality":{radius_ratio_histogram_data:[411,5,1,""],radius_ratio_matplotlib_histogram:[411,5,1,""],radius_ratio_min_max:[411,5,1,""],radius_ratios:[411,5,1,""],thisown:[411,3,1,""]},"dolfin.cpp.mesh.MeshRenumbering":{renumber_by_color:[416,5,1,""],thisown:[416,3,1,""]},"dolfin.cpp.mesh.MeshTopology":{cell_owner:[418,4,1,""],clear:[418,4,1,""],coloring:[418,3,1,""],dim:[418,4,1,""],ghost_offset:[418,4,1,""],global_indices:[418,4,1,""],hash:[418,4,1,""],have_global_indices:[418,4,1,""],have_shared_entities:[418,4,1,""],init:[418,4,1,""],init_ghost:[418,4,1,""],init_global_indices:[418,4,1,""],set_global_index:[418,4,1,""],shared_entities:[418,4,1,""],size:[418,4,1,""],size_global:[418,4,1,""],str:[418,4,1,""],thisown:[418,3,1,""]},"dolfin.cpp.mesh.MeshTransformation":{rotate:[419,5,1,""],thisown:[419,3,1,""],translate:[419,5,1,""]},"dolfin.cpp.mesh.MeshValueCollectionBool":{assign:[423,4,1,""],clear:[423,4,1,""],dim:[423,4,1,""],empty:[423,4,1,""],get_value:[423,4,1,""],init:[423,4,1,""],mesh:[423,4,1,""],set_value:[423,4,1,""],size:[423,4,1,""],thisown:[423,3,1,""],values:[423,4,1,""]},"dolfin.cpp.mesh.MeshValueCollectionDouble":{assign:[424,4,1,""],clear:[424,4,1,""],dim:[424,4,1,""],empty:[424,4,1,""],get_value:[424,4,1,""],init:[424,4,1,""],mesh:[424,4,1,""],set_value:[424,4,1,""],size:[424,4,1,""],thisown:[424,3,1,""],values:[424,4,1,""]},"dolfin.cpp.mesh.MeshValueCollectionInt":{assign:[425,4,1,""],clear:[425,4,1,""],dim:[425,4,1,""],empty:[425,4,1,""],get_value:[425,4,1,""],init:[425,4,1,""],mesh:[425,4,1,""],set_value:[425,4,1,""],size:[425,4,1,""],thisown:[425,3,1,""],values:[425,4,1,""]},"dolfin.cpp.mesh.MeshValueCollectionSizet":{assign:[426,4,1,""],clear:[426,4,1,""],dim:[426,4,1,""],empty:[426,4,1,""],get_value:[426,4,1,""],init:[426,4,1,""],mesh:[426,4,1,""],set_value:[426,4,1,""],size:[426,4,1,""],thisown:[426,3,1,""],values:[426,4,1,""]},"dolfin.cpp.mesh.MultiMesh":{add:[427,4,1,""],bounding_box_tree:[427,4,1,""],bounding_box_tree_boundary:[427,4,1,""],build:[427,4,1,""],clear:[427,4,1,""],collision_map_cut_cells:[427,4,1,""],covered_cells:[427,4,1,""],cut_cells:[427,4,1,""],default_parameters:[427,5,1,""],facet_normals:[427,4,1,""],num_parts:[427,4,1,""],part:[427,4,1,""],quadrature_rule_cut_cell:[427,4,1,""],quadrature_rule_cut_cells:[427,4,1,""],quadrature_rule_interface:[427,4,1,""],quadrature_rule_overlap:[427,4,1,""],thisown:[427,3,1,""],uncut_cells:[427,4,1,""]},"dolfin.cpp.mesh.PeriodicBoundaryComputation":{compute_periodic_pairs:[429,5,1,""],masters_slaves:[429,5,1,""],thisown:[429,3,1,""]},"dolfin.cpp.mesh.Point":{coordinates:[432,4,1,""],cross:[432,4,1,""],distance:[432,4,1,""],dot:[432,4,1,""],norm:[432,4,1,""],rotate:[432,4,1,""],squared_distance:[432,4,1,""],squared_norm:[432,4,1,""],str:[432,4,1,""],thisown:[432,3,1,""],x:[432,4,1,""],y:[432,4,1,""],z:[432,4,1,""]},"dolfin.cpp.mesh.RectangleMesh":{thisown:[433,3,1,""]},"dolfin.cpp.mesh.Restriction":{contains:[434,4,1,""],dim:[434,4,1,""],mesh:[434,4,1,""],thisown:[434,3,1,""]},"dolfin.cpp.mesh.SCOTCH":{compute_gps:[435,5,1,""],compute_partition:[435,5,1,""],compute_reordering:[435,5,1,""],thisown:[435,3,1,""]},"dolfin.cpp.mesh.SubDomain":{geometric_dimension:[438,4,1,""],inside:[438,4,1,""],map:[438,4,1,""],map_tolerance:[438,3,1,""],mark:[438,4,1,""],mark_cells:[438,4,1,""],mark_facets:[438,4,1,""],snap:[438,4,1,""],thisown:[438,3,1,""]},"dolfin.cpp.mesh.SubMesh":{thisown:[439,3,1,""],ufl_cell:[439,4,1,""],ufl_domain:[439,4,1,""],ufl_id:[439,4,1,""]},"dolfin.cpp.mesh.SubsetIterator":{end:[440,4,1,""],end_iterator:[440,4,1,""],next:[440,4,1,""],thisown:[440,3,1,""]},"dolfin.cpp.mesh.UnitCubeMesh":{thisown:[441,3,1,""]},"dolfin.cpp.mesh.UnitHexMesh":{thisown:[442,3,1,""]},"dolfin.cpp.mesh.UnitIntervalMesh":{thisown:[443,3,1,""]},"dolfin.cpp.mesh.UnitQuadMesh":{thisown:[444,3,1,""]},"dolfin.cpp.mesh.UnitSquareMesh":{thisown:[445,3,1,""]},"dolfin.cpp.mesh.UnitTetrahedronMesh":{thisown:[446,3,1,""]},"dolfin.cpp.mesh.UnitTriangleMesh":{thisown:[447,3,1,""]},"dolfin.cpp.mesh.Vertex":{point:[448,4,1,""],thisown:[448,3,1,""],x:[448,4,1,""]},"dolfin.cpp.mesh.VertexFunctionBool":{thisown:[450,3,1,""]},"dolfin.cpp.mesh.VertexFunctionDouble":{thisown:[451,3,1,""]},"dolfin.cpp.mesh.VertexFunctionInt":{thisown:[452,3,1,""]},"dolfin.cpp.mesh.VertexFunctionSizet":{thisown:[453,3,1,""]},"dolfin.cpp.mesh.cells":{end:[454,4,1,""],end_iterator:[454,4,1,""],next:[454,4,1,""],pos:[454,4,1,""],thisown:[454,3,1,""]},"dolfin.cpp.mesh.edges":{end:[455,4,1,""],end_iterator:[455,4,1,""],next:[455,4,1,""],pos:[455,4,1,""],thisown:[455,3,1,""]},"dolfin.cpp.mesh.entities":{end:[456,4,1,""],end_iterator:[456,4,1,""],next:[456,4,1,""],pos:[456,4,1,""],thisown:[456,3,1,""]},"dolfin.cpp.mesh.faces":{end:[457,4,1,""],end_iterator:[457,4,1,""],next:[457,4,1,""],pos:[457,4,1,""],thisown:[457,3,1,""]},"dolfin.cpp.mesh.facets":{end:[458,4,1,""],end_iterator:[458,4,1,""],next:[458,4,1,""],pos:[458,4,1,""],thisown:[458,3,1,""]},"dolfin.cpp.mesh.vertices":{end:[462,4,1,""],end_iterator:[462,4,1,""],next:[462,4,1,""],pos:[462,4,1,""],thisown:[462,3,1,""]},"dolfin.deprecation":{down_cast:[463,1,1,""]},"dolfin.fem":{adaptivesolving:[469,0,0,"-"],assembling:[473,0,0,"-"],bcs:[477,0,0,"-"],errorcontrolgenerator:[478,0,0,"-"],form:[480,0,0,"-"],formmanipulations:[484,0,0,"-"],interpolation:[487,0,0,"-"],norms:[490,0,0,"-"],projection:[492,0,0,"-"],solving:[499,0,0,"-"]},"dolfin.fem.adaptivesolving":{AdaptiveLinearVariationalSolver:[465,2,1,""],AdaptiveNonlinearVariationalSolver:[466,2,1,""],generate_error_control:[467,1,1,""],generate_error_control_forms:[468,1,1,""]},"dolfin.fem.adaptivesolving.AdaptiveLinearVariationalSolver":{solve:[465,4,1,""]},"dolfin.fem.adaptivesolving.AdaptiveNonlinearVariationalSolver":{solve:[466,4,1,""]},"dolfin.fem.assembling":{SystemAssembler:[470,2,1,""],assemble:[471,1,1,""],assemble_system:[472,1,1,""]},"dolfin.fem.bcs":{AutoSubDomain:[474,2,1,""],DirichletBC:[475,2,1,""],homogenize:[476,1,1,""]},"dolfin.fem.bcs.AutoSubDomain":{inside:[474,4,1,""]},"dolfin.fem.form":{Form:[479,2,1,""]},"dolfin.fem.formmanipulations":{adjoint:[481,1,1,""],derivative:[482,1,1,""],increase_order:[483,1,1,""],tear:[485,1,1,""]},"dolfin.fem.interpolation":{interpolate:[488,1,1,""]},"dolfin.fem.norms":{errornorm:[489,1,1,""],norm:[491,1,1,""]},"dolfin.fem.projection":{project:[493,1,1,""]},"dolfin.fem.solving":{LinearVariationalProblem:[494,2,1,""],LinearVariationalSolver:[495,2,1,""],LocalSolver:[496,2,1,""],NonlinearVariationalProblem:[497,2,1,""],NonlinearVariationalSolver:[498,2,1,""],solve:[500,1,1,""]},"dolfin.fem.solving.LinearVariationalSolver":{default_parameters:[495,5,1,""],solve:[495,4,1,""],thisown:[495,3,1,""]},"dolfin.fem.solving.NonlinearVariationalSolver":{default_parameters:[498,5,1,""],solve:[498,4,1,""],thisown:[498,3,1,""]},"dolfin.functions":{"function":[511,0,0,"-"],constant:[502,0,0,"-"],expression:[504,0,0,"-"],functionspace:[519,0,0,"-"],specialfunctions:[531,0,0,"-"],ufc_functionspace:[534,0,0,"-"]},"dolfin.functions.constant":{Constant:[501,2,1,""]},"dolfin.functions.expression":{Expression:[503,2,1,""]},"dolfin.functions.expression.Expression":{str:[503,4,1,""],ufl_element:[503,4,1,""],ufl_evaluate:[503,4,1,""],value_shape:[503,4,1,""]},"dolfin.functions.function":{Argument:[505,2,1,""],Function:[506,2,1,""],TestFunction:[507,1,1,""],TestFunctions:[508,1,1,""],TrialFunction:[509,1,1,""],TrialFunctions:[510,1,1,""]},"dolfin.functions.function.Argument":{function_space:[505,4,1,""]},"dolfin.functions.function.Function":{assign:[506,4,1,""],split:[506,4,1,""],str:[506,4,1,""],sub:[506,4,1,""],ufl_element:[506,4,1,""],ufl_evaluate:[506,4,1,""]},"dolfin.functions.functionspace":{FunctionSpace:[512,2,1,""],FunctionSpaceBase:[513,2,1,""],FunctionSpaceFromCpp:[514,2,1,""],MixedFunctionSpace:[515,2,1,""],TensorFunctionSpace:[516,2,1,""],VectorFunctionSpace:[517,2,1,""],create_ufc_function_spaces:[518,1,1,""]},"dolfin.functions.functionspace.FunctionSpace":{restriction:[512,4,1,""]},"dolfin.functions.functionspace.FunctionSpaceBase":{cell:[513,4,1,""],collapse:[513,4,1,""],dolfin_element:[513,4,1,""],extract_sub_space:[513,4,1,""],num_sub_spaces:[513,4,1,""],split:[513,4,1,""],sub:[513,4,1,""],ufl_element:[513,4,1,""]},"dolfin.functions.specialfunctions":{CellNormal:[521,1,1,""],CellSize:[522,1,1,""],CellVolume:[523,1,1,""],Circumradius:[524,1,1,""],FacetArea:[525,2,1,""],FacetNormal:[526,1,1,""],MaxFacetEdgeLength:[527,1,1,""],MeshCoordinates:[528,2,1,""],MinFacetEdgeLength:[529,1,1,""],SpatialCoordinate:[530,1,1,""]},"dolfin.functions.ufc_functionspace":{UFCFunctionSpace:[532,2,1,""],create_ufc_function_spaces:[533,1,1,""]},"dolfin.mesh":{ale:[539,0,0,"-"],boundarysubdomainfinder:[546,0,0,"-"],meshes:[551,0,0,"-"],refinement:[552,0,0,"-"],svgtools:[554,0,0,"-"]},"dolfin.mesh.ale":{compute_edge_map:[537,1,1,""],compute_vertex_map:[538,1,1,""],init_parent_edge_indices:[540,1,1,""]},"dolfin.mesh.boundarysubdomainfinder":{create_maps:[541,1,1,""],find_all_subdomains:[542,1,1,""],find_keys_on_one_subdomain:[543,1,1,""],find_new_cell_key:[544,1,1,""],find_subdomain:[545,1,1,""],main:[547,1,1,""],usage:[548,1,1,""],write_file:[549,1,1,""]},"dolfin.mesh.refinement":{refine:[553,1,1,""]},"dolfin.mesh.svgtools":{mesh2svg:[555,1,1,""]},"dolfin.multistage":{factorize:[557,0,0,"-"],multistagescheme:[575,0,0,"-"],multistagesolvers:[578,0,0,"-"],rushlarsenschemes:[585,0,0,"-"]},"dolfin.multistage.factorize":{extract_tested_expressions:[556,1,1,""]},"dolfin.multistage.multistagescheme":{BDF1:[559,2,1,""],BackwardEuler:[560,3,1,""],ButcherMultiStageScheme:[561,2,1,""],CN2:[562,2,1,""],CrankNicolson:[563,3,1,""],ERK1:[565,2,1,""],ERK4:[566,2,1,""],ERK:[564,3,1,""],ESDIRK3:[567,2,1,""],ESDIRK4:[568,2,1,""],ExplicitEuler:[569,3,1,""],ExplicitMidPoint:[570,2,1,""],ForwardEuler:[571,3,1,""],ImplicitEuler:[572,3,1,""],MultiStageScheme:[573,2,1,""],RK4:[574,3,1,""]},"dolfin.multistage.multistagescheme.ButcherMultiStageScheme":{to_adm:[561,4,1,""],to_tlm:[561,4,1,""]},"dolfin.multistage.multistagescheme.MultiStageScheme":{dolfin_stage_forms:[573,4,1,""],dt:[573,4,1,""],last_stage:[573,4,1,""],rhs_form:[573,4,1,""],solution:[573,4,1,""],stage_solutions:[573,4,1,""],t:[573,4,1,""],to_adm:[573,4,1,""],to_tlm:[573,4,1,""],ufl_stage_forms:[573,4,1,""]},"dolfin.multistage.multistagesolvers":{PointIntegralSolver:[576,2,1,""],RKSolver:[577,2,1,""]},"dolfin.multistage.multistagesolvers.PointIntegralSolver":{scheme:[576,4,1,""]},"dolfin.multistage.multistagesolvers.RKSolver":{scheme:[577,4,1,""]},"dolfin.multistage.rushlarsenschemes":{GRL1:[579,2,1,""],GRL2:[580,2,1,""],MultiStageScheme:[581,2,1,""],RL1:[582,2,1,""],RL2:[583,2,1,""],RushLarsenScheme:[584,2,1,""]},"dolfin.multistage.rushlarsenschemes.MultiStageScheme":{dolfin_stage_forms:[581,4,1,""],dt:[581,4,1,""],last_stage:[581,4,1,""],rhs_form:[581,4,1,""],solution:[581,4,1,""],stage_solutions:[581,4,1,""],t:[581,4,1,""],to_adm:[581,4,1,""],to_tlm:[581,4,1,""],ufl_stage_forms:[581,4,1,""]},"dolfin.multistage.rushlarsenschemes.RushLarsenScheme":{to_adm:[584,4,1,""],to_tlm:[584,4,1,""]},dolfin:{common:[26,0,0,"-"],compilemodules:[39,0,0,"-"],cpp:[227,0,0,"-"],deprecation:[464,0,0,"-"],fem:[486,0,0,"-"],functions:[520,0,0,"-"],importhandler:[535,0,0,"-"],mesh:[550,0,0,"-"],multistage:[558,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","function","Python function"],"2":["py","class","Python class"],"3":["py","attribute","Python attribute"],"4":["py","method","Python method"],"5":["py","staticmethod","Python static method"]},objtypes:{"0":"py:module","1":"py:function","2":"py:class","3":"py:attribute","4":"py:method","5":"py:staticmethod"},terms:{"15g":[16,18],"1st":512,"2nd":[512,562,570],"3rd":567,"4rd":568,"4th":566,"abstract":[4,15,16,17,18,145,276,300],"boolean":[11,12,13,20,21,73,135,235,294,296,401,402,403,404,405,461,475,553],"break":503,"case":[0,1,6,7,8,9,11,12,13,14,15,19,21,32,37,54,76,77,115,135,138,164,195,235,262,280,300,368,389,471,475,481,482,489,503,504],"class":[0,1,2,3,4,7,8,9,10,11,12,13,14,16,17,18,19,20,21,23,33,34,37,42,45,46,47,48,49,51,52,53,54,55,56,72,73,74,75,76,84,85,86,87,88,111,130,131,132,133,134,135,137,138,139,141,143,144,145,147,148,149,150,151,152,153,154,155,156,157,159,164,165,166,167,168,169,170,171,173,174,176,177,178,181,189,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,211,212,213,214,216,217,218,221,223,228,231,232,233,234,235,239,242,243,244,245,247,249,253,256,257,258,259,260,261,262,263,264,265,266,267,269,271,272,273,275,276,278,279,280,281,283,287,290,291,292,294,297,300,303,304,305,307,309,310,311,312,313,314,315,322,337,339,340,341,342,343,344,345,346,347,348,349,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,379,380,381,382,383,384,385,386,387,388,389,390,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,416,418,419,422,423,424,425,426,427,429,432,433,434,435,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,462,465,466,469,470,473,474,475,477,479,480,494,495,496,497,498,499,501,502,503,504,505,506,511,512,513,514,515,516,517,519,525,528,531,532,534,551,559,561,562,565,566,567,568,570,573,575,576,577,578,579,580,581,582,583,584,585,586],"const":[21,46,52,87,171,197,212,213,242,243,256,257,271,272,275,312,313,339,389,398,418,423,424,425,426,427,432,448,498,503],"default":[3,9,10,12,13,15,19,20,21,32,34,37,42,49,50,135,136,139,140,145,146,157,158,171,172,174,175,181,182,197,214,215,228,235,237,238,245,246,249,250,253,254,267,268,269,270,273,274,275,276,277,283,284,287,288,297,298,300,301,305,306,313,339,354,389,399,400,427,428,432,438,456,470,471,475,481,489,491,493,495,498,501,503,506,553],"export":[135,475],"final":[0,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,76,77,80,82,83,178,179,242,264,265,310],"float":[20,134,135,139,145,187,190,194,195,197,276,342,343,355,367,387,389,399,411,414,419,420,432,433,438,465,466,503],"function":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,27,29,30,31,32,34,35,36,38,40,41,43,46,52,54,87,92,96,111,118,119,130,131,132,133,134,135,139,141,143,144,145,147,164,165,166,167,168,171,176,178,182,183,189,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,222,223,224,225,226,227,228,235,239,243,259,263,272,278,279,291,294,296,303,304,322,340,342,343,349,350,355,367,387,389,399,400,401,402,403,404,405,411,414,415,416,417,423,424,425,426,427,429,431,432,433,438,439,440,441,443,445,459,461,464,465,466,467,468,469,471,473,474,475,477,481,483,484,485,486,487,488,489,490,491,492,493,498,499,500,501,503,505,507,508,509,510,512,513,514,515,516,517,518,521,522,523,524,525,526,527,528,529,530,532,533,536,539,546,547,552,554,555,556,557,561,573,581,584,586],"import":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,34,135,262,280,342,475],"int":[3,19,20,21,34,53,72,73,74,92,134,135,144,145,146,167,168,171,186,194,195,197,200,212,214,217,262,276,280,300,340,343,355,387,389,397,399,400,401,402,403,404,405,406,416,417,419,420,422,423,424,425,426,427,432,434,438,441,443,445,475,498,506,512,517],"new":[4,9,19,143,147,182,192,193,200,235,337,338,389,398,407,423,424,425,426,435,436,471,481,482,504,513,544],"null":[14,147,173,235,261,263,312,407],"public":[21,37,42,503],"return":[2,4,7,8,11,12,13,15,19,20,21,30,34,37,46,51,52,54,57,58,60,63,66,67,68,69,70,71,72,73,76,80,81,82,83,84,86,87,88,93,97,99,100,101,102,103,104,105,106,107,108,109,110,123,125,126,127,128,135,137,138,139,143,144,145,147,156,167,168,169,170,171,182,186,191,192,193,197,198,199,200,201,205,212,213,214,222,225,228,230,235,238,242,243,244,245,246,247,248,249,251,252,253,255,256,257,259,260,261,262,264,265,266,271,272,275,276,277,278,279,280,281,282,283,285,286,287,289,290,291,292,293,297,299,300,302,304,305,307,308,309,310,312,313,316,317,318,319,320,323,324,325,327,328,334,340,343,349,355,367,368,389,390,391,396,397,398,400,402,403,404,405,406,407,410,411,414,415,416,417,418,423,424,425,426,427,429,430,431,432,434,438,439,448,454,455,456,457,458,460,461,462,467,468,471,472,474,476,483,485,488,489,491,493,498,503,504,505,506,508,510,513,521,522,523,524,526,527,529,530,553,561,573,576,577,581,584],"short":[72,112],"static":[49,54,72,76,135,139,141,145,157,159,171,174,178,192,207,214,228,235,245,247,249,253,267,269,273,276,281,283,287,292,294,297,300,303,305,307,337,349,376,390,408,411,416,419,427,429,435,495,498],"switch":503,"throw":[96,398],"true":[0,1,2,4,6,9,10,11,12,13,14,16,18,20,21,30,32,51,72,76,80,81,82,83,100,101,102,103,104,105,106,107,108,109,110,112,120,135,139,147,166,169,178,179,182,197,200,228,230,235,243,256,257,265,283,317,318,319,339,340,343,367,389,396,397,398,399,400,402,403,404,405,423,424,425,426,438,461,471,472,474,475,500,553],"try":15,"var":[235,238],"void":[21,34,503],"while":[0,4,5,7,8,9,10,11,13,19,20,21,74,503],ALE:221,A_e:164,Added:[454,455,456,457,458,462],But:[5,135,475],EPS:305,For:[0,1,3,4,5,6,9,10,11,12,13,14,15,19,21,130,131,186,191,216,218,235,256,257,291,304,305,389,398,429,430,465,466,471,472,483,485,489,500],Its:501,LHS:164,Not:[20,86],ODE:[561,584],One:[9,16,17,18,19,199,219,503],RHS:[14,164],Such:8,That:340,The:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,34,37,39,44,45,46,47,48,49,51,52,53,54,55,56,72,73,74,75,76,84,85,86,87,88,130,131,132,133,134,135,137,138,139,141,143,144,145,147,148,149,150,151,152,153,154,155,156,157,159,164,165,166,167,168,169,170,171,173,174,176,177,178,181,182,186,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,211,212,213,214,216,217,218,219,223,228,231,232,233,234,235,242,243,244,245,247,249,253,256,257,258,259,260,261,262,263,264,265,266,267,269,271,272,273,275,276,278,279,280,281,283,287,290,291,292,294,297,300,303,304,305,307,309,310,311,312,313,314,321,337,339,340,341,342,343,345,346,347,348,349,353,354,355,357,358,359,360,361,363,364,365,366,367,368,370,371,372,373,374,375,376,379,380,381,382,383,384,385,386,387,388,389,390,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,414,415,416,417,418,419,420,421,422,423,424,425,426,427,429,432,433,434,435,437,438,439,440,441,442,443,444,445,446,447,448,450,451,452,453,454,455,456,457,458,460,461,462,465,466,467,468,471,472,473,475,482,486,489,495,498,500,501,503,504,506,513,515,520,535,550,553,558,576,577,586],Then:[0,1,5,7,8,14,20,21],There:[3,9,14,506],These:[4,6,7,8,19,199,294,456,504],Use:[0,1,2,5,6,7,8,9,10,14,15,16,18,21,22,32,96,517],Useful:[135,343],Using:[2,4,15,16,17,18],With:[0,4,5,6,7,8,9,11,12,13,14,19,21,512],Yes:491,__future__:[3,5,9,16,18,19],__init__:[4,8,503],__new__:504,_bool_:461,_butcher_scheme_gener:561,_cell_:147,_dirichletbc_:470,_domain:503,_double_:432,_form_:470,_function_:[197,217,506],_functionspace_:[144,513],_mesh:[423,424,425,426,503],_mesh_:401,_meshfunction_:422,_multistagescheme_:[576,577],_not_:503,_point_:342,_rush_larsen_scheme_gener:584,_std:[88,171,339,397,498],a_form:[470,472],a_r_dt:139,a_r_t:139,a_star:139,a_tensor:472,aabb:340,abl:[4,14,20],about:[4,6,20,44,92,305,503],abov:[0,1,3,4,5,6,7,8,9,10,11,13,14,15,19,21,92,235,340,472,489],abs:[11,266],absolut:[11,266],absolute_toler:73,accept:34,access:[4,7,8,34,72,73,256,257,266,291,300,304,368,427,503],access_count:[72,73],accomplish:[10,19],accord:[9,192,193,235,335,339,389,419,421,429,431],accordingli:192,accuraci:[0,489],across:[54,58,407,408,409,411,414,553],act:[8,504],action:[4,260,272],activ:120,actual:[0,7,8,10,16,17,18,199,205,260,340],adapt:[22,130,131,145,189,465,466,469,500],adapt_coeffici:182,adapt_mark:189,adapt_problem:145,adapted_mesh:[182,183],adaptive_data:145,adaptivelinearvariationalsolv:[0,131,189,469],adaptivenonlinearvariationalsolv:[189,469],adaptivesolv:[465,466,467,468,486],add:[9,73,167,168,176,214,243,257,262,265,266,304,310,313,354,399,427,471],add_add:198,add_cel:[354,399],add_loc:[257,262,265,266,304,310,313],add_local_valu:310,add_polygon:235,add_sub:198,add_valu:[133,471,472],add_vertex:[354,399],add_vertex_glob:399,added:[37,42,73,310,340,481],adding:[9,25,176,489],addit:[3,6,7,8,10,14,19,34,400,432,456,471,473,482,500,506],additional_declar:34,additional_system_head:34,adj:561,adjac:389,adjoint:[0,484,561,584],adjust:[6,235],adopt:6,advanc:[4,32,256,257,291,304],advantag:6,affect:235,after:[7,8,135,235,388,408,475],afterward:19,again:[6,388],aggreg:263,agre:144,aim:[130,131,465,466],ale:[537,538,540,550],ale_mov:221,algebra:[5,9,14,15,256,257,265,271,272,275,311,312,313,317,318,319,323,324,327,328,329,330,331,332,333,334,471,500],algorithm:[141,305,337,338,416,454,455,456,457,458,462,500],alia:[560,563,564,569,571,572,574],align:340,all:[0,1,5,6,7,8,10,12,13,15,16,17,18,19,20,21,34,42,73,97,126,130,131,134,135,143,144,145,147,156,164,170,197,201,235,236,242,256,257,262,265,266,271,275,291,292,304,305,309,313,340,374,389,396,397,398,402,403,404,405,406,411,414,415,418,419,420,422,423,424,425,426,427,429,431,434,440,454,455,456,457,458,462,465,466,475,494,497,500,503,506,513,545,561,573,581,586],all_interact:235,all_kei:543,all_reduc:[54,57],allow:[3,8,9,20,21,24,73,134,170,197,401,422,503],allow_extrapol:197,almost:[15,54,60,66],along:[280,456],alpha:2,alreadi:[12,389,416,417,518],also:[0,1,3,6,7,8,10,11,12,13,15,16,17,18,19,21,32,34,76,79,86,134,135,235,305,321,389,397,408,471,475,503],alt:235,altern:[7,8,10,32,135,235,432,438,472,475,491,503,512,516,517],alwai:[46,52,87,135,475],amg:[9,15],among:471,aneurysm:1,angl:[389,419,420,432],ani:[5,9,14,20,34,37,41,51,144,147,164,181,182,200,235,241,242,256,262,265,275,291,309,340,389,398,418,427,470,472,479,503,506],anim:235,anoth:[135,147,166,194,199,200,219,339,355,400,432,494,497,506,561,584],ans:[199,219],ansatz:14,anyth:[300,442,444],api:147,appear:[147,167,235],append:235,appli:[0,4,6,7,8,9,10,11,12,13,14,15,21,135,166,176,181,185,242,264,265,310,429,431,470,472,475],applic:[135,305,439,472,475],approach:[2,6,135,475],appropri:[267,422,423,424,425,426],approxim:[0,4,6,15,16,17,18,131,139,141,164,242,263,303,466,489],arang:34,arbitrari:[73,192,265,427,434],arbitrarili:471,area:[6,196,343,349,361,525],arg2:[148,149,150,151,152,153,154,155,202,203,204,232,233,234,379,380,381,382,383,384,385,386],arg:[32,34,41,45,46,47,52,53,54,66,67,68,71,72,73,74,75,76,78,79,84,86,87,88,89,116,130,131,135,137,138,144,145,147,164,166,167,168,169,170,176,181,182,184,185,188,192,193,194,195,197,198,199,200,201,205,212,213,216,217,218,219,228,235,241,247,249,253,256,257,258,259,260,261,262,264,265,266,267,269,272,273,275,276,280,281,283,287,291,294,296,297,300,304,305,307,311,312,313,321,326,335,337,338,341,342,343,345,346,347,348,349,350,355,357,358,359,360,363,364,365,366,370,371,372,373,374,376,378,387,388,389,390,391,396,400,402,403,404,405,406,407,418,419,420,423,424,425,426,432,433,434,438,439,440,441,443,445,448,450,451,452,453,454,455,456,457,458,461,462,475,500,506,512],argc:[73,76,78,79,115],argument:[0,1,3,4,5,6,7,8,10,11,12,13,14,16,17,18,19,20,21,32,34,35,42,73,74,76,79,91,92,94,97,112,115,116,126,127,130,131,132,134,135,137,139,144,145,147,165,166,167,168,171,173,182,186,187,190,191,194,195,197,199,200,206,212,213,214,217,219,228,229,230,256,257,262,276,280,300,339,340,342,343,355,367,387,389,397,399,400,401,402,403,404,405,416,417,419,420,421,422,423,424,425,426,427,432,433,434,438,441,443,445,460,461,465,466,467,468,470,471,475,476,481,482,488,489,491,493,494,497,498,500,501,503,504,506,507,509,511,512,513,514,515,516,517,518,521,522,523,524,525,526,527,529,530,537,538,553,576,577],argv:[73,76,78,79,115,547],argyri:512,aris:[7,8],arnold:512,arnoldi:305,around:[11,18,20,86,291,389,419,420,432],arpack:305,arrai:[21,34,46,52,87,135,144,147,186,194,195,197,200,216,218,256,257,262,266,340,343,389,397,399,402,403,404,405,406,416,417,427,432,438,448,475,501,503,513],arrow:235,as_backend_typ:[14,322],as_matrix:21,as_str:30,as_vector:6,ascii:228,ask:5,aspect:4,assembl:[4,5,6,9,14,15,19,84,86,133,144,159,165,173,178,179,180,181,185,189,242,265,397,470,472,486,489,503,586],assemble_cel:[132,159],assemble_exterior_facet:[132,159],assemble_interior_facet:[132,159],assemble_system:[15,189,473],assemble_vertic:132,assemblerbas:[132,165,173,181,189],assert:[34,503],assign:[5,9,73,132,194,199,200,221,256,262,275,291,423,424,425,426,506],assigning_func:[199,219],assigning_spac:199,associ:[4,5,15,19,54,70,88,135,176,235,389,397,400,402,403,404,405,422,423,424,425,426,471],assum:[0,1,6,12,13,21,37,42,141,310,340,349,389,416,417,537,538],attach:[14,135,144,200,291,397,475],attribut:503,auto:[22,235,241],autogener:536,autom:[4,132,139,173,500],automat:[0,4,6,9,12,34,44,115,130,131,135,235,389,465,466,475,500],autosubdomain:477,auxiliari:[389,397],avail:[5,7,8,9,10,15,16,17,18,19,34,73,134,135,194,197,212,213,228,249,251,252,253,255,256,257,259,283,285,286,287,289,297,299,300,302,317,318,319,323,324,327,328,329,330,331,332,333,334,342,343,355,387,389,397,399,411,414,415,418,432,433,441,443,445,461,475,500,503],averag:[2,54,57,58,389],avg:[2,54],avoid:[6,9,46,52,87,135,475],axes:235,axi:[143,201,262,280,340,389,419,420,432],axial:[387,443],axpi:[198,243,262,266],axpy0:198,axpy1:198,azimuth:235,b_e:164,b_form:[470,472],b_tensor:472,back:427,backend:[5,14,15,245,246,256,257,260,265,269,272,275,311,312,313,317,318,319,323,324,327,328,329,330,331,332,333,334,471,472,500],backward:4,backwardeul:575,bar:[32,73,74,235,561,584],barrier:[54,59],base:[4,9,34,45,46,47,48,49,51,52,53,54,55,56,64,65,72,73,74,75,76,84,85,86,87,88,130,131,132,133,134,135,137,138,139,141,143,144,145,147,148,149,150,151,152,153,154,155,156,157,159,164,165,166,167,168,169,170,171,173,174,176,177,178,181,182,190,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,211,212,213,214,216,217,218,223,228,231,232,233,234,235,242,243,244,245,247,249,253,256,257,258,259,260,261,262,263,264,265,266,267,269,271,272,273,275,276,278,279,280,281,283,287,290,291,292,294,297,300,303,304,305,307,309,310,311,312,313,314,337,339,340,341,342,343,344,345,346,347,348,349,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,379,380,381,382,383,384,385,386,387,388,389,390,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,416,418,419,422,423,424,425,426,427,429,432,433,434,435,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,462,465,466,470,474,475,479,482,494,495,496,497,498,500,501,503,505,506,512,513,514,515,516,517,525,528,532,559,561,562,565,566,567,568,570,573,576,577,579,580,581,582,583,584,585],base_on:244,basi:[2,4,5,14,19,134,143,197,205,267,314,321,489,506],basic:[15,27,86,456],basisfunct:189,bc0:[1,12,15,16,17,18],bc1:[1,15,16,17,18,500],bc2:[1,500],bc3:1,bcl:6,bcp:9,bcr:6,bcs:[6,12,15,16,17,18,19,139,156,169,170,181,185,188,470,472,474,475,476,486,493,494,497,500,559,561,562,565,566,567,568,570,573,581],bcu:9,bdf1:[560,572,575],bdfm:512,bdm:[8,32,503,512],becaus:[0,10,11,12,13,21,503],been:[5,6,12,13,14,15,16,17,18,21,72,76,80,81,91,119,144,170,214,235,236,240,292,340,388,389,400,416,417,427,500],befor:[1,4,5,7,8,9,10,15,19,20,21,200,278,367],begin:[0,1,4,9,13,14,19,92,111,418],behavior:[6,235],behaviour:504,behind:[20,503,504],being:[4,132,141],belong:[137,147],below:[5,9,10,22,144,235,456,471,491,500,503,512],berkelei:343,beta:17,better:[310,471],between:[2,19,46,52,87,147,164,186,191,199,221,225,271,340,355,374,389,396,410,460,541],beyond:[454,455,456,457,458,462],bicgstab:9,biharmon:22,bilinear:[0,1,2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,21,138,139,144,156,168,470,471,481,500],bilinear_form:156,bin:228,binari:[4,228,291],binary_dump:291,bit:[454,455,456,457,458,462],block:[135,147,242,257,262,264,265,266,304,309,310,313,503],block_siz:[147,309,311,312],blockmatrix:322,blockvector:322,blood:1,bodi:[6,19,147],bool:[3,12,20,21,45,92,135,139,145,146,171,182,197,200,228,230,276,300,339,340,343,389,397,399,400,401,402,403,404,405,422,423,424,425,426,432,438,468,498,513,553],boolparamet:111,boost:[207,337],boostgraphord:459,boostgraphordering_compute_cuthill_mcke:459,both:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,137,199,219,235,262,276,280,305,389,489,504,537,538],bottom:[8,19,20],bound:[170,171,300,340,374,389,427,498],boundari:[0,2,4,6,7,8,9,11,13,14,16,17,19,20,21,22,135,137,139,145,156,166,169,170,181,183,185,188,192,193,235,339,353,367,368,389,427,429,431,438,456,470,471,472,475,476,494,497,500,503,541],boundary_mark:471,boundary_mesh:541,boundary_valu:135,boundarymesh:[389,459],boundarysourc:8,boundarysubdomainfind:[541,542,543,544,545,547,548,549,550],bounding_box_tre:[389,427],bounding_box_tree_boundari:427,boundingboxtre:[374,427,459],boundingboxtree3d:459,box:[3,340,374,389,427],box_with_d:5,boxmesh:[3,441,459],brezzi:[8,512],broadcast:[54,64],broadcast_mesh_data:388,btmp:15,bubbl:[16,512],build:[132,137,147,167,168,178,179,180,199,214,340,374,376,377,378,408,409,427],build_distributed_mesh:[408,409],build_multimesh_sparsity_pattern:178,buildbot:3,built:[0,4,6,10,11,12,13,14,21,22,235,269,283,340,389],butchermultistageschem:[559,562,565,566,567,568,570,575],c00:21,c00_file:21,c01:21,c01_file:21,c11:21,c11_file:21,c2v:[543,544,545],c_vec:305,cach:[135,199,475,518,533],cahn:22,cahnhilliardequ:4,calcul:[16,18,361,407,418],call:[0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,46,52,76,77,86,87,118,135,145,201,214,235,276,278,292,293,340,367,389,427,471,472,475,500,503],callback:503,caller:[205,242,389],camera:235,can:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,32,34,37,44,73,86,134,135,138,141,173,174,177,195,199,200,201,212,219,228,235,263,272,278,280,297,305,321,339,340,389,390,392,393,394,396,401,402,403,404,405,422,423,424,425,426,434,439,471,472,475,500,501,503,506,575,585],canon:[0,1,10,11,12,13,14,21],care:[12,15,504],carri:[472,503],cast:[4,271,315],cauchi:6,cdot:8,cell:[2,3,8,16,17,18,19,20,21,86,132,134,135,139,143,144,147,159,160,161,162,163,164,173,178,179,182,187,190,195,196,197,200,201,339,340,342,349,350,351,352,354,368,376,377,387,388,389,390,391,392,393,394,399,400,407,408,409,410,411,412,413,414,415,416,417,418,422,423,424,425,426,427,433,434,435,437,438,439,441,443,445,456,459,461,471,475,496,501,503,512,513,521,522,523,524,525,527,529,541,544,545,553],cell_color:[390,391],cell_data:503,cell_dimens:147,cell_dof:147,cell_domain:[132,144,159,160],cell_index:[21,423,424,425,426],cell_mark:[182,461,471,553],cell_norm:[343,349],cell_orient:389,cell_own:418,cell_partit:[388,408,409,435,437],cell_shap:[143,503],cell_typ:[349,388],cell_vertic:388,cell_weight:388,cellfunct:[19,345,346,347,348,389,411,415,459,471,503,553],cellfunctionbool:459,cellfunctiondoubl:459,cellfunctionint:459,cellfunctionsizet:459,celliter:503,cellnorm:531,cellsiz:[2,17,531],celltyp:[389,399,459],celltype_cr:459,celltype_string2typ:459,celltype_type2str:459,cellvolum:531,center:[42,389,419,420],certain:[4,73,263,349],cg1:212,chang:[2,6,9,72,73,135,143,283,471,475,481,501],change_count:[72,73],changeset:99,check:[3,4,14,15,21,51,73,76,80,81,135,138,144,170,197,200,220,224,228,230,321,340,343,349,389,397,398,400,418,427,434,438,440,454,455,456,457,458,462,475],check_kei:72,check_midpoint:[135,166,438,475],chemic:4,child:[148,149,150,153,155,197,200,381,382,383,384,385],choic:[0,7,8,500],choleski:164,cholmod:100,choos:[0,6,195],choosen:15,chord:503,chorin:9,chosen:[10,40,267,471],circumradiu:[343,349,389,411,414,415,531],classic:[7,15,16,17,18],clean:[169,389],clear:[51,73,94,97,116,126,127,147,164,167,168,294,295,309,388,389,396,397,398,406,418,423,424,425,426,427],clear_child:[148,149,150,151,152,153,154,155,202,203,204,232,233,234,379,380,381,382,383,384,385,386],clear_factor:164,clear_sub_map_data:147,clock:86,close:[19,135,224,354,399,475,489],closest:[305,340,374],cloud:[340,374],cmath:503,cn2:[563,575],coarsen:407,coarsest:[197,200,407],code:[34,35,37,144,194,197,213,228,342,343,355,387,389,399,411,414,415,432,433,441,442,443,444,445,461,473,501,503],codimens:[343,344,345,346,347,348,367,369,370,371,372,373,389],coeffici:[5,9,11,14,16,18,19,144,182,195,197,200,201,213,482,501,503,504,506,525,528],coefficient_deriv:482,coefficient_nam:144,coefficient_numb:144,col:[84,85,262],collaps:[147,200,513],collapsed_dof:[200,513],collect:[6,9,12,15,16,17,18,23,94,116,214,262,402,403,404,405,422,423,424,425,426,427],collid:[340,343,349,427],collides_ent:340,collis:[340,374,389,427],collision_map_cut_cel:427,color:[32,144,235,389,390,391,392,393,394,395,416,417,418],color_cel:390,coloring_typ:[376,378,389,390,391,392,393,394,395],colormap:235,column:[14,135,195,244,256,264,280,309],com:389,combin:[7,8,10,11,14,198,309,481,500,506],comm:[34,54,58,59,61,62,63,64,65,66,69,70,228,257,266,304,313,342,387,433,441,443,445],command:[11,12,13,21,73,76,79,115,500],common:[6,28,30,32,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,135,139,144,145,147,157,168,169,171,174,192,193,200,201,205,214,227,235,260,261,262,263,264,265,266,271,276,280,297,305,312,349,388,389,397,402,403,404,405,423,424,425,426,427,456,489,495,498,536,537,538],commonli:[4,586],commun:[34,54,69,70,228,264,265,312,342,387,389,397,433,441,443,445],compar:7,compat:[36,135,199,228,262,280,402,403,404,405],compil:[0,2,4,6,10,11,13,14,15,21,34,36,37,38,40,41,42,43,100,101,102,103,104,105,106,107,108,109,110,227,471,473,479,489,494,497,501,503,504,512,518],compile_express:[38,504],compile_extension_modul:36,compiledmodul:504,compiledsubdomain:[6,43],compilemodul:[6,34,35,37,41,42,536],compiletim:44,complement:2,complet:[37,42,135,427,586],complex:[3,5,21,503],complic:[19,503],compon:[2,4,6,7,8,10,14,16,17,18,21,143,147,200,216,218,343,349,361,367,503,506,508,510,513,517,556,557],compos:[15,16,17,18],composit:[165,168,213],compress:[4,6,256],compresss:256,comput:[0,1,2,4,5,6,7,8,9,10,11,12,13,16,17,18,21,74,134,135,139,141,142,147,164,178,186,187,190,191,197,201,207,214,235,260,272,278,279,290,305,336,337,338,340,343,349,355,361,367,374,389,390,394,400,408,410,411,414,415,429,430,432,435,436,437,460,475,481,482,487,489,490,491,492,500,537,538,561,584],computation:5,compute_cell_residu:139,compute_closest_ent:[340,374],compute_closest_point:[340,374],compute_collis:[340,374],compute_color:390,compute_cuthill_mcke:[337,338],compute_du:139,compute_dual_graph:376,compute_edge_map:539,compute_entity_collis:[340,374],compute_extrapol:139,compute_facet_residu:139,compute_first_collis:[340,374],compute_first_entity_collis:[340,374],compute_gp:435,compute_ind:139,compute_local_rang:54,compute_partit:435,compute_periodic_pair:429,compute_reord:435,compute_vertex_map:539,compute_vertex_valu:[197,201],concret:[271,272,275,313,316,389],condit:[0,2,4,6,7,8,9,11,13,14,16,17,19,20,21,22,135,139,145,156,166,169,170,181,183,185,188,235,353,429,431,438,470,472,475,476,494,497,500],conduct:21,conductivity_cod:21,configur:[5,14,15,54,297,500],conform:[2,130,131,235,465,466],confus:340,connect:[7,8,367,376,377,388,389,396,416,417,418,454,455,456,457,458,462,545],consequ:14,consid:[0,1,2,5,6,9,10,11,12,13,14,15,16,17,18,19,21,489],consider:4,consist:[0,1,5,7,8,9,10,11,13,14,21,37,147,389,418,446,447,515],constant:[1,2,6,9,10,11,12,13,14,15,16,17,18,19,21,26,205,221,503,520,573,581],constrain:[137,170,512],constrained_boundari:137,constrained_domain:[12,137,147,512,513,514,516,517],constraint:[6,9,10,14,171,300,498],construct:[2,3,5,7,8,15,19,46,52,86,87,147,200,257,423,424,425,426,576,577],constructor:[4,48,49,88,132,133,135,144,164,165,167,169,173,174,177,181,194,195,196,197,198,200,205,211,212,231,243,244,245,253,256,257,267,269,275,278,279,287,290,291,292,303,304,313,314,353,354,361,367,387,396,397,399,400,402,403,404,405,406,407,418,432,438,440,443,454,455,456,457,458,462,475,506],conta:506,contain:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,37,42,44,92,144,164,195,197,340,343,389,397,398,407,434,435,437,519,537,538],contigu:427,contin:0,continu:[0,1,2,4,5,6,7,8,9,11,13,15,16,17,18,21,118,512],contract:[573,581],contribut:164,control:[0,4,12,13,20,21,130,131,139,182,235,305,339,471,500,503],conveni:[4,27,353,397,439],convent:[339,389],converg:[4,11,15,171,276,300,305,498],convergence_criterion:4,convert:[73,349,351,352,390,395],convex:4,coordin:[12,19,134,143,147,192,193,195,197,211,244,263,342,343,354,388,389,399,406,416,417,419,420,432,438,448,503,528,530],coordinatematrix:322,copi:[4,16,18,46,52,73,87,88,135,137,147,164,194,195,197,198,200,205,212,243,256,257,262,266,275,291,304,310,313,389,396,402,403,404,405,406,418,432,440,454,455,456,457,458,462,475,506],corner:[3,135,475],correct:[9,20,21,262],correctli:[12,73],correspond:[5,6,9,15,16,17,18,19,130,131,144,147,164,368,376,388,389,422,423,424,425,426,427,439,465,466,471,473,482,485,508,510],cos:[6,503],cost:51,costli:15,could:[4,34,135,340,427,475,512],count:[48,72,97,126,481],counter:235,coupl:[4,9,164,408],cover:[7,8,427],covered_cel:427,cpp:[32,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,460,461,462,465,466,470,474,475,479,480,494,495,496,497,498,501,504,506,513,518,525,528,532,536,573,576,577,578,581],cpp_assembl:473,cpp_optim:[2,4,6],cpparg:37,cppcode:[21,42,503],crank:4,cranknicolson:575,creat:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,45,46,47,51,52,53,73,74,75,84,85,86,87,88,130,131,134,135,137,138,139,143,144,147,156,157,166,168,170,171,176,194,195,197,199,200,205,212,213,214,216,217,218,228,235,242,249,256,257,259,272,273,275,276,283,291,297,300,304,305,309,310,311,312,313,339,340,342,343,344,349,350,355,356,362,368,369,388,389,396,397,398,399,402,403,404,405,406,407,411,412,413,418,423,424,425,426,427,432,434,439,440,441,445,446,447,448,449,454,455,456,457,458,461,462,465,466,467,468,470,471,474,475,479,481,482,494,495,496,497,498,501,502,503,504,506,507,508,509,510,512,513,514,515,516,517,525,528,541],create_arrai:397,create_compiled_expression_class:504,create_ent:349,create_krylov_solv:259,create_layout:259,create_linear_oper:259,create_lu_solv:259,create_map:546,create_matrix:259,create_parent_path:228,create_python_derived_expression_class:504,create_sub_el:143,create_ufc_function_spac:[519,534],create_vector:259,creation:504,criterion:[276,553],cross:[3,432,433,445],crouzeix:512,crude:242,csg:3,cube:[3,6,15,18,441],cubic:16,curl:[491,512],current:[4,9,20,30,54,64,65,147,235,240,264,276,278,309,317,318,319,323,324,328,329,330,332,333,334,389,397,416,417,454,455,456,457,458,462,471],curv:[135,475],custom:[132,503],cut:[165,168,213,427],cut_cel:427,cuthil:[337,338],cutting_cell_index:427,cylind:[135,475],d2dx:207,damp:48,darci:[7,8],data:[0,1,4,7,8,10,11,13,19,21,46,51,52,72,73,86,87,112,135,143,144,145,147,195,197,200,214,228,235,256,257,309,340,343,388,389,396,397,398,400,402,403,404,405,406,408,409,411,412,418,422,423,424,425,426,435,437,439,460,475,501,503,540],data_label:[145,146],databas:[49,283,287,291,304],dataset:397,dbc:12,ddx:[205,207],deal:15,dealt:4,debug:[3,111,117,200,429,431],debug_level:[89,117],decid:[135,235,272,389,402,403,404,405,439,475],declar:[0,4,6,10,11,13,14,21,34,503],decreas:95,deduc:[516,517],deep:[16,18],deepcopi:[16,18,197,256,257,506],def:[2,4,7,8,11,12,13,15,19,20,21,503],default_paramet:[49,135,139,145,157,171,174,214,235,249,253,267,269,273,276,283,287,297,300,305,427,495,498,500],defaultfactori:322,defaultfactory_factori:322,defici:14,defin:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,40,49,86,135,139,168,170,171,176,195,200,212,213,260,262,265,266,267,272,276,303,314,343,389,401,402,403,404,405,419,421,422,423,424,425,426,427,434,438,439,456,471,475,478,480,489,498,501,503,504,512,519,531,553,575,585],definit:[15,37,438],deflat:305,deform:6,degener:[343,411,414,415],degre:[0,7,8,10,11,13,21,135,137,167,197,200,205,389,419,420,475,483,489,503,512,516,517],degree_rais:489,degree_ris:489,delta:[17,176,503],demo:[0,1,2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],demo_auto:0,demo_bc:1,demo_biharmon:2,demo_built:3,demo_cahn:4,demo_eigenvalu:5,demo_hyperelast:6,demo_mix:[7,8],demo_navi:9,demo_neumann:10,demo_nonlinear:11,demo_period:12,demo_poisson:[13,22],demo_singular:14,demo_stok:[15,16,18],demo_subdomain:[19,20],demo_tensor:21,demonstr:[1,3,4,6,19],denot:[0,2,6,8,9,10,11,13,19,21,506],depend:[0,4,6,9,21,125,195,471,500,503,504],deprec:[86,111,116,147,197,463,476,536],depth:[73,148,149,150,151,152,153,154,155,202,203,204,232,233,234,379,380,381,382,383,384,385,386],deriv:[0,2,4,6,10,13,14,19,134,143,205,207,208,209,276,292,484,503,506,561,584],descend:407,descret:0,describ:[0,1,10,11,13,14,15,19,21,312,573,578,581],descript:[0,1,10,11,13,14,15,16,19,21,72,88,235,349],design:[130,131,374,465,466],desir:[12,13,21,435,437],destin:[408,409,435,437],destroi:[86,256,257,309],destruct:[256,257],destructor:[76,77],det:6,detail:[3,7,8,10,12,13,15,19,21],detect:340,determin:[10,14,34,54,64,65,205,228,266,400,471,503,512],develop:[92,96,340,397,427],dfdc:4,dg_0:139,diag_val:135,diagnost:9,diagon:[3,135,178,179,262,264,433,445,471,475],diagonal_pattern:264,diamet:[343,349,389],dict:[35,73,503,513,518],dictionari:6,diff:4,differ:[3,4,9,15,16,17,18,19,20,134,135,181,214,235,271,309,340,349,396,422,423,424,425,426,470,471,475,503,504,575,585],differenti:[0,1,2,4,5,7,8,9,10,11,12,13,14,21,135,475,500],dim0:[195,376,378],dim1:[195,376,378],dim:[20,73,137,147,194,195,200,214,217,262,264,266,280,311,312,314,343,349,389,397,398,400,401,402,403,404,405,406,418,422,423,424,425,426,429,430,431,432,434,438,454,455,456,457,458,462,517],dimens:[4,5,6,20,21,137,143,144,147,167,195,197,200,201,212,214,217,242,260,262,263,264,265,266,272,280,290,312,314,339,340,343,349,354,355,356,357,358,359,360,361,362,363,364,365,366,374,389,390,392,394,395,396,397,398,399,400,401,402,403,404,405,406,418,422,423,424,425,426,427,429,430,431,432,434,438,439,448,449,450,451,452,453,454,455,456,457,458,462,501,503,516,517],dimension:[0,6,434],dirac:176,direct:[0,3,4,6,10,11,13,21,198,253,287,305,342,343,349,387,389,406,433,441,443,445,482],directli:[0,9,46,52,87,260,300,504],directori:44,dirichlet:[0,1,2,6,7,11,12,13,15,16,17,18,19,21,135,166,182,185,475],dirichletbc:[0,1,2,6,7,8,9,11,12,13,15,16,17,18,19,21,32,139,145,189,470,472,476,477,493,586],dirichletbc_default_paramet:189,dirichletboundari:[2,11,12],disabl:[3,46,52,87,235],discontinu:[2,7,8,135,164,475,485,493,512],discret:[0,4,7,8,14,130,131,139,401,402,403,404,405,465,466,506,512,519],displac:[6,192,193,212,235,389],displai:[48,548],display_width:555,distanc:[340,343,349,367,374,432],distinct:[19,205],distribut:[225,340,376,377,399,408,409,461,553],div:[2,8,9,15,16,17,18,491],diverg:9,divid:[0,7,8,10,11,13,14,21],divis:[3,398],dmu:4,docstr:[24,25,26,27,29,31,33,36,38,39,40,43,44,111,189,221,227,239,322,423,424,425,426,459,464,469,473,477,478,480,484,486,487,490,492,499,502,504,511,519,520,531,534,535,536,539,546,550,551,552,554,557,558,575,578,585],document:[3,256,257,389,586],doe:[46,52,87,144,170,214,297,340,388,398,422,423,424,425,426,472,489],doesn:14,dof:[135,137,143,147,166,167,178,186,191,197,199,200,214,475,513],dof_to_vertex_map:189,dofmap0:[376,378],dofmap1:[376,378],dofmap:[14,147,164,167,178,179,189,197,200,214,376,378,503],doing:[16,17,18,19],dolfin:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,28,30,32,34,35,37,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,460,461,462,463,465,466,467,468,470,471,472,474,475,476,479,481,482,483,485,488,489,491,493,494,495,496,497,498,500,501,503,505,506,507,508,509,510,512,513,514,515,516,517,518,521,522,523,524,525,526,527,528,529,530,532,533,537,538,540,541,542,543,544,545,547,548,549,553,555,556,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,576,577,579,580,581,582,583,584,586],dolfin_cel:197,dolfin_el:513,dolfin_ep:[0,7,8,9,11,12,13,15,20,21,24,220,224],dolfin_error:[96,111],dolfin_fin:[16,17,18,20],dolfin_fine_subdomain:[16,17,18],dolfin_noplot:3,dolfin_pi:[12,24],dolfin_plot_:235,dolfin_sqrt_ep:24,dolfin_stage_form:[573,581],dolfin_vers:111,dolfinerrorcontrolgener:478,dolli:235,dolphin:[18,20],domain:[0,1,2,4,6,7,8,9,10,11,12,13,14,16,17,19,20,21,135,144,159,161,162,163,185,199,389,398,401,402,403,404,405,427,434,438,439,471,475,503],domain_data:388,domain_mark:434,domain_numb:434,domainboundari:459,don:[10,300,418,427,471],done:[5,7,8,10,14,15,16,17,18,20],dorfler:187,dorfler_mark:189,dot:[1,4,5,6,7,8,12,19,355,432,561,584],doubl:[20,21,34,47,72,73,92,97,126,135,145,146,235,294,296,305,340,401,411,415,422,427,432,438,503],doublearrai:111,doubleparamet:111,dougla:[8,512],down:[0,11,12,13,14,21,343,427],down_cast:[275,313,464],download:22,dqdx:205,draw:235,driven:9,drt:[7,512],dt_stage_offset:[169,573,581],dtype:325,dual:[0,22,130,131,139,141,376,377,465,466,500],dual_variational_solv:0,dualiti:0,dummi:15,dump:[94,291],dump_timings_to_xml:111,duplic:340,dure:[6,9,12,13,21,74,408,503],dynam:[354,504],dynamicmesheditor:459,each:[0,4,6,7,8,9,10,11,13,14,19,20,21,73,135,144,145,214,217,257,266,304,313,342,349,388,389,396,397,398,407,408,409,416,417,427,433,435,437,441,445,471,475,503,525,528,556,557],eas:340,easi:[5,9,15,54,176,489],easiest:19,easili:[0,5,9,10,11,13,14,15,16,17,18,21],edg:[19,337,338,389,390,393,456,459,527,529,537],edgefunct:[357,358,359,360,459],edgefunctionbool:459,edgefunctiondoubl:459,edgefunctionint:459,edgefunctionsizet:459,edit:[354,399],editor:[354,399],edu:343,effect:[8,10,135,235,475],effici:[0,6,10,11,13,14,21,46,51,52,87,164,206,354,389],eigen:[84,249,256,257],eigenfactori:322,eigenfactory_inst:322,eigenfunct:5,eigenkrylovsolv:322,eigenkrylovsolver_default_paramet:322,eigenkrylovsolver_method:322,eigenkrylovsolver_precondition:322,eigenlusolv:322,eigenlusolver_default_paramet:322,eigenlusolver_method:322,eigenmatrix:322,eigenpair:[5,305],eigenproblem:[5,305],eigensolv:[5,305],eigenvalu:[22,305],eigenvector:[5,322],either:[0,15,20,37,73,74,135,138,173,195,235,262,305,396,397,454,455,456,457,458,462,471,475,500,501,506],elaps:[86,125,128],element:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,19,21,22,32,134,135,143,144,147,164,165,167,168,194,195,197,200,201,213,342,343,411,414,415,441,445,475,482,487,488,489,492,493,503,506,512,513,514,515,516,517,519,586],elemj:343,elev:235,elif:15,elimin:[6,256],eliminate_zero:6,ellipt:[0,1,2,10,12,13,14,21],els:[9,15,21,235,442,444,503],elsewher:5,embed:[343,349],emploi:[135,475],empti:[51,72,73,84,168,173,200,214,243,256,257,259,265,275,291,304,309,311,312,313,340,343,388,389,396,398,402,403,404,405,406,418,423,424,425,426,427,471],enabl:[46,52,87,235,389],encapsul:[192,193,212,389],encod:228,end:[0,4,9,86,111,418,440,454,455,456,457,458,462],end_iter:[440,454,455,456,457,458,462],enforc:8,enhanc:305,enough:[16,18],enrich:16,ensur:[4,5,135,292,471],enter:[235,236,240],entir:[135,173,353,396,475],entiti:[16,17,18,19,137,144,147,235,339,340,343,349,354,355,374,389,396,398,399,400,401,402,403,404,405,416,417,418,422,423,424,425,426,429,430,431,434,438,440,448,454,455,457,458,459,462,471],entity_dim:144,entity_index:[423,424,425,426],entity_map:339,entity_typ:349,entri:[21,84,85,147,242,256,257,262,264,265,266,275,291,304,309,313,435,437,471],envelop:374,environ:3,epoch:125,eps:[224,305],equal:[6,20,54,60,66,212,340,396,427,471],equat:[5,20,22,135,188,189,276,472,475],equilater:343,equival:[325,340,418],eras:397,erase_arrai:397,erk1:[564,569,571,575],erk4:[574,575],erk:575,error:[0,1,11,12,13,21,92,111,130,131,139,145,182,187,190,292,293,315,398,400,427,465,466,489,500,553],error_cod:[292,293],error_control:0,errorcontrol:[130,131,182,189,467,468],errorcontrol_default_paramet:189,errorcontrolgener:486,errornorm:490,esdirk3:575,esdirk4:575,especi:12,essenti:[6,7,8,9,15,19,188],estim:[0,130,131,139,465,466,500],estimate_error:139,eta_t:139,etc:[144,168,216,218,340,432,488],euclidean:[355,406,432],euler:4,eulerian:192,eval:[2,4,8,12,21,134,195,197,201,205,207,503],eval_cel:[8,195,201,503],eval_deriv:134,evalu:[2,8,19,21,134,139,143,145,195,197,201,207,208,209,210,212,276,401,402,403,404,405,471,489,503,506,525,528],evaluate_basi:[134,143],evaluate_basis_al:143,evaluate_basis_deriv:[134,143],evaluate_basis_derivatives_al:143,evaluate_dof:[134,143],evaluate_go:145,evalut:489,even:[76,81,235,236,240,283,472],event:111,everi:[4,235,471],exact:164,exactli:4,examin:[5,7,8,10],exampl:[4,5,6,7,8,11,12,13,16,17,18,19,21,32,34,42,48,74,84,135,147,164,194,197,205,213,216,218,228,235,342,343,355,387,389,399,401,402,403,404,405,411,414,415,432,433,441,443,445,456,461,471,472,475,488,489,491,493,500,501,503,506,512,515,516,517,518,521,522,523,524,525,526,527,529,530,553],except:[96,389],excess:9,exchang:[46,52,87],exclus:[54,62,186,191],exhaust:112,exist:[9,10,14,94,144,214,228,230,235,389,397,398,407,416,417,423,424,425,426],exit:[5,14,15],exp:[0,7,8,10,12,13,14,19,21,503],expand:489,expans:[197,200,201,213,506],expansion_coeffici:200,experiment:[442,444],expicit:585,explain:[91,92,500],explicit:[19,242,565,566,567,568,570],expliciteul:575,explicitli:[15,76,77,86,182,228,389],explicitmidpoint:575,expos:227,expr:[35,556],express:[0,1,2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,27,32,35,37,39,42,192,193,194,196,201,206,211,212,217,221,235,241,314,389,429,431,487,488,489,492,493,520,525,528,556,557,586],expression_to_code_frag:36,expressionmetaclass:504,ext_modul:34,extend_cut_cell_integr:165,extens:[34,36],exterior:[19,132,144,173,339,367],exterior_facet:[178,179],exterior_facet_domain:[132,144,159,160],extern:[12,339],extra:[12,51,305],extract:[5,7,8,10,16,17,18,19,35,143,144,145,147,168,197,200,212,402,403,404,405,506,513,556,557],extract_bc:145,extract_mesh_data:388,extract_sub_dofmap:147,extract_sub_el:143,extract_sub_spac:[200,513],extract_tested_express:557,extrapol:[0,139,142,189,197],extrapolation_extrapol:189,f_e:217,face:[389,456,459],facefunct:[363,364,365,366,459],facefunctionbool:459,facefunctiondoubl:459,facefunctionint:459,facefunctionsizet:459,facet:[2,8,16,17,18,19,20,132,135,139,144,147,159,162,163,173,195,196,217,339,343,349,368,389,390,393,397,427,434,438,456,459,471,475,503,512,525,526,527,529],facet_area:[343,349],facet_index:368,facet_norm:427,facet_orient:397,facet_typ:349,facetarea:[221,531],facetcel:459,facetfunct:[19,370,371,372,373,459,471],facetfunctionbool:459,facetfunctiondoubl:459,facetfunctionint:459,facetfunctionsizet:459,facetnorm:[2,19,531],facilit:199,fact:19,factor:[9,164,253,287,411,414,415,556,558],factori:[171,245,265,276,349,350,498],factoris:164,fail:[14,15,92],failur:[3,92],fals:[6,9,11,12,13,20,21,32,72,73,112,116,135,182,197,235,236,240,256,257,337,338,339,367,397,398,423,424,425,426,471,472,475,506,513,553],famili:[0,4,7,8,10,11,13,21,512,516,517],familiar:[5,15,19],fanci:32,fashion:[15,472],fast:51,faster:[4,135,475],fastest:309,featur:[6,91],feec:[512,517],fem:[130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,227,465,466,467,468,470,471,472,474,475,476,479,481,482,483,485,488,489,491,493,494,495,496,497,498,500,503,536,573,576,577,581],fem_solv:189,fenic:[11,22,144],ffc:[6,16,144,473,480],ffc_option:6,field:[4,6,8,9,489,512,517],figur:[144,427],file:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,44,92,94,144,197,229,230,235,239,388,402,403,404,405,422,423,424,425,426,503],file_bool:20,file_create_parent_path:239,file_doubl:20,file_exist:239,filenam:[94,197,228,229,230,231,235,292,293,389,401,402,403,404,405,422,423,424,425,426,506],filename_dofdata:197,filename_vector:197,filetyp:231,fill:[51,264,340,343,471],filter:[76,79],finalis:[76,80,81],finalize_tensor:[133,471,472],find:[0,1,2,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,21,51,54,62,130,131,156,170,465,466,494,497,544,545],find_all_subdomain:546,find_keys_on_one_subdomain:546,find_new_cell_kei:546,find_paramet:73,find_parameter_set:73,find_subdomain:546,finest:[197,200,407],finish:[354,399],finit:[0,1,2,4,5,6,7,8,10,11,12,13,14,15,16,18,19,21,32,134,143,144,147,165,167,168,195,197,200,201,213,342,343,441,445,482,487,488,492,493,503,506,512,513,514,515,516,517,519,586],finite_el:143,finiteel:[32,134,189,200,503,513,514],first:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,135,194,207,209,216,218,305,340,342,374,388,389,396,399,422,423,424,425,426,433,475,489,503,506,559,565,579,582],fix:[11,396,401,402,403,404,405],fixm:[20,169,174,177,427],flag:[4,30,45,46,47,48,49,51,52,53,54,55,56,72,73,74,75,76,84,85,86,87,88,130,131,132,133,134,135,137,138,139,141,143,144,145,147,148,149,150,151,152,153,154,155,156,157,159,164,165,166,167,168,169,170,171,173,174,176,177,178,181,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,211,212,213,214,216,217,218,223,228,231,232,233,234,235,242,243,244,245,247,249,253,256,257,258,259,260,261,262,263,264,265,266,267,269,271,272,273,275,276,278,279,280,281,283,287,290,291,292,294,297,300,303,304,305,307,309,310,311,312,313,314,337,339,340,341,342,343,345,346,347,348,349,353,354,355,357,358,359,360,361,363,364,365,366,367,368,370,371,372,373,374,375,376,379,380,381,382,383,384,385,386,387,388,389,390,396,397,398,399,400,402,403,404,405,406,407,408,410,411,416,418,419,423,424,425,426,427,429,432,433,434,435,438,439,440,441,442,443,444,445,446,447,448,450,451,452,453,454,455,456,457,458,462,495,498],flat:349,flatten:[194,343,427],flip:[15,16,17,18],flow:[7,8,9],flux:[7,8],focu:20,focus:[3,6],follow:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,24,34,73,139,214,235,305,388,389,397,427,456,471,500,503,553],foo:[73,463],forc:[6,34],form:[0,1,2,5,6,7,8,9,10,11,12,13,14,16,17,18,21,40,41,130,131,132,138,139,145,156,165,168,170,173,178,179,180,181,182,189,195,201,212,249,253,276,278,279,283,287,465,466,467,468,470,471,472,473,478,481,482,486,489,494,497,500,503,504,505,507,509,512,517,518,573,581],form_compil:[2,4,6,41,471],form_compiler_paramet:[6,470,471,472,479,493,494,497,500],form_degre:[512,517],format:[2,6,9,11,13,15,16,17,18,21,91,92,147,228,291,389],formmanipul:[481,482,483,485,486],formul:[0,2,15,16,17,22,139],formula:[0,10,11,13,14,19,21],fortin:512,fortun:5,forwardeul:575,found:[228,340,400],four:[16,17,18,20],fourth:[2,4,12,20,399],fraction:[187,190],framework:[15,16,17,18],free:[9,272],freedom:[8,135,137,167,200,475,512],freeli:9,from:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,34,35,41,46,52,73,87,92,130,131,132,135,139,141,142,143,144,147,164,165,167,168,173,181,194,197,200,206,214,227,235,256,257,272,275,276,292,310,313,339,340,349,350,351,352,355,376,377,378,388,389,400,402,403,404,405,408,409,418,422,423,424,425,426,427,429,430,432,434,435,437,439,448,467,470,474,475,479,482,489,503,504,506,513,516,517,518,537,538],fs0:518,fs1:518,full:[7,8,10,16,17,18,19,37,214,339,434],func0:198,func1:198,func:198,function_spac:[135,144,168,197,214,503,505],function_space_0:168,function_space_1:168,functionassign:221,functionaxpi:221,functionspac:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,135,144,186,191,197,199,214,218,219,221,475,488,493,503,505,506,513,514,515,516,517,518,520,532,586],functionspacebas:[512,514,515,516,519],functionspacefromcpp:519,further:[0,10,11,13,14,16,18,21,92,489],furthermor:[2,216,218],futur:471,g_l:19,g_r:19,galerkin:[0,2,11,164,512],gateaux:482,gather:[54,61,135,257,266,304,313],gather_on_zero:266,gdim:[340,343,354,388,399],gen_hermitian:305,gen_non_hermitian:305,gener:[0,3,4,5,6,8,10,11,12,13,14,19,21,34,37,42,44,92,130,131,132,144,147,173,198,226,261,263,264,273,305,311,343,349,376,378,423,424,425,426,427,442,444,456,465,466,473,500,501,503,512,551,561,579,580,584],generate_error_control:469,generate_error_control_form:469,generateswigcod:44,generic_function_memb:[35,37],genericadaptivevariationalsolv:[130,131,189],genericadaptivevariationalsolver_default_paramet:189,genericboundingboxtre:[341,459],genericdofmap:[137,167,189,200,263,503],genericfil:[228,239],genericfunct:[135,144,166,182,195,197,200,206,221,389,475,503],genericlinearalgebrafactori:[245,247,276,281,307,322],genericlinearoper:[262,272,290,322],genericlinearsolv:[249,258,267,273,276,283,322],genericlusolv:[253,269,287,322],genericmatrix:[135,166,256,260,275,291,309,321,322],genericprecondition:[297,322],genericsparsitypattern:[311,322],generictensor:[132,165,262,266,310,322],genericvector:[135,166,171,197,200,213,257,275,276,300,304,313,322,498,506],genericvtkplott:235,genet:[294,296],geometr:[9,135,195,197,212,263,340,354,388,399,427,438,475,501,503],geometri:[3,8,9,19,389,406],geometric_dimens:[6,143,197,411,414,415,438,503],get:[3,11,15,16,18,20,73,84,88,98,135,144,242,243,249,253,257,262,266,283,287,304,305,310,313,339,340,343,389,398,400,407,418,422,423,424,425,426,489,503,512],get_allow_extrapol:197,get_block:[242,243],get_boundary_valu:135,get_cell_data:343,get_cell_topolog:343,get_diagon:262,get_eigenpair:[5,305],get_eigenvalu:305,get_iteration_numb:305,get_loc:[257,266,304,313],get_log_level:111,get_mark:398,get_number_converg:305,get_oper:[249,253,283,287],get_options_prefix:[283,287,291,304],get_rang:[72,73],get_scalar_valu:310,get_tensor_typ:322,get_valu:[84,423,424,425,426],get_vertex_coordin:343,get_widget:235,getrow:262,ghost:[2,201,257,266,304,313,400,418,454,455,456,457,458,462],ghost_indic:[257,266,304,313],ghost_mod:2,ghost_offset:418,ghost_proc:[435,437],ghost_vertic:[376,377],gibb:[435,436],git:99,git_commit_hash:111,give:[3,14,20,21,305,396,500],given:[0,1,3,4,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,32,51,54,60,66,73,74,88,97,117,126,130,131,132,134,135,139,141,143,144,145,147,157,164,165,168,171,173,176,178,179,180,190,195,196,197,200,201,205,211,212,213,216,218,228,242,243,256,257,260,262,265,266,272,275,276,290,291,300,303,304,305,309,313,315,320,321,335,339,340,342,343,344,349,354,355,356,362,367,368,369,374,387,388,389,390,392,393,394,396,397,398,399,400,402,403,404,405,406,418,419,420,421,422,423,424,425,426,427,432,433,438,439,440,441,443,445,448,449,454,455,456,457,458,462,465,466,471,472,474,476,479,481,483,485,488,489,491,493,495,498,500,501,502,503,506,513,514,521,522,523,524,525,526,527,528,529,530,553],global:[25,49,54,62,67,68,86,147,164,167,192,193,200,214,256,262,264,265,266,291,304,309,312,339,343,367,388,389,396,399,400,401,402,403,404,405,418,422,423,424,425,426,439,471,512],global_cell_indic:388,global_dimens:[147,167],global_index:[399,400],global_indic:418,global_norm:389,global_offset:54,global_s:418,global_vertex_indic:343,globalis:300,globalparamet:[26,111],globalparameters_default_paramet:111,glyph:[32,235],gmre:[14,500],gmres_restart:73,goal:[0,130,131,139,145,465,466,467,468,500],goalfunct:[130,131],goe:[0,1,10,11,13,14,15,16,19,21,86],going:[20,576,577],good:343,grad:[0,1,2,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,21,471],gradient:[6,8,11,19,279],graph:[337,338,376,377,378,435,436,459],graphbuild:459,graphbuilder_compute_dual_graph:459,graphbuilder_local_graph:459,greater:553,green:6,grl1:585,grl2:585,group:[54,70,503],guess:[9,11],gurante:14,h10:491,h_avg:2,half:21,hand:[2,6,8,9,10,14,15,19,135,138,176,303],handl:[8,54,73,115,135,137,167,471,475,478,493,504,511],hardcopy_prefix:32,harmon:389,harmonic_smooth:389,has:[0,1,3,4,5,6,14,15,16,17,18,46,52,72,73,76,80,81,86,87,91,119,144,170,200,214,235,236,240,292,305,309,340,388,389,400,408,411,414,415,416,417,427,440,454,455,456,457,458,462,471,482,500,553,556],has_cel:200,has_child:[148,149,150,151,152,153,154,155,202,203,204,232,233,234,379,380,381,382,383,384,385,386],has_cholmod:111,has_el:200,has_hdf5:111,has_index:51,has_jacobian:170,has_kei:73,has_krylov_solver_method:[15,322],has_krylov_solver_precondition:[9,15,322],has_linear_algebra_backend:[5,14,15],has_lower_bound:170,has_lu_solver_method:322,has_mpi:111,has_openmp:111,has_par:[148,149,150,151,152,153,154,155,202,203,204,232,233,234,379,380,381,382,383,384,385,386],has_paramet:73,has_parameter_set:73,has_parmeti:111,has_petsc:[1,111],has_scotch:111,has_slepc:[5,111],has_tao:111,has_typ:322,has_umfpack:111,has_upper_bound:170,has_zlib:111,hash:[99,143,389,396,406,418],have:[0,1,5,10,11,12,13,14,15,16,17,18,19,20,21,22,94,135,144,170,262,340,435,437,471,475,503,512,537,538],have_global_indic:418,have_shared_ent:418,hcurl0:491,hcurl:491,hdf5:101,hdiv0:491,hdiv:491,header:[34,503],heavi:504,height:235,help:[35,235],helper:183,helptext:235,henc:[0,5,6,7,8,10,11,13,14,21],her:[303,512],here:[0,1,4,5,6,7,8,9,10,11,12,13,16,17,18,19,21,139,216,218,389,503,512,586],hermit:512,hermitian:305,hessian:279,hex:34,hexahedron:349,hide:[32,235],hide_abov:235,hide_below:235,hierarchi:[197,200,260,407,461],hierarchicaldirichletbc:[135,189],hierarchicalerrorcontrol:[139,189],hierarchicalform:[144,189],hierarchicalfunct:[189,197,221,239,459],hierarchicalfunctionspac:[189,200,221,239,459],hierarchicallinearvariationalproblem:[156,189],hierarchicalmesh:[189,221,239,389,459],hierarchicalmeshfunctionbool:[402,459],hierarchicalmeshfunctiondoubl:[403,459],hierarchicalmeshfunctionint:[404,459],hierarchicalmeshfunctionsizet:[405,459],hierarchicalmeshfunctionuint:459,hierarchicalnonlinearvariationalproblem:[170,189],high:489,higher:[0,20,141,427,471,482,483,489],highest:482,hilliard:22,histogram:[411,412,413],histor:309,hmax:389,hmin:389,hold:[4,6,9,32,389,471],homogen:[135,139,477],hood:[9,15,22],hookean:6,horizont:[3,445],hover:235,how:[0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,34,144,456,500,503],howev:[9,10,12,13,15,19,21,144,471,481,489,503],http:[256,257,343,389],human_form:[169,573,581],hyperelast:22,hypr:15,hypre_amg:500,ident:[6,262,343,471],ident_loc:262,ident_zero:[262,471],identifi:[19,73,88,135,143,166,397,418,434,438,475],iff:[139,340,343,389,471],ifilenam:542,ignor:[9,235,476],illustr:[0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,456,503],ilu:500,imaginari:305,immedi:[13,21],impact:553,implement:[34,37,42,54,58,119,125,134,135,141,157,165,171,192,201,249,253,256,257,283,287,291,300,303,304,309,310,311,340,349,374,416,419,471,475,495,498,503,561,584],impli:512,implicit:[15,169,559,562,567,568],impliciteul:575,importhandl:536,impos:[2,9,14],improv:[9,389,416,417],in_nullspac:322,in_valu:[54,61],inact:427,incarn:309,incid:[368,396,400,418,454,455,456,457,458,462],includ:[22,34,37,135,147,174,177,228,260,300,312,475,490,491,500,503,512],inclus:[220,387,503],incomplet:9,incompress:[15,22],incorpor:19,increas:89,increase_ord:484,increment:[4,6,181,310],indefinit:15,indent:[9,89,95],independ:[260,389],index:[8,16,17,18,20,21,23,51,54,62,63,134,135,144,147,168,186,191,197,200,212,262,266,339,340,343,355,361,367,368,398,399,400,402,403,404,405,406,418,422,423,424,425,426,427,429,430,448,456,475,482,503],index_own:54,indexset:111,indic:[0,2,3,4,19,22,51,112,132,135,137,139,147,186,187,190,191,195,216,218,256,257,262,264,265,266,291,304,309,310,313,340,343,398,399,410,411,414,415,418,427,445,475,500,553],individu:396,ineffici:16,inequ:300,infin:491,inflow:[9,15,16,17,18,20],info:[14,15,46,52,84,87,111,472,500,503],info_stream:111,info_underlin:111,inform:[1,8,16,17,18,19,20,44,46,52,73,84,87,88,96,135,167,242,243,272,305,396,400,406,418,432,475,493,503,506],ingredi:[0,11,12,13,21],inherit:[235,272,276,503,504],init:[111,178,179,257,264,265,266,300,304,312,313,389,396,398,400,402,403,404,405,406,418,423,424,425,426],init_cel:399,init_cell_orient:389,init_cells_glob:399,init_ghost:418,init_global_indic:418,init_global_tensor:133,init_layout:[272,290],init_mpi:[76,78],init_parent_edge_indic:539,init_petsc:[76,79],init_vector:[262,280],init_vertic:399,init_vertices_glob:399,initi:[0,4,5,6,10,11,12,13,15,16,17,18,19,21,42,73,76,79,115,144,200,257,262,264,265,266,280,304,312,313,367,389,396,398,400,402,403,404,405,406,407,418,468,503,506,540],initialcondit:4,initialis:[7,8,76,78,81,82,83,200,266,292,312,418,423,424,425,426],inlet:1,inner:[0,2,9,10,11,13,14,15,16,17,18,19,21,176,243,266,471],input:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,263,471],input_kei:235,inradiu:[343,349,389,411,414,415],inscrib:[343,389],insert:[8,51,262,264,398,423,424,425,426],insert_glob:264,insert_loc:264,insid:[0,2,11,12,13,19,20,21,135,181,340,438,474,475,503],inside_funct:474,instal:22,instanc:[5,10,12,14,16,17,18,19,20,42,130,131,143,245,246,247,248,271,272,275,281,282,307,308,313,471,472,476,482,504],instanti:[4,504,506,518],instead:[0,8,11,12,13,15,21,46,52,87,96,197,235,260,388,471,472,504,506,512,517],intact:[94,97,116,126,127,135,475],intarrai:111,integ:[16,17,18,19,20,30,88,235,294,296,305,398,506],integr:[2,7,8,10,19,471,489,585],intend:[143,197,200,506],intens:5,intention:[256,257,291,304],inter:339,interact:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,32,235,236,239],interest:[0,16,18],interfac:[4,34,134,135,147,195,197,201,207,235,256,257,260,262,264,265,266,267,272,291,300,303,304,309,310,311,349,354,389,399,427,435,438,471,475,503,504],interior:[2,19,20,132,135,144,173,192,305,339,397,471,475],interior_facet:[178,179],interior_facet_domain:[132,144,159,160],intermedi:198,intern:[96,124,128,135,197,260,389,397,475,506,556],interpol:[4,143,182,192,195,197,200,206,486,489,503],interpolate_vertex_valu:143,interpret:[22,37,42,503],intersect:[168,213,340,343,349,410,459],intersected_cel:410,interv:[3,9,174,177,349,354,387,443],intervalmesh:[443,459],intial:4,intparamet:111,introduc:[4,7,8,10],invari:6,invers:[54,63],invert:305,invok:500,involv:[0,4,6,7,11,13,14,21,33,503],ipow:221,ipython:[554,555],is_broadcast:54,is_compat:[135,235],is_empti:398,is_ghost:400,is_linear:[138,139],is_orthogon:314,is_orthonorm:314,is_receiv:54,is_set:72,is_shar:400,is_symmetr:262,is_view:147,issu:[16,91],item:73,iter:[6,9,11,14,15,21,73,74,171,235,249,276,283,300,305,368,389,440,454,455,456,457,458,462,498],iterdata:73,iteritem:73,iterkei:73,itervalu:73,its:[6,14,19,73,214,278,279,429,430,503,513],itself:[197,343,506],jacobian:[4,6,11,170,276,278,300,497,500],jacobian_form:170,jacobian_index:169,jacobian_indic:[169,573,581],jit:[21,34,39,473,479,503,504],jonathan:343,jrs:343,jump:2,just:[6,7,8,16,18,34,41,389,418,442,444,489],keep:[242,256,262,265,275,291,309,389],keep_diagon:[133,471,472],kei:[45,47,53,72,73,75,235,238,398,544],kept:[5,9,256,257,471],key_press:235,keyboard:4,keyword:6,kind:[454,455,456,457,458,462,504,512],kinemat:[6,9],known:[4,15,16,18,19,74,99,354,423,424,425,426],krylov:[14,15,249,259,267,283,303,305,317,323,329,500],krylov_method:15,krylov_solv:[9,261],krylov_solver_method:[259,322],krylov_solver_precondition:[259,322],krylovsolv:[14,15,322,586],krylovsolver_default_paramet:322,ksp:[283,287],kwarg:[32,34,37,41,42,72,73,76,145,147,201,247,258,259,260,261,262,264,265,266,280,281,307,341,349,374,389,438,475,500,503,506],l_r_dt:139,l_r_t:139,l_star:139,la_index:[123,191,325],la_index_dtyp:322,la_solv:322,label:[16,17,18,19,88,135,199,235,440,475,503],lagrang:[0,2,4,5,6,7,9,10,11,13,16,21,206,221,488,493,512,515],lagrangeinterpol:221,lagrangian:192,lambda:[5,6,305],lame:6,lanczo:305,lapack:305,larg:[235,489,553],larger:[388,471],largest:[5,305],larsen:[579,580,582,583,585],last:[0,4,16,17,18,573,581],last_stag:[169,573,581],later:[2,4,11,12,13,15,19,21,76,81,200,471,481],latex:84,latter:19,layer:[469,499],layout:[147,259,262,265,280,309,312],lb_func:170,lead:[2,17,144],leaf:[145,340],leaf_nod:[0,148,149,150,153,155,197,200,381,382,383,384,385],least:[131,466],leav:[94,97,116,126,127],left:[3,6,12,14,15,19,20,21,42,138,321,343,433,445],legendr:221,legendre_d2dx:221,legendre_ddx:221,legendre_ev:221,length:[9,196,340,343,349,355,397,427,432,525,527,529],less:[0,11,15,19,21,145,465,466],let:[1,5,7,8,19],letter:374,level:[0,20,34,76,78,89,95,98,117,121,216,218,235,407],lhs:[9,19,138],librai:[143,506],librari:[3,5,44,197],lie:14,like:[11,21,92,135,195,432,454,455,456,457,458,462,475,503],limit:[48,264,556],line:[4,6,73,76,79,112,115,300,387],linear:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,21,130,132,135,138,139,143,144,156,157,166,168,171,173,182,188,198,249,253,256,257,258,259,260,261,265,267,269,271,272,273,275,276,283,287,303,311,312,313,317,318,319,323,324,326,327,328,329,330,331,332,333,334,343,465,470,471,494,495,496,498,500,506,512,586],linear_algebra_backend:[14,272,322],linear_form:156,linear_solv:[0,4,276,500],linear_solver_method:322,linearalgebraobject:[260,265,322],linearis:[4,561,584],linearoper:[260,322],linearsolv:[261,322],linearsolver_default_paramet:322,linearvariationalproblem:[0,130,189,465,467,468,499,586],linearvariationalsolv:[189,499,500,586],linearvariationalsolver_default_paramet:189,linf:491,link:389,linux:30,list:[6,7,8,9,10,12,34,37,73,116,127,137,139,144,145,147,156,170,188,199,217,228,249,251,252,253,255,259,283,285,286,287,289,297,299,300,302,323,324,328,329,330,331,332,333,334,340,388,389,406,410,427,432,470,472,476,493,500,501,515],list_krylov_method:500,list_krylov_solver_method:322,list_krylov_solver_precondition:322,list_linear_algebra_backend:322,list_linear_solver_method:322,list_lu_method:500,list_lu_solver_method:322,list_precondition:500,list_solver_method:500,list_tim:[86,111],literatur:144,live:[0,1,11,12,13,21,266,313],lmbda:[4,6],load:[5,9,15,16,17,18,471],local:[0,54,60,66,135,147,164,167,169,186,200,201,257,262,264,265,266,280,304,309,310,312,313,339,340,343,349,354,368,376,378,388,389,390,396,399,400,406,408,409,410,416,417,418,422,423,424,425,426,429,430,435,437,461,475,496,537,538,552],local_dimens:147,local_ent:[147,423,424,425,426],local_facet:[8,159,162,163,503],local_graph:[376,377,378],local_index:399,local_nnz:309,local_rang:[54,63,66,264,265,266,280,312],local_s:[266,418],local_to_glob:311,local_to_global_index:147,local_to_global_map:[257,266,304,312,313],local_to_global_unown:147,localassembl:189,localassembler_assembl:189,localassembler_assemble_cel:189,localassembler_assemble_exterior_facet:189,localassembler_assemble_interior_facet:189,localmeshdata:[376,377,459],localsolv:[189,499],locat:[92,135,475],log:[9,20,86,92,98,111,120,121],logg:139,logger:86,logic:[503,504],longer:4,look:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,500],loop:[4,9,145],low:34,lower:[141,170,197,235,300,434],lower_bound:170,lowercas:92,lshape:9,lt_coordin:221,lu_solv:261,lu_solver_method:[259,322],lusolv:[322,586],lusolver_default_paramet:322,machin:[0,11,12,13,19,21],made:[2,16,17,18,19],magic:[503,504],magnitud:[4,5,176,305],mai:[0,1,3,4,5,9,10,12,14,16,18,19,20,73,74,76,77,79,86,92,132,135,143,144,164,173,195,201,214,235,276,305,340,389,396,397,401,402,403,404,405,418,422,423,424,425,426,427,438,471,472,475,482,489,494,497,500,501,503,504,515,553],main:[19,536,546],mainli:427,maintain:15,make:[2,3,4,9,12,14,20,34,135,235,236,240,389,427,504],manag:76,mani:[9,454,455,456,457,458,462],manifold:521,manipul:[5,11,12,13,15,21],manner:15,manual:[7,8,9,10],map:[12,19,32,135,137,143,144,147,167,178,186,191,199,200,235,309,337,338,339,349,388,397,418,422,423,424,425,426,427,429,430,431,435,436,438,439,482,504,512,513,537,538,541],map_from_reference_cel:143,map_to_reference_cel:143,map_tol:438,map_toler:438,mardal:512,marini:[8,512],mark:[0,6,16,17,18,19,22,135,137,187,189,398,401,402,403,404,405,429,431,438,439,471,475,503,553],mark_cel:438,mark_facet:438,marker:[16,17,18,20,135,182,183,187,190,398,401,402,403,404,405,407,423,424,425,426,434,438,461,471,475,553],marker_valu:[423,424,425,426],marking_fract:[145,146],marking_strategi:[145,146],mass:[389,419,420],master:[429,430,431],masters_slav:429,mat:[256,280,291],mat_mumps_icntl_14:[1,294],match:[12,27,135,144,197,206,340,389,439,440,475,481],materi:[6,19,503],math:[26,28,144,503],mathemat:[0,10,11,13,14,21],mathworld:389,matplotlib:[411,413],matric:[9,135,260,262,264,280,305,503],matrix:[4,5,14,15,21,37,135,144,147,164,166,181,195,242,244,249,253,256,257,259,260,261,262,263,267,272,280,283,287,290,291,305,309,322,471,472,500,503,586],max:[54,67,243,266,340,400],max_cell_dimens:147,max_dim:398,max_dimens:[145,146],max_element_dof:147,max_iter:[145,146],max_valu:72,maxcount:48,maxfacetedgelength:531,maxim:389,maximum:[30,48,147,243,266,305,342,387,389,398,411,414,418,506,527],maximum_iter:305,mayavi:9,mayb:500,mckee:[337,338],mean:[0,10,19,21,46,52,87,135,144,340,422,423,424,425,426,475],measur:[0,2,19,343,471],mechan:[176,271],media:[6,7,8],member:[4,37,42,389],membership:[45,46,47,48,49,51,52,53,54,55,56,72,73,74,75,76,84,85,86,87,88,130,131,132,133,134,135,137,138,139,141,143,144,145,147,148,149,150,151,152,153,154,155,156,157,159,164,165,166,167,168,169,170,171,173,174,176,177,178,181,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,211,212,213,214,216,217,218,223,228,231,232,233,234,235,242,243,244,245,247,249,253,256,257,258,259,260,261,262,263,264,265,266,267,269,271,272,273,275,276,278,279,280,281,283,287,290,291,292,294,297,300,303,304,305,307,309,310,311,312,313,314,337,339,340,341,342,343,345,346,347,348,349,353,354,355,357,358,359,360,361,363,364,365,366,367,368,370,371,372,373,374,375,376,379,380,381,382,383,384,385,386,387,388,389,390,396,397,398,399,400,402,403,404,405,406,407,408,410,411,416,418,419,423,424,425,426,427,429,432,433,434,435,438,439,440,441,442,443,444,445,446,447,448,450,451,452,453,454,455,456,457,458,462,495,498],memori:[1,4,26,30,118,147],memory_usag:29,mere:388,mesh0:[192,193,537,538],mesh1:[192,193,537,538],mesh2svg:554,mesh:[0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,32,135,137,141,144,145,147,168,173,178,179,182,183,192,193,195,196,197,200,201,206,211,212,213,227,235,241,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,460,461,462,471,474,475,488,489,491,493,500,503,512,513,514,515,516,517,518,519,521,522,523,524,525,526,527,528,529,530,532,533,536,537,538,540,541,542,543,544,545,547,548,549,553,555,586],mesh_a:374,mesh_b:374,mesh_copi:389,mesh_data:[376,377,435,437],mesh_displac:212,mesh_fil:21,mesh_funct:[182,422,423,424,425,426],mesh_id:400,mesh_identifi:503,mesh_shared_ptr:144,meshcolor:459,meshcoloring_cell_color:459,meshcoloring_color:459,meshcoloring_color_cel:459,meshcoloring_compute_color:459,meshcoloring_type_to_dim:459,meshconnect:459,meshcoordin:[221,531],meshdata:[389,459],meshdisplac:[192,193,221,389],meshdomain:[389,402,403,404,405,459],mesheditor:[354,459],meshent:[343,355,361,367,448,454,455,456,457,458,459,462],meshentityiter:[440,456],meshentityiteratorbas:[454,455,457,458,462],meshfunct:[16,17,18,19,20,21,32,132,135,139,144,173,187,190,199,344,345,346,347,348,356,357,358,359,360,362,363,364,365,366,369,370,371,372,373,390,391,402,403,404,405,418,422,423,424,425,426,429,431,434,438,440,449,450,451,452,453,459,461,471,475,503,512,537,538,553,586],meshfunctionbool:[345,357,363,370,450,459],meshfunctiondoubl:[346,358,364,371,451,459],meshfunctionint:[347,359,365,372,452,459],meshfunctionsizet:[348,360,366,373,453,459],meshgeometri:[389,459],meshhierarchi:[459,461],meshpartit:459,meshpartitioning_build_distributed_mesh:459,meshpointintersect:[459,460],meshqual:459,meshquality_radius_ratio:459,meshquality_radius_ratio_histogram_data:459,meshquality_radius_ratio_matplotlib_histogram:459,meshquality_radius_ratio_min_max:459,meshrenumb:459,meshrenumbering_renumber_by_color:459,meshtopolog:[389,459],meshtransform:459,meshtransformation_rot:459,meshtransformation_transl:459,meshvaluecollecion:[402,403,404,405],meshvaluecollect:[402,403,404,405,423,424,425,426,438,439,459],meshvaluecollectionbool:459,meshvaluecollectiondoubl:459,meshvaluecollectionint:459,meshvaluecollectionsizet:459,mess:[7,8,144,169],messag:[9,20,48,90,91,92,96,113,114,117,292,293],meta:504,method:[2,4,5,6,7,8,11,14,15,17,19,135,166,170,192,195,197,199,235,249,251,253,255,256,257,259,267,269,283,285,287,289,300,302,303,317,319,323,328,329,332,333,334,475,500,503,504],microsecond:86,middl:20,midpoint:[21,135,400,438,475],might:[135,489],millisecond:86,min:[54,68,243,266],min_valu:72,minfacetedgelength:531,mini:22,minim:[0,6],minimis:6,minimum:[6,14,243,266,342,387,389,411,414,529],minr:15,minu:20,minut:5,miscellan:343,miss:[423,424,425,426],misspel:6,mix:[2,10,15,16,17,18,19,22,143,199,219,482,488,506,508,510,513,515],mixedel:482,mixedfunctionspac:[4,7,8,15,16,17,18,186,191,506,517,519],mixtur:4,mode:[6,32,144,235,236,240,241],model:[1,4,6],modifi:[10,12,13,21],modul:[0,1,2,3,4,6,7,8,9,10,11,12,13,14,16,17,18,20,21,34,489,536],module_nam:34,modulo:147,modulu:6,momentum:9,monitor:118,monitor_converg:73,monitor_memory_usag:111,mor:512,more:[3,4,5,6,7,8,10,12,13,15,19,21,32,37,96,132,164,168,173,213,340,354,410,427,454,455,456,457,458,462,472,493,503],moreov:15,morlei:512,most:[5,6,12,13,14,115,144,311,586],mostli:[198,264],move:[3,9,19,135,192,193,389,475],mpi:[3,4,34,76,78,80,81,82,102,111,228,264,265,312,342,387,389,406,433,441,443,445,503],mpi_:[54,62],mpi_avg:[54,94,111,116],mpi_barri:111,mpi_comm:[34,37,42,54,57,111,244,264,265,311,312,376,377,388,389,435,437,503],mpi_comm_world:[3,4,34,94,116],mpi_compute_local_rang:111,mpi_fin:76,mpi_gath:111,mpi_global_offset:111,mpi_group:34,mpi_index_own:111,mpi_initi:76,mpi_is_broadcast:111,mpi_is_receiv:111,mpi_local_rang:111,mpi_max:[94,111],mpi_min:[94,111],mpi_mpi_avg:111,mpi_op:[54,57],mpi_rank:111,mpi_siz:111,mpi_sum:[54,62,111],mpi_world_comm:34,mpiinfo:111,msg:[48,72,89,96,113,114,117,129],mshr:3,mtw:512,mu0:4,mu_:4,mu_mid:4,much:[12,13,20,21,164],mult:[242,260,272,290],multi:144,multigrid:[9,263],multimesh:[165,166,167,168,178,180,213,214,216,459],multimesh_default_paramet:459,multimeshassembl:189,multimeshdirichletbc:189,multimeshdofmap:[189,214],multimeshform:189,multimeshfunct:221,multimeshfunctionspac:[166,168,213,216,221],multimeshfunctionspace_default_paramet:221,multimeshsubspac:221,multiphys:439,multipl:[22,243,262,266,435,437,472,515],multipli:[2,7,8,10,427],multistag:[536,556,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,576,577,579,580,581,582,583,584],multistageschem:[189,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,574,576,577,584,585],multistagesolv:[558,576,577],mump:1,must:[0,1,2,3,4,9,11,13,14,15,16,17,18,19,20,21,22,46,52,87,94,138,145,147,176,195,199,219,262,266,292,305,313,321,367,389,432,471,481,506],mutabl:389,my_paramet:73,myexpression0:503,myexpression1:503,myfunc:503,myplot:32,myvectorvalu:506,n1curl:512,n2curl:512,name:[5,6,7,8,32,34,37,41,42,73,88,91,92,97,126,144,169,197,227,228,229,230,231,235,249,283,389,397,422,423,424,425,426,439,456,501,503,506,512,537,538,573,581],namespac:[34,227,503],natur:[7,8,10],navier:[15,22],ncell:503,ndofs_per_cel:503,necessari:[10,12,76,77,135,141,144],necessarili:472,nedelec:512,need:[0,2,4,5,6,7,8,10,11,12,13,14,16,17,18,19,21,34,42,46,48,52,87,115,144,169,195,200,256,257,272,303,368,398,418,422,423,424,425,426,471,503,504,506],neg:[7,8,181],neighbor:389,neighbour:[147,164],neo:6,nest:[73,501],nested_paramet:73,neumann:[0,6,7,11,13,14,19,21,22],new_boundari:[192,193],newton:[4,6,11,170,171,181,276,278,300,498],newton_solv:11,newtonsolv:[4,322],newtonsolver_default_paramet:322,next:[0,1,2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,235,440,454,455,456,457,458,462],nicolson:4,nnz:262,nodal:205,node:[11,12,145,147],non:[4,6,7,8,9,14,15,16,17,18,46,52,87,135,197,206,213,243,256,257,259,262,264,271,275,305,309,312,313,399,418],non_hermitian:305,non_matching_ev:197,none:[35,37,42,73,147,235,305,315,470,471,472,479,481,482,489,491,493,494,496,497,501,503,505,507,509,512,513,514,516,517,518,533,553,559,562,565,566,567,568,570,573,579,580,581,582,583],nonlinear:[4,6,22,131,135,138,166,170,171,182,188,276,278,279,300,466,497,498,500],nonlinear_funct:[276,300],nonlinear_poisson:11,nonlinear_problem:[276,300],nonlinearproblem:[4,276,279,300,322],nonlinearvariationalproblem:[131,189,466,467,468,499,586],nonlinearvariationalsolv:[189,499,500,586],nonlinearvariationalsolver_default_paramet:189,nonloc:[147,167],nonzero:[9,264],nonzero_initial_guess:9,norm:[4,14,16,18,235,243,244,262,266,432,486,489],norm_typ:[489,491],normal:[0,2,4,8,10,11,13,14,19,21,135,195,322,339,343,349,361,367,389,411,414,415,427,503,521,526],noslip:[1,9,15,16,17,18,20],not_working_in_parallel:111,notat:[139,144,512,517],note:[0,4,5,6,9,10,11,12,13,14,16,19,21,30,46,52,73,76,79,87,92,96,135,144,145,195,214,305,340,388,389,397,398,418,427,471,475,503],notebook:[554,555],noth:9,notic:12,now:[0,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,471],null_spac:14,null_vec:14,nullspac:[147,291,314,321],num_assigning_funct:199,num_bin:[411,413],num_cel:[389,399,503],num_coeffici:144,num_connect:396,num_edg:389,num_element_dof:[147,503],num_ent:[349,389,396,400],num_entity_dof:147,num_fac:389,num_facet:389,num_facet_dof:147,num_global_cel:[354,388,399],num_global_ent:400,num_global_vertic:[354,388,399],num_interv:[411,412],num_iter:389,num_jacobian_comput:174,num_local_cel:399,num_local_nonzero:264,num_local_vertic:399,num_mark:398,num_nonzero:264,num_nonzeros_diagon:264,num_nonzeros_off_diagon:264,num_part:[167,168,214,427],num_pass:[435,436],num_receiving_funct:199,num_row:[262,265,266,310],num_simplic:343,num_sub_el:143,num_sub_spac:513,num_vertic:[343,349,389,399],num_vertices_per_cel:388,number:[0,3,4,6,7,8,10,11,12,13,16,17,18,20,21,48,54,70,72,74,91,135,143,144,147,167,168,171,186,191,199,205,213,214,219,225,226,243,249,262,264,265,276,280,283,300,305,309,342,343,349,354,387,388,389,396,398,399,400,401,402,403,404,405,406,407,411,412,418,419,420,422,423,424,425,426,427,433,435,437,438,441,443,445,471,475,482,489,498,505,506,513,517,537,538],numer:[19,500],numeric_limit:340,numerical_limit:400,numpi:[34,46,52,87,135,144,147,186,194,195,197,200,262,266,325,340,343,389,397,399,402,403,404,405,416,417,427,438,475,501,513],object:[0,4,6,8,14,32,37,46,48,51,52,54,55,56,72,73,74,76,85,86,87,88,112,130,131,133,135,138,139,141,143,148,149,150,151,152,153,154,155,159,164,166,167,168,176,177,178,182,192,194,195,197,198,199,200,202,203,204,206,207,212,213,223,228,231,232,233,234,235,238,242,243,244,259,263,271,278,279,283,292,294,297,300,314,337,339,340,344,349,354,356,362,369,374,375,376,379,380,381,382,383,384,385,386,389,390,396,398,399,400,401,402,403,404,405,406,407,408,410,411,416,418,419,422,429,432,434,435,438,439,440,449,454,455,456,457,458,462,467,468,475,478,481,503,517],obstacl:19,obtain:[0,7,8,9,11,141],occur:[276,471,515],off:[0,9,11,12,13,21,120,201,264,489],off_diagonal_pattern:264,off_process_own:[147,167,311],offset:[54,62,186,191,214,418],ofilenam:542,often:[0,5,9,11,12,13,21],old:[200,337,338,435,436,513],oldest:9,omit:[3,11,482],on_boundari:[2,6,9,11,12,15,19,20,42,135,438,474,475],onc:[257,266],one:[0,1,4,5,6,7,8,9,20,21,34,37,46,52,54,61,87,112,135,168,174,177,187,190,199,205,213,216,218,219,235,262,305,309,340,368,389,390,392,393,394,407,411,414,415,427,429,430,471,472,475,482,489,512],ones:[12,18,20],onli:[3,7,8,9,10,12,14,15,20,21,30,32,48,54,58,116,135,143,144,186,191,195,197,235,256,257,260,266,272,303,305,340,389,397,400,401,402,403,404,405,416,417,418,422,423,424,425,426,429,430,475,503,506,512,553],onlin:343,onto:[487,492,493],open:[9,354,399],openmp:103,openmpassembl:189,oper:[0,1,2,4,5,7,8,10,11,12,13,14,15,16,17,18,19,21,54,57,73,147,194,198,200,212,243,249,253,256,259,260,261,262,263,266,272,275,283,287,291,314,321,432,481,482],oppos:3,opposit:[2,343,481],opt:[454,455,456,457,458,462],optim:[2,4,6,21,51,489,500],optimis:279,optimisationproblem:322,option:[2,3,4,6,16,18,20,21,73,92,94,97,112,116,126,127,135,144,147,166,182,195,199,201,228,235,264,283,287,291,294,295,296,304,321,339,401,422,445,454,455,456,457,458,461,462,470,472,475,489,491,493,494,497,500,501,503,506,513,516,517,553],option_str:73,order:[0,2,4,5,6,7,8,10,11,12,13,14,15,16,18,19,21,22,134,141,143,144,169,176,207,208,209,210,337,338,339,342,343,349,354,389,399,427,435,436,472,481,489,559,561,562,565,566,567,568,570,573,579,580,581,582,583,584],org:[256,257],organ:586,orient:[0,130,131,139,145,339,343,349,389,397,465,466,500],origin:[5,34,141,214,339,368,432,461,503,531,573,581],orthogon:[0,14,141,314],orthonorm:314,oscil:9,ostream:228,other:[4,5,6,8,9,11,19,20,21,46,52,73,74,87,135,144,145,340,355,389,427,429,431,476,481,489,490,500,512],other_paramet:73,otherwis:[6,15,16,17,18,30,72,115,197,235,256,257,283,397,398,503],our:[0,1,3,7,8,10,11,12,13,14,16,17,18,20,21],out:[86,113,122,144,353,389,427,472],out_valu:[54,61],outcom:144,outfil:228,outfilenam:549,outflow:[9,20],outlet:1,outlin:471,output:[4,9,11,12,13,21,94,122,400,432],outsid:[11,12,13,21],outstream:228,outward:[0,2,4,8,10,11,13,21,339,389],over:[3,7,8,9,16,17,18,19,20,21,73,86,132,135,139,144,165,173,199,235,339,342,368,389,397,406,407,418,438,440,441,445,454,455,456,457,458,461,462,471,475,478,512,519,537,538,553],overlap:427,overload:[8,45,46,47,52,53,54,61,66,72,74,75,76,78,79,84,86,87,88,89,116,130,131,135,137,138,144,145,147,156,157,164,166,167,168,169,170,171,176,181,182,184,185,188,192,193,194,195,197,198,199,200,201,205,206,212,213,214,216,217,218,219,228,235,241,242,243,249,253,256,257,258,259,261,262,265,266,267,269,271,272,273,275,276,283,287,291,294,296,300,304,305,309,310,311,312,313,337,338,339,340,342,343,349,350,354,355,361,367,374,376,378,387,388,389,390,391,396,397,398,399,400,402,403,404,405,406,407,408,409,418,419,420,423,424,425,426,427,432,433,434,438,439,440,441,443,445,448,454,455,456,457,458,461,462,475,495,498,503,505,507,508,509,510],overridden:471,overrul:[501,506],overwrit:[19,20,423,424,425,426],overwritten:94,own:[32,54,63,147,167,266,297,303,418,429,430],owner:[400,429,430],ownership:[46,52,87,147,167,235,257,265,266,304,313,400],ownership_rang:[147,167,311,312],owns_index:266,p2v:515,p_in:9,pair:[9,15,18,135,171,198,276,300,309,389,396,418,423,424,425,426,427,498],paper:343,parabol:4,parallel:[3,4,9,54,64,65,119,135,137,147,186,201,262,280,388,401,402,403,404,405,435],paramet:[0,2,9,11,14,25,37,41,45,47,49,50,53,72,75,76,79,88,111,112,135,136,139,140,145,146,157,158,171,172,174,175,177,214,215,235,237,241,249,250,253,254,261,267,268,269,270,272,273,274,276,277,283,284,287,288,294,297,298,300,301,305,306,427,428,471,493,494,495,497,498,500,503,561,584],parameter_typ:261,parametervalu:[45,47,53,75,111],paramt:1,paraview:9,parent:[148,149,150,153,155,197,200,381,382,383,384,385,439,537,538],parent_edge_indic:540,parent_vertex_indic:[397,439,537,538],parmeti:104,pars:[73,76,79,388],part:[2,4,5,6,7,8,10,11,12,13,16,17,18,19,20,21,144,167,168,213,214,266,305,310,389,416,417,427,471,505,507,509],part_numb:427,partial:[0,1,2,5,7,8,9,10,11,12,13,14,21,135,475],particular:[0,1,4,5,7,8,10,11,12,13,21,135,144,192,249,271,283,297,300,305,475,519],particularli:212,partit:[135,147,264,367,388,408,409,435,437],partli:512,pass:[4,6,34,46,52,87,174,177,199,315,471,494,497,500,503,506,575,585],path:[21,228,229],pattern:[178,179,180,264,266,311,312,396,471],pbc:12,pde:[473,577],pdf:[235,343],penalti:2,per:[6,186,187,190,191],perform:[4,7,8,9,10,16,17,18,135,199,235,389,475],period:[22,137,429,431,438],periodicboundari:12,periodicboundarycomput:459,periodicboundarycomputation_compute_periodic_pair:459,periodicboundarycomputation_masters_slav:459,permit:[4,197,294],perserv:472,perturb:[561,573,581,584],petsc4pi:[280,283,287,300,304],petsc:[1,5,14,15,34,76,79,83,84,105,108,115,280,283,287,291,292,293,294,295,296,297,300,304,305],petsc_error:292,petsc_exp:34,petsc_funct:[292,293],petscbasematrix:[290,291,322],petscfactori:322,petscfactory_inst:322,petsckrylovsolv:[280,297,322],petsckrylovsolver_default_paramet:322,petsckrylovsolver_method:322,petsckrylovsolver_precondition:322,petsclinearoper:322,petsclusolv:322,petsclusolver_default_paramet:322,petsclusolver_method:322,petscmatrix:[5,322,471],petscobject:[280,283,287,297,300,303,304,305,322],petscobject_petsc_error:322,petscopt:[1,322],petscoptions_clear:322,petscoptions_set:322,petscprecondition:[283,303,322],petscpreconditioner_default_paramet:322,petscpreconditioner_precondition:322,petscsnessolv:322,petscsnessolver_default_paramet:322,petscsnessolver_method:322,petscuserprecondition:322,petscvec:34,petscvector:[34,322],pfile:9,pfile_pvd:[15,16,17,18],phase:4,phrase:8,physic:[0,530],pick:[15,353],piec:[7,8,305],piecewis:[0,1,5,6,9,11,13,15,16,17,18,21,489],pixel:235,place:[6,7,8,388,397,482],plai:15,pleas:197,plot:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,26,235,236,238,239,240,411,413],plot_mesh:[145,146],plotfil:32,plotter:[235,238],plugin:3,png:235,point:[0,1,3,6,8,11,12,13,20,21,54,59,134,143,176,195,197,201,205,207,208,209,210,235,278,339,340,342,343,349,354,367,374,387,388,389,399,400,406,410,419,420,421,427,433,435,437,438,448,454,455,456,457,458,459,460,462,474],pointer:[46,52,87,135,144,156,157,164,167,168,170,171,173,213,214,272,291,304,398,427,434,495,498],pointintegr:576,pointintegralsolv:[189,575,578,585],pointintegralsolver_default_paramet:189,pointload:[135,475],pointsourc:189,pointwis:[135,475],poisson:[1,2,5,6,15,22],polici:[54,64,65],polynomi:[0,1,4,5,6,7,8,10,11,13,21,205,207,208,209,210,483,489,517],pool:[435,436],popul:19,porou:[7,8],portion:[6,54,60,66,388],pos:[454,455,456,457,458,462],pos_gen_non_hermitian:305,pose:10,posit:[15,16,17,18,51,305,423,424,425,426,454,455,456,457,458,462],possibl:[4,6,15,20,32,34,46,52,86,87,134,135,141,168,197,206,213,305,312,389,427,434,475,491,500],post:[164,493],potenti:[4,6,471],pow:[0,7,8,10,13,14,19,21],power:[222,305,503],practic:21,pre:182,prec:9,precis:[0,11,12,13,19,21,86],precomput:389,precompute_basis_const:6,precompute_ip_const:6,precondition:[9,15,147,249,252,259,261,263,267,283,286,297,299,318,324,330,500],preconditioner_typ:493,predefin:19,prefer:92,prefix:[235,283,287,291,294,304],preprocess:473,prescrib:[1,2,6,7,8,16,17,18,19,471],presenc:4,present:[4,145,272],preserv:[181,470,472],press:[235,236,240],pressur:[9,15,16,17,18,216,218],pretti:[46,52,73,84,87,88,167,242,243,272,396,400,406,418,432],prevent:1,previou:[4,6,19,407,427],previous:[0,11,12,13,21],primal:[0,130,131,139,141,145,465,466,467,468],primari:264,primary_dim:[264,309,311,312],primit:92,print:[3,5,9,16,18,19,20,34,46,48,52,73,84,86,87,88,92,96,112,113,114,116,117,129,167,200,242,243,272,292,293,396,400,406,418,432,456,491],print_dofmap:200,print_funct:[3,5,9,16,18,19],printf:92,prior:[201,310],priori:354,prism:[3,342],probabl:5,problem:[15,33,130,131,135,139,141,145,156,157,164,166,170,171,176,182,188,276,278,279,300,305,465,466,467,468,489,494,495,496,497,498,500,586],problem_typ:305,proce:[10,21],procedur:[0,11,22],process:[4,9,12,13,21,30,54,60,61,63,66,69,70,118,135,137,147,164,167,201,257,262,264,266,304,313,339,389,399,400,406,407,408,409,411,414,418,422,423,424,425,426,429,430,435,437,454,455,456,457,458,462,475,493,553],processor:[34,186,388],produc:[3,20,339],product:[7,8,9,10,15,16,17,18,176,201,242,243,260,262,266,272,280,290,355,432],program:[4,9,20,23,118,144],progress:111,project:[9,16,19,164,486],promis:242,propag:37,properti:[0,19,503],propos:9,proven:309,provid:[0,3,4,10,11,13,14,16,17,18,19,21,33,36,38,41,43,46,51,52,54,74,84,87,108,132,133,147,173,176,178,181,192,201,256,257,261,263,271,273,275,276,291,294,304,305,313,349,353,354,389,411,435,439,454,455,456,457,458,462,469,470,471,473,478,481,482,487,490,492,499,516,517,551,552,554],psi:6,ptr:[130,131,271,275,313],puh:427,punctuat:92,pure:[14,22],purpos:[19,46,52,87],put:[12,389],pvd:[1,2,4,6,9,11,12,13,15,16,17,18,20,21,228],pydolfin:[36,505,507,508,509,510],python:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,25,33,34,44,46,52,87,144,195,197,212,276,310,399,427,469,473,499,503,504,511,551,578],qmr:15,quadrant:9,quadrat:[2,6,9,15,18],quadratur:[4,427,489,512],quadrature_rule_cut_cel:427,quadrature_rule_interfac:427,quadrature_rule_overlap:427,quadrilater:349,qualiti:[343,411,412,413],quantifi:411,quantiti:[0,6,19,310],quasi:181,queri:503,quicker:586,r_dt:139,r_t:139,r_vec:305,radii:[389,411,414],radiu:[135,343,411,414,415,475],radius_ratio:[343,349,411],radius_ratio_histogram_data:411,radius_ratio_matplotlib_histogram:411,radius_ratio_min_max:411,rais:[3,427],rand:221,random:[4,225,226],rang:[14,19,48,54,60,62,66,72,73,74,147,167,220,235,257,264,265,266,280,304,312,313,411,414,415,418,440],range_max:235,range_min:235,range_str:72,rank:[4,14,37,54,69,143,144,168,195,201,212,264,265,312,471,503],rather:[15,16,17,18,214],ratio:[6,343,411,412,414,415],raviart:[7,512],raw:228,reach:[4,440,454,455,456,457,458,462],read:[0,1,2,4,7,8,10,11,12,13,14,15,16,17,18,19,20,21,92,228,231,422,423,424,425,426],readabl:9,readi:[1,5,7,8,15,20],readili:493,readm:92,real:[5,10,279,305,310,512],realli:[235,236,240,400],reason:[92,135,475],rebal:407,rebuild:389,receiv:[54,65,199,219],receive_mesh_data:388,receiving_func:[199,219],receiving_process:[54,61],receiving_spac:199,recent:6,recogn:[54,57,397],recommend:5,recomput:235,rectangl:[3,19,433],rectanglemesh:[3,445,459],rectangular:[3,342],recurs:73,redefin:10,redistribut:[388,408,461,553],reduc:[4,147],reduct:[54,57,62,94,116],refer:[0,3,4,6,7,8,9,46,52,87,143,145,146,167,168,214,256,257,427,471],refin:[0,182,183,349,401,402,403,404,405,407,459,500,550],refine_cel:349,refined_mark:183,refined_mesh:461,reflect:[135,144],regener:[2,9],region:[16,17,18,19,300],regist:41,regular:[418,454,455,456,457,458,462],reimplement:[195,473],rel:[0,1,5,11,12,13,14,21,135,139,200,276,339,340,343,349,367,389,422,423,424,425,426,475],relat:[389,396,418,456],relative_residu:276,relative_toler:[4,11,73],releas:91,relev:[7,8,553],reli:[5,134,170,454,455,456,457,458,462,473],remain:[7,8,9,10,15,135,475],remaind:[6,19],remedi:[135,475],rememb:9,remov:[9,14,20,73,91,310],renam:[73,88,473],render:[32,235,554,555],renumb:[389,416,417],renumber_by_color:[389,416],reorder:[137,435,436],reordered_argu:481,repartit:[388,408],repeat:[235,257,266],repeatedli:[214,427],rephras:4,replac:[8,266,427],report:119,repres:[0,4,11,12,13,16,17,18,19,21,85,134,138,156,168,170,194,195,196,197,198,200,211,213,214,216,218,228,310,368,397,400,410,427,432,434,494,497,501,503,506,512,514,515,516,517,525,528],represen:489,represent:[4,34,46,52,73,84,87,88,139,167,212,242,243,256,262,266,272,280,283,287,300,304,305,389,396,400,406,418,432,489,505,506],request:278,requir:[1,2,4,5,6,8,10,12,14,76,78,147,170,263,305,468,501],required_thread_level:[76,78],rescal:[9,235],reserv:6,reset:[72,94,97,116,126,127,164,471],reset_newton_solv:174,reset_stage_solut:174,resid:[199,219,506],residu:[0,4,11,14,130,131,139,141,170,276,322,465,466,500],residual_form:170,residual_represent:139,resiz:[3,256,257],respect:[0,1,2,4,6,14,18,19,314,343,349,368,456,561,584],respet:1,respons:[76,82,83,205,389],responsible_mpi:76,responsible_petsc:76,rest:19,restrict:[2,164,201,389,416,417,459,512,516,517],result:[4,5,7,8,9,10,14,15,16,18,164,206,410,482,504],resum:86,retriev:[73,294],reus:[144,214,283],revers:[337,338],rhs:[9,19,138,181,198,506,573,581],rhs_form:[559,561,562,565,566,567,568,570,573,579,580,581,582,583,584],rhs_int:138,richard:343,right:[2,3,5,6,8,9,10,12,14,15,19,20,21,42,135,138,144,176,303,321,339,343,433,445,471],rigid:147,rk4:575,rksolver:[189,575,578],rl1:585,rl2:585,rmax:389,rmin:389,robust:19,robustli:[422,423,424,425,426],rogn:139,root:9,root_nod:[0,148,149,150,153,155,197,200,381,382,383,384,385],rotat:[3,9,147,389,419,420,432],roughli:2,round:[0,11,12,13,21,489],rout:20,routin:34,row:[84,85,135,195,244,256,257,262,263,264,265,266,275,280,291,304,309,310,313],rule:427,run:[0,3,4,10,11,13,14,20,21,22,137,201,272,500],runtim:[44,504],runtimeerror:3,rush:[579,580,582,583,585],rushlarsenschem:[558,579,580,581,582,583],safe:[46,52,87],safeguard:[454,455,456,457,458,462],safisfi:10,sai:[0,11,12,13,21],same:[6,7,8,12,15,19,20,141,144,199,219,235,340,343,389,402,403,404,405,427,439,482,483,489,503,506,515],sampl:471,satisfi:[0,1,6,7,8,10,12,13,15,19,21,130,131,465,466],save:[1,2,4,6,9,11,12,13,15,16,17,18,20,21,235,390,392,393],save_data:[145,146],scalar:[4,6,9,17,37,42,176,184,194,195,198,217,235,322,432,471,501,503,517,556,557],scalarbar:[32,235],scale:[6,32,235],scan:[54,62,503],scene:[20,503],scheme:[169,174,177,401,402,403,404,405,418,559,562,565,566,567,568,570,576,577,579,580,582,583,585],schur:[242,305],schur_approxim:242,scipi:256,scope:86,scotch:[106,459],scotch_compute_gp:459,scotch_compute_partit:459,screen:[2,4,6,32],script:44,search:[135,283,287,291,300,304,475],second:[0,2,3,4,7,8,10,11,13,14,16,17,18,20,21,86,194,207,208,340,342,399,422,423,424,425,426,433,506,580,583],see:[2,6,8,235,343,472,489,491,493,503,504,512,516,517],seed:[4,221],seen:10,select:[257,266,304],self:[2,4,8,11,12,19,20,73,503],semi:562,semicolon:11,semidefinit:305,semilinear:11,send:0,sens:427,sent:[76,79,504],separ:[4,7,8,10,15,16,17,18,19,217,418,427],sequenc:4,serial:[399,553],set:[0,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,25,32,34,51,54,59,72,73,84,121,122,135,144,147,166,170,173,205,214,235,236,240,242,243,249,253,256,257,261,262,263,265,266,275,283,287,291,294,296,297,300,304,305,309,313,339,389,396,398,400,401,402,403,404,405,406,418,423,424,425,426,427,435,437,438,456,471,475,503,553],set_al:[19,20,402,403,404,405,553],set_allow_extrapol:197,set_block:[242,243],set_bound:170,set_cell_domain:144,set_child:[148,149,150,151,152,153,154,155,202,203,204,232,233,234,379,380,381,382,383,384,385,386],set_coeffici:144,set_coordin:263,set_deflation_spac:305,set_diagon:262,set_exterior_facet_domain:144,set_fieldsplit:297,set_global_index:418,set_global_s:396,set_interior_facet_domain:144,set_kei:235,set_loc:[257,262,265,266,304,313],set_log_act:111,set_log_level:[20,111],set_mark:398,set_mesh:144,set_min_max:235,set_nullspac:[14,261,263,291],set_oper:[15,249,253,261,287],set_options_prefix:[283,287,291,304],set_output_stream:111,set_par:[148,149,150,151,152,153,154,155,202,203,204,232,233,234,379,380,381,382,383,384,385,386],set_rang:[72,73],set_reuse_precondition:283,set_some_coeffici:144,set_valu:[135,402,403,404,405,423,424,425,426],set_vertex_domain:144,set_viewangl:235,set_x:147,setrow:262,setup:303,sever:[0,144,199,219,235,340,556],shall:[0,1,10,11,12,13,14,15,16,17,18,21],shallow:[16,18,197],shape:[9,20,143,194,195,212,503,516],share:[2,46,52,87,130,131,135,143,144,147,156,157,164,167,168,170,171,197,200,213,214,271,272,275,313,389,398,400,418,427,429,430,434,435,437,495,498,506],shared_ent:418,shared_facet:2,shared_inst:[271,272,275,313],shared_nod:147,shared_ptr:[21,34,171,199,241,257,283,402,403,404,405,423,424,425,426,427,498,503],sharing_process:400,shewchuk:343,shift:[235,305],should:[4,8,9,11,12,13,15,16,17,18,21,34,54,64,65,92,96,112,115,124,128,135,144,173,182,186,191,235,259,260,294,339,340,389,398,423,424,425,426,427,438,461,475,482,489,503,553],show:[5,10,34,235,456],shown:[5,235],side:[2,6,8,9,10,14,15,19,135,138,176,303,471,473],sigma:[7,8],sign:[15,16,17,18],signal:9,signatur:143,significantli:503,silent:94,similar:440,similarli:389,simpl:[0,10,11,12,13,14,21,22,46,52,74,87,143,195,256,257,291,304,309,399,487,489,490,492,503,551,554],simplest:[32,135,471,475],simpli:[0,11,12,13,21,32],simplic:[19,343],simplici:399,simplifi:73,simul:0,simultan:[15,16,17,18],sin:[0,2,6,7,8,9,10,11,12,13,14,15,16,17,18,488,493,503],sinc:[0,4,6,8,9,10,11,13,14,16,17,18,20,21,115,125,135,340,418,454,455,456,457,458,462,473,489],singl:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,156,170,188,199,219,340,407,439,446,447,470,482,501,503],singleton:[76,247,248,281,282,307,308],singular:[22,261,314],size:[2,3,4,9,17,46,51,52,54,60,66,70,87,147,195,199,201,205,219,242,243,244,257,260,262,265,266,272,280,290,304,309,312,313,337,338,389,396,397,402,403,404,405,406,407,418,423,424,425,426,522],size_glob:[389,396,418],size_t:[16,17,18,19,20,21,92,97,126,135,144,182,200,389,397,400,401,422,423,424,425,426,427,438,471,503],size_t_:88,sizeof:123,sizeof_la_index:111,slave:[429,430,431],slepc4pi:305,slepc:[5,107,305],slepceigensolv:[5,322],slepceigensolver_default_paramet:322,slip:[9,15,16,17,18,20],slower:503,small:[0,11,12,13,21,305,489,499],smallest:305,smooth:[263,389],smooth_boundari:389,smoother:212,snap:[389,438],snap_boundari:389,sne:300,snippet:35,sole:19,solid:3,solut:[0,1,2,4,6,7,8,10,11,12,13,14,15,16,17,18,19,21,130,131,135,139,141,145,156,164,170,181,253,272,287,305,427,465,466,475,500,559,561,562,565,566,567,568,570,573,579,580,581,582,583,584],solv:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,84,145,157,164,171,188,249,253,258,261,267,269,273,276,283,287,300,303,305,326,465,466,486,493,494,495,496,497,498,576,577,586],solvabl:14,solve_global_rh:164,solve_loc:164,solve_local_rh:164,solve_prim:145,solve_transpos:[253,258,261,269,287],solver:[0,1,2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,157,170,171,174,177,181,249,251,253,255,258,259,260,261,267,269,273,276,278,283,285,287,289,300,302,305,328,332,495,496,498,499,500,561,584],solver_paramet:[11,500],solver_typ:[164,493,496],some:[1,2,3,4,5,6,11,15,17,19,27,73,125,133,135,144,305,339,400,408,456,471,475,500,531,553,586],someth:[471,489],sometim:[4,5,112,135,475],somewhat:504,sorri:15,sort:[5,264,309],sought:[6,10],sourc:[0,1,2,7,8,9,10,11,12,13,14,19,21,22,34,92,176],space:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,73,135,141,143,144,147,156,165,166,167,168,170,176,182,186,191,195,197,199,200,213,214,216,218,219,261,263,305,314,321,349,397,400,427,432,475,482,483,485,487,488,489,492,493,494,497,503,506,508,510,512,513,514,515,516,517,519],space_dimens:143,span:[3,14,342,433],sparrai:256,spars:[132,173,242,244,256,262,265,275,291,309,312,396],sparsematrix:256,sparsiti:[178,179,180,264,266,311,312,471],sparsity_pattern:[178,179,180,304,312],sparsitypattern:322,sparsitypatternbuild:189,sparsitypatternbuilder_build:189,sparsitypatternbuilder_build_multimesh_sparsity_pattern:189,spatial:[4,6,147],spatialcoordin:531,special:[19,76,77,340,376,378,504,531],specialfacetfunct:[139,221],specialfunct:[520,521,522,523,524,525,526,527,528,529,530],specif:[5,6,10,25,135,137,349,400,456,471,475,512],specifi:[0,1,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,32,132,135,144,147,166,170,173,205,216,218,228,303,305,353,389,390,392,394,396,397,399,440,461,471,475,491,494,497,500,503,516,517,553],spectral:305,spectral_shift:305,spectral_transform:305,spectrum:305,sphere:[135,343,389,475],split:[2,4,7,8,9,10,15,16,17,18,54,60,66,506,513],sqr:27,squar:[0,2,3,4,7,8,9,10,11,12,13,14,16,19,20,21,343,349,367,432,445,489,512],squared_dist:[343,349,367,432],squared_norm:432,stabil:22,stabl:[7,8,15,18,489],stage:[169,573,581],stage_form:169,stage_solut:[169,573,581],stand:512,standard:[2,4,5,11,12,13,14,15,18,19,214,256,257,291,304,389,427,432,471,472,488,490,491,512],start:[15,19,20,86,118,124,144,427],start_vertex:545,statement:[4,472],stationari:139,std:[21,34,92,97,126,135,144,145,146,182,191,199,200,228,309,340,389,397,400,402,403,404,405,422,423,424,425,426,427,438,445,503],std_out_all_process:9,step:[0,4,5,9,10,11,13,14,15,16,19,21,33,74,174,177,473],step_interv:[174,177],stiff:[5,48,471],still:[135,427,475],stl:[309,454,455,456,457,458,462],stlfactori:322,stlfactory_inst:322,stlmatrix:322,stockmey:[435,436],stoke:[20,22,216,218],stop:[0,86],storag:[51,84,256,418],store:[1,2,4,7,8,9,10,14,15,16,17,18,19,20,21,73,86,94,97,116,126,127,135,137,145,164,197,309,388,389,396,397,398,401,402,403,404,405,410,418,422,423,424,425,426,427,439,471],str:[34,37,46,52,72,73,74,87,88,91,92,94,97,126,135,144,166,167,190,197,228,229,230,242,243,272,389,396,397,399,400,401,402,403,404,405,406,418,422,423,424,425,426,432,433,445,475,501,503,506],str_latex:84,strain:6,strategi:[4,6,9,130,131,190,465,466],stream:[113,122,228],string2typ:349,string:[0,4,10,11,13,14,21,30,37,38,42,43,46,48,52,54,61,72,73,75,84,87,88,91,92,93,112,135,143,145,146,166,167,235,242,243,272,294,296,321,349,350,351,352,396,397,400,401,406,411,413,418,422,432,445,454,455,456,457,458,462,475,503,512,516,517],string_:339,stringparamet:111,strong:[16,17,135,139,475],structur:[51,214,242,256,262,265,275,291,309,340,389,396,503],studi:19,style:92,sub:[4,6,7,8,11,12,15,16,17,18,19,20,76,135,137,143,147,185,197,199,200,201,212,219,243,389,397,401,402,403,404,405,434,439,475,506,513],sub_add:198,sub_compon:[216,218],sub_domain:[16,17,18,20,135,166,389,429,430,431,434,438,439,475],sub_domains_bool:20,sub_domains_doubl:20,sub_sub:198,subclass:[2,4,8,12,34,37,42,46,52,87,144,145,192,193,259,315,316,320,389,474,503,504],subdomain:[1,2,6,11,12,13,16,17,18,21,22,27,39,42,132,135,137,166,173,353,389,398,402,403,404,405,434,439,459,471,474,475,512,549,586],subdomain_data:[19,471],subdomains_bool:20,subdomains_doubl:20,subdomian:6,subel:[508,510],subfunct:[197,212],subject:181,submesh:[397,459,540],subregion:19,subscript:2,subsequ:[9,11,130,131,212,388,465,466],subset:[9,73,116,127,135,144,398,422,423,424,425,426,434,439,440,475],subset_it:440,subsetiter:459,subspac:[0,7,8,15,200,216,221,305,482,506,513],subsystem:[76,77],subsystemsmanag:[111,292],subsystemsmanager_fin:111,subsystemsmanager_init_mpi:111,subsystemsmanager_init_petsc:111,subsystemsmanager_mpi_fin:111,subsystemsmanager_mpi_initi:111,subsystemsmanager_responsible_mpi:111,subsystemsmanager_responsible_petsc:111,subtract:[9,489],suffer:489,suffix:[9,11,12,13,21,94,228,235],suggest:[5,15,19],suitabl:[1,2,6,10,11,12,13,14,15,19,21,181,427,467],sum:[4,54,71,199,219,257,266,304,313,489],summari:[0,1,11,12,13,21,86,94,112,116,127,145,235],superspac:200,suppli:[6,135,144,195,235,303,408,409,475,500],support:[3,15,76,78,137,235,241,390,397,432,512],suppos:[7,8],sure:14,surfac:4,svg:[228,554,555],svgtool:[550,555],swig:[34,44,504,536,551],swigimportinfo:39,symbol:[521,523,524,526,527,529,530],symmetr:[0,9,15,16,17,18,21,244,262,472,516],symmetri:[15,181,242,470,472,516],synchron:[54,59],synonym:11,syntax:[0,2,4,6,10,11,13,14,21,42],synthes:235,system:[4,9,11,14,16,17,18,20,30,34,48,76,86,97,126,132,135,166,173,181,185,249,253,258,261,267,269,272,273,276,283,287,294,300,303,305,326,406,470,472,500,586],systemassembl:[189,473],tabl:[54,57,58,85,111,127,235],tableentri:111,tabul:147,tabulate_all_coordin:147,tabulate_all_dof:263,tabulate_coordin:147,tabulate_entity_dof:147,tabulate_facet_dof:147,tabulate_local_to_global_dof:147,tag:[16,17,18,19],tai:512,take:[0,1,3,4,5,7,8,11,12,13,19,20,21,46,52,87,235,294,296,297,388,504,561,584],taken:[0,15],tan:503,tangent:[561,584],tao:108,target:[12,305],task:[4,6,86,89,92,94,95,97,116,126,127],tau:[7,8],taylor:[9,15,22],tdim:[340,343,354,374,388,399],tear:484,techniqu:[0,300],tell:[4,6,11],temam:9,templat:399,tend:5,tensor:[4,5,6,22,132,144,164,165,173,184,194,195,242,243,259,264,265,266,311,312,315,316,320,471,472,489,501,503,516],tensor_layout:266,tensorfunctionspac:519,tensorlayout:322,tent:9,term:[0,1,2,6,7,8,10,11,12,13,14,21,23,260,272,342,489,491,519],termin:[4,15],test:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,19,21,141,144,156,170,262,276,310,314,321,442,444,446,447,481,494,497,500,507,556,557],test_spac:[156,170],testfunct:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,511,586],tetrahedr:[6,342,441],tetrahedra:[5,342,441],tetrahedron:[32,349,354,446],tetrahedroncel:340,text:235,tfqmr:15,than:[0,9,11,15,16,17,18,20,21,37,135,145,164,340,465,466,471,482,503,553],thei:[4,5,16,18,19,201,489],them:[9,12],themselv:340,therebi:[3,141],therefor:[3,5,6,9,14,15,17,76,82,83,427,503],theri:7,theta:[4,6,432],thi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,30,33,34,36,38,40,43,44,46,49,51,52,54,73,74,76,77,84,85,87,92,96,115,118,130,131,132,133,134,135,137,138,141,143,144,147,156,157,164,165,166,167,168,169,170,171,173,176,178,181,192,194,195,196,197,198,199,200,201,205,206,211,212,213,214,216,218,228,235,249,253,256,257,258,259,260,261,262,263,264,265,266,267,271,272,273,275,276,278,279,280,283,287,291,292,297,300,303,304,305,309,310,311,312,313,314,337,339,340,342,343,349,353,354,355,367,368,376,387,388,389,390,399,400,408,410,411,414,415,416,417,418,419,423,424,425,426,427,429,430,431,432,433,434,435,438,441,442,443,444,445,446,447,461,465,466,469,470,471,473,475,478,480,482,487,489,490,492,493,494,495,497,498,499,503,504,505,506,507,508,509,510,511,519,525,528,531,551,552,554,556,561,575,578,584,585],think:19,third:[0,1,3,4,7,8,10,11,13,20,21,135,194,399,475],thisown:[45,46,47,48,49,51,52,53,54,55,56,72,73,74,75,76,84,85,86,87,88,130,131,132,133,134,135,137,138,139,141,143,144,145,147,148,149,150,151,152,153,154,155,156,157,159,164,165,166,167,168,169,170,171,173,174,176,177,178,181,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,211,212,213,214,216,217,218,223,228,231,232,233,234,235,242,243,244,245,247,249,253,256,257,258,259,260,261,262,263,264,265,266,267,269,271,272,273,275,276,278,279,280,281,283,287,290,291,292,294,297,300,303,304,305,307,309,310,311,312,313,314,337,339,340,341,342,343,345,346,347,348,349,353,354,355,357,358,359,360,361,363,364,365,366,367,368,370,371,372,373,374,375,376,379,380,381,382,383,384,385,386,387,388,389,390,396,397,398,399,400,402,403,404,405,406,407,408,410,411,416,418,419,423,424,425,426,427,429,432,433,434,435,438,439,440,441,442,443,444,445,446,447,448,450,451,452,453,454,455,456,457,458,462,495,498],thoma:[7,512],those:[11,12,13,19,21,418],thousand:489,thread:[76,78,144],three:[1,3,5,6,7,8,9,11,12,13,20,21,135,475,506],through:[0,1,7,8,10,11,13,14,15,16,19,20,21,134,235,389,419,420,422,423,424,425,426,427],throughout:21,thu:[0,1,10,11,13,14,19,20,21,489,501,504],tic:111,tied:137,tile:235,tile_window:235,time:[0,9,10,11,13,14,21,26,34,41,48,72,84,86,94,97,111,116,124,128,174,177,181,235,272,343,389,470,501,503,561,573,581,584],timer:111,timestep:169,timingclear:[94,97,116,126,127],timingclear_clear:[94,97,116,126,127],timingclear_keep:[94,97,116,126,127],timingtype_system:[116,127],timingtype_us:[116,127],timingtype_wal:[116,127],tite:32,titl:[0,3,9,11,19,21,32,74,235,241],to_adm:[561,573,581,584],to_dict:73,to_kei:235,to_tlm:[561,573,581,584],toc:111,togeth:[0,6,20,37,73,135,199,256,257,278,408,475],toi:34,tol:[0,73,130,131,145,188,223,465,466,500],toler:[0,4,11,130,131,145,223,305,438,465,466,500],too:553,tool:493,top:[8,19,20,235,427,469,499],top_bottom:15,topic:586,topolog:[20,21,135,166,340,343,344,345,346,347,348,349,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,371,372,373,388,389,390,392,393,394,395,396,398,399,400,401,402,403,404,405,418,422,423,424,425,426,434,438,439,448,449,450,451,452,453,454,455,456,457,458,462,471,475],topological_dimens:[21,143,343,503],total:[3,6,97,126,264,342,387,396,433,441,443,445,506],tpetra:[15,84],tpetsc:14,traction:6,transfer:[182,235],transform:[14,305,419],translat:[389,419,421],transpmult:262,transpos:[242,253,287,314],tree:[92,340,374,389,406,427],trial:[0,1,2,4,6,7,8,9,10,11,12,13,14,21,135,144,156,170,475,481,494,497,509],trial_spac:[156,170],trialfunct:[0,1,2,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,21,511,586],triangl:[0,7,8,10,11,13,14,21,349,354,361,433,445,447],triangul:[2,343,349],triangular:[21,433,445],triangulate_intersect:[343,349],trigger:9,trilino:15,trival:14,trust:300,tupl:[30,37,73,97,126,468,476,481,482,501,503,508,510,515],turn:[5,9,120,389,400,432],tuxfamili:[256,257],twice:2,two:[0,1,2,3,4,6,7,8,9,10,11,13,14,15,16,17,18,19,21,201,205,216,218,340,342,349,389,402,403,404,405,422,423,424,425,426,433,439,489,500],type2str:349,type:[4,5,6,7,8,10,16,17,18,19,20,21,45,47,53,72,73,75,92,116,123,127,135,144,147,199,219,228,235,241,261,263,267,271,297,305,321,325,335,339,343,349,350,351,352,354,389,390,392,393,394,395,399,401,416,417,422,456,471,475,476,489,491,501,503],type_str:72,type_to_dim:390,typemap:[34,427],typenam:399,typic:[4,15,16,17,18,19,33,147,216,218,314,388,512],u_h:[130,131,465,466,489],u_infti:503,u_init:4,ub_func:170,ufc:[21,134,137,143,144,159,160,161,162,163,195,197,201,339,343,349,389,480,503,518],ufc_cel:[8,159,160,161,162,163,197,503],ufc_dofmap:[137,532],ufc_el:143,ufc_finite_el:532,ufc_form0:518,ufc_form1:518,ufc_form:[144,518,533],ufc_functionspac:[520,532,533],ufcfunctionspac:534,ufil:9,ufile_pvd:[15,16,17,18],ufl:[0,1,2,4,6,7,8,10,11,12,13,14,19,21,144,389,402,403,404,405,439,468,470,471,478,481,482,501,503,504,505,506,507,508,509,510,513,514,525,528,573,581],ufl_cel:[389,439],ufl_domain:[389,439],ufl_el:[503,506,513],ufl_evalu:[503,506],ufl_id:[389,402,403,404,405,439],ufl_stage_form:[573,581],uint:[21,503,513],uintarrai:111,umfpack:109,unanticip:[46,52,87],unchang:135,uncut:427,uncut_cel:427,undergon:309,underlai:[256,257],underli:[143,256,257,264],underlin:114,underscor:397,undocu:556,uniform:[342,441,445,552],uniformli:[182,225,349,461,553],uniqu:[73,88,235,397,400],unit:[0,2,3,4,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,339,432,441,443,445,446,447,512],unitcubemesh:[3,6,15,459],unithexmesh:459,unitintervalmesh:[3,459],unitquadmesh:459,unitsquar:[32,389,512,521,522,523,524,525,526,527,529,530],unitsquare_32_32:21,unitsquare_32_32_c00:21,unitsquare_32_32_c01:21,unitsquare_32_32_c11:21,unitsquaremesh:[0,2,3,4,7,8,10,11,12,13,14,19,21,459],unittetrahedronmesh:459,unittrianglemesh:459,unknown:[4,7,8,9,10,14,74,99,500,501,517],unless:[6,228],unmark:398,unnam:88,unordered_map:[135,200],unown:147,unpack_cell_vertic:388,unpack_vertex_coordin:388,unrefin:[0,407],unrestrict:434,unset:[45,47,53,75],unsign:[340,401,422,427],unsort:264,until:[4,214,427],unwrap:[271,272,275,313],updat:[9,73,74,135,201,235,261,503],update_ghost_valu:304,update_paramet:261,upon:[0,11,12,13,21,389],upper:[9,21,170,235,300],upper_bound:170,uppercas:92,usag:[30,32,34,42,73,84,86,118,143,256,257,291,304,471,472,488,491,493,501,512,515,516,517,518,521,522,523,524,525,526,527,529,530,546,553,556],use:[0,1,3,4,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,32,34,92,134,135,147,170,181,197,200,256,257,260,291,304,340,354,389,397,402,403,404,405,439,456,471,472,475,503,504,506,554,576,577],used:[0,4,6,7,9,11,12,13,14,20,21,33,34,74,86,96,124,128,133,134,135,139,141,147,166,173,195,197,198,199,212,235,260,261,263,272,278,280,283,287,291,304,305,311,312,314,339,388,389,390,391,397,401,402,403,404,405,422,423,424,425,426,429,431,438,471,473,475,489,500,503,504,506,512,517,573,581,586],useful:[16,17,18,19,20,27,135,144,164,192,200,212,214,261,368,427,429,431,446,447,493],user:[4,7,8,10,21,24,86,97,126,132,135,195,235,260,272,294,300,303,397,399,475,481,503,504],user_paramet:503,user_sub_domain:135,uses:[2,10,21,41,214,337],using:[0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,34,46,52,87,135,144,170,174,177,187,200,257,262,263,264,265,266,276,291,304,310,313,337,338,435,436,438,471,473,475,489,503],usual:[4,8,19],utel:44,util:54,v2c:[543,545],v_0:144,v_1:144,v_h:[130,131,465,466,485],vaiation:21,valid:[235,400,472],valu:[1,2,4,6,8,9,11,12,13,16,17,18,19,20,21,32,37,42,45,47,49,50,53,54,58,61,67,68,71,72,73,75,84,86,134,135,136,138,139,140,143,145,146,147,157,158,166,171,172,174,175,182,194,195,197,201,205,212,214,215,217,235,237,243,244,249,250,253,254,257,262,265,266,267,268,269,270,272,273,274,276,277,279,283,284,287,288,294,296,297,298,300,301,304,305,306,309,310,313,339,389,397,398,399,402,403,404,405,406,422,423,424,425,426,427,428,432,448,471,475,495,498,500,501,502,503,505,507,508,509,510,516,517],value0:194,value1:194,value2:194,value_collect:[402,403,404,405],value_dimens:[143,201],value_rank:[143,201],value_s:201,value_shap:[4,8,194,195,503],value_str:72,vanish:[0,8],vari:[19,21],variabl:[4,6,7,8,9,15,16,17,18,42,46,52,84,87,111,112,135,139,144,145,147,157,169,171,174,200,201,205,214,235,238,241,261,264,271,276,280,297,305,312,388,389,397,402,403,404,405,423,424,425,426,427,475,495,498,503,504],variant:[11,505,507,508,509,510],variat:[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,130,131,132,138,139,145,156,157,168,170,171,173,176,182,188,195,300,465,466,471,494,495,496,497,498,500,503,586],variationalproblem:499,variationalsolv:469,variou:[4,6,11,12,13,19,21,76,235,309,376,419,490,500],vec:[34,257,304],vecexp:34,vector:[4,5,6,7,8,9,14,15,16,17,18,32,37,135,144,147,164,166,176,181,191,194,195,197,199,200,213,217,235,242,243,257,259,260,262,264,266,267,272,275,276,280,290,300,304,309,314,321,322,335,340,389,397,402,403,404,405,407,418,419,421,427,432,435,437,471,490,491,500,501,503,506,517,586],vector_:397,vectorfunctionspac:[6,9,15,16,17,18,506,515,519],vectorspacebasi:[14,322],veloc:[9,15,16,17,18,216,218],verbos:[112,400,432,506],veri:[13,15,51,112],version:[3,19,45,46,47,52,53,54,61,66,72,74,75,76,78,79,84,86,87,88,89,91,93,108,116,130,131,135,137,138,144,147,156,157,164,166,167,168,169,170,171,174,176,177,181,182,184,185,188,192,193,194,195,197,198,199,200,201,205,206,212,213,214,216,217,218,219,228,235,241,242,243,249,253,256,257,258,261,262,265,266,267,269,271,272,273,275,276,283,287,291,294,296,300,304,305,309,310,311,312,313,337,338,339,340,342,343,349,350,354,355,361,367,374,376,378,387,388,389,390,391,396,397,398,399,400,402,403,404,405,406,407,408,409,418,419,420,423,424,425,426,427,432,433,434,435,438,439,440,441,443,445,448,454,455,456,457,458,461,462,475,476,495,498],version_deprec:91,version_remov:91,vertex:[135,143,144,186,191,343,349,354,388,389,390,393,399,416,417,418,456,459,528,537,538],vertex_coordin:[134,159,160,161,162,163,388],vertex_domain:144,vertex_indic:388,vertex_to_dof_map:189,vertex_valu:197,vertexfunct:[450,451,452,453,459],vertexfunctionbool:459,vertexfunctiondoubl:459,vertexfunctionint:459,vertexfunctionsizet:459,vertic:[3,4,6,11,132,135,178,179,186,191,192,193,197,201,342,343,349,354,387,388,389,399,419,420,433,439,441,443,445,446,447,459,537,538,541],vessel:1,via:[9,10,207,294,300,503],view:[46,52,87,137,147,214,343,349,402,403,404,405,512],virtual:[4,276],viscos:9,visit:440,visual:[4,5,11,12,13,21,32,235,493],visualis:[390,391,429,431],vmtk:[135,475],vol:[521,523,524,527,529,530],volum:[6,343,349,523],vtk:[2,4,6,9,11,12,13,15,16,17,18,20,21,228,349],vtk_map:349,vtkplotter:239,vtkplotter_all_interact:239,vtkplotter_default_paramet:239,vtkplotter_to_kei:239,wai:[5,11,12,13,15,16,17,18,19,20,21,74,135,235,310,353,397,422,423,424,425,426,439,475,487,490,492,500],wait:4,wall:[1,86,97,116,125,126,128],want:[0,5,6,7,8,10,11,12,13,14,15,16,18,19,20,21,22,300,503],warn:[91,111,197,506],warn_onc:72,warp:[32,235],weak:[0,2,4,16,17,139],weakli:2,weight:[0,19,22,130,131,407,427,465,466,500],well:[10,86,176,499],were:6,wether:320,what:[0,12,19,20,34,119,186,191,343,389],when:[0,1,3,4,6,9,11,12,15,16,18,20,21,54,86,135,137,141,144,197,201,235,283,287,291,304,354,389,422,438,475,503,504,512,553],where:[0,1,2,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,135,144,147,156,164,170,174,177,181,197,198,368,398,418,473,475,494,497,500,503,506],whether:[5,19,21,51,54,64,65,112,135,138,170,171,197,220,224,266,276,300,321,339,340,343,349,398,400,418,427,434,438,475,498,516,553],which:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,34,35,37,44,46,48,52,54,63,76,87,91,92,134,135,138,141,144,145,164,170,181,195,197,199,200,212,256,257,272,278,279,305,339,340,343,353,389,390,392,393,394,396,402,403,404,405,407,419,420,422,423,424,425,426,427,429,431,434,461,470,471,473,475,482,489,491,493,500,501,503,504,512,537,538,553,575,585],who:132,whole:[20,169,504],wide:14,widget:235,width:235,window:[3,9,235,236],window_height:235,window_width:235,winther:512,wirefram:[32,235],wise:[0,11,12,13,21,164,264,496],wish:[0,6,132,303],within:[4,19,220,224,389,416,417,418],without:[2,6,9,76,79,86,144,156,170,188,501],wolfram:389,word:[0,11,13,21,144,427],work:[0,12,20,22,30,119,186,191,389,427,442,444],workaround:[16,471],world:5,would:[2,4,7,8,19,135,427,475],wrap:[34,40,235,473,480],wrapper:[46,52,54,62,87,143,249,256,257,261,283,287,291,297,304,305,474,551,578],write:[0,1,11,12,13,14,16,17,18,19,21,144,228,231],write_fil:546,write_pdf:235,write_png:235,written:[2,4,11,228,512],wrong:315,www:343,x3d:228,x_e:164,xd3:228,xdmf:[228,349],xhat:143,xml:[1,5,9,16,17,18,20,21,94,228,388,389,422,423,424,425,426,506],xyz:228,y_n:[561,584],yet:[119,300],you:[0,5,15,19,22,471],young:6,your:32,yourself:19,zero:[0,6,11,12,13,14,17,21,86,135,144,205,242,256,262,264,265,266,275,291,305,309,310,312,389,396,397,410,411,414,415,471,489],zero_column:135,zero_loc:262,zlib:110,zoom:[9,235]},titles:["1. Auto adaptive Poisson equation","2. Set boundary conditions for meshes that include boundary indicators","3. Biharmonic equation","4. Built-in meshes","5. Cahn-Hilliard equation","6. A simple eigenvalue solver","7. Hyperelasticity","8. Dual-mixed formulation for Poisson equation","9. Mixed formulation for Poisson equation","10. Incompressible Navier-Stokes equations","11. Poisson equation with pure Neumann boundary conditions","12. Nonlinear Poisson equation","13. Poisson equation with periodic boundary conditions","14. Poisson equation","15. Singular Poisson","16. Stokes equations","17. Stokes equations with Mini elements","18. Stokes equations with stabilized first order elements","19. Stokes equations with Taylor-Hood elements","20. Poisson equation with multiple subdomains","21. Marking subdomains of a mesh","22. Tensor-weighted Poisson","Collection of documented demos","Documentation for DOLFIN-1.6.0 (Python)","dolfin.common.constants module","dolfin.common.globalparameters module","dolfin.common module","dolfin.common.math module","sqr","dolfin.common.memory module","memory_usage","dolfin.common.plotting module","plot","dolfin.common.time module","compile_extension_module","expression_to_code_fragments","dolfin.compilemodules.compilemodule module","compile_expressions","dolfin.compilemodules.expressions module","dolfin.compilemodules module","dolfin.compilemodules.jit module","jit","CompiledSubDomain","dolfin.compilemodules.subdomains module","dolfin.compilemodules.swigimportinfo module","BoolParameter","DoubleArray","DoubleParameter","Event","GlobalParameters","GlobalParameters_default_parameters","IndexSet","IntArray","IntParameter","MPI","MPIInfo","MPI_Comm","MPI_MPI_AVG","MPI_avg","MPI_barrier","MPI_compute_local_range","MPI_gather","MPI_global_offset","MPI_index_owner","MPI_is_broadcaster","MPI_is_receiver","MPI_local_range","MPI_max","MPI_min","MPI_rank","MPI_size","MPI_sum","ParameterValue","Parameters","Progress","StringParameter","SubSystemsManager","SubSystemsManager_finalize","SubSystemsManager_init_mpi","SubSystemsManager_init_petsc","SubSystemsManager_mpi_finalized","SubSystemsManager_mpi_initialized","SubSystemsManager_responsible_mpi","SubSystemsManager_responsible_petsc","Table","TableEntry","Timer","UIntArray","Variable","begin","debug","deprecation","dolfin_error","dolfin_version","dump_timings_to_xml","end","error","f","get_log_level","git_commit_hash","has_cholmod","has_hdf5","has_mpi","has_openmp","has_parmetis","has_petsc","has_scotch","has_slepc","has_tao","has_umfpack","has_zlib","dolfin.cpp.common module","info","info_stream","info_underline","init","list_timings","log","monitor_memory_usage","not_working_in_parallel","set_log_active","set_log_level","set_output_stream","sizeof_la_index","tic","time","timing","timings","toc","warning","AdaptiveLinearVariationalSolver","AdaptiveNonlinearVariationalSolver","Assembler","AssemblerBase","BasisFunction","DirichletBC","DirichletBC_default_parameters","DofMap","Equation","ErrorControl","ErrorControl_default_parameters","Extrapolation","Extrapolation_extrapolate","FiniteElement","Form","GenericAdaptiveVariationalSolver","GenericAdaptiveVariationalSolver_default_parameters","GenericDofMap","HierarchicalDirichletBC","HierarchicalErrorControl","HierarchicalForm","HierarchicalFunction","HierarchicalFunctionSpace","HierarchicalLinearVariationalProblem","HierarchicalMesh","HierarchicalNonlinearVariationalProblem","LinearVariationalProblem","LinearVariationalSolver","LinearVariationalSolver_default_parameters","LocalAssembler","LocalAssembler_assemble","LocalAssembler_assemble_cell","LocalAssembler_assemble_exterior_facet","LocalAssembler_assemble_interior_facet","LocalSolver","MultiMeshAssembler","MultiMeshDirichletBC","MultiMeshDofMap","MultiMeshForm","MultiStageScheme","NonlinearVariationalProblem","NonlinearVariationalSolver","NonlinearVariationalSolver_default_parameters","OpenMpAssembler","PointIntegralSolver","PointIntegralSolver_default_parameters","PointSource","RKSolver","SparsityPatternBuilder","SparsityPatternBuilder_build","SparsityPatternBuilder_build_multimesh_sparsity_pattern","SystemAssembler","adapt","adapt_markers","assemble","assemble_system","dof_to_vertex_map","dorfler_mark","fem_solve","dolfin.cpp.fem module","mark","vertex_to_dof_map","ALE","ALE_move","Constant","Expression","FacetArea","Function","FunctionAXPY","FunctionAssigner","FunctionSpace","GenericFunction","HierarchicalFunction","HierarchicalFunctionSpace","HierarchicalMesh","Lagrange","LagrangeInterpolator","Legendre","Legendre_d2dx","Legendre_ddx","Legendre_eval","MeshCoordinates","MeshDisplacement","MultiMeshFunction","MultiMeshFunctionSpace","MultiMeshFunctionSpace_default_parameters","MultiMeshSubSpace","SpecialFacetFunction","SubSpace","assign","between","dolfin.cpp.function module","ipow","lt_coordinate","near","rand","seed","dolfin.cpp module","File","File_create_parent_path","File_exists","GenericFile","HierarchicalFunction","HierarchicalFunctionSpace","HierarchicalMesh","VTKPlotter","VTKPlotter_all_interactive","VTKPlotter_default_parameters","VTKPlotter_to_key","dolfin.cpp.io module","interactive","plot","BlockMatrix","BlockVector","CoordinateMatrix","DefaultFactory","DefaultFactory_factory","EigenFactory","EigenFactory_instance","EigenKrylovSolver","EigenKrylovSolver_default_parameters","EigenKrylovSolver_methods","EigenKrylovSolver_preconditioners","EigenLUSolver","EigenLUSolver_default_parameters","EigenLUSolver_methods","EigenMatrix","EigenVector","GenericLUSolver","GenericLinearAlgebraFactory","GenericLinearOperator","GenericLinearSolver","GenericMatrix","GenericPreconditioner","GenericSparsityPattern","GenericTensor","GenericVector","KrylovSolver","KrylovSolver_default_parameters","LUSolver","LUSolver_default_parameters","LinearAlgebraObject","LinearOperator","LinearSolver","LinearSolver_default_parameters","Matrix","NewtonSolver","NewtonSolver_default_parameters","NonlinearProblem","OptimisationProblem","PETScBaseMatrix","PETScFactory","PETScFactory_instance","PETScKrylovSolver","PETScKrylovSolver_default_parameters","PETScKrylovSolver_methods","PETScKrylovSolver_preconditioners","PETScLUSolver","PETScLUSolver_default_parameters","PETScLUSolver_methods","PETScLinearOperator","PETScMatrix","PETScObject","PETScObject_petsc_error","PETScOptions","PETScOptions_clear","PETScOptions_set","PETScPreconditioner","PETScPreconditioner_default_parameters","PETScPreconditioner_preconditioners","PETScSNESSolver","PETScSNESSolver_default_parameters","PETScSNESSolver_methods","PETScUserPreconditioner","PETScVector","SLEPcEigenSolver","SLEPcEigenSolver_default_parameters","STLFactory","STLFactory_instance","STLMatrix","Scalar","SparsityPattern","TensorLayout","Vector","VectorSpaceBasis","as_backend_type","get_tensor_type","has_krylov_solver_method","has_krylov_solver_preconditioner","has_lu_solver_method","has_type","in_nullspace","dolfin.cpp.la module","krylov_solver_methods","krylov_solver_preconditioners","la_index_dtype","la_solve","linear_algebra_backends","linear_solver_methods","list_krylov_solver_methods","list_krylov_solver_preconditioners","list_linear_algebra_backends","list_linear_solver_methods","list_lu_solver_methods","lu_solver_methods","normalize","residual","BoostGraphOrdering","BoostGraphOrdering_compute_cuthill_mckee","BoundaryMesh","BoundingBoxTree","BoundingBoxTree3D","BoxMesh","Cell","CellFunction","CellFunctionBool","CellFunctionDouble","CellFunctionInt","CellFunctionSizet","CellType","CellType_create","CellType_string2type","CellType_type2string","DomainBoundary","DynamicMeshEditor","Edge","EdgeFunction","EdgeFunctionBool","EdgeFunctionDouble","EdgeFunctionInt","EdgeFunctionSizet","Face","FaceFunction","FaceFunctionBool","FaceFunctionDouble","FaceFunctionInt","FaceFunctionSizet","Facet","FacetCell","FacetFunction","FacetFunctionBool","FacetFunctionDouble","FacetFunctionInt","FacetFunctionSizet","GenericBoundingBoxTree","Graph","GraphBuilder","GraphBuilder_compute_dual_graph","GraphBuilder_local_graph","HierarchicalFunction","HierarchicalFunctionSpace","HierarchicalMesh","HierarchicalMeshFunctionBool","HierarchicalMeshFunctionDouble","HierarchicalMeshFunctionInt","HierarchicalMeshFunctionSizet","HierarchicalMeshFunctionUInt","IntervalMesh","LocalMeshData","Mesh","MeshColoring","MeshColoring_cell_colors","MeshColoring_color","MeshColoring_color_cells","MeshColoring_compute_colors","MeshColoring_type_to_dim","MeshConnectivity","MeshData","MeshDomains","MeshEditor","MeshEntity","MeshFunction","MeshFunctionBool","MeshFunctionDouble","MeshFunctionInt","MeshFunctionSizet","MeshGeometry","MeshHierarchy","MeshPartitioning","MeshPartitioning_build_distributed_mesh","MeshPointIntersection","MeshQuality","MeshQuality_radius_ratio_histogram_data","MeshQuality_radius_ratio_matplotlib_histogram","MeshQuality_radius_ratio_min_max","MeshQuality_radius_ratios","MeshRenumbering","MeshRenumbering_renumber_by_color","MeshTopology","MeshTransformation","MeshTransformation_rotate","MeshTransformation_translate","MeshValueCollection","MeshValueCollectionBool","MeshValueCollectionDouble","MeshValueCollectionInt","MeshValueCollectionSizet","MultiMesh","MultiMesh_default_parameters","PeriodicBoundaryComputation","PeriodicBoundaryComputation_compute_periodic_pairs","PeriodicBoundaryComputation_masters_slaves","Point","RectangleMesh","Restriction","SCOTCH","SCOTCH_compute_gps","SCOTCH_compute_partition","SubDomain","SubMesh","SubsetIterator","UnitCubeMesh","UnitHexMesh","UnitIntervalMesh","UnitQuadMesh","UnitSquareMesh","UnitTetrahedronMesh","UnitTriangleMesh","Vertex","VertexFunction","VertexFunctionBool","VertexFunctionDouble","VertexFunctionInt","VertexFunctionSizet","cells","edges","entities","faces","facets","dolfin.cpp.mesh module","intersect","refine","vertices","down_cast","dolfin.deprecation module","AdaptiveLinearVariationalSolver","AdaptiveNonlinearVariationalSolver","generate_error_control","generate_error_control_forms","dolfin.fem.adaptivesolving module","SystemAssembler","assemble","assemble_system","dolfin.fem.assembling module","AutoSubDomain","DirichletBC","homogenize","dolfin.fem.bcs module","dolfin.fem.errorcontrolgenerator module","Form","dolfin.fem.form module","adjoint","derivative","increase_order","dolfin.fem.formmanipulations module","tear","dolfin.fem module","dolfin.fem.interpolation module","interpolate","errornorm","dolfin.fem.norms module","norm","dolfin.fem.projection module","project","LinearVariationalProblem","LinearVariationalSolver","LocalSolver","NonlinearVariationalProblem","NonlinearVariationalSolver","dolfin.fem.solving module","solve","Constant","dolfin.functions.constant module","Expression","dolfin.functions.expression module","Argument","Function","TestFunction","TestFunctions","TrialFunction","TrialFunctions","dolfin.functions.function module","FunctionSpace","FunctionSpaceBase","FunctionSpaceFromCpp","MixedFunctionSpace","TensorFunctionSpace","VectorFunctionSpace","create_ufc_function_spaces","dolfin.functions.functionspace module","dolfin.functions module","CellNormal","CellSize","CellVolume","Circumradius","FacetArea","FacetNormal","MaxFacetEdgeLength","MeshCoordinates","MinFacetEdgeLength","SpatialCoordinate","dolfin.functions.specialfunctions module","UFCFunctionSpace","create_ufc_function_spaces","dolfin.functions.ufc_functionspace module","dolfin.importhandler module","Programmer&#8217;s reference for DOLFIN (Python)","compute_edge_map","compute_vertex_map","dolfin.mesh.ale module","init_parent_edge_indices","create_maps","find_all_subdomains","find_keys_on_one_subdomain","find_new_cell_key","find_subdomain","dolfin.mesh.boundarysubdomainfinder module","main","usage","write_file","dolfin.mesh module","dolfin.mesh.meshes module","dolfin.mesh.refinement module","refine","dolfin.mesh.svgtools module","mesh2svg","extract_tested_expressions","dolfin.multistage.factorize module","dolfin.multistage module","BDF1","BackwardEuler","ButcherMultiStageScheme","CN2","CrankNicolson","ERK","ERK1","ERK4","ESDIRK3","ESDIRK4","ExplicitEuler","ExplicitMidPoint","ForwardEuler","ImplicitEuler","MultiStageScheme","RK4","dolfin.multistage.multistagescheme module","PointIntegralSolver","RKSolver","dolfin.multistage.multistagesolvers module","GRL1","GRL2","MultiStageScheme","RL1","RL2","RushLarsenScheme","dolfin.multistage.rushlarsenschemes module","Quick Programmer&#8217;s Reference (Python)"],titleterms:{"function":[197,221,502,504,506,511,519,520,531,534],ALE:192,The:23,adapt:[0,182],adapt_mark:183,adaptivelinearvariationalsolv:[130,465],adaptivenonlinearvariationalsolv:[131,466],adaptivesolv:469,adjoint:481,ale:539,ale_mov:193,argument:505,as_backend_typ:315,assembl:[132,184,471,473],assemble_system:[185,472],assemblerbas:133,assign:219,auto:0,autosubdomain:474,backwardeul:560,basisfunct:134,bcs:477,bdf1:559,begin:89,between:220,biharmon:2,blockmatrix:242,blockvector:243,boolparamet:45,boostgraphord:337,boostgraphordering_compute_cuthill_mcke:338,boundari:[1,10,12,15,18],boundarymesh:339,boundarysubdomainfind:546,boundingboxtre:340,boundingboxtree3d:341,boxmesh:342,built:3,butchermultistageschem:561,cahn:4,cell:[343,454],cellfunct:344,cellfunctionbool:345,cellfunctiondoubl:346,cellfunctionint:347,cellfunctionsizet:348,cellnorm:521,cellsiz:522,celltyp:349,celltype_cr:350,celltype_string2typ:351,celltype_type2str:352,cellvolum:523,circumradiu:524,cn2:562,code:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],collect:22,common:[24,25,26,27,29,31,33,111],compile_express:37,compile_extension_modul:34,compiledsubdomain:42,compilemodul:[36,38,39,40,43,44],complet:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],compute_edge_map:537,compute_vertex_map:538,condit:[1,10,12,15,18],constant:[24,194,501,502],coordinatematrix:244,cpp:[111,189,221,227,239,322,459],cranknicolson:563,create_map:541,create_ufc_function_spac:[518,533],debug:90,defaultfactori:245,defaultfactory_factori:246,definit:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21],demo:[4,6,22,23],densiti:6,deprec:[91,464],deriv:482,dirichletbc:[135,475],dirichletbc_default_paramet:136,discretis:4,document:[22,23],dof_to_vertex_map:186,dofmap:137,dolfin:[23,24,25,26,27,29,31,33,36,38,39,40,43,44,111,189,221,227,239,322,459,464,469,473,477,478,480,484,486,487,490,492,499,502,504,511,519,520,531,534,535,536,539,546,550,551,552,554,557,558,575,578,585],dolfin_error:92,dolfin_vers:93,domain:[15,18],domainboundari:353,dorfler_mark:187,doublearrai:46,doubleparamet:47,down_cast:463,dual:7,dump_timings_to_xml:94,dynamicmesheditor:354,edg:[355,455],edgefunct:356,edgefunctionbool:357,edgefunctiondoubl:358,edgefunctionint:359,edgefunctionsizet:360,eigenfactori:247,eigenfactory_inst:248,eigenkrylovsolv:249,eigenkrylovsolver_default_paramet:250,eigenkrylovsolver_method:251,eigenkrylovsolver_precondition:252,eigenlusolv:253,eigenlusolver_default_paramet:254,eigenlusolver_method:255,eigenmatrix:256,eigenvalu:5,eigenvector:257,elast:6,element:[16,17,18],end:95,energi:6,entiti:456,equat:[0,1,2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,138],erk1:565,erk4:566,erk:564,error:96,errorcontrol:139,errorcontrol_default_paramet:140,errorcontrolgener:478,errornorm:489,esdirk3:567,esdirk4:568,event:48,expliciteul:569,explicitmidpoint:570,express:[38,195,503,504],expression_to_code_frag:35,extract_tested_express:556,extrapol:141,extrapolation_extrapol:142,face:[361,457],facefunct:362,facefunctionbool:363,facefunctiondoubl:364,facefunctionint:365,facefunctionsizet:366,facet:[367,458],facetarea:[196,525],facetcel:368,facetfunct:369,facetfunctionbool:370,facetfunctiondoubl:371,facetfunctionint:372,facetfunctionsizet:373,facetnorm:526,factor:557,fem:[189,469,473,477,478,480,484,486,487,490,492,499],fem_solv:188,file:228,file_create_parent_path:229,file_exist:230,find_all_subdomain:542,find_keys_on_one_subdomain:543,find_new_cell_kei:544,find_subdomain:545,finiteel:143,first:17,form:[4,15,19,144,479,480],formmanipul:484,formul:[7,8,18],forwardeul:571,functionassign:199,functionaxpi:198,functionspac:[200,512,519],functionspacebas:513,functionspacefromcpp:514,generate_data:21,generate_error_control:467,generate_error_control_form:468,genericadaptivevariationalsolv:145,genericadaptivevariationalsolver_default_paramet:146,genericboundingboxtre:374,genericdofmap:147,genericfil:231,genericfunct:201,genericlinearalgebrafactori:259,genericlinearoper:260,genericlinearsolv:261,genericlusolv:258,genericmatrix:262,genericprecondition:263,genericsparsitypattern:264,generictensor:265,genericvector:266,get_log_level:98,get_tensor_typ:316,git_commit_hash:99,globalparamet:[25,49],globalparameters_default_paramet:50,graph:375,graphbuild:376,graphbuilder_compute_dual_graph:377,graphbuilder_local_graph:378,grl1:579,grl2:580,has_cholmod:100,has_hdf5:101,has_krylov_solver_method:317,has_krylov_solver_precondition:318,has_lu_solver_method:319,has_mpi:102,has_openmp:103,has_parmeti:104,has_petsc:105,has_scotch:106,has_slepc:107,has_tao:108,has_typ:320,has_umfpack:109,has_zlib:110,hierarchicaldirichletbc:148,hierarchicalerrorcontrol:149,hierarchicalform:150,hierarchicalfunct:[151,202,232,379],hierarchicalfunctionspac:[152,203,233,380],hierarchicallinearvariationalproblem:153,hierarchicalmesh:[154,204,234,381],hierarchicalmeshfunctionbool:382,hierarchicalmeshfunctiondoubl:383,hierarchicalmeshfunctionint:384,hierarchicalmeshfunctionsizet:385,hierarchicalmeshfunctionuint:386,hierarchicalnonlinearvariationalproblem:155,hilliard:4,homogen:476,hood:18,hyperelast:6,implement:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],impliciteul:572,importhandl:535,in_nullspac:321,includ:1,incompress:9,increase_ord:483,indexset:51,indic:1,info:112,info_stream:113,info_underlin:114,init:115,init_parent_edge_indic:540,intarrai:52,interact:240,interpol:[487,488],intersect:460,intervalmesh:387,intparamet:53,ipow:222,jit:[40,41],krylov_solver_method:323,krylov_solver_precondition:324,krylovsolv:267,krylovsolver_default_paramet:268,la_index_dtyp:325,la_solv:326,lagrang:205,lagrangeinterpol:206,legendr:207,legendre_d2dx:208,legendre_ddx:209,legendre_ev:210,linear:15,linear_algebra_backend:327,linear_solver_method:328,linearalgebraobject:271,linearoper:272,linearsolv:273,linearsolver_default_paramet:274,linearvariationalproblem:[156,494],linearvariationalsolv:[157,495],linearvariationalsolver_default_paramet:158,list_krylov_solver_method:329,list_krylov_solver_precondition:330,list_linear_algebra_backend:331,list_linear_solver_method:332,list_lu_solver_method:333,list_tim:116,localassembl:159,localassembler_assembl:160,localassembler_assemble_cel:161,localassembler_assemble_exterior_facet:162,localassembler_assemble_interior_facet:163,localmeshdata:388,localsolv:[164,496],log:117,lt_coordin:223,lu_solver_method:334,lusolv:269,lusolver_default_paramet:270,main:547,mark:[20,190],math:27,matrix:275,maxfacetedgelength:527,memori:29,memory_usag:30,mesh2svg:555,mesh:[1,3,20,389,459,539,546,550,551,552,554],meshcolor:390,meshcoloring_cell_color:391,meshcoloring_color:392,meshcoloring_color_cel:393,meshcoloring_compute_color:394,meshcoloring_type_to_dim:395,meshconnect:396,meshcoordin:[211,528],meshdata:397,meshdisplac:212,meshdomain:398,mesheditor:399,meshent:400,meshfunct:401,meshfunctionbool:402,meshfunctiondoubl:403,meshfunctionint:404,meshfunctionsizet:405,meshgeometri:406,meshhierarchi:407,meshpartit:408,meshpartitioning_build_distributed_mesh:409,meshpointintersect:410,meshqual:411,meshquality_radius_ratio:415,meshquality_radius_ratio_histogram_data:412,meshquality_radius_ratio_matplotlib_histogram:413,meshquality_radius_ratio_min_max:414,meshrenumb:416,meshrenumbering_renumber_by_color:417,meshtopolog:418,meshtransform:419,meshtransformation_rot:420,meshtransformation_transl:421,meshvaluecollect:422,meshvaluecollectionbool:423,meshvaluecollectiondoubl:424,meshvaluecollectionint:425,meshvaluecollectionsizet:426,method:9,minfacetedgelength:529,mini:16,mix:[4,7,8],mixedfunctionspac:515,modul:[23,24,25,26,27,29,31,33,36,38,39,40,43,44,111,189,221,227,239,322,459,464,469,473,477,478,480,484,486,487,490,492,499,502,504,511,519,520,531,534,535,539,546,550,551,552,554,557,558,575,578,585],monitor_memory_usag:118,mpi:54,mpi_avg:58,mpi_barri:59,mpi_comm:56,mpi_compute_local_rang:60,mpi_gath:61,mpi_global_offset:62,mpi_index_own:63,mpi_is_broadcast:64,mpi_is_receiv:65,mpi_local_rang:66,mpi_max:67,mpi_min:68,mpi_mpi_avg:57,mpi_rank:69,mpi_siz:70,mpi_sum:71,mpiinfo:55,multimesh:427,multimesh_default_paramet:428,multimeshassembl:165,multimeshdirichletbc:166,multimeshdofmap:167,multimeshform:168,multimeshfunct:213,multimeshfunctionspac:214,multimeshfunctionspace_default_paramet:215,multimeshsubspac:216,multipl:19,multistag:[557,558,575,578,585],multistageschem:[169,573,575,581],multistagesolv:578,navier:9,neumann:10,newtonsolv:276,newtonsolver_default_paramet:277,nonlinear:11,nonlinearproblem:278,nonlinearvariationalproblem:[170,497],nonlinearvariationalsolv:[171,498],nonlinearvariationalsolver_default_paramet:172,norm:[490,491],normal:335,not_working_in_parallel:119,openmpassembl:173,optimisationproblem:279,order:17,paramet:[4,6,73],parametervalu:72,period:12,periodicboundarycomput:429,periodicboundarycomputation_compute_periodic_pair:430,periodicboundarycomputation_masters_slav:431,petscbasematrix:280,petscfactori:281,petscfactory_inst:282,petsckrylovsolv:283,petsckrylovsolver_default_paramet:284,petsckrylovsolver_method:285,petsckrylovsolver_precondition:286,petsclinearoper:290,petsclusolv:287,petsclusolver_default_paramet:288,petsclusolver_method:289,petscmatrix:291,petscobject:292,petscobject_petsc_error:293,petscopt:294,petscoptions_clear:295,petscoptions_set:296,petscprecondition:297,petscpreconditioner_default_paramet:298,petscpreconditioner_precondition:299,petscsnessolv:300,petscsnessolver_default_paramet:301,petscsnessolver_method:302,petscuserprecondition:303,petscvector:304,plot:[31,32,241],point:432,pointintegralsolv:[174,576],pointintegralsolver_default_paramet:175,pointsourc:176,poisson:[0,7,8,10,11,12,13,14,19,21],precondit:15,problem:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21],programm:[23,536,586],progress:74,project:[492,493],pure:10,python:[23,536,586],quick:586,rand:225,rectanglemesh:433,refer:[23,536,586],refin:[461,552,553],residu:336,restrict:434,rk4:574,rksolver:[177,577],rl1:582,rl2:583,rushlarsenschem:[584,585],scalar:310,scotch:435,scotch_compute_gp:436,scotch_compute_partit:437,seed:226,set:1,set_log_act:120,set_log_level:121,set_output_stream:122,simpl:5,singular:14,sizeof_la_index:123,slepceigensolv:305,slepceigensolver_default_paramet:306,solut:9,solv:[499,500],solver:5,sparsitypattern:311,sparsitypatternbuild:178,sparsitypatternbuilder_build:179,sparsitypatternbuilder_build_multimesh_sparsity_pattern:180,spatialcoordin:530,specialfacetfunct:217,specialfunct:531,sqr:28,stabil:17,stlfactori:307,stlfactory_inst:308,stlmatrix:309,stoke:[9,15,16,17,18],store:6,stringparamet:75,strong:[15,18],subdomain:[19,20,43,438],submesh:439,subsetiter:440,subspac:218,subsystemsmanag:76,subsystemsmanager_fin:77,subsystemsmanager_init_mpi:78,subsystemsmanager_init_petsc:79,subsystemsmanager_mpi_fin:80,subsystemsmanager_mpi_initi:81,subsystemsmanager_responsible_mpi:82,subsystemsmanager_responsible_petsc:83,svgtool:554,swigimportinfo:44,system:15,systemassembl:[181,470],tabl:84,tableentri:85,taylor:18,tear:485,tensor:21,tensorfunctionspac:516,tensorlayout:312,testfunct:[507,508],tic:124,time:[4,33,125,126,127],timer:86,toc:128,trialfunct:[509,510],ufc_functionspac:534,ufcfunctionspac:532,uintarrai:87,unitcubemesh:441,unithexmesh:442,unitintervalmesh:443,unitquadmesh:444,unitsquaremesh:445,unittetrahedronmesh:446,unittrianglemesh:447,usag:548,variabl:88,variat:19,vector:313,vectorfunctionspac:517,vectorspacebasi:314,vertex:448,vertex_to_dof_map:191,vertexfunct:449,vertexfunctionbool:450,vertexfunctiondoubl:451,vertexfunctionint:452,vertexfunctionsizet:453,vertic:462,vtkplotter:235,vtkplotter_all_interact:236,vtkplotter_default_paramet:237,vtkplotter_to_kei:238,warn:129,weak:[15,18],weight:21,write_fil:549}})