Search.setIndex({docnames:["demo/documented/auto-adaptive-poisson/python/documentation","demo/documented/bcs/python/documentation","demo/documented/biharmonic/python/documentation","demo/documented/built-in_meshes/python/documentation","demo/documented/cahn-hilliard/python/documentation","demo/documented/csg-2D/python/documentation","demo/documented/csg-3D/python/documentation","demo/documented/eigenvalue/python/documentation","demo/documented/hyperelasticity/python/documentation","demo/documented/mesh-generation/python/documentation","demo/documented/mixed-poisson/python/documentation","demo/documented/navier-stokes/python/documentation","demo/documented/neumann-poisson/python/documentation","demo/documented/nonlinear-poisson/python/documentation","demo/documented/periodic/python/documentation","demo/documented/poisson/python/documentation","demo/documented/singular-poisson/python/documentation","demo/documented/stokes-iterative/python/documentation","demo/documented/stokes-mini/python/documentation","demo/documented/stokes-stabilized/python/documentation","demo/documented/stokes-taylor-hood/python/documentation","demo/documented/subdomains-poisson/python/documentation","demo/documented/subdomains/python/documentation","demo/documented/tensor-weighted-poisson/python/documentation","demo/index","index","programmers-reference/common/constants/index","programmers-reference/common/globalparameters/index","programmers-reference/common/index","programmers-reference/common/math/index","programmers-reference/common/math/sqr","programmers-reference/common/memory/index","programmers-reference/common/memory/memory_usage","programmers-reference/common/plotting/index","programmers-reference/common/plotting/plot","programmers-reference/common/time/Time","programmers-reference/common/time/index","programmers-reference/compilemodules/compilemodule/compile_extension_module","programmers-reference/compilemodules/compilemodule/expression_to_code_fragments","programmers-reference/compilemodules/compilemodule/index","programmers-reference/compilemodules/expressions/compile_expressions","programmers-reference/compilemodules/expressions/index","programmers-reference/compilemodules/index","programmers-reference/compilemodules/jit/index","programmers-reference/compilemodules/jit/jit","programmers-reference/compilemodules/subdomains/CompiledSubDomain","programmers-reference/compilemodules/subdomains/compile_subdomains","programmers-reference/compilemodules/subdomains/index","programmers-reference/compilemodules/swigimportinfo/index","programmers-reference/cpp/common/BoolParameter","programmers-reference/cpp/common/DoubleArray","programmers-reference/cpp/common/DoubleParameter","programmers-reference/cpp/common/Event","programmers-reference/cpp/common/GlobalParameters","programmers-reference/cpp/common/GlobalParameters_default_parameters","programmers-reference/cpp/common/IndexSet","programmers-reference/cpp/common/IntArray","programmers-reference/cpp/common/IntParameter","programmers-reference/cpp/common/MPI","programmers-reference/cpp/common/MPICommunicator","programmers-reference/cpp/common/MPIInfo","programmers-reference/cpp/common/MPINonblocking","programmers-reference/cpp/common/MPI_barrier","programmers-reference/cpp/common/MPI_global_offset","programmers-reference/cpp/common/MPI_index_owner","programmers-reference/cpp/common/MPI_is_broadcaster","programmers-reference/cpp/common/MPI_is_receiver","programmers-reference/cpp/common/MPI_local_range","programmers-reference/cpp/common/MPI_max","programmers-reference/cpp/common/MPI_min","programmers-reference/cpp/common/MPI_num_processes","programmers-reference/cpp/common/MPI_process_number","programmers-reference/cpp/common/MPI_sum","programmers-reference/cpp/common/ParameterValue","programmers-reference/cpp/common/Parameters","programmers-reference/cpp/common/Progress","programmers-reference/cpp/common/StringParameter","programmers-reference/cpp/common/SubSystemsManager","programmers-reference/cpp/common/SubSystemsManager_finalize","programmers-reference/cpp/common/SubSystemsManager_init_mpi","programmers-reference/cpp/common/SubSystemsManager_init_petsc","programmers-reference/cpp/common/SubSystemsManager_mpi_finalized","programmers-reference/cpp/common/SubSystemsManager_mpi_initialized","programmers-reference/cpp/common/SubSystemsManager_responsible_mpi","programmers-reference/cpp/common/SubSystemsManager_responsible_petsc","programmers-reference/cpp/common/Table","programmers-reference/cpp/common/TableEntry","programmers-reference/cpp/common/Timer","programmers-reference/cpp/common/UIntArray","programmers-reference/cpp/common/Variable","programmers-reference/cpp/common/begin","programmers-reference/cpp/common/debug","programmers-reference/cpp/common/deprecation","programmers-reference/cpp/common/dolfin_error","programmers-reference/cpp/common/dolfin_version","programmers-reference/cpp/common/end","programmers-reference/cpp/common/error","programmers-reference/cpp/common/get_log_level","programmers-reference/cpp/common/git_commit_hash","programmers-reference/cpp/common/has_cgal","programmers-reference/cpp/common/has_cholmod","programmers-reference/cpp/common/has_exodus","programmers-reference/cpp/common/has_hdf5","programmers-reference/cpp/common/has_mpi","programmers-reference/cpp/common/has_openmp","programmers-reference/cpp/common/has_parmetis","programmers-reference/cpp/common/has_petsc","programmers-reference/cpp/common/has_scotch","programmers-reference/cpp/common/has_slepc","programmers-reference/cpp/common/has_tao","programmers-reference/cpp/common/has_trilinos","programmers-reference/cpp/common/has_umfpack","programmers-reference/cpp/common/has_zlib","programmers-reference/cpp/common/index","programmers-reference/cpp/common/info","programmers-reference/cpp/common/info_stream","programmers-reference/cpp/common/info_underline","programmers-reference/cpp/common/init","programmers-reference/cpp/common/list_timings","programmers-reference/cpp/common/log","programmers-reference/cpp/common/monitor_memory_usage","programmers-reference/cpp/common/not_working_in_parallel","programmers-reference/cpp/common/set_log_active","programmers-reference/cpp/common/set_log_level","programmers-reference/cpp/common/set_output_stream","programmers-reference/cpp/common/summary","programmers-reference/cpp/common/tic","programmers-reference/cpp/common/time","programmers-reference/cpp/common/timing","programmers-reference/cpp/common/timings","programmers-reference/cpp/common/toc","programmers-reference/cpp/common/warning","programmers-reference/cpp/fem/AdaptiveLinearVariationalSolver","programmers-reference/cpp/fem/AdaptiveNonlinearVariationalSolver","programmers-reference/cpp/fem/Assembler","programmers-reference/cpp/fem/AssemblerBase","programmers-reference/cpp/fem/BasisFunction","programmers-reference/cpp/fem/CCFEMAssembler","programmers-reference/cpp/fem/CCFEMDofMap","programmers-reference/cpp/fem/CCFEMForm","programmers-reference/cpp/fem/DirichletBC","programmers-reference/cpp/fem/DirichletBC_default_parameters","programmers-reference/cpp/fem/DofMap","programmers-reference/cpp/fem/Equation","programmers-reference/cpp/fem/ErrorControl","programmers-reference/cpp/fem/ErrorControl_default_parameters","programmers-reference/cpp/fem/Extrapolation","programmers-reference/cpp/fem/Extrapolation_extrapolate","programmers-reference/cpp/fem/FiniteElement","programmers-reference/cpp/fem/Form","programmers-reference/cpp/fem/GenericAdaptiveVariationalSolver","programmers-reference/cpp/fem/GenericAdaptiveVariationalSolver_default_parameters","programmers-reference/cpp/fem/GenericDofMap","programmers-reference/cpp/fem/HierarchicalDirichletBC","programmers-reference/cpp/fem/HierarchicalErrorControl","programmers-reference/cpp/fem/HierarchicalForm","programmers-reference/cpp/fem/HierarchicalFunction","programmers-reference/cpp/fem/HierarchicalFunctionSpace","programmers-reference/cpp/fem/HierarchicalLinearVariationalProblem","programmers-reference/cpp/fem/HierarchicalMesh","programmers-reference/cpp/fem/HierarchicalMeshFunctionBool","programmers-reference/cpp/fem/HierarchicalMeshFunctionDouble","programmers-reference/cpp/fem/HierarchicalMeshFunctionInt","programmers-reference/cpp/fem/HierarchicalMeshFunctionSizet","programmers-reference/cpp/fem/HierarchicalMeshFunctionUInt","programmers-reference/cpp/fem/HierarchicalNonlinearVariationalProblem","programmers-reference/cpp/fem/LinearVariationalProblem","programmers-reference/cpp/fem/LinearVariationalSolver","programmers-reference/cpp/fem/LinearVariationalSolver_default_parameters","programmers-reference/cpp/fem/LocalAssembler","programmers-reference/cpp/fem/LocalAssembler_assemble","programmers-reference/cpp/fem/LocalAssembler_assemble_cell","programmers-reference/cpp/fem/LocalAssembler_assemble_exterior_facet","programmers-reference/cpp/fem/LocalAssembler_assemble_interior_facet","programmers-reference/cpp/fem/LocalSolver","programmers-reference/cpp/fem/MultiStageScheme","programmers-reference/cpp/fem/NonlinearVariationalProblem","programmers-reference/cpp/fem/NonlinearVariationalSolver","programmers-reference/cpp/fem/NonlinearVariationalSolver_default_parameters","programmers-reference/cpp/fem/OpenMpAssembler","programmers-reference/cpp/fem/PointIntegralSolver","programmers-reference/cpp/fem/PointIntegralSolver_default_parameters","programmers-reference/cpp/fem/PointSource","programmers-reference/cpp/fem/RKSolver","programmers-reference/cpp/fem/SparsityPatternBuilder","programmers-reference/cpp/fem/SparsityPatternBuilder_build","programmers-reference/cpp/fem/SparsityPatternBuilder_build_ccfem","programmers-reference/cpp/fem/SystemAssembler","programmers-reference/cpp/fem/TimeSeries","programmers-reference/cpp/fem/TimeSeriesHDF5","programmers-reference/cpp/fem/TimeSeriesHDF5_default_parameters","programmers-reference/cpp/fem/TimeSeries_default_parameters","programmers-reference/cpp/fem/TimeSeries_filename_data","programmers-reference/cpp/fem/TimeSeries_filename_times","programmers-reference/cpp/fem/VariationalProblem","programmers-reference/cpp/fem/adapt","programmers-reference/cpp/fem/adapt_markers","programmers-reference/cpp/fem/assemble","programmers-reference/cpp/fem/assemble_system","programmers-reference/cpp/fem/dof_to_vertex_map","programmers-reference/cpp/fem/dorfler_mark","programmers-reference/cpp/fem/fem_solve","programmers-reference/cpp/fem/index","programmers-reference/cpp/fem/mark","programmers-reference/cpp/fem/vertex_to_dof_map","programmers-reference/cpp/function/CCFEMFunction","programmers-reference/cpp/function/CCFEMFunctionSpace","programmers-reference/cpp/function/Constant","programmers-reference/cpp/function/Expression","programmers-reference/cpp/function/FacetArea","programmers-reference/cpp/function/Function","programmers-reference/cpp/function/FunctionAXPY","programmers-reference/cpp/function/FunctionAssigner","programmers-reference/cpp/function/FunctionSpace","programmers-reference/cpp/function/GenericFunction","programmers-reference/cpp/function/HierarchicalFunction","programmers-reference/cpp/function/HierarchicalFunctionSpace","programmers-reference/cpp/function/HierarchicalMesh","programmers-reference/cpp/function/HierarchicalMeshFunctionBool","programmers-reference/cpp/function/HierarchicalMeshFunctionDouble","programmers-reference/cpp/function/HierarchicalMeshFunctionInt","programmers-reference/cpp/function/HierarchicalMeshFunctionSizet","programmers-reference/cpp/function/HierarchicalMeshFunctionUInt","programmers-reference/cpp/function/Lagrange","programmers-reference/cpp/function/Legendre","programmers-reference/cpp/function/Legendre_d2dx","programmers-reference/cpp/function/Legendre_ddx","programmers-reference/cpp/function/Legendre_eval","programmers-reference/cpp/function/MeshCoordinates","programmers-reference/cpp/function/SpecialFacetFunction","programmers-reference/cpp/function/SubSpace","programmers-reference/cpp/function/assign","programmers-reference/cpp/function/between","programmers-reference/cpp/function/index","programmers-reference/cpp/function/ipow","programmers-reference/cpp/function/near","programmers-reference/cpp/function/rand","programmers-reference/cpp/function/seed","programmers-reference/cpp/index","programmers-reference/cpp/io/File","programmers-reference/cpp/io/File_create_parent_path","programmers-reference/cpp/io/File_exists","programmers-reference/cpp/io/GenericFile","programmers-reference/cpp/io/HDF5Attribute","programmers-reference/cpp/io/HDF5File","programmers-reference/cpp/io/HierarchicalFunction","programmers-reference/cpp/io/HierarchicalFunctionSpace","programmers-reference/cpp/io/HierarchicalMesh","programmers-reference/cpp/io/HierarchicalMeshFunctionBool","programmers-reference/cpp/io/HierarchicalMeshFunctionDouble","programmers-reference/cpp/io/HierarchicalMeshFunctionInt","programmers-reference/cpp/io/HierarchicalMeshFunctionSizet","programmers-reference/cpp/io/HierarchicalMeshFunctionUInt","programmers-reference/cpp/io/VTKPlotter","programmers-reference/cpp/io/VTKPlotter_all_interactive","programmers-reference/cpp/io/VTKPlotter_default_parameters","programmers-reference/cpp/io/VTKPlotter_to_key","programmers-reference/cpp/io/XDMFFile","programmers-reference/cpp/io/index","programmers-reference/cpp/io/interactive","programmers-reference/cpp/io/plot","programmers-reference/cpp/la/BlockMatrix","programmers-reference/cpp/la/BlockVector","programmers-reference/cpp/la/CholmodCholeskySolver","programmers-reference/cpp/la/CholmodCholeskySolver_default_parameters","programmers-reference/cpp/la/CoordinateMatrix","programmers-reference/cpp/la/DefaultFactory","programmers-reference/cpp/la/DefaultFactory_factory","programmers-reference/cpp/la/EpetraFactory","programmers-reference/cpp/la/EpetraKrylovSolver","programmers-reference/cpp/la/EpetraKrylovSolver_default_parameters","programmers-reference/cpp/la/EpetraKrylovSolver_methods","programmers-reference/cpp/la/EpetraKrylovSolver_preconditioners","programmers-reference/cpp/la/EpetraLUSolver","programmers-reference/cpp/la/EpetraLUSolver_default_parameters","programmers-reference/cpp/la/EpetraLUSolver_methods","programmers-reference/cpp/la/EpetraMatrix","programmers-reference/cpp/la/EpetraVector","programmers-reference/cpp/la/GenericLUSolver","programmers-reference/cpp/la/GenericLinearAlgebraFactory","programmers-reference/cpp/la/GenericLinearOperator","programmers-reference/cpp/la/GenericLinearSolver","programmers-reference/cpp/la/GenericMatrix","programmers-reference/cpp/la/GenericPreconditioner","programmers-reference/cpp/la/GenericSparsityPattern","programmers-reference/cpp/la/GenericTensor","programmers-reference/cpp/la/GenericVector","programmers-reference/cpp/la/KrylovSolver","programmers-reference/cpp/la/KrylovSolver_default_parameters","programmers-reference/cpp/la/LUSolver","programmers-reference/cpp/la/LUSolver_default_parameters","programmers-reference/cpp/la/LinearAlgebraObject","programmers-reference/cpp/la/LinearOperator","programmers-reference/cpp/la/LinearSolver","programmers-reference/cpp/la/LinearSolver_default_parameters","programmers-reference/cpp/la/Matrix","programmers-reference/cpp/la/NewtonSolver","programmers-reference/cpp/la/NewtonSolver_default_parameters","programmers-reference/cpp/la/NonlinearProblem","programmers-reference/cpp/la/PETScBaseMatrix","programmers-reference/cpp/la/PETScFactory","programmers-reference/cpp/la/PETScFactory_instance","programmers-reference/cpp/la/PETScKrylovSolver","programmers-reference/cpp/la/PETScKrylovSolver_default_parameters","programmers-reference/cpp/la/PETScKrylovSolver_methods","programmers-reference/cpp/la/PETScKrylovSolver_preconditioners","programmers-reference/cpp/la/PETScLUSolver","programmers-reference/cpp/la/PETScLUSolver_default_parameters","programmers-reference/cpp/la/PETScLUSolver_methods","programmers-reference/cpp/la/PETScLinearOperator","programmers-reference/cpp/la/PETScMatrix","programmers-reference/cpp/la/PETScMatrixDeleter","programmers-reference/cpp/la/PETScObject","programmers-reference/cpp/la/PETScObject_petsc_error","programmers-reference/cpp/la/PETScOptions","programmers-reference/cpp/la/PETScOptions_clear","programmers-reference/cpp/la/PETScOptions_set","programmers-reference/cpp/la/PETScPreconditioner","programmers-reference/cpp/la/PETScPreconditioner_default_parameters","programmers-reference/cpp/la/PETScPreconditioner_preconditioners","programmers-reference/cpp/la/PETScSNESSolver","programmers-reference/cpp/la/PETScSNESSolver_default_parameters","programmers-reference/cpp/la/PETScSNESSolver_methods","programmers-reference/cpp/la/PETScUserPreconditioner","programmers-reference/cpp/la/PETScVector","programmers-reference/cpp/la/PETScVectorDeleter","programmers-reference/cpp/la/SLEPcEigenSolver","programmers-reference/cpp/la/SLEPcEigenSolver_default_parameters","programmers-reference/cpp/la/STLFactory","programmers-reference/cpp/la/STLFactory_instance","programmers-reference/cpp/la/STLMatrix","programmers-reference/cpp/la/Scalar","programmers-reference/cpp/la/SparsityPattern","programmers-reference/cpp/la/TensorProductVector","programmers-reference/cpp/la/TrilinosPreconditioner","programmers-reference/cpp/la/TrilinosPreconditioner_default_parameters","programmers-reference/cpp/la/TrilinosPreconditioner_preconditioners","programmers-reference/cpp/la/UmfpackLUSolver","programmers-reference/cpp/la/UmfpackLUSolver_default_parameters","programmers-reference/cpp/la/Vector","programmers-reference/cpp/la/VectorSpaceBasis","programmers-reference/cpp/la/as_backend_type","programmers-reference/cpp/la/get_tensor_type","programmers-reference/cpp/la/has_krylov_solver_method","programmers-reference/cpp/la/has_krylov_solver_preconditioner","programmers-reference/cpp/la/has_lu_solver_method","programmers-reference/cpp/la/has_type","programmers-reference/cpp/la/index","programmers-reference/cpp/la/krylov_solver_methods","programmers-reference/cpp/la/krylov_solver_preconditioners","programmers-reference/cpp/la/la_solve","programmers-reference/cpp/la/linear_algebra_backends","programmers-reference/cpp/la/linear_solver_methods","programmers-reference/cpp/la/list_krylov_solver_methods","programmers-reference/cpp/la/list_krylov_solver_preconditioners","programmers-reference/cpp/la/list_linear_algebra_backends","programmers-reference/cpp/la/list_linear_solver_methods","programmers-reference/cpp/la/list_lu_solver_methods","programmers-reference/cpp/la/lu_solver_methods","programmers-reference/cpp/la/normalize","programmers-reference/cpp/la/residual","programmers-reference/cpp/la/uBLASDenseFactory","programmers-reference/cpp/la/uBLASDenseFactory_instance","programmers-reference/cpp/la/uBLASDenseMatrix","programmers-reference/cpp/la/uBLASILUPreconditioner","programmers-reference/cpp/la/uBLASKrylovSolver","programmers-reference/cpp/la/uBLASKrylovSolver_default_parameters","programmers-reference/cpp/la/uBLASKrylovSolver_methods","programmers-reference/cpp/la/uBLASKrylovSolver_preconditioners","programmers-reference/cpp/la/uBLASLinearOperator","programmers-reference/cpp/la/uBLASPreconditioner","programmers-reference/cpp/la/uBLASSparseFactory","programmers-reference/cpp/la/uBLASSparseFactory_instance","programmers-reference/cpp/la/uBLASSparseMatrix","programmers-reference/cpp/la/uBLASVector","programmers-reference/cpp/mesh/ALE","programmers-reference/cpp/mesh/ALE_move","programmers-reference/cpp/mesh/BoostGraphOrdering","programmers-reference/cpp/mesh/BoostGraphOrdering_compute_cuthill_mckee","programmers-reference/cpp/mesh/BoundaryMesh","programmers-reference/cpp/mesh/BoundingBoxTree","programmers-reference/cpp/mesh/BoundingBoxTree3D","programmers-reference/cpp/mesh/Box","programmers-reference/cpp/mesh/BoxMesh","programmers-reference/cpp/mesh/CSGCGALMeshGenerator2D","programmers-reference/cpp/mesh/CSGCGALMeshGenerator2D_default_parameters","programmers-reference/cpp/mesh/CSGCGALMeshGenerator3D","programmers-reference/cpp/mesh/CSGCGALMeshGenerator3D_default_parameters","programmers-reference/cpp/mesh/CSGDifference","programmers-reference/cpp/mesh/CSGGeometries","programmers-reference/cpp/mesh/CSGGeometry","programmers-reference/cpp/mesh/CSGIntersection","programmers-reference/cpp/mesh/CSGMeshGenerator","programmers-reference/cpp/mesh/CSGMeshGenerator_generate","programmers-reference/cpp/mesh/CSGOperator","programmers-reference/cpp/mesh/CSGPrimitive","programmers-reference/cpp/mesh/CSGPrimitive2D","programmers-reference/cpp/mesh/CSGPrimitive3D","programmers-reference/cpp/mesh/CSGUnion","programmers-reference/cpp/mesh/Cell","programmers-reference/cpp/mesh/CellFunction","programmers-reference/cpp/mesh/CellFunctionBool","programmers-reference/cpp/mesh/CellFunctionDouble","programmers-reference/cpp/mesh/CellFunctionInt","programmers-reference/cpp/mesh/CellFunctionSizet","programmers-reference/cpp/mesh/CellType","programmers-reference/cpp/mesh/CellType_create","programmers-reference/cpp/mesh/CellType_string2type","programmers-reference/cpp/mesh/CellType_type2string","programmers-reference/cpp/mesh/Circle","programmers-reference/cpp/mesh/CircleMesh","programmers-reference/cpp/mesh/Cone","programmers-reference/cpp/mesh/Cylinder","programmers-reference/cpp/mesh/DomainBoundary","programmers-reference/cpp/mesh/DynamicMeshEditor","programmers-reference/cpp/mesh/Edge","programmers-reference/cpp/mesh/EdgeFunction","programmers-reference/cpp/mesh/EdgeFunctionBool","programmers-reference/cpp/mesh/EdgeFunctionDouble","programmers-reference/cpp/mesh/EdgeFunctionInt","programmers-reference/cpp/mesh/EdgeFunctionSizet","programmers-reference/cpp/mesh/Ellipse","programmers-reference/cpp/mesh/EllipseMesh","programmers-reference/cpp/mesh/EllipsoidMesh","programmers-reference/cpp/mesh/Face","programmers-reference/cpp/mesh/FaceFunction","programmers-reference/cpp/mesh/FaceFunctionBool","programmers-reference/cpp/mesh/FaceFunctionDouble","programmers-reference/cpp/mesh/FaceFunctionInt","programmers-reference/cpp/mesh/FaceFunctionSizet","programmers-reference/cpp/mesh/Facet","programmers-reference/cpp/mesh/FacetCell","programmers-reference/cpp/mesh/FacetFunction","programmers-reference/cpp/mesh/FacetFunctionBool","programmers-reference/cpp/mesh/FacetFunctionDouble","programmers-reference/cpp/mesh/FacetFunctionInt","programmers-reference/cpp/mesh/FacetFunctionSizet","programmers-reference/cpp/mesh/GenericBoundingBoxTree","programmers-reference/cpp/mesh/Graph","programmers-reference/cpp/mesh/GraphBuilder","programmers-reference/cpp/mesh/GraphBuilder_compute_dual_graph","programmers-reference/cpp/mesh/GraphBuilder_local_graph","programmers-reference/cpp/mesh/HierarchicalFunction","programmers-reference/cpp/mesh/HierarchicalFunctionSpace","programmers-reference/cpp/mesh/HierarchicalMesh","programmers-reference/cpp/mesh/HierarchicalMeshFunctionBool","programmers-reference/cpp/mesh/HierarchicalMeshFunctionDouble","programmers-reference/cpp/mesh/HierarchicalMeshFunctionInt","programmers-reference/cpp/mesh/HierarchicalMeshFunctionSizet","programmers-reference/cpp/mesh/HierarchicalMeshFunctionUInt","programmers-reference/cpp/mesh/ImplicitDomainMeshGenerator","programmers-reference/cpp/mesh/ImplicitDomainMeshGenerator_generate","programmers-reference/cpp/mesh/ImplicitDomainMeshGenerator_generate_surface","programmers-reference/cpp/mesh/ImplicitSurface","programmers-reference/cpp/mesh/IntervalMesh","programmers-reference/cpp/mesh/LocalMeshData","programmers-reference/cpp/mesh/Mesh","programmers-reference/cpp/mesh/MeshColoring","programmers-reference/cpp/mesh/MeshColoring_cell_colors","programmers-reference/cpp/mesh/MeshColoring_color","programmers-reference/cpp/mesh/MeshColoring_color_cells","programmers-reference/cpp/mesh/MeshColoring_compute_colors","programmers-reference/cpp/mesh/MeshColoring_type_to_dim","programmers-reference/cpp/mesh/MeshConnectivity","programmers-reference/cpp/mesh/MeshData","programmers-reference/cpp/mesh/MeshDisplacement","programmers-reference/cpp/mesh/MeshDomains","programmers-reference/cpp/mesh/MeshEditor","programmers-reference/cpp/mesh/MeshEntity","programmers-reference/cpp/mesh/MeshFunction","programmers-reference/cpp/mesh/MeshFunctionBool","programmers-reference/cpp/mesh/MeshFunctionDouble","programmers-reference/cpp/mesh/MeshFunctionInt","programmers-reference/cpp/mesh/MeshFunctionSizet","programmers-reference/cpp/mesh/MeshGeometry","programmers-reference/cpp/mesh/MeshPartitioning","programmers-reference/cpp/mesh/MeshPartitioning_build_distributed_mesh","programmers-reference/cpp/mesh/MeshPointIntersection","programmers-reference/cpp/mesh/MeshQuality","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_histogram_data","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_matplotlib_histogram","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_min_max","programmers-reference/cpp/mesh/MeshQuality_radius_ratios","programmers-reference/cpp/mesh/MeshRenumbering","programmers-reference/cpp/mesh/MeshTopology","programmers-reference/cpp/mesh/MeshTransformation","programmers-reference/cpp/mesh/MeshTransformation_rotate","programmers-reference/cpp/mesh/MeshTransformation_translate","programmers-reference/cpp/mesh/MeshValueCollection","programmers-reference/cpp/mesh/MeshValueCollectionBool","programmers-reference/cpp/mesh/MeshValueCollectionDouble","programmers-reference/cpp/mesh/MeshValueCollectionInt","programmers-reference/cpp/mesh/MeshValueCollectionSizet","programmers-reference/cpp/mesh/PeriodicBoundaryComputation","programmers-reference/cpp/mesh/PeriodicBoundaryComputation_compute_periodic_pairs","programmers-reference/cpp/mesh/PeriodicBoundaryComputation_masters_slaves","programmers-reference/cpp/mesh/Point","programmers-reference/cpp/mesh/Polygon","programmers-reference/cpp/mesh/PolygonalMeshGenerator","programmers-reference/cpp/mesh/PolygonalMeshGenerator_generate","programmers-reference/cpp/mesh/PolyhedralMeshGenerator","programmers-reference/cpp/mesh/PolyhedralMeshGenerator_generate","programmers-reference/cpp/mesh/PolyhedralMeshGenerator_generate_surface_mesh","programmers-reference/cpp/mesh/Rectangle","programmers-reference/cpp/mesh/RectangleMesh","programmers-reference/cpp/mesh/Restriction","programmers-reference/cpp/mesh/SCOTCH","programmers-reference/cpp/mesh/SCOTCH_compute_gps","programmers-reference/cpp/mesh/Sphere","programmers-reference/cpp/mesh/SphereMesh","programmers-reference/cpp/mesh/SubDomain","programmers-reference/cpp/mesh/SubMesh","programmers-reference/cpp/mesh/SubsetIterator","programmers-reference/cpp/mesh/Surface3D","programmers-reference/cpp/mesh/Tetrahedron","programmers-reference/cpp/mesh/Triangulate","programmers-reference/cpp/mesh/Triangulate_triangulate","programmers-reference/cpp/mesh/UnitCircle","programmers-reference/cpp/mesh/UnitCircleMesh","programmers-reference/cpp/mesh/UnitCube","programmers-reference/cpp/mesh/UnitCubeMesh","programmers-reference/cpp/mesh/UnitInterval","programmers-reference/cpp/mesh/UnitIntervalMesh","programmers-reference/cpp/mesh/UnitSquare","programmers-reference/cpp/mesh/UnitSquareMesh","programmers-reference/cpp/mesh/UnitTetrahedronMesh","programmers-reference/cpp/mesh/UnitTriangleMesh","programmers-reference/cpp/mesh/Vertex","programmers-reference/cpp/mesh/VertexFunction","programmers-reference/cpp/mesh/VertexFunctionBool","programmers-reference/cpp/mesh/VertexFunctionDouble","programmers-reference/cpp/mesh/VertexFunctionInt","programmers-reference/cpp/mesh/VertexFunctionSizet","programmers-reference/cpp/mesh/cells","programmers-reference/cpp/mesh/edges","programmers-reference/cpp/mesh/entities","programmers-reference/cpp/mesh/faces","programmers-reference/cpp/mesh/facets","programmers-reference/cpp/mesh/index","programmers-reference/cpp/mesh/intersect","programmers-reference/cpp/mesh/refine","programmers-reference/cpp/mesh/vertices","programmers-reference/deprecation/down_cast","programmers-reference/deprecation/index","programmers-reference/fem/adaptivesolving/AdaptiveLinearVariationalSolver","programmers-reference/fem/adaptivesolving/AdaptiveNonlinearVariationalSolver","programmers-reference/fem/adaptivesolving/generate_error_control","programmers-reference/fem/adaptivesolving/generate_error_control_forms","programmers-reference/fem/adaptivesolving/index","programmers-reference/fem/assembling/SystemAssembler","programmers-reference/fem/assembling/assemble","programmers-reference/fem/assembling/assemble_system","programmers-reference/fem/assembling/index","programmers-reference/fem/bcs/AutoSubDomain","programmers-reference/fem/bcs/DirichletBC","programmers-reference/fem/bcs/homogenize","programmers-reference/fem/bcs/index","programmers-reference/fem/errorcontrolgenerator/DOLFINErrorControlGenerator","programmers-reference/fem/errorcontrolgenerator/index","programmers-reference/fem/form/Form","programmers-reference/fem/form/index","programmers-reference/fem/formmanipulations/adjoint","programmers-reference/fem/formmanipulations/derivative","programmers-reference/fem/formmanipulations/increase_order","programmers-reference/fem/formmanipulations/index","programmers-reference/fem/formmanipulations/tear","programmers-reference/fem/index","programmers-reference/fem/interpolation/index","programmers-reference/fem/interpolation/interpolate","programmers-reference/fem/norms/errornorm","programmers-reference/fem/norms/index","programmers-reference/fem/norms/norm","programmers-reference/fem/projection/index","programmers-reference/fem/projection/project","programmers-reference/fem/solving/LinearVariationalProblem","programmers-reference/fem/solving/LinearVariationalSolver","programmers-reference/fem/solving/NonlinearVariationalProblem","programmers-reference/fem/solving/NonlinearVariationalSolver","programmers-reference/fem/solving/index","programmers-reference/fem/solving/solve","programmers-reference/fem/variationalproblem/VariationalProblem","programmers-reference/fem/variationalproblem/index","programmers-reference/functions/constant/Constant","programmers-reference/functions/constant/index","programmers-reference/functions/expression/Expression","programmers-reference/functions/expression/index","programmers-reference/functions/function/Argument","programmers-reference/functions/function/Function","programmers-reference/functions/function/TestFunction","programmers-reference/functions/function/TestFunctions","programmers-reference/functions/function/TrialFunction","programmers-reference/functions/function/TrialFunctions","programmers-reference/functions/function/index","programmers-reference/functions/functionspace/FunctionSpace","programmers-reference/functions/functionspace/FunctionSpaceBase","programmers-reference/functions/functionspace/FunctionSpaceFromCpp","programmers-reference/functions/functionspace/MixedFunctionSpace","programmers-reference/functions/functionspace/TensorFunctionSpace","programmers-reference/functions/functionspace/VectorFunctionSpace","programmers-reference/functions/functionspace/create_ufc_function_spaces","programmers-reference/functions/functionspace/index","programmers-reference/functions/index","programmers-reference/functions/specialfunctions/CellSize","programmers-reference/functions/specialfunctions/CellVolume","programmers-reference/functions/specialfunctions/FacetArea","programmers-reference/functions/specialfunctions/FacetNormal","programmers-reference/functions/specialfunctions/MeshCoordinates","programmers-reference/functions/specialfunctions/index","programmers-reference/functions/ufc_functionspace/UFCFunctionSpace","programmers-reference/functions/ufc_functionspace/create_ufc_function_spaces","programmers-reference/functions/ufc_functionspace/index","programmers-reference/importhandler/index","programmers-reference/index","programmers-reference/mesh/ale/compute_edge_map","programmers-reference/mesh/ale/compute_vertex_map","programmers-reference/mesh/ale/index","programmers-reference/mesh/ale/init_parent_edge_indices","programmers-reference/mesh/boundarysubdomainfinder/create_maps","programmers-reference/mesh/boundarysubdomainfinder/find_all_subdomains","programmers-reference/mesh/boundarysubdomainfinder/find_keys_on_one_subdomain","programmers-reference/mesh/boundarysubdomainfinder/find_new_cell_key","programmers-reference/mesh/boundarysubdomainfinder/find_subdomain","programmers-reference/mesh/boundarysubdomainfinder/index","programmers-reference/mesh/boundarysubdomainfinder/main","programmers-reference/mesh/boundarysubdomainfinder/usage","programmers-reference/mesh/boundarysubdomainfinder/write_file","programmers-reference/mesh/index","programmers-reference/mesh/meshes/index","programmers-reference/mesh/refinement/index","programmers-reference/mesh/refinement/refine","programmers-reference/multistage/index","programmers-reference/multistage/multistagescheme/BDF1","programmers-reference/multistage/multistagescheme/BackwardEuler","programmers-reference/multistage/multistagescheme/CN2","programmers-reference/multistage/multistagescheme/CrankNicolson","programmers-reference/multistage/multistagescheme/ERK","programmers-reference/multistage/multistagescheme/ERK1","programmers-reference/multistage/multistagescheme/ERK4","programmers-reference/multistage/multistagescheme/ESDIRK3","programmers-reference/multistage/multistagescheme/ESDIRK4","programmers-reference/multistage/multistagescheme/ExplicitEuler","programmers-reference/multistage/multistagescheme/ExplicitMidPoint","programmers-reference/multistage/multistagescheme/ForwardEuler","programmers-reference/multistage/multistagescheme/ImplicitEuler","programmers-reference/multistage/multistagescheme/MultiStageScheme","programmers-reference/multistage/multistagescheme/RK4","programmers-reference/multistage/multistagescheme/index","programmers-reference/multistage/multistagesolvers/PointIntegralSolver","programmers-reference/multistage/multistagesolvers/RKSolver","programmers-reference/multistage/multistagesolvers/index","quick_reference"],envversion:50,filenames:["demo/documented/auto-adaptive-poisson/python/documentation.rst","demo/documented/bcs/python/documentation.rst","demo/documented/biharmonic/python/documentation.rst","demo/documented/built-in_meshes/python/documentation.rst","demo/documented/cahn-hilliard/python/documentation.rst","demo/documented/csg-2D/python/documentation.rst","demo/documented/csg-3D/python/documentation.rst","demo/documented/eigenvalue/python/documentation.rst","demo/documented/hyperelasticity/python/documentation.rst","demo/documented/mesh-generation/python/documentation.rst","demo/documented/mixed-poisson/python/documentation.rst","demo/documented/navier-stokes/python/documentation.rst","demo/documented/neumann-poisson/python/documentation.rst","demo/documented/nonlinear-poisson/python/documentation.rst","demo/documented/periodic/python/documentation.rst","demo/documented/poisson/python/documentation.rst","demo/documented/singular-poisson/python/documentation.rst","demo/documented/stokes-iterative/python/documentation.rst","demo/documented/stokes-mini/python/documentation.rst","demo/documented/stokes-stabilized/python/documentation.rst","demo/documented/stokes-taylor-hood/python/documentation.rst","demo/documented/subdomains-poisson/python/documentation.rst","demo/documented/subdomains/python/documentation.rst","demo/documented/tensor-weighted-poisson/python/documentation.rst","demo/index.rst","index.rst","programmers-reference/common/constants/index.rst","programmers-reference/common/globalparameters/index.rst","programmers-reference/common/index.rst","programmers-reference/common/math/index.rst","programmers-reference/common/math/sqr.rst","programmers-reference/common/memory/index.rst","programmers-reference/common/memory/memory_usage.rst","programmers-reference/common/plotting/index.rst","programmers-reference/common/plotting/plot.rst","programmers-reference/common/time/Time.rst","programmers-reference/common/time/index.rst","programmers-reference/compilemodules/compilemodule/compile_extension_module.rst","programmers-reference/compilemodules/compilemodule/expression_to_code_fragments.rst","programmers-reference/compilemodules/compilemodule/index.rst","programmers-reference/compilemodules/expressions/compile_expressions.rst","programmers-reference/compilemodules/expressions/index.rst","programmers-reference/compilemodules/index.rst","programmers-reference/compilemodules/jit/index.rst","programmers-reference/compilemodules/jit/jit.rst","programmers-reference/compilemodules/subdomains/CompiledSubDomain.rst","programmers-reference/compilemodules/subdomains/compile_subdomains.rst","programmers-reference/compilemodules/subdomains/index.rst","programmers-reference/compilemodules/swigimportinfo/index.rst","programmers-reference/cpp/common/BoolParameter.rst","programmers-reference/cpp/common/DoubleArray.rst","programmers-reference/cpp/common/DoubleParameter.rst","programmers-reference/cpp/common/Event.rst","programmers-reference/cpp/common/GlobalParameters.rst","programmers-reference/cpp/common/GlobalParameters_default_parameters.rst","programmers-reference/cpp/common/IndexSet.rst","programmers-reference/cpp/common/IntArray.rst","programmers-reference/cpp/common/IntParameter.rst","programmers-reference/cpp/common/MPI.rst","programmers-reference/cpp/common/MPICommunicator.rst","programmers-reference/cpp/common/MPIInfo.rst","programmers-reference/cpp/common/MPINonblocking.rst","programmers-reference/cpp/common/MPI_barrier.rst","programmers-reference/cpp/common/MPI_global_offset.rst","programmers-reference/cpp/common/MPI_index_owner.rst","programmers-reference/cpp/common/MPI_is_broadcaster.rst","programmers-reference/cpp/common/MPI_is_receiver.rst","programmers-reference/cpp/common/MPI_local_range.rst","programmers-reference/cpp/common/MPI_max.rst","programmers-reference/cpp/common/MPI_min.rst","programmers-reference/cpp/common/MPI_num_processes.rst","programmers-reference/cpp/common/MPI_process_number.rst","programmers-reference/cpp/common/MPI_sum.rst","programmers-reference/cpp/common/ParameterValue.rst","programmers-reference/cpp/common/Parameters.rst","programmers-reference/cpp/common/Progress.rst","programmers-reference/cpp/common/StringParameter.rst","programmers-reference/cpp/common/SubSystemsManager.rst","programmers-reference/cpp/common/SubSystemsManager_finalize.rst","programmers-reference/cpp/common/SubSystemsManager_init_mpi.rst","programmers-reference/cpp/common/SubSystemsManager_init_petsc.rst","programmers-reference/cpp/common/SubSystemsManager_mpi_finalized.rst","programmers-reference/cpp/common/SubSystemsManager_mpi_initialized.rst","programmers-reference/cpp/common/SubSystemsManager_responsible_mpi.rst","programmers-reference/cpp/common/SubSystemsManager_responsible_petsc.rst","programmers-reference/cpp/common/Table.rst","programmers-reference/cpp/common/TableEntry.rst","programmers-reference/cpp/common/Timer.rst","programmers-reference/cpp/common/UIntArray.rst","programmers-reference/cpp/common/Variable.rst","programmers-reference/cpp/common/begin.rst","programmers-reference/cpp/common/debug.rst","programmers-reference/cpp/common/deprecation.rst","programmers-reference/cpp/common/dolfin_error.rst","programmers-reference/cpp/common/dolfin_version.rst","programmers-reference/cpp/common/end.rst","programmers-reference/cpp/common/error.rst","programmers-reference/cpp/common/get_log_level.rst","programmers-reference/cpp/common/git_commit_hash.rst","programmers-reference/cpp/common/has_cgal.rst","programmers-reference/cpp/common/has_cholmod.rst","programmers-reference/cpp/common/has_exodus.rst","programmers-reference/cpp/common/has_hdf5.rst","programmers-reference/cpp/common/has_mpi.rst","programmers-reference/cpp/common/has_openmp.rst","programmers-reference/cpp/common/has_parmetis.rst","programmers-reference/cpp/common/has_petsc.rst","programmers-reference/cpp/common/has_scotch.rst","programmers-reference/cpp/common/has_slepc.rst","programmers-reference/cpp/common/has_tao.rst","programmers-reference/cpp/common/has_trilinos.rst","programmers-reference/cpp/common/has_umfpack.rst","programmers-reference/cpp/common/has_zlib.rst","programmers-reference/cpp/common/index.rst","programmers-reference/cpp/common/info.rst","programmers-reference/cpp/common/info_stream.rst","programmers-reference/cpp/common/info_underline.rst","programmers-reference/cpp/common/init.rst","programmers-reference/cpp/common/list_timings.rst","programmers-reference/cpp/common/log.rst","programmers-reference/cpp/common/monitor_memory_usage.rst","programmers-reference/cpp/common/not_working_in_parallel.rst","programmers-reference/cpp/common/set_log_active.rst","programmers-reference/cpp/common/set_log_level.rst","programmers-reference/cpp/common/set_output_stream.rst","programmers-reference/cpp/common/summary.rst","programmers-reference/cpp/common/tic.rst","programmers-reference/cpp/common/time.rst","programmers-reference/cpp/common/timing.rst","programmers-reference/cpp/common/timings.rst","programmers-reference/cpp/common/toc.rst","programmers-reference/cpp/common/warning.rst","programmers-reference/cpp/fem/AdaptiveLinearVariationalSolver.rst","programmers-reference/cpp/fem/AdaptiveNonlinearVariationalSolver.rst","programmers-reference/cpp/fem/Assembler.rst","programmers-reference/cpp/fem/AssemblerBase.rst","programmers-reference/cpp/fem/BasisFunction.rst","programmers-reference/cpp/fem/CCFEMAssembler.rst","programmers-reference/cpp/fem/CCFEMDofMap.rst","programmers-reference/cpp/fem/CCFEMForm.rst","programmers-reference/cpp/fem/DirichletBC.rst","programmers-reference/cpp/fem/DirichletBC_default_parameters.rst","programmers-reference/cpp/fem/DofMap.rst","programmers-reference/cpp/fem/Equation.rst","programmers-reference/cpp/fem/ErrorControl.rst","programmers-reference/cpp/fem/ErrorControl_default_parameters.rst","programmers-reference/cpp/fem/Extrapolation.rst","programmers-reference/cpp/fem/Extrapolation_extrapolate.rst","programmers-reference/cpp/fem/FiniteElement.rst","programmers-reference/cpp/fem/Form.rst","programmers-reference/cpp/fem/GenericAdaptiveVariationalSolver.rst","programmers-reference/cpp/fem/GenericAdaptiveVariationalSolver_default_parameters.rst","programmers-reference/cpp/fem/GenericDofMap.rst","programmers-reference/cpp/fem/HierarchicalDirichletBC.rst","programmers-reference/cpp/fem/HierarchicalErrorControl.rst","programmers-reference/cpp/fem/HierarchicalForm.rst","programmers-reference/cpp/fem/HierarchicalFunction.rst","programmers-reference/cpp/fem/HierarchicalFunctionSpace.rst","programmers-reference/cpp/fem/HierarchicalLinearVariationalProblem.rst","programmers-reference/cpp/fem/HierarchicalMesh.rst","programmers-reference/cpp/fem/HierarchicalMeshFunctionBool.rst","programmers-reference/cpp/fem/HierarchicalMeshFunctionDouble.rst","programmers-reference/cpp/fem/HierarchicalMeshFunctionInt.rst","programmers-reference/cpp/fem/HierarchicalMeshFunctionSizet.rst","programmers-reference/cpp/fem/HierarchicalMeshFunctionUInt.rst","programmers-reference/cpp/fem/HierarchicalNonlinearVariationalProblem.rst","programmers-reference/cpp/fem/LinearVariationalProblem.rst","programmers-reference/cpp/fem/LinearVariationalSolver.rst","programmers-reference/cpp/fem/LinearVariationalSolver_default_parameters.rst","programmers-reference/cpp/fem/LocalAssembler.rst","programmers-reference/cpp/fem/LocalAssembler_assemble.rst","programmers-reference/cpp/fem/LocalAssembler_assemble_cell.rst","programmers-reference/cpp/fem/LocalAssembler_assemble_exterior_facet.rst","programmers-reference/cpp/fem/LocalAssembler_assemble_interior_facet.rst","programmers-reference/cpp/fem/LocalSolver.rst","programmers-reference/cpp/fem/MultiStageScheme.rst","programmers-reference/cpp/fem/NonlinearVariationalProblem.rst","programmers-reference/cpp/fem/NonlinearVariationalSolver.rst","programmers-reference/cpp/fem/NonlinearVariationalSolver_default_parameters.rst","programmers-reference/cpp/fem/OpenMpAssembler.rst","programmers-reference/cpp/fem/PointIntegralSolver.rst","programmers-reference/cpp/fem/PointIntegralSolver_default_parameters.rst","programmers-reference/cpp/fem/PointSource.rst","programmers-reference/cpp/fem/RKSolver.rst","programmers-reference/cpp/fem/SparsityPatternBuilder.rst","programmers-reference/cpp/fem/SparsityPatternBuilder_build.rst","programmers-reference/cpp/fem/SparsityPatternBuilder_build_ccfem.rst","programmers-reference/cpp/fem/SystemAssembler.rst","programmers-reference/cpp/fem/TimeSeries.rst","programmers-reference/cpp/fem/TimeSeriesHDF5.rst","programmers-reference/cpp/fem/TimeSeriesHDF5_default_parameters.rst","programmers-reference/cpp/fem/TimeSeries_default_parameters.rst","programmers-reference/cpp/fem/TimeSeries_filename_data.rst","programmers-reference/cpp/fem/TimeSeries_filename_times.rst","programmers-reference/cpp/fem/VariationalProblem.rst","programmers-reference/cpp/fem/adapt.rst","programmers-reference/cpp/fem/adapt_markers.rst","programmers-reference/cpp/fem/assemble.rst","programmers-reference/cpp/fem/assemble_system.rst","programmers-reference/cpp/fem/dof_to_vertex_map.rst","programmers-reference/cpp/fem/dorfler_mark.rst","programmers-reference/cpp/fem/fem_solve.rst","programmers-reference/cpp/fem/index.rst","programmers-reference/cpp/fem/mark.rst","programmers-reference/cpp/fem/vertex_to_dof_map.rst","programmers-reference/cpp/function/CCFEMFunction.rst","programmers-reference/cpp/function/CCFEMFunctionSpace.rst","programmers-reference/cpp/function/Constant.rst","programmers-reference/cpp/function/Expression.rst","programmers-reference/cpp/function/FacetArea.rst","programmers-reference/cpp/function/Function.rst","programmers-reference/cpp/function/FunctionAXPY.rst","programmers-reference/cpp/function/FunctionAssigner.rst","programmers-reference/cpp/function/FunctionSpace.rst","programmers-reference/cpp/function/GenericFunction.rst","programmers-reference/cpp/function/HierarchicalFunction.rst","programmers-reference/cpp/function/HierarchicalFunctionSpace.rst","programmers-reference/cpp/function/HierarchicalMesh.rst","programmers-reference/cpp/function/HierarchicalMeshFunctionBool.rst","programmers-reference/cpp/function/HierarchicalMeshFunctionDouble.rst","programmers-reference/cpp/function/HierarchicalMeshFunctionInt.rst","programmers-reference/cpp/function/HierarchicalMeshFunctionSizet.rst","programmers-reference/cpp/function/HierarchicalMeshFunctionUInt.rst","programmers-reference/cpp/function/Lagrange.rst","programmers-reference/cpp/function/Legendre.rst","programmers-reference/cpp/function/Legendre_d2dx.rst","programmers-reference/cpp/function/Legendre_ddx.rst","programmers-reference/cpp/function/Legendre_eval.rst","programmers-reference/cpp/function/MeshCoordinates.rst","programmers-reference/cpp/function/SpecialFacetFunction.rst","programmers-reference/cpp/function/SubSpace.rst","programmers-reference/cpp/function/assign.rst","programmers-reference/cpp/function/between.rst","programmers-reference/cpp/function/index.rst","programmers-reference/cpp/function/ipow.rst","programmers-reference/cpp/function/near.rst","programmers-reference/cpp/function/rand.rst","programmers-reference/cpp/function/seed.rst","programmers-reference/cpp/index.rst","programmers-reference/cpp/io/File.rst","programmers-reference/cpp/io/File_create_parent_path.rst","programmers-reference/cpp/io/File_exists.rst","programmers-reference/cpp/io/GenericFile.rst","programmers-reference/cpp/io/HDF5Attribute.rst","programmers-reference/cpp/io/HDF5File.rst","programmers-reference/cpp/io/HierarchicalFunction.rst","programmers-reference/cpp/io/HierarchicalFunctionSpace.rst","programmers-reference/cpp/io/HierarchicalMesh.rst","programmers-reference/cpp/io/HierarchicalMeshFunctionBool.rst","programmers-reference/cpp/io/HierarchicalMeshFunctionDouble.rst","programmers-reference/cpp/io/HierarchicalMeshFunctionInt.rst","programmers-reference/cpp/io/HierarchicalMeshFunctionSizet.rst","programmers-reference/cpp/io/HierarchicalMeshFunctionUInt.rst","programmers-reference/cpp/io/VTKPlotter.rst","programmers-reference/cpp/io/VTKPlotter_all_interactive.rst","programmers-reference/cpp/io/VTKPlotter_default_parameters.rst","programmers-reference/cpp/io/VTKPlotter_to_key.rst","programmers-reference/cpp/io/XDMFFile.rst","programmers-reference/cpp/io/index.rst","programmers-reference/cpp/io/interactive.rst","programmers-reference/cpp/io/plot.rst","programmers-reference/cpp/la/BlockMatrix.rst","programmers-reference/cpp/la/BlockVector.rst","programmers-reference/cpp/la/CholmodCholeskySolver.rst","programmers-reference/cpp/la/CholmodCholeskySolver_default_parameters.rst","programmers-reference/cpp/la/CoordinateMatrix.rst","programmers-reference/cpp/la/DefaultFactory.rst","programmers-reference/cpp/la/DefaultFactory_factory.rst","programmers-reference/cpp/la/EpetraFactory.rst","programmers-reference/cpp/la/EpetraKrylovSolver.rst","programmers-reference/cpp/la/EpetraKrylovSolver_default_parameters.rst","programmers-reference/cpp/la/EpetraKrylovSolver_methods.rst","programmers-reference/cpp/la/EpetraKrylovSolver_preconditioners.rst","programmers-reference/cpp/la/EpetraLUSolver.rst","programmers-reference/cpp/la/EpetraLUSolver_default_parameters.rst","programmers-reference/cpp/la/EpetraLUSolver_methods.rst","programmers-reference/cpp/la/EpetraMatrix.rst","programmers-reference/cpp/la/EpetraVector.rst","programmers-reference/cpp/la/GenericLUSolver.rst","programmers-reference/cpp/la/GenericLinearAlgebraFactory.rst","programmers-reference/cpp/la/GenericLinearOperator.rst","programmers-reference/cpp/la/GenericLinearSolver.rst","programmers-reference/cpp/la/GenericMatrix.rst","programmers-reference/cpp/la/GenericPreconditioner.rst","programmers-reference/cpp/la/GenericSparsityPattern.rst","programmers-reference/cpp/la/GenericTensor.rst","programmers-reference/cpp/la/GenericVector.rst","programmers-reference/cpp/la/KrylovSolver.rst","programmers-reference/cpp/la/KrylovSolver_default_parameters.rst","programmers-reference/cpp/la/LUSolver.rst","programmers-reference/cpp/la/LUSolver_default_parameters.rst","programmers-reference/cpp/la/LinearAlgebraObject.rst","programmers-reference/cpp/la/LinearOperator.rst","programmers-reference/cpp/la/LinearSolver.rst","programmers-reference/cpp/la/LinearSolver_default_parameters.rst","programmers-reference/cpp/la/Matrix.rst","programmers-reference/cpp/la/NewtonSolver.rst","programmers-reference/cpp/la/NewtonSolver_default_parameters.rst","programmers-reference/cpp/la/NonlinearProblem.rst","programmers-reference/cpp/la/PETScBaseMatrix.rst","programmers-reference/cpp/la/PETScFactory.rst","programmers-reference/cpp/la/PETScFactory_instance.rst","programmers-reference/cpp/la/PETScKrylovSolver.rst","programmers-reference/cpp/la/PETScKrylovSolver_default_parameters.rst","programmers-reference/cpp/la/PETScKrylovSolver_methods.rst","programmers-reference/cpp/la/PETScKrylovSolver_preconditioners.rst","programmers-reference/cpp/la/PETScLUSolver.rst","programmers-reference/cpp/la/PETScLUSolver_default_parameters.rst","programmers-reference/cpp/la/PETScLUSolver_methods.rst","programmers-reference/cpp/la/PETScLinearOperator.rst","programmers-reference/cpp/la/PETScMatrix.rst","programmers-reference/cpp/la/PETScMatrixDeleter.rst","programmers-reference/cpp/la/PETScObject.rst","programmers-reference/cpp/la/PETScObject_petsc_error.rst","programmers-reference/cpp/la/PETScOptions.rst","programmers-reference/cpp/la/PETScOptions_clear.rst","programmers-reference/cpp/la/PETScOptions_set.rst","programmers-reference/cpp/la/PETScPreconditioner.rst","programmers-reference/cpp/la/PETScPreconditioner_default_parameters.rst","programmers-reference/cpp/la/PETScPreconditioner_preconditioners.rst","programmers-reference/cpp/la/PETScSNESSolver.rst","programmers-reference/cpp/la/PETScSNESSolver_default_parameters.rst","programmers-reference/cpp/la/PETScSNESSolver_methods.rst","programmers-reference/cpp/la/PETScUserPreconditioner.rst","programmers-reference/cpp/la/PETScVector.rst","programmers-reference/cpp/la/PETScVectorDeleter.rst","programmers-reference/cpp/la/SLEPcEigenSolver.rst","programmers-reference/cpp/la/SLEPcEigenSolver_default_parameters.rst","programmers-reference/cpp/la/STLFactory.rst","programmers-reference/cpp/la/STLFactory_instance.rst","programmers-reference/cpp/la/STLMatrix.rst","programmers-reference/cpp/la/Scalar.rst","programmers-reference/cpp/la/SparsityPattern.rst","programmers-reference/cpp/la/TensorProductVector.rst","programmers-reference/cpp/la/TrilinosPreconditioner.rst","programmers-reference/cpp/la/TrilinosPreconditioner_default_parameters.rst","programmers-reference/cpp/la/TrilinosPreconditioner_preconditioners.rst","programmers-reference/cpp/la/UmfpackLUSolver.rst","programmers-reference/cpp/la/UmfpackLUSolver_default_parameters.rst","programmers-reference/cpp/la/Vector.rst","programmers-reference/cpp/la/VectorSpaceBasis.rst","programmers-reference/cpp/la/as_backend_type.rst","programmers-reference/cpp/la/get_tensor_type.rst","programmers-reference/cpp/la/has_krylov_solver_method.rst","programmers-reference/cpp/la/has_krylov_solver_preconditioner.rst","programmers-reference/cpp/la/has_lu_solver_method.rst","programmers-reference/cpp/la/has_type.rst","programmers-reference/cpp/la/index.rst","programmers-reference/cpp/la/krylov_solver_methods.rst","programmers-reference/cpp/la/krylov_solver_preconditioners.rst","programmers-reference/cpp/la/la_solve.rst","programmers-reference/cpp/la/linear_algebra_backends.rst","programmers-reference/cpp/la/linear_solver_methods.rst","programmers-reference/cpp/la/list_krylov_solver_methods.rst","programmers-reference/cpp/la/list_krylov_solver_preconditioners.rst","programmers-reference/cpp/la/list_linear_algebra_backends.rst","programmers-reference/cpp/la/list_linear_solver_methods.rst","programmers-reference/cpp/la/list_lu_solver_methods.rst","programmers-reference/cpp/la/lu_solver_methods.rst","programmers-reference/cpp/la/normalize.rst","programmers-reference/cpp/la/residual.rst","programmers-reference/cpp/la/uBLASDenseFactory.rst","programmers-reference/cpp/la/uBLASDenseFactory_instance.rst","programmers-reference/cpp/la/uBLASDenseMatrix.rst","programmers-reference/cpp/la/uBLASILUPreconditioner.rst","programmers-reference/cpp/la/uBLASKrylovSolver.rst","programmers-reference/cpp/la/uBLASKrylovSolver_default_parameters.rst","programmers-reference/cpp/la/uBLASKrylovSolver_methods.rst","programmers-reference/cpp/la/uBLASKrylovSolver_preconditioners.rst","programmers-reference/cpp/la/uBLASLinearOperator.rst","programmers-reference/cpp/la/uBLASPreconditioner.rst","programmers-reference/cpp/la/uBLASSparseFactory.rst","programmers-reference/cpp/la/uBLASSparseFactory_instance.rst","programmers-reference/cpp/la/uBLASSparseMatrix.rst","programmers-reference/cpp/la/uBLASVector.rst","programmers-reference/cpp/mesh/ALE.rst","programmers-reference/cpp/mesh/ALE_move.rst","programmers-reference/cpp/mesh/BoostGraphOrdering.rst","programmers-reference/cpp/mesh/BoostGraphOrdering_compute_cuthill_mckee.rst","programmers-reference/cpp/mesh/BoundaryMesh.rst","programmers-reference/cpp/mesh/BoundingBoxTree.rst","programmers-reference/cpp/mesh/BoundingBoxTree3D.rst","programmers-reference/cpp/mesh/Box.rst","programmers-reference/cpp/mesh/BoxMesh.rst","programmers-reference/cpp/mesh/CSGCGALMeshGenerator2D.rst","programmers-reference/cpp/mesh/CSGCGALMeshGenerator2D_default_parameters.rst","programmers-reference/cpp/mesh/CSGCGALMeshGenerator3D.rst","programmers-reference/cpp/mesh/CSGCGALMeshGenerator3D_default_parameters.rst","programmers-reference/cpp/mesh/CSGDifference.rst","programmers-reference/cpp/mesh/CSGGeometries.rst","programmers-reference/cpp/mesh/CSGGeometry.rst","programmers-reference/cpp/mesh/CSGIntersection.rst","programmers-reference/cpp/mesh/CSGMeshGenerator.rst","programmers-reference/cpp/mesh/CSGMeshGenerator_generate.rst","programmers-reference/cpp/mesh/CSGOperator.rst","programmers-reference/cpp/mesh/CSGPrimitive.rst","programmers-reference/cpp/mesh/CSGPrimitive2D.rst","programmers-reference/cpp/mesh/CSGPrimitive3D.rst","programmers-reference/cpp/mesh/CSGUnion.rst","programmers-reference/cpp/mesh/Cell.rst","programmers-reference/cpp/mesh/CellFunction.rst","programmers-reference/cpp/mesh/CellFunctionBool.rst","programmers-reference/cpp/mesh/CellFunctionDouble.rst","programmers-reference/cpp/mesh/CellFunctionInt.rst","programmers-reference/cpp/mesh/CellFunctionSizet.rst","programmers-reference/cpp/mesh/CellType.rst","programmers-reference/cpp/mesh/CellType_create.rst","programmers-reference/cpp/mesh/CellType_string2type.rst","programmers-reference/cpp/mesh/CellType_type2string.rst","programmers-reference/cpp/mesh/Circle.rst","programmers-reference/cpp/mesh/CircleMesh.rst","programmers-reference/cpp/mesh/Cone.rst","programmers-reference/cpp/mesh/Cylinder.rst","programmers-reference/cpp/mesh/DomainBoundary.rst","programmers-reference/cpp/mesh/DynamicMeshEditor.rst","programmers-reference/cpp/mesh/Edge.rst","programmers-reference/cpp/mesh/EdgeFunction.rst","programmers-reference/cpp/mesh/EdgeFunctionBool.rst","programmers-reference/cpp/mesh/EdgeFunctionDouble.rst","programmers-reference/cpp/mesh/EdgeFunctionInt.rst","programmers-reference/cpp/mesh/EdgeFunctionSizet.rst","programmers-reference/cpp/mesh/Ellipse.rst","programmers-reference/cpp/mesh/EllipseMesh.rst","programmers-reference/cpp/mesh/EllipsoidMesh.rst","programmers-reference/cpp/mesh/Face.rst","programmers-reference/cpp/mesh/FaceFunction.rst","programmers-reference/cpp/mesh/FaceFunctionBool.rst","programmers-reference/cpp/mesh/FaceFunctionDouble.rst","programmers-reference/cpp/mesh/FaceFunctionInt.rst","programmers-reference/cpp/mesh/FaceFunctionSizet.rst","programmers-reference/cpp/mesh/Facet.rst","programmers-reference/cpp/mesh/FacetCell.rst","programmers-reference/cpp/mesh/FacetFunction.rst","programmers-reference/cpp/mesh/FacetFunctionBool.rst","programmers-reference/cpp/mesh/FacetFunctionDouble.rst","programmers-reference/cpp/mesh/FacetFunctionInt.rst","programmers-reference/cpp/mesh/FacetFunctionSizet.rst","programmers-reference/cpp/mesh/GenericBoundingBoxTree.rst","programmers-reference/cpp/mesh/Graph.rst","programmers-reference/cpp/mesh/GraphBuilder.rst","programmers-reference/cpp/mesh/GraphBuilder_compute_dual_graph.rst","programmers-reference/cpp/mesh/GraphBuilder_local_graph.rst","programmers-reference/cpp/mesh/HierarchicalFunction.rst","programmers-reference/cpp/mesh/HierarchicalFunctionSpace.rst","programmers-reference/cpp/mesh/HierarchicalMesh.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionBool.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionDouble.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionInt.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionSizet.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionUInt.rst","programmers-reference/cpp/mesh/ImplicitDomainMeshGenerator.rst","programmers-reference/cpp/mesh/ImplicitDomainMeshGenerator_generate.rst","programmers-reference/cpp/mesh/ImplicitDomainMeshGenerator_generate_surface.rst","programmers-reference/cpp/mesh/ImplicitSurface.rst","programmers-reference/cpp/mesh/IntervalMesh.rst","programmers-reference/cpp/mesh/LocalMeshData.rst","programmers-reference/cpp/mesh/Mesh.rst","programmers-reference/cpp/mesh/MeshColoring.rst","programmers-reference/cpp/mesh/MeshColoring_cell_colors.rst","programmers-reference/cpp/mesh/MeshColoring_color.rst","programmers-reference/cpp/mesh/MeshColoring_color_cells.rst","programmers-reference/cpp/mesh/MeshColoring_compute_colors.rst","programmers-reference/cpp/mesh/MeshColoring_type_to_dim.rst","programmers-reference/cpp/mesh/MeshConnectivity.rst","programmers-reference/cpp/mesh/MeshData.rst","programmers-reference/cpp/mesh/MeshDisplacement.rst","programmers-reference/cpp/mesh/MeshDomains.rst","programmers-reference/cpp/mesh/MeshEditor.rst","programmers-reference/cpp/mesh/MeshEntity.rst","programmers-reference/cpp/mesh/MeshFunction.rst","programmers-reference/cpp/mesh/MeshFunctionBool.rst","programmers-reference/cpp/mesh/MeshFunctionDouble.rst","programmers-reference/cpp/mesh/MeshFunctionInt.rst","programmers-reference/cpp/mesh/MeshFunctionSizet.rst","programmers-reference/cpp/mesh/MeshGeometry.rst","programmers-reference/cpp/mesh/MeshPartitioning.rst","programmers-reference/cpp/mesh/MeshPartitioning_build_distributed_mesh.rst","programmers-reference/cpp/mesh/MeshPointIntersection.rst","programmers-reference/cpp/mesh/MeshQuality.rst","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_histogram_data.rst","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_matplotlib_histogram.rst","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_min_max.rst","programmers-reference/cpp/mesh/MeshQuality_radius_ratios.rst","programmers-reference/cpp/mesh/MeshRenumbering.rst","programmers-reference/cpp/mesh/MeshTopology.rst","programmers-reference/cpp/mesh/MeshTransformation.rst","programmers-reference/cpp/mesh/MeshTransformation_rotate.rst","programmers-reference/cpp/mesh/MeshTransformation_translate.rst","programmers-reference/cpp/mesh/MeshValueCollection.rst","programmers-reference/cpp/mesh/MeshValueCollectionBool.rst","programmers-reference/cpp/mesh/MeshValueCollectionDouble.rst","programmers-reference/cpp/mesh/MeshValueCollectionInt.rst","programmers-reference/cpp/mesh/MeshValueCollectionSizet.rst","programmers-reference/cpp/mesh/PeriodicBoundaryComputation.rst","programmers-reference/cpp/mesh/PeriodicBoundaryComputation_compute_periodic_pairs.rst","programmers-reference/cpp/mesh/PeriodicBoundaryComputation_masters_slaves.rst","programmers-reference/cpp/mesh/Point.rst","programmers-reference/cpp/mesh/Polygon.rst","programmers-reference/cpp/mesh/PolygonalMeshGenerator.rst","programmers-reference/cpp/mesh/PolygonalMeshGenerator_generate.rst","programmers-reference/cpp/mesh/PolyhedralMeshGenerator.rst","programmers-reference/cpp/mesh/PolyhedralMeshGenerator_generate.rst","programmers-reference/cpp/mesh/PolyhedralMeshGenerator_generate_surface_mesh.rst","programmers-reference/cpp/mesh/Rectangle.rst","programmers-reference/cpp/mesh/RectangleMesh.rst","programmers-reference/cpp/mesh/Restriction.rst","programmers-reference/cpp/mesh/SCOTCH.rst","programmers-reference/cpp/mesh/SCOTCH_compute_gps.rst","programmers-reference/cpp/mesh/Sphere.rst","programmers-reference/cpp/mesh/SphereMesh.rst","programmers-reference/cpp/mesh/SubDomain.rst","programmers-reference/cpp/mesh/SubMesh.rst","programmers-reference/cpp/mesh/SubsetIterator.rst","programmers-reference/cpp/mesh/Surface3D.rst","programmers-reference/cpp/mesh/Tetrahedron.rst","programmers-reference/cpp/mesh/Triangulate.rst","programmers-reference/cpp/mesh/Triangulate_triangulate.rst","programmers-reference/cpp/mesh/UnitCircle.rst","programmers-reference/cpp/mesh/UnitCircleMesh.rst","programmers-reference/cpp/mesh/UnitCube.rst","programmers-reference/cpp/mesh/UnitCubeMesh.rst","programmers-reference/cpp/mesh/UnitInterval.rst","programmers-reference/cpp/mesh/UnitIntervalMesh.rst","programmers-reference/cpp/mesh/UnitSquare.rst","programmers-reference/cpp/mesh/UnitSquareMesh.rst","programmers-reference/cpp/mesh/UnitTetrahedronMesh.rst","programmers-reference/cpp/mesh/UnitTriangleMesh.rst","programmers-reference/cpp/mesh/Vertex.rst","programmers-reference/cpp/mesh/VertexFunction.rst","programmers-reference/cpp/mesh/VertexFunctionBool.rst","programmers-reference/cpp/mesh/VertexFunctionDouble.rst","programmers-reference/cpp/mesh/VertexFunctionInt.rst","programmers-reference/cpp/mesh/VertexFunctionSizet.rst","programmers-reference/cpp/mesh/cells.rst","programmers-reference/cpp/mesh/edges.rst","programmers-reference/cpp/mesh/entities.rst","programmers-reference/cpp/mesh/faces.rst","programmers-reference/cpp/mesh/facets.rst","programmers-reference/cpp/mesh/index.rst","programmers-reference/cpp/mesh/intersect.rst","programmers-reference/cpp/mesh/refine.rst","programmers-reference/cpp/mesh/vertices.rst","programmers-reference/deprecation/down_cast.rst","programmers-reference/deprecation/index.rst","programmers-reference/fem/adaptivesolving/AdaptiveLinearVariationalSolver.rst","programmers-reference/fem/adaptivesolving/AdaptiveNonlinearVariationalSolver.rst","programmers-reference/fem/adaptivesolving/generate_error_control.rst","programmers-reference/fem/adaptivesolving/generate_error_control_forms.rst","programmers-reference/fem/adaptivesolving/index.rst","programmers-reference/fem/assembling/SystemAssembler.rst","programmers-reference/fem/assembling/assemble.rst","programmers-reference/fem/assembling/assemble_system.rst","programmers-reference/fem/assembling/index.rst","programmers-reference/fem/bcs/AutoSubDomain.rst","programmers-reference/fem/bcs/DirichletBC.rst","programmers-reference/fem/bcs/homogenize.rst","programmers-reference/fem/bcs/index.rst","programmers-reference/fem/errorcontrolgenerator/DOLFINErrorControlGenerator.rst","programmers-reference/fem/errorcontrolgenerator/index.rst","programmers-reference/fem/form/Form.rst","programmers-reference/fem/form/index.rst","programmers-reference/fem/formmanipulations/adjoint.rst","programmers-reference/fem/formmanipulations/derivative.rst","programmers-reference/fem/formmanipulations/increase_order.rst","programmers-reference/fem/formmanipulations/index.rst","programmers-reference/fem/formmanipulations/tear.rst","programmers-reference/fem/index.rst","programmers-reference/fem/interpolation/index.rst","programmers-reference/fem/interpolation/interpolate.rst","programmers-reference/fem/norms/errornorm.rst","programmers-reference/fem/norms/index.rst","programmers-reference/fem/norms/norm.rst","programmers-reference/fem/projection/index.rst","programmers-reference/fem/projection/project.rst","programmers-reference/fem/solving/LinearVariationalProblem.rst","programmers-reference/fem/solving/LinearVariationalSolver.rst","programmers-reference/fem/solving/NonlinearVariationalProblem.rst","programmers-reference/fem/solving/NonlinearVariationalSolver.rst","programmers-reference/fem/solving/index.rst","programmers-reference/fem/solving/solve.rst","programmers-reference/fem/variationalproblem/VariationalProblem.rst","programmers-reference/fem/variationalproblem/index.rst","programmers-reference/functions/constant/Constant.rst","programmers-reference/functions/constant/index.rst","programmers-reference/functions/expression/Expression.rst","programmers-reference/functions/expression/index.rst","programmers-reference/functions/function/Argument.rst","programmers-reference/functions/function/Function.rst","programmers-reference/functions/function/TestFunction.rst","programmers-reference/functions/function/TestFunctions.rst","programmers-reference/functions/function/TrialFunction.rst","programmers-reference/functions/function/TrialFunctions.rst","programmers-reference/functions/function/index.rst","programmers-reference/functions/functionspace/FunctionSpace.rst","programmers-reference/functions/functionspace/FunctionSpaceBase.rst","programmers-reference/functions/functionspace/FunctionSpaceFromCpp.rst","programmers-reference/functions/functionspace/MixedFunctionSpace.rst","programmers-reference/functions/functionspace/TensorFunctionSpace.rst","programmers-reference/functions/functionspace/VectorFunctionSpace.rst","programmers-reference/functions/functionspace/create_ufc_function_spaces.rst","programmers-reference/functions/functionspace/index.rst","programmers-reference/functions/index.rst","programmers-reference/functions/specialfunctions/CellSize.rst","programmers-reference/functions/specialfunctions/CellVolume.rst","programmers-reference/functions/specialfunctions/FacetArea.rst","programmers-reference/functions/specialfunctions/FacetNormal.rst","programmers-reference/functions/specialfunctions/MeshCoordinates.rst","programmers-reference/functions/specialfunctions/index.rst","programmers-reference/functions/ufc_functionspace/UFCFunctionSpace.rst","programmers-reference/functions/ufc_functionspace/create_ufc_function_spaces.rst","programmers-reference/functions/ufc_functionspace/index.rst","programmers-reference/importhandler/index.rst","programmers-reference/index.rst","programmers-reference/mesh/ale/compute_edge_map.rst","programmers-reference/mesh/ale/compute_vertex_map.rst","programmers-reference/mesh/ale/index.rst","programmers-reference/mesh/ale/init_parent_edge_indices.rst","programmers-reference/mesh/boundarysubdomainfinder/create_maps.rst","programmers-reference/mesh/boundarysubdomainfinder/find_all_subdomains.rst","programmers-reference/mesh/boundarysubdomainfinder/find_keys_on_one_subdomain.rst","programmers-reference/mesh/boundarysubdomainfinder/find_new_cell_key.rst","programmers-reference/mesh/boundarysubdomainfinder/find_subdomain.rst","programmers-reference/mesh/boundarysubdomainfinder/index.rst","programmers-reference/mesh/boundarysubdomainfinder/main.rst","programmers-reference/mesh/boundarysubdomainfinder/usage.rst","programmers-reference/mesh/boundarysubdomainfinder/write_file.rst","programmers-reference/mesh/index.rst","programmers-reference/mesh/meshes/index.rst","programmers-reference/mesh/refinement/index.rst","programmers-reference/mesh/refinement/refine.rst","programmers-reference/multistage/index.rst","programmers-reference/multistage/multistagescheme/BDF1.rst","programmers-reference/multistage/multistagescheme/BackwardEuler.rst","programmers-reference/multistage/multistagescheme/CN2.rst","programmers-reference/multistage/multistagescheme/CrankNicolson.rst","programmers-reference/multistage/multistagescheme/ERK.rst","programmers-reference/multistage/multistagescheme/ERK1.rst","programmers-reference/multistage/multistagescheme/ERK4.rst","programmers-reference/multistage/multistagescheme/ESDIRK3.rst","programmers-reference/multistage/multistagescheme/ESDIRK4.rst","programmers-reference/multistage/multistagescheme/ExplicitEuler.rst","programmers-reference/multistage/multistagescheme/ExplicitMidPoint.rst","programmers-reference/multistage/multistagescheme/ForwardEuler.rst","programmers-reference/multistage/multistagescheme/ImplicitEuler.rst","programmers-reference/multistage/multistagescheme/MultiStageScheme.rst","programmers-reference/multistage/multistagescheme/RK4.rst","programmers-reference/multistage/multistagescheme/index.rst","programmers-reference/multistage/multistagesolvers/PointIntegralSolver.rst","programmers-reference/multistage/multistagesolvers/RKSolver.rst","programmers-reference/multistage/multistagesolvers/index.rst","quick_reference.rst"],objects:{"":{dolfin:[612,0,0,"-"]},"dolfin.common":{constants:[26,0,0,"-"],globalparameters:[27,0,0,"-"],math:[29,0,0,"-"],memory:[31,0,0,"-"],plotting:[33,0,0,"-"],time:[36,0,0,"-"]},"dolfin.common.math":{sqr:[30,1,1,""]},"dolfin.common.memory":{memory_usage:[32,1,1,""]},"dolfin.common.plotting":{plot:[34,1,1,""]},"dolfin.common.time":{Time:[35,2,1,""]},"dolfin.compilemodules":{compilemodule:[39,0,0,"-"],expressions:[41,0,0,"-"],jit:[43,0,0,"-"],subdomains:[47,0,0,"-"],swigimportinfo:[48,0,0,"-"]},"dolfin.compilemodules.compilemodule":{compile_extension_module:[37,1,1,""],expression_to_code_fragments:[38,1,1,""]},"dolfin.compilemodules.expressions":{compile_expressions:[40,1,1,""]},"dolfin.compilemodules.jit":{jit:[44,1,1,""]},"dolfin.compilemodules.subdomains":{CompiledSubDomain:[45,1,1,""],compile_subdomains:[46,1,1,""]},"dolfin.cpp":{"function":[233,0,0,"-"],common:[113,0,0,"-"],fem:[202,0,0,"-"],io:[258,0,0,"-"],la:[347,0,0,"-"],mesh:[538,0,0,"-"]},"dolfin.cpp.common":{BoolParameter:[49,2,1,""],DoubleArray:[50,2,1,""],DoubleParameter:[51,2,1,""],Event:[52,2,1,""],GlobalParameters:[53,2,1,""],GlobalParameters_default_parameters:[54,1,1,""],IndexSet:[55,2,1,""],IntArray:[56,2,1,""],IntParameter:[57,2,1,""],MPI:[58,2,1,""],MPICommunicator:[59,2,1,""],MPIInfo:[60,2,1,""],MPINonblocking:[61,2,1,""],MPI_barrier:[62,1,1,""],MPI_global_offset:[63,1,1,""],MPI_index_owner:[64,1,1,""],MPI_is_broadcaster:[65,1,1,""],MPI_is_receiver:[66,1,1,""],MPI_local_range:[67,1,1,""],MPI_max:[68,1,1,""],MPI_min:[69,1,1,""],MPI_num_processes:[70,1,1,""],MPI_process_number:[71,1,1,""],MPI_sum:[72,1,1,""],ParameterValue:[73,2,1,""],Parameters:[74,2,1,""],Progress:[75,2,1,""],StringParameter:[76,2,1,""],SubSystemsManager:[77,2,1,""],SubSystemsManager_finalize:[78,1,1,""],SubSystemsManager_init_mpi:[79,1,1,""],SubSystemsManager_init_petsc:[80,1,1,""],SubSystemsManager_mpi_finalized:[81,1,1,""],SubSystemsManager_mpi_initialized:[82,1,1,""],SubSystemsManager_responsible_mpi:[83,1,1,""],SubSystemsManager_responsible_petsc:[84,1,1,""],Table:[85,2,1,""],TableEntry:[86,2,1,""],Timer:[87,2,1,""],UIntArray:[88,2,1,""],Variable:[89,2,1,""],begin:[90,1,1,""],debug:[91,1,1,""],deprecation:[92,1,1,""],dolfin_error:[93,1,1,""],dolfin_version:[94,1,1,""],end:[95,1,1,""],error:[96,1,1,""],get_log_level:[97,1,1,""],git_commit_hash:[98,1,1,""],has_cgal:[99,1,1,""],has_cholmod:[100,1,1,""],has_exodus:[101,1,1,""],has_hdf5:[102,1,1,""],has_mpi:[103,1,1,""],has_openmp:[104,1,1,""],has_parmetis:[105,1,1,""],has_petsc:[106,1,1,""],has_scotch:[107,1,1,""],has_slepc:[108,1,1,""],has_tao:[109,1,1,""],has_trilinos:[110,1,1,""],has_umfpack:[111,1,1,""],has_zlib:[112,1,1,""],info:[114,1,1,""],info_stream:[115,1,1,""],info_underline:[116,1,1,""],init:[117,1,1,""],list_timings:[118,1,1,""],log:[119,1,1,""],monitor_memory_usage:[120,1,1,""],not_working_in_parallel:[121,1,1,""],set_log_active:[122,1,1,""],set_log_level:[123,1,1,""],set_output_stream:[124,1,1,""],summary:[125,1,1,""],tic:[126,1,1,""],time:[127,1,1,""],timing:[128,1,1,""],timings:[129,1,1,""],toc:[130,1,1,""],warning:[131,1,1,""]},"dolfin.cpp.common.BoolParameter":{thisown:[49,3,1,""]},"dolfin.cpp.common.DoubleArray":{array:[50,4,1,""],data:[50,4,1,""],size:[50,4,1,""],str:[50,4,1,""],thisown:[50,3,1,""]},"dolfin.cpp.common.DoubleParameter":{thisown:[51,3,1,""]},"dolfin.cpp.common.Event":{count:[52,4,1,""],maxcount:[52,4,1,""],thisown:[52,3,1,""]},"dolfin.cpp.common.GlobalParameters":{default_parameters:[53,5,1,""],thisown:[53,3,1,""]},"dolfin.cpp.common.IndexSet":{clear:[55,4,1,""],empty:[55,4,1,""],fill:[55,4,1,""],find:[55,4,1,""],has_index:[55,4,1,""],insert:[55,4,1,""],size:[55,4,1,""],thisown:[55,3,1,""]},"dolfin.cpp.common.IntArray":{array:[56,4,1,""],data:[56,4,1,""],size:[56,4,1,""],str:[56,4,1,""],thisown:[56,3,1,""]},"dolfin.cpp.common.IntParameter":{thisown:[57,3,1,""]},"dolfin.cpp.common.MPI":{barrier:[58,5,1,""],global_offset:[58,5,1,""],index_owner:[58,5,1,""],is_broadcaster:[58,5,1,""],is_receiver:[58,5,1,""],local_range:[58,5,1,""],max:[58,5,1,""],min:[58,5,1,""],num_processes:[58,5,1,""],process_number:[58,5,1,""],sum:[58,5,1,""],thisown:[58,3,1,""]},"dolfin.cpp.common.MPICommunicator":{thisown:[59,3,1,""]},"dolfin.cpp.common.MPIInfo":{thisown:[60,3,1,""]},"dolfin.cpp.common.MPINonblocking":{thisown:[61,3,1,""],wait_all:[61,4,1,""]},"dolfin.cpp.common.ParameterValue":{access_count:[73,4,1,""],change_count:[73,4,1,""],check_key:[73,5,1,""],data:[73,4,1,""],description:[73,4,1,""],get_range:[73,4,1,""],is_set:[73,4,1,""],key:[73,4,1,""],range_str:[73,4,1,""],reset:[73,4,1,""],set_range:[73,4,1,""],str:[73,4,1,""],thisown:[73,3,1,""],type_str:[73,4,1,""],value:[73,4,1,""],value_str:[73,4,1,""],warn_once:[73,4,1,""]},"dolfin.cpp.common.Parameters":{add:[74,4,1,""],assign:[74,4,1,""],clear:[74,4,1,""],copy:[74,4,1,""],find_parameter:[74,4,1,""],find_parameter_set:[74,4,1,""],get:[74,4,1,""],get_range:[74,4,1,""],has_key:[74,4,1,""],has_parameter:[74,4,1,""],has_parameter_set:[74,4,1,""],items:[74,4,1,""],iterdata:[74,4,1,""],iteritems:[74,4,1,""],iterkeys:[74,4,1,""],itervalues:[74,4,1,""],keys:[74,4,1,""],name:[74,4,1,""],option_string:[74,4,1,""],parse:[74,4,1,""],remove:[74,4,1,""],rename:[74,4,1,""],set_range:[74,4,1,""],str:[74,4,1,""],thisown:[74,3,1,""],to_dict:[74,4,1,""],update:[74,4,1,""],values:[74,4,1,""]},"dolfin.cpp.common.Progress":{thisown:[75,3,1,""],update:[75,4,1,""]},"dolfin.cpp.common.StringParameter":{thisown:[76,3,1,""]},"dolfin.cpp.common.SubSystemsManager":{finalize:[77,5,1,""],init_mpi:[77,5,1,""],init_petsc:[77,5,1,""],mpi_finalized:[77,5,1,""],mpi_initialized:[77,5,1,""],responsible_mpi:[77,5,1,""],responsible_petsc:[77,5,1,""],thisown:[77,3,1,""]},"dolfin.cpp.common.Table":{get:[85,4,1,""],get_value:[85,4,1,""],set:[85,4,1,""],str_latex:[85,4,1,""],thisown:[85,3,1,""],title:[85,4,1,""]},"dolfin.cpp.common.TableEntry":{thisown:[86,3,1,""]},"dolfin.cpp.common.Timer":{start:[87,4,1,""],stop:[87,4,1,""],thisown:[87,3,1,""],value:[87,4,1,""]},"dolfin.cpp.common.UIntArray":{array:[88,4,1,""],data:[88,4,1,""],size:[88,4,1,""],str:[88,4,1,""],thisown:[88,3,1,""]},"dolfin.cpp.common.Variable":{id:[89,4,1,""],label:[89,4,1,""],name:[89,4,1,""],parameters:[89,3,1,""],rename:[89,4,1,""],str:[89,4,1,""],thisown:[89,3,1,""]},"dolfin.cpp.fem":{AdaptiveLinearVariationalSolver:[132,2,1,""],AdaptiveNonlinearVariationalSolver:[133,2,1,""],Assembler:[134,2,1,""],AssemblerBase:[135,2,1,""],BasisFunction:[136,2,1,""],CCFEMAssembler:[137,2,1,""],CCFEMDofMap:[138,2,1,""],CCFEMForm:[139,2,1,""],DirichletBC:[140,2,1,""],DirichletBC_default_parameters:[141,1,1,""],DofMap:[142,2,1,""],Equation:[143,2,1,""],ErrorControl:[144,2,1,""],ErrorControl_default_parameters:[145,1,1,""],Extrapolation:[146,2,1,""],Extrapolation_extrapolate:[147,1,1,""],FiniteElement:[148,2,1,""],Form:[149,2,1,""],GenericAdaptiveVariationalSolver:[150,2,1,""],GenericAdaptiveVariationalSolver_default_parameters:[151,1,1,""],GenericDofMap:[152,2,1,""],HierarchicalDirichletBC:[153,2,1,""],HierarchicalErrorControl:[154,2,1,""],HierarchicalForm:[155,2,1,""],HierarchicalFunction:[156,2,1,""],HierarchicalFunctionSpace:[157,2,1,""],HierarchicalLinearVariationalProblem:[158,2,1,""],HierarchicalMesh:[159,2,1,""],HierarchicalMeshFunctionBool:[160,2,1,""],HierarchicalMeshFunctionDouble:[161,2,1,""],HierarchicalMeshFunctionInt:[162,2,1,""],HierarchicalMeshFunctionSizet:[163,2,1,""],HierarchicalMeshFunctionUInt:[164,2,1,""],HierarchicalNonlinearVariationalProblem:[165,2,1,""],LinearVariationalProblem:[166,2,1,""],LinearVariationalSolver:[167,2,1,""],LinearVariationalSolver_default_parameters:[168,1,1,""],LocalAssembler:[169,2,1,""],LocalAssembler_assemble:[170,1,1,""],LocalAssembler_assemble_cell:[171,1,1,""],LocalAssembler_assemble_exterior_facet:[172,1,1,""],LocalAssembler_assemble_interior_facet:[173,1,1,""],LocalSolver:[174,2,1,""],MultiStageScheme:[175,2,1,""],NonlinearVariationalProblem:[176,2,1,""],NonlinearVariationalSolver:[177,2,1,""],NonlinearVariationalSolver_default_parameters:[178,1,1,""],OpenMpAssembler:[179,2,1,""],PointIntegralSolver:[180,2,1,""],PointIntegralSolver_default_parameters:[181,1,1,""],PointSource:[182,2,1,""],RKSolver:[183,2,1,""],SparsityPatternBuilder:[184,2,1,""],SparsityPatternBuilder_build:[185,1,1,""],SparsityPatternBuilder_build_ccfem:[186,1,1,""],SystemAssembler:[187,2,1,""],TimeSeries:[188,2,1,""],TimeSeriesHDF5:[189,2,1,""],TimeSeriesHDF5_default_parameters:[190,1,1,""],TimeSeries_default_parameters:[191,1,1,""],TimeSeries_filename_data:[192,1,1,""],TimeSeries_filename_times:[193,1,1,""],VariationalProblem:[194,2,1,""],adapt:[195,1,1,""],adapt_markers:[196,1,1,""],assemble:[197,1,1,""],assemble_system:[198,1,1,""],dof_to_vertex_map:[199,1,1,""],dorfler_mark:[200,1,1,""],fem_solve:[201,1,1,""],mark:[203,1,1,""],vertex_to_dof_map:[204,1,1,""]},"dolfin.cpp.fem.AdaptiveLinearVariationalSolver":{thisown:[132,3,1,""]},"dolfin.cpp.fem.AdaptiveNonlinearVariationalSolver":{thisown:[133,3,1,""]},"dolfin.cpp.fem.Assembler":{assemble:[134,4,1,""],assemble_cells:[134,4,1,""],assemble_exterior_facets:[134,4,1,""],assemble_interior_facets:[134,4,1,""],thisown:[134,3,1,""]},"dolfin.cpp.fem.AssemblerBase":{add_values:[135,3,1,""],finalize_tensor:[135,3,1,""],init_global_tensor:[135,4,1,""],keep_diagonal:[135,3,1,""],reset_sparsity:[135,3,1,""],thisown:[135,3,1,""]},"dolfin.cpp.fem.BasisFunction":{eval:[136,4,1,""],eval_derivatives:[136,4,1,""],thisown:[136,3,1,""]},"dolfin.cpp.fem.CCFEMAssembler":{assemble:[137,4,1,""],thisown:[137,3,1,""]},"dolfin.cpp.fem.CCFEMDofMap":{add:[138,4,1,""],build:[138,4,1,""],clear:[138,4,1,""],num_parts:[138,4,1,""],part:[138,4,1,""],set_current_part:[138,4,1,""],thisown:[138,3,1,""]},"dolfin.cpp.fem.CCFEMForm":{add:[139,4,1,""],build:[139,4,1,""],clear:[139,4,1,""],function_space:[139,4,1,""],num_parts:[139,4,1,""],part:[139,4,1,""],rank:[139,4,1,""],thisown:[139,3,1,""]},"dolfin.cpp.fem.DirichletBC":{apply:[140,4,1,""],default_parameters:[140,5,1,""],function_space:[140,4,1,""],gather:[140,4,1,""],get_boundary_values:[140,4,1,""],homogenize:[140,4,1,""],is_compatible:[140,4,1,""],markers:[140,4,1,""],method:[140,4,1,""],set_value:[140,4,1,""],thisown:[140,3,1,""],user_sub_domain:[140,4,1,""],value:[140,4,1,""],zero:[140,4,1,""],zero_columns:[140,4,1,""]},"dolfin.cpp.fem.DofMap":{data:[142,4,1,""],is_restricted:[142,4,1,""],thisown:[142,3,1,""]},"dolfin.cpp.fem.Equation":{is_linear:[143,4,1,""],lhs:[143,4,1,""],rhs:[143,4,1,""],rhs_int:[143,4,1,""],thisown:[143,3,1,""]},"dolfin.cpp.fem.ErrorControl":{compute_cell_residual:[144,4,1,""],compute_dual:[144,4,1,""],compute_extrapolation:[144,4,1,""],compute_facet_residual:[144,4,1,""],compute_indicators:[144,4,1,""],default_parameters:[144,5,1,""],estimate_error:[144,4,1,""],residual_representation:[144,4,1,""],thisown:[144,3,1,""]},"dolfin.cpp.fem.Extrapolation":{extrapolate:[146,5,1,""],thisown:[146,3,1,""]},"dolfin.cpp.fem.FiniteElement":{cell_shape:[148,4,1,""],create:[148,4,1,""],create_sub_element:[148,4,1,""],evaluate_basis:[148,4,1,""],evaluate_basis_all:[148,4,1,""],evaluate_basis_derivatives:[148,4,1,""],evaluate_basis_derivatives_all:[148,4,1,""],evaluate_dof:[148,4,1,""],evaluate_dofs:[148,4,1,""],extract_sub_element:[148,4,1,""],geometric_dimension:[148,4,1,""],hash:[148,4,1,""],interpolate_vertex_values:[148,4,1,""],map_from_reference_cell:[148,4,1,""],map_to_reference_cell:[148,4,1,""],num_sub_elements:[148,4,1,""],signature:[148,4,1,""],space_dimension:[148,4,1,""],thisown:[148,3,1,""],topological_dimension:[148,4,1,""],value_dimension:[148,4,1,""],value_rank:[148,4,1,""]},"dolfin.cpp.fem.Form":{cell_domains:[149,4,1,""],check:[149,4,1,""],coefficient:[149,4,1,""],coefficient_name:[149,4,1,""],coefficient_number:[149,4,1,""],coefficients:[149,4,1,""],coloring:[149,4,1,""],exterior_facet_domains:[149,4,1,""],function_space:[149,4,1,""],function_spaces:[149,4,1,""],interior_facet_domains:[149,4,1,""],mesh:[149,4,1,""],mesh_shared_ptr:[149,4,1,""],num_coefficients:[149,4,1,""],rank:[149,4,1,""],set_cell_domains:[149,4,1,""],set_coefficient:[149,4,1,""],set_coefficients:[149,4,1,""],set_exterior_facet_domains:[149,4,1,""],set_interior_facet_domains:[149,4,1,""],set_mesh:[149,4,1,""],thisown:[149,3,1,""],ufc_form:[149,4,1,""]},"dolfin.cpp.fem.GenericAdaptiveVariationalSolver":{adapt_problem:[150,4,1,""],adaptive_data:[150,4,1,""],default_parameters:[150,5,1,""],evaluate_goal:[150,4,1,""],extract_bcs:[150,4,1,""],solve:[150,4,1,""],solve_primal:[150,4,1,""],summary:[150,4,1,""],thisown:[150,3,1,""]},"dolfin.cpp.fem.GenericDofMap":{block_size:[152,3,1,""],cell_dimension:[152,4,1,""],cell_dofs:[152,4,1,""],collapse:[152,4,1,""],constrained_domain:[152,3,1,""],copy:[152,4,1,""],create:[152,4,1,""],dof_to_vertex_map:[152,4,1,""],dofs:[152,4,1,""],extract_sub_dofmap:[152,4,1,""],geometric_dimension:[152,4,1,""],global_dimension:[152,4,1,""],is_view:[152,4,1,""],max_cell_dimension:[152,4,1,""],neighbours:[152,4,1,""],num_entity_dofs:[152,4,1,""],num_facet_dofs:[152,4,1,""],off_process_owner:[152,4,1,""],ownership_range:[152,4,1,""],restriction:[152,4,1,""],set:[152,4,1,""],set_x:[152,4,1,""],shared_dofs:[152,4,1,""],tabulate_all_coordinates:[152,4,1,""],tabulate_coordinates:[152,4,1,""],tabulate_entity_dofs:[152,4,1,""],tabulate_facet_dofs:[152,4,1,""],thisown:[152,3,1,""],vertex_to_dof_map:[152,4,1,""]},"dolfin.cpp.fem.HierarchicalDirichletBC":{child:[153,4,1,""],clear_child:[153,4,1,""],depth:[153,4,1,""],has_child:[153,4,1,""],has_parent:[153,4,1,""],leaf_node:[153,4,1,""],parent:[153,4,1,""],root_node:[153,4,1,""],set_child:[153,4,1,""],set_parent:[153,4,1,""],thisown:[153,3,1,""]},"dolfin.cpp.fem.HierarchicalErrorControl":{child:[154,4,1,""],clear_child:[154,4,1,""],depth:[154,4,1,""],has_child:[154,4,1,""],has_parent:[154,4,1,""],leaf_node:[154,4,1,""],parent:[154,4,1,""],root_node:[154,4,1,""],set_child:[154,4,1,""],set_parent:[154,4,1,""],thisown:[154,3,1,""]},"dolfin.cpp.fem.HierarchicalForm":{child:[155,4,1,""],clear_child:[155,4,1,""],depth:[155,4,1,""],has_child:[155,4,1,""],has_parent:[155,4,1,""],leaf_node:[155,4,1,""],parent:[155,4,1,""],root_node:[155,4,1,""],set_child:[155,4,1,""],set_parent:[155,4,1,""],thisown:[155,3,1,""]},"dolfin.cpp.fem.HierarchicalFunction":{clear_child:[156,4,1,""],depth:[156,4,1,""],has_child:[156,4,1,""],has_parent:[156,4,1,""],set_child:[156,4,1,""],set_parent:[156,4,1,""],thisown:[156,3,1,""]},"dolfin.cpp.fem.HierarchicalFunctionSpace":{clear_child:[157,4,1,""],depth:[157,4,1,""],has_child:[157,4,1,""],has_parent:[157,4,1,""],set_child:[157,4,1,""],set_parent:[157,4,1,""],thisown:[157,3,1,""]},"dolfin.cpp.fem.HierarchicalLinearVariationalProblem":{child:[158,4,1,""],clear_child:[158,4,1,""],depth:[158,4,1,""],has_child:[158,4,1,""],has_parent:[158,4,1,""],leaf_node:[158,4,1,""],parent:[158,4,1,""],root_node:[158,4,1,""],set_child:[158,4,1,""],set_parent:[158,4,1,""],thisown:[158,3,1,""]},"dolfin.cpp.fem.HierarchicalMesh":{clear_child:[159,4,1,""],depth:[159,4,1,""],has_child:[159,4,1,""],has_parent:[159,4,1,""],set_child:[159,4,1,""],set_parent:[159,4,1,""],thisown:[159,3,1,""]},"dolfin.cpp.fem.HierarchicalMeshFunctionBool":{clear_child:[160,4,1,""],depth:[160,4,1,""],has_child:[160,4,1,""],has_parent:[160,4,1,""],set_child:[160,4,1,""],set_parent:[160,4,1,""],thisown:[160,3,1,""]},"dolfin.cpp.fem.HierarchicalMeshFunctionDouble":{clear_child:[161,4,1,""],depth:[161,4,1,""],has_child:[161,4,1,""],has_parent:[161,4,1,""],set_child:[161,4,1,""],set_parent:[161,4,1,""],thisown:[161,3,1,""]},"dolfin.cpp.fem.HierarchicalMeshFunctionInt":{clear_child:[162,4,1,""],depth:[162,4,1,""],has_child:[162,4,1,""],has_parent:[162,4,1,""],set_child:[162,4,1,""],set_parent:[162,4,1,""],thisown:[162,3,1,""]},"dolfin.cpp.fem.HierarchicalMeshFunctionSizet":{clear_child:[163,4,1,""],depth:[163,4,1,""],has_child:[163,4,1,""],has_parent:[163,4,1,""],set_child:[163,4,1,""],set_parent:[163,4,1,""],thisown:[163,3,1,""]},"dolfin.cpp.fem.HierarchicalMeshFunctionUInt":{clear_child:[164,4,1,""],depth:[164,4,1,""],has_child:[164,4,1,""],has_parent:[164,4,1,""],set_child:[164,4,1,""],set_parent:[164,4,1,""],thisown:[164,3,1,""]},"dolfin.cpp.fem.HierarchicalNonlinearVariationalProblem":{child:[165,4,1,""],clear_child:[165,4,1,""],depth:[165,4,1,""],has_child:[165,4,1,""],has_parent:[165,4,1,""],leaf_node:[165,4,1,""],parent:[165,4,1,""],root_node:[165,4,1,""],set_child:[165,4,1,""],set_parent:[165,4,1,""],thisown:[165,3,1,""]},"dolfin.cpp.fem.LinearVariationalProblem":{bcs:[166,4,1,""],bilinear_form:[166,4,1,""],linear_form:[166,4,1,""],solution:[166,4,1,""],test_space:[166,4,1,""],thisown:[166,3,1,""],trial_space:[166,4,1,""]},"dolfin.cpp.fem.LinearVariationalSolver":{default_parameters:[167,5,1,""],solve:[167,4,1,""],thisown:[167,3,1,""]},"dolfin.cpp.fem.LocalAssembler":{assemble:[169,5,1,""],assemble_cell:[169,5,1,""],assemble_exterior_facet:[169,5,1,""],assemble_interior_facet:[169,5,1,""],thisown:[169,3,1,""]},"dolfin.cpp.fem.LocalSolver":{solve:[174,4,1,""],thisown:[174,3,1,""]},"dolfin.cpp.fem.MultiStageScheme":{bcs:[175,4,1,""],dt_stage_offset:[175,4,1,""],implicit:[175,4,1,""],order:[175,4,1,""],thisown:[175,3,1,""]},"dolfin.cpp.fem.NonlinearVariationalProblem":{bcs:[176,4,1,""],has_jacobian:[176,4,1,""],has_lower_bound:[176,4,1,""],has_upper_bound:[176,4,1,""],jacobian_form:[176,4,1,""],lower_bound:[176,4,1,""],residual_form:[176,4,1,""],set_bounds:[176,4,1,""],solution:[176,4,1,""],test_space:[176,4,1,""],thisown:[176,3,1,""],trial_space:[176,4,1,""],upper_bound:[176,4,1,""]},"dolfin.cpp.fem.NonlinearVariationalSolver":{default_parameters:[177,5,1,""],solve:[177,4,1,""],thisown:[177,3,1,""]},"dolfin.cpp.fem.OpenMpAssembler":{assemble:[179,4,1,""],thisown:[179,3,1,""]},"dolfin.cpp.fem.PointIntegralSolver":{default_parameters:[180,5,1,""],step:[180,4,1,""],step_interval:[180,4,1,""],thisown:[180,3,1,""]},"dolfin.cpp.fem.PointSource":{apply:[182,4,1,""],thisown:[182,3,1,""]},"dolfin.cpp.fem.RKSolver":{step:[183,4,1,""],step_interval:[183,4,1,""],thisown:[183,3,1,""]},"dolfin.cpp.fem.SparsityPatternBuilder":{build:[184,5,1,""],build_ccfem:[184,5,1,""],thisown:[184,3,1,""]},"dolfin.cpp.fem.SystemAssembler":{assemble:[187,4,1,""],thisown:[187,3,1,""]},"dolfin.cpp.fem.TimeSeries":{clear:[188,4,1,""],default_parameters:[188,5,1,""],filename_data:[188,5,1,""],filename_times:[188,5,1,""],mesh_times:[188,4,1,""],retrieve:[188,4,1,""],store:[188,4,1,""],thisown:[188,3,1,""],vector_times:[188,4,1,""]},"dolfin.cpp.fem.TimeSeriesHDF5":{clear:[189,4,1,""],default_parameters:[189,5,1,""],mesh_times:[189,4,1,""],retrieve:[189,4,1,""],store:[189,4,1,""],thisown:[189,3,1,""],vector_times:[189,4,1,""]},"dolfin.cpp.fem.VariationalProblem":{solve:[194,4,1,""],thisown:[194,3,1,""]},"dolfin.cpp.function":{CCFEMFunction:[205,2,1,""],CCFEMFunctionSpace:[206,2,1,""],Constant:[207,2,1,""],Expression:[208,2,1,""],FacetArea:[209,2,1,""],Function:[210,2,1,""],FunctionAXPY:[211,2,1,""],FunctionAssigner:[212,2,1,""],FunctionSpace:[213,2,1,""],GenericFunction:[214,2,1,""],HierarchicalFunction:[215,2,1,""],HierarchicalFunctionSpace:[216,2,1,""],HierarchicalMesh:[217,2,1,""],HierarchicalMeshFunctionBool:[218,2,1,""],HierarchicalMeshFunctionDouble:[219,2,1,""],HierarchicalMeshFunctionInt:[220,2,1,""],HierarchicalMeshFunctionSizet:[221,2,1,""],HierarchicalMeshFunctionUInt:[222,2,1,""],Lagrange:[223,2,1,""],Legendre:[224,2,1,""],Legendre_d2dx:[225,1,1,""],Legendre_ddx:[226,1,1,""],Legendre_eval:[227,1,1,""],MeshCoordinates:[228,2,1,""],SpecialFacetFunction:[229,2,1,""],SubSpace:[230,2,1,""],assign:[231,1,1,""],between:[232,1,1,""],ipow:[234,1,1,""],near:[235,1,1,""],rand:[236,1,1,""],seed:[237,1,1,""]},"dolfin.cpp.function.CCFEMFunction":{part:[205,4,1,""],thisown:[205,3,1,""],vector:[205,4,1,""]},"dolfin.cpp.function.CCFEMFunctionSpace":{add:[206,4,1,""],build:[206,4,1,""],clear:[206,4,1,""],dim:[206,4,1,""],dofmap:[206,4,1,""],num_parts:[206,4,1,""],part:[206,4,1,""],thisown:[206,3,1,""]},"dolfin.cpp.function.Constant":{assign:[207,4,1,""],thisown:[207,3,1,""]},"dolfin.cpp.function.Expression":{eval:[208,4,1,""],eval_cell:[208,4,1,""],thisown:[208,3,1,""]},"dolfin.cpp.function.FacetArea":{thisown:[209,3,1,""]},"dolfin.cpp.function.Function":{child:[210,4,1,""],compute_vertex_values:[210,4,1,""],copy:[210,4,1,""],eval:[210,4,1,""],extrapolate:[210,4,1,""],function_space:[210,4,1,""],geometric_dimension:[210,4,1,""],interpolate:[210,4,1,""],leaf_node:[210,4,1,""],non_matching_eval:[210,4,1,""],parent:[210,4,1,""],root_node:[210,4,1,""],sub:[210,4,1,""],thisown:[210,3,1,""],vector:[210,4,1,""]},"dolfin.cpp.function.FunctionAXPY":{ADD_ADD:[211,3,1,""],ADD_SUB:[211,3,1,""],SUB_ADD:[211,3,1,""],SUB_SUB:[211,3,1,""],pairs:[211,4,1,""],thisown:[211,3,1,""]},"dolfin.cpp.function.FunctionAssigner":{assign:[212,4,1,""],num_assigning_functions:[212,4,1,""],num_receiving_functions:[212,4,1,""],thisown:[212,3,1,""]},"dolfin.cpp.function.FunctionSpace":{assign:[213,4,1,""],child:[213,4,1,""],collapse:[213,4,1,""],component:[213,4,1,""],dim:[213,4,1,""],dofmap:[213,4,1,""],element:[213,4,1,""],extract_sub_space:[213,4,1,""],has_cell:[213,4,1,""],has_element:[213,4,1,""],interpolate:[213,4,1,""],leaf_node:[213,4,1,""],mesh:[213,4,1,""],parent:[213,4,1,""],print_dofmap:[213,4,1,""],root_node:[213,4,1,""],sub:[213,4,1,""],thisown:[213,3,1,""]},"dolfin.cpp.function.GenericFunction":{compute_vertex_values:[214,4,1,""],eval:[214,4,1,""],eval_cell:[214,4,1,""],restrict:[214,4,1,""],thisown:[214,3,1,""],update:[214,4,1,""],value_dimension:[214,4,1,""],value_rank:[214,4,1,""],value_size:[214,4,1,""]},"dolfin.cpp.function.HierarchicalFunction":{clear_child:[215,4,1,""],depth:[215,4,1,""],has_child:[215,4,1,""],has_parent:[215,4,1,""],set_child:[215,4,1,""],set_parent:[215,4,1,""],thisown:[215,3,1,""]},"dolfin.cpp.function.HierarchicalFunctionSpace":{clear_child:[216,4,1,""],depth:[216,4,1,""],has_child:[216,4,1,""],has_parent:[216,4,1,""],set_child:[216,4,1,""],set_parent:[216,4,1,""],thisown:[216,3,1,""]},"dolfin.cpp.function.HierarchicalMesh":{clear_child:[217,4,1,""],depth:[217,4,1,""],has_child:[217,4,1,""],has_parent:[217,4,1,""],set_child:[217,4,1,""],set_parent:[217,4,1,""],thisown:[217,3,1,""]},"dolfin.cpp.function.HierarchicalMeshFunctionBool":{clear_child:[218,4,1,""],depth:[218,4,1,""],has_child:[218,4,1,""],has_parent:[218,4,1,""],set_child:[218,4,1,""],set_parent:[218,4,1,""],thisown:[218,3,1,""]},"dolfin.cpp.function.HierarchicalMeshFunctionDouble":{clear_child:[219,4,1,""],depth:[219,4,1,""],has_child:[219,4,1,""],has_parent:[219,4,1,""],set_child:[219,4,1,""],set_parent:[219,4,1,""],thisown:[219,3,1,""]},"dolfin.cpp.function.HierarchicalMeshFunctionInt":{clear_child:[220,4,1,""],depth:[220,4,1,""],has_child:[220,4,1,""],has_parent:[220,4,1,""],set_child:[220,4,1,""],set_parent:[220,4,1,""],thisown:[220,3,1,""]},"dolfin.cpp.function.HierarchicalMeshFunctionSizet":{clear_child:[221,4,1,""],depth:[221,4,1,""],has_child:[221,4,1,""],has_parent:[221,4,1,""],set_child:[221,4,1,""],set_parent:[221,4,1,""],thisown:[221,3,1,""]},"dolfin.cpp.function.HierarchicalMeshFunctionUInt":{clear_child:[222,4,1,""],depth:[222,4,1,""],has_child:[222,4,1,""],has_parent:[222,4,1,""],set_child:[222,4,1,""],set_parent:[222,4,1,""],thisown:[222,3,1,""]},"dolfin.cpp.function.Lagrange":{ddx:[223,4,1,""],degree:[223,4,1,""],dqdx:[223,4,1,""],eval:[223,4,1,""],point:[223,4,1,""],set:[223,4,1,""],size:[223,4,1,""],thisown:[223,3,1,""]},"dolfin.cpp.function.Legendre":{d2dx:[224,5,1,""],ddx:[224,5,1,""],eval:[224,5,1,""],thisown:[224,3,1,""]},"dolfin.cpp.function.MeshCoordinates":{thisown:[228,3,1,""]},"dolfin.cpp.function.SpecialFacetFunction":{thisown:[229,3,1,""]},"dolfin.cpp.function.SubSpace":{thisown:[230,3,1,""]},"dolfin.cpp.io":{File:[239,2,1,""],File_create_parent_path:[240,1,1,""],File_exists:[241,1,1,""],GenericFile:[242,2,1,""],HDF5Attribute:[243,2,1,""],HDF5File:[244,2,1,""],HierarchicalFunction:[245,2,1,""],HierarchicalFunctionSpace:[246,2,1,""],HierarchicalMesh:[247,2,1,""],HierarchicalMeshFunctionBool:[248,2,1,""],HierarchicalMeshFunctionDouble:[249,2,1,""],HierarchicalMeshFunctionInt:[250,2,1,""],HierarchicalMeshFunctionSizet:[251,2,1,""],HierarchicalMeshFunctionUInt:[252,2,1,""],VTKPlotter:[253,2,1,""],VTKPlotter_all_interactive:[254,1,1,""],VTKPlotter_default_parameters:[255,1,1,""],VTKPlotter_to_key:[256,1,1,""],XDMFFile:[257,2,1,""],interactive:[259,1,1,""],plot:[260,1,1,""]},"dolfin.cpp.io.File":{binary:[239,3,1,""],create_parent_path:[239,5,1,""],exists:[239,5,1,""],raw:[239,3,1,""],svg:[239,3,1,""],thisown:[239,3,1,""],vtk:[239,3,1,""],x3d:[239,3,1,""],xdmf:[239,3,1,""],xml:[239,3,1,""],xyz:[239,3,1,""]},"dolfin.cpp.io.GenericFile":{name:[242,4,1,""],read:[242,4,1,""],thisown:[242,3,1,""],write:[242,4,1,""]},"dolfin.cpp.io.HDF5Attribute":{exists:[243,4,1,""],get:[243,4,1,""],set:[243,4,1,""],str:[243,4,1,""],thisown:[243,3,1,""],type_str:[243,4,1,""]},"dolfin.cpp.io.HDF5File":{attributes:[244,4,1,""],close:[244,4,1,""],flush:[244,4,1,""],has_dataset:[244,4,1,""],read:[244,4,1,""],thisown:[244,3,1,""],write:[244,4,1,""]},"dolfin.cpp.io.HierarchicalFunction":{clear_child:[245,4,1,""],depth:[245,4,1,""],has_child:[245,4,1,""],has_parent:[245,4,1,""],set_child:[245,4,1,""],set_parent:[245,4,1,""],thisown:[245,3,1,""]},"dolfin.cpp.io.HierarchicalFunctionSpace":{clear_child:[246,4,1,""],depth:[246,4,1,""],has_child:[246,4,1,""],has_parent:[246,4,1,""],set_child:[246,4,1,""],set_parent:[246,4,1,""],thisown:[246,3,1,""]},"dolfin.cpp.io.HierarchicalMesh":{clear_child:[247,4,1,""],depth:[247,4,1,""],has_child:[247,4,1,""],has_parent:[247,4,1,""],set_child:[247,4,1,""],set_parent:[247,4,1,""],thisown:[247,3,1,""]},"dolfin.cpp.io.HierarchicalMeshFunctionBool":{clear_child:[248,4,1,""],depth:[248,4,1,""],has_child:[248,4,1,""],has_parent:[248,4,1,""],set_child:[248,4,1,""],set_parent:[248,4,1,""],thisown:[248,3,1,""]},"dolfin.cpp.io.HierarchicalMeshFunctionDouble":{clear_child:[249,4,1,""],depth:[249,4,1,""],has_child:[249,4,1,""],has_parent:[249,4,1,""],set_child:[249,4,1,""],set_parent:[249,4,1,""],thisown:[249,3,1,""]},"dolfin.cpp.io.HierarchicalMeshFunctionInt":{clear_child:[250,4,1,""],depth:[250,4,1,""],has_child:[250,4,1,""],has_parent:[250,4,1,""],set_child:[250,4,1,""],set_parent:[250,4,1,""],thisown:[250,3,1,""]},"dolfin.cpp.io.HierarchicalMeshFunctionSizet":{clear_child:[251,4,1,""],depth:[251,4,1,""],has_child:[251,4,1,""],has_parent:[251,4,1,""],set_child:[251,4,1,""],set_parent:[251,4,1,""],thisown:[251,3,1,""]},"dolfin.cpp.io.HierarchicalMeshFunctionUInt":{clear_child:[252,4,1,""],depth:[252,4,1,""],has_child:[252,4,1,""],has_parent:[252,4,1,""],set_child:[252,4,1,""],set_parent:[252,4,1,""],thisown:[252,3,1,""]},"dolfin.cpp.io.VTKPlotter":{ALT:[253,3,1,""],CONTROL:[253,3,1,""],SHIFT:[253,3,1,""],add_polygon:[253,4,1,""],all_interactive:[253,5,1,""],azimuth:[253,4,1,""],default_parameters:[253,5,1,""],dolly:[253,4,1,""],elevate:[253,4,1,""],get_widget:[253,4,1,""],interactive:[253,4,1,""],is_compatible:[253,4,1,""],key:[253,4,1,""],key_pressed:[253,4,1,""],plot:[253,4,1,""],set_key:[253,4,1,""],set_min_max:[253,4,1,""],set_viewangle:[253,4,1,""],thisown:[253,3,1,""],to_key:[253,5,1,""],update:[253,4,1,""],write_pdf:[253,4,1,""],write_png:[253,4,1,""],zoom:[253,4,1,""]},"dolfin.cpp.io.XDMFFile":{thisown:[257,3,1,""]},"dolfin.cpp.la":{BlockMatrix:[261,2,1,""],BlockVector:[262,2,1,""],CholmodCholeskySolver:[263,2,1,""],CholmodCholeskySolver_default_parameters:[264,1,1,""],CoordinateMatrix:[265,2,1,""],DefaultFactory:[266,2,1,""],DefaultFactory_factory:[267,1,1,""],EpetraFactory:[268,2,1,""],EpetraKrylovSolver:[269,2,1,""],EpetraKrylovSolver_default_parameters:[270,1,1,""],EpetraKrylovSolver_methods:[271,1,1,""],EpetraKrylovSolver_preconditioners:[272,1,1,""],EpetraLUSolver:[273,2,1,""],EpetraLUSolver_default_parameters:[274,1,1,""],EpetraLUSolver_methods:[275,1,1,""],EpetraMatrix:[276,2,1,""],EpetraVector:[277,2,1,""],GenericLUSolver:[278,2,1,""],GenericLinearAlgebraFactory:[279,2,1,""],GenericLinearOperator:[280,2,1,""],GenericLinearSolver:[281,2,1,""],GenericMatrix:[282,2,1,""],GenericPreconditioner:[283,2,1,""],GenericSparsityPattern:[284,2,1,""],GenericTensor:[285,2,1,""],GenericVector:[286,2,1,""],KrylovSolver:[287,2,1,""],KrylovSolver_default_parameters:[288,1,1,""],LUSolver:[289,2,1,""],LUSolver_default_parameters:[290,1,1,""],LinearAlgebraObject:[291,2,1,""],LinearOperator:[292,2,1,""],LinearSolver:[293,2,1,""],LinearSolver_default_parameters:[294,1,1,""],Matrix:[295,2,1,""],NewtonSolver:[296,2,1,""],NewtonSolver_default_parameters:[297,1,1,""],NonlinearProblem:[298,2,1,""],PETScBaseMatrix:[299,2,1,""],PETScFactory:[300,2,1,""],PETScFactory_instance:[301,1,1,""],PETScKrylovSolver:[302,2,1,""],PETScKrylovSolver_default_parameters:[303,1,1,""],PETScKrylovSolver_methods:[304,1,1,""],PETScKrylovSolver_preconditioners:[305,1,1,""],PETScLUSolver:[306,2,1,""],PETScLUSolver_default_parameters:[307,1,1,""],PETScLUSolver_methods:[308,1,1,""],PETScLinearOperator:[309,2,1,""],PETScMatrix:[310,2,1,""],PETScMatrixDeleter:[311,2,1,""],PETScObject:[312,2,1,""],PETScObject_petsc_error:[313,1,1,""],PETScOptions:[314,2,1,""],PETScOptions_clear:[315,1,1,""],PETScOptions_set:[316,1,1,""],PETScPreconditioner:[317,2,1,""],PETScPreconditioner_default_parameters:[318,1,1,""],PETScPreconditioner_preconditioners:[319,1,1,""],PETScSNESSolver:[320,2,1,""],PETScSNESSolver_default_parameters:[321,1,1,""],PETScSNESSolver_methods:[322,1,1,""],PETScUserPreconditioner:[323,2,1,""],PETScVector:[324,2,1,""],PETScVectorDeleter:[325,2,1,""],SLEPcEigenSolver:[326,2,1,""],SLEPcEigenSolver_default_parameters:[327,1,1,""],STLFactory:[328,2,1,""],STLFactory_instance:[329,1,1,""],STLMatrix:[330,2,1,""],Scalar:[331,2,1,""],SparsityPattern:[332,2,1,""],TensorProductVector:[333,2,1,""],TrilinosPreconditioner:[334,2,1,""],TrilinosPreconditioner_default_parameters:[335,1,1,""],TrilinosPreconditioner_preconditioners:[336,1,1,""],UmfpackLUSolver:[337,2,1,""],UmfpackLUSolver_default_parameters:[338,1,1,""],Vector:[339,2,1,""],VectorSpaceBasis:[340,2,1,""],as_backend_type:[341,1,1,""],get_tensor_type:[342,1,1,""],has_krylov_solver_method:[343,1,1,""],has_krylov_solver_preconditioner:[344,1,1,""],has_lu_solver_method:[345,1,1,""],has_type:[346,1,1,""],krylov_solver_methods:[348,1,1,""],krylov_solver_preconditioners:[349,1,1,""],la_solve:[350,1,1,""],linear_algebra_backends:[351,1,1,""],linear_solver_methods:[352,1,1,""],list_krylov_solver_methods:[353,1,1,""],list_krylov_solver_preconditioners:[354,1,1,""],list_linear_algebra_backends:[355,1,1,""],list_linear_solver_methods:[356,1,1,""],list_lu_solver_methods:[357,1,1,""],lu_solver_methods:[358,1,1,""],normalize:[359,1,1,""],residual:[360,1,1,""],uBLASDenseFactory:[361,2,1,""],uBLASDenseFactory_instance:[362,1,1,""],uBLASDenseMatrix:[363,2,1,""],uBLASILUPreconditioner:[364,2,1,""],uBLASKrylovSolver:[365,2,1,""],uBLASKrylovSolver_default_parameters:[366,1,1,""],uBLASKrylovSolver_methods:[367,1,1,""],uBLASKrylovSolver_preconditioners:[368,1,1,""],uBLASLinearOperator:[369,2,1,""],uBLASPreconditioner:[370,2,1,""],uBLASSparseFactory:[371,2,1,""],uBLASSparseFactory_instance:[372,1,1,""],uBLASSparseMatrix:[373,2,1,""],uBLASVector:[374,2,1,""]},"dolfin.cpp.la.BlockMatrix":{apply:[261,4,1,""],get_block:[261,4,1,""],mult:[261,4,1,""],schur_approximation:[261,4,1,""],set_block:[261,4,1,""],size:[261,4,1,""],str:[261,4,1,""],thisown:[261,3,1,""],zero:[261,4,1,""]},"dolfin.cpp.la.BlockVector":{axpy:[262,4,1,""],copy:[262,4,1,""],empty:[262,4,1,""],get_block:[262,4,1,""],inner:[262,4,1,""],max:[262,4,1,""],min:[262,4,1,""],norm:[262,4,1,""],set_block:[262,4,1,""],size:[262,4,1,""],str:[262,4,1,""],thisown:[262,3,1,""]},"dolfin.cpp.la.CholmodCholeskySolver":{default_parameters:[263,5,1,""],factorize:[263,4,1,""],factorized_solve:[263,4,1,""],thisown:[263,3,1,""]},"dolfin.cpp.la.CoordinateMatrix":{base_one:[265,4,1,""],columns:[265,4,1,""],norm:[265,4,1,""],rows:[265,4,1,""],size:[265,4,1,""],thisown:[265,3,1,""],values:[265,4,1,""]},"dolfin.cpp.la.DefaultFactory":{factory:[266,5,1,""],thisown:[266,3,1,""]},"dolfin.cpp.la.EpetraFactory":{get_mpi_comm:[268,4,1,""],get_serial_comm:[268,4,1,""],instance:[268,5,1,""],thisown:[268,3,1,""]},"dolfin.cpp.la.EpetraKrylovSolver":{aztecoo:[269,4,1,""],default_parameters:[269,5,1,""],get_operator:[269,4,1,""],methods:[269,5,1,""],preconditioners:[269,5,1,""],residual:[269,4,1,""],solve:[269,4,1,""],thisown:[269,3,1,""]},"dolfin.cpp.la.EpetraLUSolver":{default_parameters:[273,5,1,""],get_operator:[273,4,1,""],methods:[273,5,1,""],solve:[273,4,1,""],solve_transpose:[273,4,1,""],thisown:[273,3,1,""]},"dolfin.cpp.la.EpetraMatrix":{assign:[276,4,1,""],mat:[276,4,1,""],thisown:[276,3,1,""],zero:[276,4,1,""]},"dolfin.cpp.la.EpetraVector":{gather:[277,4,1,""],get_local:[277,4,1,""],reset:[277,4,1,""],resize:[277,4,1,""],sum:[277,4,1,""],thisown:[277,3,1,""],vec:[277,4,1,""]},"dolfin.cpp.la.GenericLUSolver":{solve:[278,4,1,""],solve_transpose:[278,4,1,""],thisown:[278,3,1,""]},"dolfin.cpp.la.GenericLinearAlgebraFactory":{create_krylov_solver:[279,4,1,""],create_layout:[279,4,1,""],create_linear_operator:[279,4,1,""],create_local_vector:[279,4,1,""],create_lu_solver:[279,4,1,""],create_matrix:[279,4,1,""],create_vector:[279,4,1,""],krylov_solver_methods:[279,4,1,""],krylov_solver_preconditioners:[279,4,1,""],lu_solver_methods:[279,4,1,""],thisown:[279,3,1,""]},"dolfin.cpp.la.GenericLinearOperator":{mult:[280,4,1,""],size:[280,4,1,""],thisown:[280,3,1,""]},"dolfin.cpp.la.GenericLinearSolver":{parameter_type:[281,4,1,""],set_nullspace:[281,4,1,""],set_operator:[281,4,1,""],set_operators:[281,4,1,""],solve:[281,4,1,""],solve_transpose:[281,4,1,""],thisown:[281,3,1,""],update_parameters:[281,4,1,""]},"dolfin.cpp.la.GenericMatrix":{add:[282,4,1,""],array:[282,4,1,""],assign:[282,4,1,""],axpy:[282,4,1,""],compress:[282,4,1,""],copy:[282,4,1,""],data:[282,4,1,""],get:[282,4,1,""],getrow:[282,4,1,""],ident:[282,4,1,""],ident_zeros:[282,4,1,""],is_symmetric:[282,4,1,""],norm:[282,4,1,""],resize:[282,4,1,""],set:[282,4,1,""],setrow:[282,4,1,""],sparray:[282,4,1,""],thisown:[282,3,1,""],transpmult:[282,4,1,""],zero:[282,4,1,""]},"dolfin.cpp.la.GenericPreconditioner":{set_coordinates:[283,4,1,""],set_nullspace:[283,4,1,""],thisown:[283,3,1,""]},"dolfin.cpp.la.GenericSparsityPattern":{add_edges:[284,4,1,""],apply:[284,4,1,""],diagonal_pattern:[284,4,1,""],get_edges:[284,4,1,""],init:[284,4,1,""],insert:[284,4,1,""],local_range:[284,4,1,""],num_local_nonzeros:[284,4,1,""],num_nonzeros:[284,4,1,""],num_nonzeros_diagonal:[284,4,1,""],num_nonzeros_off_diagonal:[284,4,1,""],off_diagonal_pattern:[284,4,1,""],primary_dim:[284,4,1,""],rank:[284,4,1,""],sorted:[284,3,1,""],thisown:[284,3,1,""],unsorted:[284,3,1,""]},"dolfin.cpp.la.GenericTensor":{add:[285,4,1,""],apply:[285,4,1,""],factory:[285,4,1,""],init:[285,4,1,""],local_range:[285,4,1,""],rank:[285,4,1,""],size:[285,4,1,""],thisown:[285,3,1,""],zero:[285,4,1,""]},"dolfin.cpp.la.GenericVector":{abs:[286,4,1,""],add:[286,4,1,""],add_local:[286,4,1,""],array:[286,4,1,""],axpy:[286,4,1,""],copy:[286,4,1,""],empty:[286,4,1,""],gather:[286,4,1,""],gather_on_zero:[286,4,1,""],get_local:[286,4,1,""],inner:[286,4,1,""],local_range:[286,4,1,""],local_size:[286,4,1,""],max:[286,4,1,""],min:[286,4,1,""],norm:[286,4,1,""],owns_index:[286,4,1,""],resize:[286,4,1,""],set_local:[286,4,1,""],size:[286,4,1,""],sum:[286,4,1,""],thisown:[286,3,1,""],update_ghost_values:[286,4,1,""]},"dolfin.cpp.la.KrylovSolver":{default_parameters:[287,5,1,""],solve:[287,4,1,""],thisown:[287,3,1,""]},"dolfin.cpp.la.LUSolver":{default_parameters:[289,5,1,""],solve:[289,4,1,""],solve_transpose:[289,4,1,""],thisown:[289,3,1,""]},"dolfin.cpp.la.LinearAlgebraObject":{shared_instance:[291,4,1,""],thisown:[291,3,1,""]},"dolfin.cpp.la.LinearOperator":{init_layout:[292,4,1,""],mult:[292,4,1,""],shared_instance:[292,4,1,""],size:[292,4,1,""],str:[292,4,1,""],thisown:[292,3,1,""]},"dolfin.cpp.la.LinearSolver":{default_parameters:[293,5,1,""],solve:[293,4,1,""],thisown:[293,3,1,""]},"dolfin.cpp.la.Matrix":{assign:[295,4,1,""],down_cast:[295,4,1,""],shared_instance:[295,4,1,""],thisown:[295,3,1,""],zero:[295,4,1,""]},"dolfin.cpp.la.NewtonSolver":{default_parameters:[296,5,1,""],iteration:[296,4,1,""],linear_solver:[296,4,1,""],relative_residual:[296,4,1,""],residual:[296,4,1,""],solve:[296,4,1,""],thisown:[296,3,1,""]},"dolfin.cpp.la.NonlinearProblem":{F:[298,4,1,""],J:[298,4,1,""],form:[298,4,1,""],thisown:[298,3,1,""]},"dolfin.cpp.la.PETScBaseMatrix":{local_range:[299,4,1,""],mat:[299,4,1,""],resize:[299,4,1,""],size:[299,4,1,""],thisown:[299,3,1,""]},"dolfin.cpp.la.PETScFactory":{instance:[300,5,1,""],thisown:[300,3,1,""]},"dolfin.cpp.la.PETScKrylovSolver":{default_parameters:[302,5,1,""],get_operator:[302,4,1,""],ksp:[302,4,1,""],methods:[302,5,1,""],preconditioners:[302,5,1,""],set_operator:[302,4,1,""],set_operators:[302,4,1,""],set_options_prefix:[302,4,1,""],solve:[302,4,1,""],thisown:[302,3,1,""]},"dolfin.cpp.la.PETScLUSolver":{default_parameters:[306,5,1,""],get_operator:[306,4,1,""],ksp:[306,4,1,""],methods:[306,5,1,""],set_operator:[306,4,1,""],solve:[306,4,1,""],solve_transpose:[306,4,1,""],thisown:[306,3,1,""]},"dolfin.cpp.la.PETScLinearOperator":{init_layout:[309,4,1,""],mult:[309,4,1,""],size:[309,4,1,""],thisown:[309,3,1,""]},"dolfin.cpp.la.PETScMatrix":{assign:[310,4,1,""],binary_dump:[310,4,1,""],thisown:[310,3,1,""],zero:[310,4,1,""]},"dolfin.cpp.la.PETScMatrixDeleter":{thisown:[311,3,1,""]},"dolfin.cpp.la.PETScObject":{petsc_error:[312,5,1,""],thisown:[312,3,1,""]},"dolfin.cpp.la.PETScOptions":{clear:[314,5,1,""],set:[314,5,1,""],thisown:[314,3,1,""]},"dolfin.cpp.la.PETScPreconditioner":{default_parameters:[317,5,1,""],near_nullspace:[317,4,1,""],preconditioners:[317,5,1,""],set:[317,4,1,""],set_fieldsplit:[317,4,1,""],thisown:[317,3,1,""]},"dolfin.cpp.la.PETScSNESSolver":{default_parameters:[320,5,1,""],methods:[320,5,1,""],parameters:[320,3,1,""],snes:[320,4,1,""],solve:[320,4,1,""],thisown:[320,3,1,""]},"dolfin.cpp.la.PETScUserPreconditioner":{setup:[323,5,1,""],solve:[323,4,1,""],thisown:[323,3,1,""]},"dolfin.cpp.la.PETScVector":{gather:[324,4,1,""],get_local:[324,4,1,""],reset:[324,4,1,""],resize:[324,4,1,""],sum:[324,4,1,""],thisown:[324,3,1,""],vec:[324,4,1,""]},"dolfin.cpp.la.PETScVectorDeleter":{thisown:[325,3,1,""]},"dolfin.cpp.la.SLEPcEigenSolver":{default_parameters:[326,5,1,""],get_eigenpair:[326,4,1,""],get_eigenvalue:[326,4,1,""],get_iteration_number:[326,4,1,""],get_number_converged:[326,4,1,""],set_deflation_space:[326,4,1,""],solve:[326,4,1,""],thisown:[326,3,1,""]},"dolfin.cpp.la.STLFactory":{instance:[328,5,1,""],thisown:[328,3,1,""]},"dolfin.cpp.la.STLMatrix":{block_size:[330,4,1,""],clear:[330,4,1,""],local_nnz:[330,4,1,""],nnz:[330,4,1,""],sort:[330,4,1,""],thisown:[330,3,1,""],zero:[330,4,1,""]},"dolfin.cpp.la.Scalar":{add:[331,4,1,""],assign:[331,4,1,""],copy:[331,4,1,""],getval:[331,4,1,""],resize:[331,4,1,""],thisown:[331,3,1,""]},"dolfin.cpp.la.SparsityPattern":{thisown:[332,3,1,""]},"dolfin.cpp.la.TensorProductVector":{str:[333,4,1,""],thisown:[333,3,1,""]},"dolfin.cpp.la.TrilinosPreconditioner":{default_parameters:[334,5,1,""],name:[334,4,1,""],preconditioners:[334,5,1,""],set:[334,4,1,""],set_parameters:[334,4,1,""],thisown:[334,3,1,""]},"dolfin.cpp.la.UmfpackLUSolver":{default_parameters:[337,5,1,""],get_operator:[337,4,1,""],solve:[337,4,1,""],thisown:[337,3,1,""]},"dolfin.cpp.la.Vector":{data:[339,4,1,""],down_cast:[339,4,1,""],gather:[339,4,1,""],get_local:[339,4,1,""],resize:[339,4,1,""],shared_instance:[339,4,1,""],sum:[339,4,1,""],thisown:[339,3,1,""]},"dolfin.cpp.la.VectorSpaceBasis":{dim:[340,4,1,""],is_orthogonal:[340,4,1,""],is_orthonormal:[340,4,1,""],orthogonalize:[340,4,1,""],thisown:[340,3,1,""]},"dolfin.cpp.la.uBLASDenseFactory":{instance:[361,5,1,""],thisown:[361,3,1,""]},"dolfin.cpp.la.uBLASDenseMatrix":{assign:[363,4,1,""],invert:[363,4,1,""],lump:[363,4,1,""],mat:[363,4,1,""],resize:[363,4,1,""],solve:[363,4,1,""],solve_in_place:[363,4,1,""],thisown:[363,3,1,""],zero:[363,4,1,""]},"dolfin.cpp.la.uBLASILUPreconditioner":{thisown:[364,3,1,""]},"dolfin.cpp.la.uBLASKrylovSolver":{default_parameters:[365,5,1,""],get_operator:[365,4,1,""],methods:[365,5,1,""],preconditioners:[365,5,1,""],solve:[365,4,1,""],thisown:[365,3,1,""]},"dolfin.cpp.la.uBLASLinearOperator":{init_layout:[369,4,1,""],mult:[369,4,1,""],size:[369,4,1,""],thisown:[369,3,1,""]},"dolfin.cpp.la.uBLASPreconditioner":{init:[370,4,1,""],solve:[370,4,1,""],thisown:[370,3,1,""]},"dolfin.cpp.la.uBLASSparseFactory":{instance:[371,5,1,""],thisown:[371,3,1,""]},"dolfin.cpp.la.uBLASSparseMatrix":{assign:[373,4,1,""],invert:[373,4,1,""],lump:[373,4,1,""],mat:[373,4,1,""],resize:[373,4,1,""],solve:[373,4,1,""],solve_in_place:[373,4,1,""],thisown:[373,3,1,""],zero:[373,4,1,""]},"dolfin.cpp.la.uBLASVector":{data:[374,4,1,""],gather:[374,4,1,""],get_local:[374,4,1,""],resize:[374,4,1,""],sum:[374,4,1,""],thisown:[374,3,1,""],vec:[374,4,1,""]},"dolfin.cpp.mesh":{ALE:[375,2,1,""],ALE_move:[376,1,1,""],BoostGraphOrdering:[377,2,1,""],BoostGraphOrdering_compute_cuthill_mckee:[378,1,1,""],BoundaryMesh:[379,2,1,""],BoundingBoxTree3D:[381,2,1,""],BoundingBoxTree:[380,2,1,""],Box:[382,2,1,""],BoxMesh:[383,2,1,""],CSGCGALMeshGenerator2D:[384,2,1,""],CSGCGALMeshGenerator2D_default_parameters:[385,1,1,""],CSGCGALMeshGenerator3D:[386,2,1,""],CSGCGALMeshGenerator3D_default_parameters:[387,1,1,""],CSGDifference:[388,2,1,""],CSGGeometries:[389,2,1,""],CSGGeometry:[390,2,1,""],CSGIntersection:[391,2,1,""],CSGMeshGenerator:[392,2,1,""],CSGMeshGenerator_generate:[393,1,1,""],CSGOperator:[394,2,1,""],CSGPrimitive2D:[396,2,1,""],CSGPrimitive3D:[397,2,1,""],CSGPrimitive:[395,2,1,""],CSGUnion:[398,2,1,""],Cell:[399,2,1,""],CellFunction:[400,2,1,""],CellFunctionBool:[401,2,1,""],CellFunctionDouble:[402,2,1,""],CellFunctionInt:[403,2,1,""],CellFunctionSizet:[404,2,1,""],CellType:[405,2,1,""],CellType_create:[406,1,1,""],CellType_string2type:[407,1,1,""],CellType_type2string:[408,1,1,""],Circle:[409,2,1,""],CircleMesh:[410,2,1,""],Cone:[411,2,1,""],Cylinder:[412,2,1,""],DomainBoundary:[413,2,1,""],DynamicMeshEditor:[414,2,1,""],Edge:[415,2,1,""],EdgeFunction:[416,2,1,""],EdgeFunctionBool:[417,2,1,""],EdgeFunctionDouble:[418,2,1,""],EdgeFunctionInt:[419,2,1,""],EdgeFunctionSizet:[420,2,1,""],Ellipse:[421,2,1,""],EllipseMesh:[422,2,1,""],EllipsoidMesh:[423,2,1,""],Face:[424,2,1,""],FaceFunction:[425,2,1,""],FaceFunctionBool:[426,2,1,""],FaceFunctionDouble:[427,2,1,""],FaceFunctionInt:[428,2,1,""],FaceFunctionSizet:[429,2,1,""],Facet:[430,2,1,""],FacetCell:[431,2,1,""],FacetFunction:[432,2,1,""],FacetFunctionBool:[433,2,1,""],FacetFunctionDouble:[434,2,1,""],FacetFunctionInt:[435,2,1,""],FacetFunctionSizet:[436,2,1,""],GenericBoundingBoxTree:[437,2,1,""],Graph:[438,2,1,""],GraphBuilder:[439,2,1,""],GraphBuilder_compute_dual_graph:[440,1,1,""],GraphBuilder_local_graph:[441,1,1,""],HierarchicalFunction:[442,2,1,""],HierarchicalFunctionSpace:[443,2,1,""],HierarchicalMesh:[444,2,1,""],HierarchicalMeshFunctionBool:[445,2,1,""],HierarchicalMeshFunctionDouble:[446,2,1,""],HierarchicalMeshFunctionInt:[447,2,1,""],HierarchicalMeshFunctionSizet:[448,2,1,""],HierarchicalMeshFunctionUInt:[449,2,1,""],ImplicitDomainMeshGenerator:[450,2,1,""],ImplicitDomainMeshGenerator_generate:[451,1,1,""],ImplicitDomainMeshGenerator_generate_surface:[452,1,1,""],ImplicitSurface:[453,2,1,""],IntervalMesh:[454,2,1,""],LocalMeshData:[455,2,1,""],Mesh:[456,2,1,""],MeshColoring:[457,2,1,""],MeshColoring_cell_colors:[458,1,1,""],MeshColoring_color:[459,1,1,""],MeshColoring_color_cells:[460,1,1,""],MeshColoring_compute_colors:[461,1,1,""],MeshColoring_type_to_dim:[462,1,1,""],MeshConnectivity:[463,2,1,""],MeshData:[464,2,1,""],MeshDisplacement:[465,2,1,""],MeshDomains:[466,2,1,""],MeshEditor:[467,2,1,""],MeshEntity:[468,2,1,""],MeshFunction:[469,2,1,""],MeshFunctionBool:[470,2,1,""],MeshFunctionDouble:[471,2,1,""],MeshFunctionInt:[472,2,1,""],MeshFunctionSizet:[473,2,1,""],MeshGeometry:[474,2,1,""],MeshPartitioning:[475,2,1,""],MeshPartitioning_build_distributed_mesh:[476,1,1,""],MeshPointIntersection:[477,2,1,""],MeshQuality:[478,2,1,""],MeshQuality_radius_ratio_histogram_data:[479,1,1,""],MeshQuality_radius_ratio_matplotlib_histogram:[480,1,1,""],MeshQuality_radius_ratio_min_max:[481,1,1,""],MeshQuality_radius_ratios:[482,1,1,""],MeshRenumbering:[483,2,1,""],MeshTopology:[484,2,1,""],MeshTransformation:[485,2,1,""],MeshTransformation_rotate:[486,1,1,""],MeshTransformation_translate:[487,1,1,""],MeshValueCollection:[488,2,1,""],MeshValueCollectionBool:[489,2,1,""],MeshValueCollectionDouble:[490,2,1,""],MeshValueCollectionInt:[491,2,1,""],MeshValueCollectionSizet:[492,2,1,""],PeriodicBoundaryComputation:[493,2,1,""],PeriodicBoundaryComputation_compute_periodic_pairs:[494,1,1,""],PeriodicBoundaryComputation_masters_slaves:[495,1,1,""],Point:[496,2,1,""],Polygon:[497,2,1,""],PolygonalMeshGenerator:[498,2,1,""],PolygonalMeshGenerator_generate:[499,1,1,""],PolyhedralMeshGenerator:[500,2,1,""],PolyhedralMeshGenerator_generate:[501,1,1,""],PolyhedralMeshGenerator_generate_surface_mesh:[502,1,1,""],Rectangle:[503,2,1,""],RectangleMesh:[504,2,1,""],Restriction:[505,2,1,""],SCOTCH:[506,2,1,""],SCOTCH_compute_gps:[507,1,1,""],Sphere:[508,2,1,""],SphereMesh:[509,2,1,""],SubDomain:[510,2,1,""],SubMesh:[511,2,1,""],SubsetIterator:[512,2,1,""],Surface3D:[513,2,1,""],Tetrahedron:[514,2,1,""],Triangulate:[515,2,1,""],Triangulate_triangulate:[516,1,1,""],UnitCircle:[517,2,1,""],UnitCircleMesh:[518,2,1,""],UnitCube:[519,2,1,""],UnitCubeMesh:[520,2,1,""],UnitInterval:[521,2,1,""],UnitIntervalMesh:[522,2,1,""],UnitSquare:[523,2,1,""],UnitSquareMesh:[524,2,1,""],UnitTetrahedronMesh:[525,2,1,""],UnitTriangleMesh:[526,2,1,""],Vertex:[527,2,1,""],VertexFunction:[528,2,1,""],VertexFunctionBool:[529,2,1,""],VertexFunctionDouble:[530,2,1,""],VertexFunctionInt:[531,2,1,""],VertexFunctionSizet:[532,2,1,""],cells:[533,2,1,""],edges:[534,2,1,""],entities:[535,2,1,""],faces:[536,2,1,""],facets:[537,2,1,""],intersect:[539,1,1,""],refine:[540,1,1,""],vertices:[541,2,1,""]},"dolfin.cpp.mesh.ALE":{move:[375,5,1,""],thisown:[375,3,1,""]},"dolfin.cpp.mesh.BoostGraphOrdering":{compute_cuthill_mckee:[377,5,1,""],thisown:[377,3,1,""]},"dolfin.cpp.mesh.BoundaryMesh":{entity_map:[379,4,1,""],thisown:[379,3,1,""]},"dolfin.cpp.mesh.BoundingBoxTree":{build:[380,4,1,""],compute_closest_entity:[380,4,1,""],compute_closest_point:[380,4,1,""],compute_collisions:[380,4,1,""],compute_entity_collisions:[380,4,1,""],compute_first_collision:[380,4,1,""],compute_first_entity_collision:[380,4,1,""],thisown:[380,3,1,""]},"dolfin.cpp.mesh.BoundingBoxTree3D":{thisown:[381,3,1,""]},"dolfin.cpp.mesh.Box":{thisown:[382,3,1,""]},"dolfin.cpp.mesh.BoxMesh":{thisown:[383,3,1,""]},"dolfin.cpp.mesh.CSGCGALMeshGenerator2D":{default_parameters:[384,5,1,""],generate:[384,4,1,""],thisown:[384,3,1,""]},"dolfin.cpp.mesh.CSGCGALMeshGenerator3D":{default_parameters:[386,5,1,""],generate:[386,4,1,""],save_off:[386,4,1,""],thisown:[386,3,1,""]},"dolfin.cpp.mesh.CSGDifference":{thisown:[388,3,1,""]},"dolfin.cpp.mesh.CSGGeometries":{lego:[389,5,1,""],propeller:[389,5,1,""],thisown:[389,3,1,""]},"dolfin.cpp.mesh.CSGGeometry":{Box:[390,3,1,""],Circle:[390,3,1,""],Cone:[390,3,1,""],Difference:[390,3,1,""],Ellipse:[390,3,1,""],Intersection:[390,3,1,""],Polygon:[390,3,1,""],Rectangle:[390,3,1,""],Sphere:[390,3,1,""],Surface3D:[390,3,1,""],Tetrahedron:[390,3,1,""],Union:[390,3,1,""],dim:[390,4,1,""],getType:[390,4,1,""],has_subdomains:[390,4,1,""],is_operator:[390,4,1,""],set_subdomain:[390,4,1,""],subdomains:[390,3,1,""],thisown:[390,3,1,""]},"dolfin.cpp.mesh.CSGIntersection":{thisown:[391,3,1,""]},"dolfin.cpp.mesh.CSGMeshGenerator":{generate:[392,5,1,""],thisown:[392,3,1,""]},"dolfin.cpp.mesh.CSGOperator":{thisown:[394,3,1,""]},"dolfin.cpp.mesh.CSGPrimitive":{thisown:[395,3,1,""]},"dolfin.cpp.mesh.CSGPrimitive2D":{thisown:[396,3,1,""]},"dolfin.cpp.mesh.CSGPrimitive3D":{thisown:[397,3,1,""]},"dolfin.cpp.mesh.CSGUnion":{thisown:[398,3,1,""]},"dolfin.cpp.mesh.Cell":{cell_normal:[399,4,1,""],collides:[399,4,1,""],contains:[399,4,1,""],diameter:[399,4,1,""],distance:[399,4,1,""],facet_area:[399,4,1,""],get_cell_data:[399,4,1,""],get_cell_topology:[399,4,1,""],get_vertex_coordinates:[399,4,1,""],inradius:[399,4,1,""],normal:[399,4,1,""],order:[399,4,1,""],ordered:[399,4,1,""],orientation:[399,4,1,""],radius_ratio:[399,4,1,""],squared_distance:[399,4,1,""],thisown:[399,3,1,""],type:[399,4,1,""],volume:[399,4,1,""]},"dolfin.cpp.mesh.CellFunctionBool":{thisown:[401,3,1,""]},"dolfin.cpp.mesh.CellFunctionDouble":{thisown:[402,3,1,""]},"dolfin.cpp.mesh.CellFunctionInt":{thisown:[403,3,1,""]},"dolfin.cpp.mesh.CellFunctionSizet":{thisown:[404,3,1,""]},"dolfin.cpp.mesh.CellType":{cell_normal:[405,4,1,""],cell_type:[405,4,1,""],collides:[405,4,1,""],create:[405,5,1,""],create_entities:[405,4,1,""],description:[405,4,1,""],diameter:[405,4,1,""],dim:[405,4,1,""],facet_area:[405,4,1,""],facet_type:[405,4,1,""],inradius:[405,4,1,""],interval:[405,3,1,""],normal:[405,4,1,""],num_entities:[405,4,1,""],num_vertices:[405,4,1,""],order:[405,4,1,""],ordered:[405,4,1,""],orientation:[405,4,1,""],point:[405,3,1,""],radius_ratio:[405,4,1,""],refine_cell:[405,4,1,""],squared_distance:[405,4,1,""],string2type:[405,5,1,""],tetrahedron:[405,3,1,""],thisown:[405,3,1,""],triangle:[405,3,1,""],type2string:[405,5,1,""],volume:[405,4,1,""]},"dolfin.cpp.mesh.Circle":{center:[409,4,1,""],fragments:[409,4,1,""],radius:[409,4,1,""],thisown:[409,3,1,""]},"dolfin.cpp.mesh.CircleMesh":{thisown:[410,3,1,""]},"dolfin.cpp.mesh.Cone":{thisown:[411,3,1,""]},"dolfin.cpp.mesh.Cylinder":{thisown:[412,3,1,""]},"dolfin.cpp.mesh.DomainBoundary":{thisown:[413,3,1,""]},"dolfin.cpp.mesh.DynamicMeshEditor":{add_cell:[414,4,1,""],add_vertex:[414,4,1,""],close:[414,4,1,""],open:[414,4,1,""],thisown:[414,3,1,""]},"dolfin.cpp.mesh.Edge":{dot:[415,4,1,""],length:[415,4,1,""],thisown:[415,3,1,""]},"dolfin.cpp.mesh.EdgeFunctionBool":{thisown:[417,3,1,""]},"dolfin.cpp.mesh.EdgeFunctionDouble":{thisown:[418,3,1,""]},"dolfin.cpp.mesh.EdgeFunctionInt":{thisown:[419,3,1,""]},"dolfin.cpp.mesh.EdgeFunctionSizet":{thisown:[420,3,1,""]},"dolfin.cpp.mesh.Ellipse":{a:[421,4,1,""],b:[421,4,1,""],center:[421,4,1,""],fragments:[421,4,1,""],thisown:[421,3,1,""]},"dolfin.cpp.mesh.EllipseMesh":{thisown:[422,3,1,""]},"dolfin.cpp.mesh.EllipsoidMesh":{thisown:[423,3,1,""]},"dolfin.cpp.mesh.Face":{area:[424,4,1,""],normal:[424,4,1,""],thisown:[424,3,1,""]},"dolfin.cpp.mesh.FaceFunctionBool":{thisown:[426,3,1,""]},"dolfin.cpp.mesh.FaceFunctionDouble":{thisown:[427,3,1,""]},"dolfin.cpp.mesh.FaceFunctionInt":{thisown:[428,3,1,""]},"dolfin.cpp.mesh.FaceFunctionSizet":{thisown:[429,3,1,""]},"dolfin.cpp.mesh.Facet":{adjacent_cells:[430,4,1,""],exterior:[430,4,1,""],normal:[430,4,1,""],thisown:[430,3,1,""]},"dolfin.cpp.mesh.FacetCell":{facet_index:[431,4,1,""],thisown:[431,3,1,""]},"dolfin.cpp.mesh.FacetFunctionBool":{thisown:[433,3,1,""]},"dolfin.cpp.mesh.FacetFunctionDouble":{thisown:[434,3,1,""]},"dolfin.cpp.mesh.FacetFunctionInt":{thisown:[435,3,1,""]},"dolfin.cpp.mesh.FacetFunctionSizet":{thisown:[436,3,1,""]},"dolfin.cpp.mesh.GenericBoundingBoxTree":{build:[437,4,1,""],compute_closest_entity:[437,4,1,""],compute_closest_point:[437,4,1,""],compute_collisions:[437,4,1,""],compute_entity_collisions:[437,4,1,""],compute_first_collision:[437,4,1,""],compute_first_entity_collision:[437,4,1,""],thisown:[437,3,1,""]},"dolfin.cpp.mesh.Graph":{thisown:[438,3,1,""]},"dolfin.cpp.mesh.GraphBuilder":{compute_dual_graph:[439,5,1,""],local_graph:[439,5,1,""],thisown:[439,3,1,""]},"dolfin.cpp.mesh.HierarchicalFunction":{clear_child:[442,4,1,""],depth:[442,4,1,""],has_child:[442,4,1,""],has_parent:[442,4,1,""],set_child:[442,4,1,""],set_parent:[442,4,1,""],thisown:[442,3,1,""]},"dolfin.cpp.mesh.HierarchicalFunctionSpace":{clear_child:[443,4,1,""],depth:[443,4,1,""],has_child:[443,4,1,""],has_parent:[443,4,1,""],set_child:[443,4,1,""],set_parent:[443,4,1,""],thisown:[443,3,1,""]},"dolfin.cpp.mesh.HierarchicalMesh":{child:[444,4,1,""],clear_child:[444,4,1,""],depth:[444,4,1,""],has_child:[444,4,1,""],has_parent:[444,4,1,""],leaf_node:[444,4,1,""],parent:[444,4,1,""],root_node:[444,4,1,""],set_child:[444,4,1,""],set_parent:[444,4,1,""],thisown:[444,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionBool":{child:[445,4,1,""],clear_child:[445,4,1,""],depth:[445,4,1,""],has_child:[445,4,1,""],has_parent:[445,4,1,""],leaf_node:[445,4,1,""],parent:[445,4,1,""],root_node:[445,4,1,""],set_child:[445,4,1,""],set_parent:[445,4,1,""],thisown:[445,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionDouble":{child:[446,4,1,""],clear_child:[446,4,1,""],depth:[446,4,1,""],has_child:[446,4,1,""],has_parent:[446,4,1,""],leaf_node:[446,4,1,""],parent:[446,4,1,""],root_node:[446,4,1,""],set_child:[446,4,1,""],set_parent:[446,4,1,""],thisown:[446,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionInt":{child:[447,4,1,""],clear_child:[447,4,1,""],depth:[447,4,1,""],has_child:[447,4,1,""],has_parent:[447,4,1,""],leaf_node:[447,4,1,""],parent:[447,4,1,""],root_node:[447,4,1,""],set_child:[447,4,1,""],set_parent:[447,4,1,""],thisown:[447,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionSizet":{child:[448,4,1,""],clear_child:[448,4,1,""],depth:[448,4,1,""],has_child:[448,4,1,""],has_parent:[448,4,1,""],leaf_node:[448,4,1,""],parent:[448,4,1,""],root_node:[448,4,1,""],set_child:[448,4,1,""],set_parent:[448,4,1,""],thisown:[448,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionUInt":{clear_child:[449,4,1,""],depth:[449,4,1,""],has_child:[449,4,1,""],has_parent:[449,4,1,""],set_child:[449,4,1,""],set_parent:[449,4,1,""],thisown:[449,3,1,""]},"dolfin.cpp.mesh.ImplicitDomainMeshGenerator":{generate:[450,5,1,""],generate_surface:[450,5,1,""],thisown:[450,3,1,""]},"dolfin.cpp.mesh.ImplicitSurface":{f0:[453,4,1,""],f1:[453,4,1,""],polylines:[453,3,1,""],sphere:[453,3,1,""],thisown:[453,3,1,""],type:[453,3,1,""]},"dolfin.cpp.mesh.IntervalMesh":{thisown:[454,3,1,""]},"dolfin.cpp.mesh.LocalMeshData":{broadcast_mesh_data:[455,4,1,""],cell_partition:[455,3,1,""],cell_vertices:[455,3,1,""],clear:[455,4,1,""],domain_data:[455,3,1,""],extract_mesh_data:[455,4,1,""],gdim:[455,3,1,""],global_cell_indices:[455,3,1,""],num_global_cells:[455,3,1,""],num_global_vertices:[455,3,1,""],num_vertices_per_cell:[455,3,1,""],receive_mesh_data:[455,4,1,""],tdim:[455,3,1,""],thisown:[455,3,1,""],unpack_cell_vertices:[455,4,1,""],unpack_vertex_coordinates:[455,4,1,""],vertex_coordinates:[455,3,1,""],vertex_indices:[455,3,1,""]},"dolfin.cpp.mesh.Mesh":{bounding_box_tree:[456,4,1,""],cell_orientations:[456,4,1,""],cells:[456,4,1,""],clean:[456,4,1,""],clear:[456,4,1,""],color:[456,4,1,""],coordinates:[456,4,1,""],data:[456,4,1,""],domains:[456,4,1,""],geometry:[456,4,1,""],hash:[456,4,1,""],hmax:[456,4,1,""],hmin:[456,4,1,""],init:[456,4,1,""],init_cell_orientations:[456,4,1,""],move:[456,4,1,""],num_cells:[456,4,1,""],num_edges:[456,4,1,""],num_entities:[456,4,1,""],num_faces:[456,4,1,""],num_facets:[456,4,1,""],num_vertices:[456,4,1,""],order:[456,4,1,""],ordered:[456,4,1,""],renumber_by_color:[456,4,1,""],rmax:[456,4,1,""],rmin:[456,4,1,""],rotate:[456,4,1,""],size:[456,4,1,""],size_global:[456,4,1,""],smooth:[456,4,1,""],smooth_boundary:[456,4,1,""],snap_boundary:[456,4,1,""],thisown:[456,3,1,""],topology:[456,4,1,""],translate:[456,4,1,""],type:[456,4,1,""],ufl_cell:[456,4,1,""]},"dolfin.cpp.mesh.MeshColoring":{cell_colors:[457,5,1,""],color:[457,5,1,""],color_cells:[457,5,1,""],compute_colors:[457,5,1,""],thisown:[457,3,1,""],type_to_dim:[457,5,1,""]},"dolfin.cpp.mesh.MeshConnectivity":{clear:[463,4,1,""],empty:[463,4,1,""],hash:[463,4,1,""],init:[463,4,1,""],set_global_size:[463,4,1,""],size:[463,4,1,""],size_global:[463,4,1,""],str:[463,4,1,""],thisown:[463,3,1,""]},"dolfin.cpp.mesh.MeshData":{array:[464,4,1,""],clear:[464,4,1,""],create_array:[464,4,1,""],create_mesh_function:[464,4,1,""],erase_array:[464,4,1,""],exists:[464,4,1,""],mesh_function:[464,4,1,""],thisown:[464,3,1,""]},"dolfin.cpp.mesh.MeshDisplacement":{sub:[465,4,1,""],thisown:[465,3,1,""]},"dolfin.cpp.mesh.MeshDomains":{clear:[466,4,1,""],get_marker:[466,4,1,""],init:[466,4,1,""],is_empty:[466,4,1,""],markers:[466,4,1,""],max_dim:[466,4,1,""],num_marked:[466,4,1,""],set_marker:[466,4,1,""],thisown:[466,3,1,""]},"dolfin.cpp.mesh.MeshEditor":{add_cell:[467,4,1,""],add_vertex:[467,4,1,""],add_vertex_global:[467,4,1,""],close:[467,4,1,""],init_cells:[467,4,1,""],init_vertices:[467,4,1,""],open:[467,4,1,""],thisown:[467,3,1,""]},"dolfin.cpp.mesh.MeshEntity":{dim:[468,4,1,""],entities:[468,4,1,""],global_index:[468,4,1,""],incident:[468,4,1,""],index:[468,4,1,""],init:[468,4,1,""],mesh:[468,4,1,""],mesh_id:[468,4,1,""],midpoint:[468,4,1,""],num_entities:[468,4,1,""],num_global_entities:[468,4,1,""],str:[468,4,1,""],thisown:[468,3,1,""]},"dolfin.cpp.mesh.MeshFunctionBool":{array:[470,4,1,""],dim:[470,4,1,""],empty:[470,4,1,""],init:[470,4,1,""],mesh:[470,4,1,""],set_all:[470,4,1,""],set_value:[470,4,1,""],set_values:[470,4,1,""],size:[470,4,1,""],thisown:[470,3,1,""]},"dolfin.cpp.mesh.MeshFunctionDouble":{array:[471,4,1,""],dim:[471,4,1,""],empty:[471,4,1,""],init:[471,4,1,""],mesh:[471,4,1,""],set_all:[471,4,1,""],set_value:[471,4,1,""],set_values:[471,4,1,""],size:[471,4,1,""],thisown:[471,3,1,""]},"dolfin.cpp.mesh.MeshFunctionInt":{array:[472,4,1,""],dim:[472,4,1,""],empty:[472,4,1,""],init:[472,4,1,""],mesh:[472,4,1,""],set_all:[472,4,1,""],set_value:[472,4,1,""],set_values:[472,4,1,""],size:[472,4,1,""],thisown:[472,3,1,""]},"dolfin.cpp.mesh.MeshFunctionSizet":{array:[473,4,1,""],dim:[473,4,1,""],empty:[473,4,1,""],init:[473,4,1,""],mesh:[473,4,1,""],set_all:[473,4,1,""],set_value:[473,4,1,""],set_values:[473,4,1,""],size:[473,4,1,""],thisown:[473,3,1,""]},"dolfin.cpp.mesh.MeshGeometry":{clear:[474,4,1,""],dim:[474,4,1,""],hash:[474,4,1,""],init:[474,4,1,""],point:[474,4,1,""],set:[474,4,1,""],size:[474,4,1,""],str:[474,4,1,""],thisown:[474,3,1,""],x:[474,4,1,""]},"dolfin.cpp.mesh.MeshPartitioning":{build_distributed_mesh:[475,5,1,""],thisown:[475,3,1,""]},"dolfin.cpp.mesh.MeshPointIntersection":{intersected_cells:[477,4,1,""],thisown:[477,3,1,""]},"dolfin.cpp.mesh.MeshQuality":{radius_ratio_histogram_data:[478,5,1,""],radius_ratio_matplotlib_histogram:[478,5,1,""],radius_ratio_min_max:[478,5,1,""],radius_ratios:[478,5,1,""],thisown:[478,3,1,""]},"dolfin.cpp.mesh.MeshRenumbering":{renumber_by_color:[483,5,1,""],thisown:[483,3,1,""]},"dolfin.cpp.mesh.MeshTopology":{clear:[484,4,1,""],coloring:[484,3,1,""],dim:[484,4,1,""],global_indices:[484,4,1,""],hash:[484,4,1,""],have_global_indices:[484,4,1,""],init:[484,4,1,""],init_global:[484,4,1,""],init_global_indices:[484,4,1,""],set_global_index:[484,4,1,""],shared_entities:[484,4,1,""],size:[484,4,1,""],size_global:[484,4,1,""],str:[484,4,1,""],thisown:[484,3,1,""]},"dolfin.cpp.mesh.MeshTransformation":{rotate:[485,5,1,""],thisown:[485,3,1,""],translate:[485,5,1,""]},"dolfin.cpp.mesh.MeshValueCollectionBool":{assign:[489,4,1,""],clear:[489,4,1,""],dim:[489,4,1,""],empty:[489,4,1,""],get_value:[489,4,1,""],init:[489,4,1,""],mesh:[489,4,1,""],set_value:[489,4,1,""],size:[489,4,1,""],thisown:[489,3,1,""],values:[489,4,1,""]},"dolfin.cpp.mesh.MeshValueCollectionDouble":{assign:[490,4,1,""],clear:[490,4,1,""],dim:[490,4,1,""],empty:[490,4,1,""],get_value:[490,4,1,""],init:[490,4,1,""],mesh:[490,4,1,""],set_value:[490,4,1,""],size:[490,4,1,""],thisown:[490,3,1,""],values:[490,4,1,""]},"dolfin.cpp.mesh.MeshValueCollectionInt":{assign:[491,4,1,""],clear:[491,4,1,""],dim:[491,4,1,""],empty:[491,4,1,""],get_value:[491,4,1,""],init:[491,4,1,""],mesh:[491,4,1,""],set_value:[491,4,1,""],size:[491,4,1,""],thisown:[491,3,1,""],values:[491,4,1,""]},"dolfin.cpp.mesh.MeshValueCollectionSizet":{assign:[492,4,1,""],clear:[492,4,1,""],dim:[492,4,1,""],empty:[492,4,1,""],get_value:[492,4,1,""],init:[492,4,1,""],mesh:[492,4,1,""],set_value:[492,4,1,""],size:[492,4,1,""],thisown:[492,3,1,""],values:[492,4,1,""]},"dolfin.cpp.mesh.PeriodicBoundaryComputation":{compute_periodic_pairs:[493,5,1,""],masters_slaves:[493,5,1,""],thisown:[493,3,1,""]},"dolfin.cpp.mesh.Point":{coordinates:[496,4,1,""],cross:[496,4,1,""],distance:[496,4,1,""],dot:[496,4,1,""],norm:[496,4,1,""],rotate:[496,4,1,""],squared_distance:[496,4,1,""],str:[496,4,1,""],thisown:[496,3,1,""],x:[496,4,1,""],y:[496,4,1,""],z:[496,4,1,""]},"dolfin.cpp.mesh.Polygon":{ccw:[497,4,1,""],thisown:[497,3,1,""],vertices:[497,4,1,""]},"dolfin.cpp.mesh.PolygonalMeshGenerator":{generate:[498,5,1,""],thisown:[498,3,1,""]},"dolfin.cpp.mesh.PolyhedralMeshGenerator":{generate:[500,5,1,""],generate_surface_mesh:[500,5,1,""],thisown:[500,3,1,""]},"dolfin.cpp.mesh.Rectangle":{first_corner:[503,4,1,""],second_corner:[503,4,1,""],thisown:[503,3,1,""]},"dolfin.cpp.mesh.RectangleMesh":{thisown:[504,3,1,""]},"dolfin.cpp.mesh.Restriction":{contains:[505,4,1,""],dim:[505,4,1,""],mesh:[505,4,1,""],thisown:[505,3,1,""]},"dolfin.cpp.mesh.SCOTCH":{compute_gps:[506,5,1,""],compute_partition:[506,5,1,""],compute_reordering:[506,5,1,""],thisown:[506,3,1,""]},"dolfin.cpp.mesh.Sphere":{c:[508,3,1,""],r:[508,3,1,""],thisown:[508,3,1,""]},"dolfin.cpp.mesh.SphereMesh":{thisown:[509,3,1,""]},"dolfin.cpp.mesh.SubDomain":{geometric_dimension:[510,4,1,""],inside:[510,4,1,""],map:[510,4,1,""],map_tolerance:[510,3,1,""],mark:[510,4,1,""],mark_cells:[510,4,1,""],mark_facets:[510,4,1,""],snap:[510,4,1,""],thisown:[510,3,1,""]},"dolfin.cpp.mesh.SubMesh":{thisown:[511,3,1,""]},"dolfin.cpp.mesh.SubsetIterator":{end:[512,4,1,""],end_iterator:[512,4,1,""],next:[512,4,1,""],thisown:[512,3,1,""]},"dolfin.cpp.mesh.Surface3D":{thisown:[513,3,1,""]},"dolfin.cpp.mesh.Tetrahedron":{thisown:[514,3,1,""]},"dolfin.cpp.mesh.Triangulate":{thisown:[515,3,1,""],triangulate:[515,5,1,""]},"dolfin.cpp.mesh.UnitCircle":{thisown:[517,3,1,""]},"dolfin.cpp.mesh.UnitCircleMesh":{thisown:[518,3,1,""]},"dolfin.cpp.mesh.UnitCube":{thisown:[519,3,1,""]},"dolfin.cpp.mesh.UnitCubeMesh":{thisown:[520,3,1,""]},"dolfin.cpp.mesh.UnitInterval":{thisown:[521,3,1,""]},"dolfin.cpp.mesh.UnitIntervalMesh":{thisown:[522,3,1,""]},"dolfin.cpp.mesh.UnitSquare":{thisown:[523,3,1,""]},"dolfin.cpp.mesh.UnitSquareMesh":{thisown:[524,3,1,""]},"dolfin.cpp.mesh.UnitTetrahedronMesh":{thisown:[525,3,1,""]},"dolfin.cpp.mesh.UnitTriangleMesh":{thisown:[526,3,1,""]},"dolfin.cpp.mesh.Vertex":{point:[527,4,1,""],thisown:[527,3,1,""],x:[527,4,1,""]},"dolfin.cpp.mesh.VertexFunctionBool":{thisown:[529,3,1,""]},"dolfin.cpp.mesh.VertexFunctionDouble":{thisown:[530,3,1,""]},"dolfin.cpp.mesh.VertexFunctionInt":{thisown:[531,3,1,""]},"dolfin.cpp.mesh.VertexFunctionSizet":{thisown:[532,3,1,""]},"dolfin.cpp.mesh.cells":{end:[533,4,1,""],end_iterator:[533,4,1,""],next:[533,4,1,""],pos:[533,4,1,""],thisown:[533,3,1,""]},"dolfin.cpp.mesh.edges":{end:[534,4,1,""],end_iterator:[534,4,1,""],next:[534,4,1,""],pos:[534,4,1,""],thisown:[534,3,1,""]},"dolfin.cpp.mesh.entities":{end:[535,4,1,""],end_iterator:[535,4,1,""],next:[535,4,1,""],pos:[535,4,1,""],thisown:[535,3,1,""]},"dolfin.cpp.mesh.faces":{end:[536,4,1,""],end_iterator:[536,4,1,""],next:[536,4,1,""],pos:[536,4,1,""],thisown:[536,3,1,""]},"dolfin.cpp.mesh.facets":{end:[537,4,1,""],end_iterator:[537,4,1,""],next:[537,4,1,""],pos:[537,4,1,""],thisown:[537,3,1,""]},"dolfin.cpp.mesh.vertices":{end:[541,4,1,""],end_iterator:[541,4,1,""],next:[541,4,1,""],pos:[541,4,1,""],thisown:[541,3,1,""]},"dolfin.deprecation":{down_cast:[542,1,1,""]},"dolfin.fem":{adaptivesolving:[548,0,0,"-"],assembling:[552,0,0,"-"],bcs:[556,0,0,"-"],errorcontrolgenerator:[558,0,0,"-"],form:[560,0,0,"-"],formmanipulations:[564,0,0,"-"],interpolation:[567,0,0,"-"],norms:[570,0,0,"-"],projection:[572,0,0,"-"],solving:[578,0,0,"-"],variationalproblem:[581,0,0,"-"]},"dolfin.fem.adaptivesolving":{AdaptiveLinearVariationalSolver:[544,2,1,""],AdaptiveNonlinearVariationalSolver:[545,2,1,""],generate_error_control:[546,1,1,""],generate_error_control_forms:[547,1,1,""]},"dolfin.fem.adaptivesolving.AdaptiveLinearVariationalSolver":{solve:[544,4,1,""]},"dolfin.fem.adaptivesolving.AdaptiveNonlinearVariationalSolver":{solve:[545,4,1,""]},"dolfin.fem.assembling":{SystemAssembler:[549,2,1,""],assemble:[550,1,1,""],assemble_system:[551,1,1,""]},"dolfin.fem.bcs":{AutoSubDomain:[553,2,1,""],DirichletBC:[554,2,1,""],homogenize:[555,1,1,""]},"dolfin.fem.bcs.AutoSubDomain":{inside:[553,4,1,""]},"dolfin.fem.errorcontrolgenerator":{DOLFINErrorControlGenerator:[557,2,1,""]},"dolfin.fem.errorcontrolgenerator.DOLFINErrorControlGenerator":{initialize_data:[557,4,1,""]},"dolfin.fem.form":{Form:[559,2,1,""]},"dolfin.fem.formmanipulations":{adjoint:[561,1,1,""],derivative:[562,1,1,""],increase_order:[563,1,1,""],tear:[565,1,1,""]},"dolfin.fem.interpolation":{interpolate:[568,1,1,""]},"dolfin.fem.norms":{errornorm:[569,1,1,""],norm:[571,1,1,""]},"dolfin.fem.projection":{project:[573,1,1,""]},"dolfin.fem.solving":{LinearVariationalProblem:[574,2,1,""],LinearVariationalSolver:[575,2,1,""],NonlinearVariationalProblem:[576,2,1,""],NonlinearVariationalSolver:[577,2,1,""],solve:[579,1,1,""]},"dolfin.fem.solving.LinearVariationalSolver":{default_parameters:[575,5,1,""],solve:[575,4,1,""],thisown:[575,3,1,""]},"dolfin.fem.solving.NonlinearVariationalSolver":{default_parameters:[577,5,1,""],solve:[577,4,1,""],thisown:[577,3,1,""]},"dolfin.fem.variationalproblem":{VariationalProblem:[580,2,1,""]},"dolfin.functions":{"function":[592,0,0,"-"],constant:[583,0,0,"-"],expression:[585,0,0,"-"],functionspace:[600,0,0,"-"],specialfunctions:[607,0,0,"-"],ufc_functionspace:[610,0,0,"-"]},"dolfin.functions.constant":{Constant:[582,2,1,""]},"dolfin.functions.expression":{Expression:[584,2,1,""]},"dolfin.functions.expression.Expression":{str:[584,4,1,""],ufl_element:[584,4,1,""],ufl_evaluate:[584,4,1,""],value_shape:[584,4,1,""]},"dolfin.functions.function":{Argument:[586,2,1,""],Function:[587,2,1,""],TestFunction:[588,1,1,""],TestFunctions:[589,1,1,""],TrialFunction:[590,1,1,""],TrialFunctions:[591,1,1,""]},"dolfin.functions.function.Argument":{function_space:[586,4,1,""]},"dolfin.functions.function.Function":{assign:[587,4,1,""],split:[587,4,1,""],str:[587,4,1,""],sub:[587,4,1,""],ufl_element:[587,4,1,""],ufl_evaluate:[587,4,1,""]},"dolfin.functions.functionspace":{FunctionSpace:[593,2,1,""],FunctionSpaceBase:[594,2,1,""],FunctionSpaceFromCpp:[595,2,1,""],MixedFunctionSpace:[596,2,1,""],TensorFunctionSpace:[597,2,1,""],VectorFunctionSpace:[598,2,1,""],create_ufc_function_spaces:[599,1,1,""]},"dolfin.functions.functionspace.FunctionSpace":{restriction:[593,4,1,""]},"dolfin.functions.functionspace.FunctionSpaceBase":{cell:[594,4,1,""],collapse:[594,4,1,""],dolfin_element:[594,4,1,""],extract_sub_space:[594,4,1,""],num_sub_spaces:[594,4,1,""],split:[594,4,1,""],sub:[594,4,1,""],ufl_element:[594,4,1,""]},"dolfin.functions.specialfunctions":{CellSize:[602,1,1,""],CellVolume:[603,1,1,""],FacetArea:[604,2,1,""],FacetNormal:[605,1,1,""],MeshCoordinates:[606,2,1,""]},"dolfin.functions.ufc_functionspace":{UFCFunctionSpace:[608,2,1,""],create_ufc_function_spaces:[609,1,1,""]},"dolfin.mesh":{ale:[615,0,0,"-"],boundarysubdomainfinder:[622,0,0,"-"],meshes:[627,0,0,"-"],refinement:[628,0,0,"-"]},"dolfin.mesh.ale":{compute_edge_map:[613,1,1,""],compute_vertex_map:[614,1,1,""],init_parent_edge_indices:[616,1,1,""]},"dolfin.mesh.boundarysubdomainfinder":{create_maps:[617,1,1,""],find_all_subdomains:[618,1,1,""],find_keys_on_one_subdomain:[619,1,1,""],find_new_cell_key:[620,1,1,""],find_subdomain:[621,1,1,""],main:[623,1,1,""],usage:[624,1,1,""],write_file:[625,1,1,""]},"dolfin.mesh.refinement":{refine:[629,1,1,""]},"dolfin.multistage":{multistagescheme:[646,0,0,"-"],multistagesolvers:[649,0,0,"-"]},"dolfin.multistage.multistagescheme":{BDF1:[631,2,1,""],BackwardEuler:[632,3,1,""],CN2:[633,2,1,""],CrankNicolson:[634,3,1,""],ERK1:[636,2,1,""],ERK4:[637,2,1,""],ERK:[635,3,1,""],ESDIRK3:[638,2,1,""],ESDIRK4:[639,2,1,""],ExplicitEuler:[640,3,1,""],ExplicitMidPoint:[641,2,1,""],ForwardEuler:[642,3,1,""],ImplicitEuler:[643,3,1,""],MultiStageScheme:[644,2,1,""],RK4:[645,3,1,""]},"dolfin.multistage.multistagescheme.MultiStageScheme":{dolfin_stage_forms:[644,4,1,""],dt:[644,4,1,""],last_stage:[644,4,1,""],rhs_form:[644,4,1,""],solution:[644,4,1,""],stage_solutions:[644,4,1,""],t:[644,4,1,""],ufl_stage_forms:[644,4,1,""]},"dolfin.multistage.multistagesolvers":{PointIntegralSolver:[647,2,1,""],RKSolver:[648,2,1,""]},"dolfin.multistage.multistagesolvers.PointIntegralSolver":{scheme:[647,4,1,""]},"dolfin.multistage.multistagesolvers.RKSolver":{scheme:[648,4,1,""]},dolfin:{common:[28,0,0,"-"],compilemodules:[42,0,0,"-"],cpp:[238,0,0,"-"],deprecation:[543,0,0,"-"],fem:[566,0,0,"-"],functions:[601,0,0,"-"],importhandler:[611,0,0,"-"],mesh:[626,0,0,"-"],multistage:[630,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","function","Python function"],"2":["py","class","Python class"],"3":["py","attribute","Python attribute"],"4":["py","method","Python method"],"5":["py","staticmethod","Python static method"]},objtypes:{"0":"py:module","1":"py:function","2":"py:class","3":"py:attribute","4":"py:method","5":"py:staticmethod"},terms:{"15g":[18,20],"1st":593,"2nd":[593,633,641],"3rd":638,"4rd":639,"4th":637,"abstract":[4,17,18,19,20,150,296,320,450],"boolean":[13,14,15,22,23,74,253,314,316,384,386,469,470,471,472,473,540,629],"break":584,"case":[0,1,8,10,11,13,14,15,16,17,21,23,34,40,77,78,117,140,143,188,189,208,253,282,299,363,373,412,431,453,456,550,554,561,562,569,584,585],"class":[0,1,2,3,4,6,9,10,11,12,13,14,15,16,18,19,20,21,22,23,25,35,36,37,40,45,49,50,51,52,53,55,56,57,58,59,60,61,73,74,75,76,77,85,86,87,88,89,113,132,133,134,135,136,137,138,139,140,142,143,144,146,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,174,175,176,177,179,180,182,183,184,187,188,189,194,202,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,228,229,230,233,239,242,243,244,245,246,247,248,249,250,251,252,253,257,258,261,262,263,265,266,268,269,273,276,277,278,279,280,281,282,283,284,285,286,287,289,291,292,293,295,296,298,299,300,302,306,309,310,311,312,314,317,320,323,324,325,326,328,330,331,332,333,334,337,339,340,341,347,361,363,364,365,369,370,371,373,374,375,377,379,380,381,382,383,384,386,388,389,390,391,392,394,395,396,397,398,399,400,401,402,403,404,405,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,442,443,444,445,446,447,448,449,450,453,454,455,456,457,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,483,484,485,488,489,490,491,492,493,496,497,498,500,503,504,505,506,508,509,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,541,544,545,548,549,552,553,554,556,557,558,559,560,574,575,576,577,578,580,581,582,583,584,585,586,587,592,593,594,595,596,597,598,600,604,606,607,608,610,627,631,633,636,637,638,639,641,644,646,647,648,649,650],"const":[23,50,56,88,177,205,210,261,262,291,292,295,339,363,373,374,379,456,465,466,484,489,490,491,492,496,527,577,584],"default":[3,5,6,9,11,12,14,15,21,22,23,34,40,45,53,54,140,141,144,145,150,151,167,168,177,178,180,181,187,188,189,190,191,195,210,239,253,255,256,263,264,266,267,269,270,273,274,287,288,289,290,293,294,295,296,297,302,303,306,307,317,318,320,321,326,327,334,335,337,338,339,365,366,379,384,385,386,387,414,456,467,468,496,510,535,549,550,554,561,569,571,573,575,577,582,584,587,629],"export":[140,554],"final":[0,3,4,5,6,7,8,10,11,12,16,17,18,19,20,22,23,77,78,81,83,84,261,284,285],"float":[22,136,140,144,150,188,189,200,203,207,208,210,243,296,382,383,399,409,410,411,412,415,421,454,456,467,478,481,485,486,496,503,504,508,509,510,544,545,584],"function":[0,1,2,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,29,31,32,33,34,37,38,39,41,43,44,46,47,50,56,58,88,93,96,113,120,121,125,126,132,133,134,135,136,137,138,139,140,144,146,148,149,150,152,177,182,184,195,196,202,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,244,253,257,258,262,276,277,279,283,292,298,310,314,316,323,324,347,363,373,375,376,380,383,399,405,406,410,415,430,450,452,453,454,456,464,465,467,468,469,470,471,472,473,478,481,482,489,490,491,492,493,495,496,504,509,510,511,512,519,520,523,524,538,540,543,544,545,546,547,548,550,552,553,554,556,557,561,563,564,565,566,567,568,569,570,571,572,573,577,578,579,582,584,586,588,589,590,591,593,594,595,596,597,598,599,602,603,604,605,606,608,609,612,615,622,623,628,644,650],"import":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,26,37,140,282,299,363,373,554],"int":[21,22,23,37,57,73,74,75,93,136,138,139,140,149,150,151,177,188,192,199,206,207,208,210,213,229,243,282,296,299,320,363,373,380,399,409,411,412,415,421,454,456,464,465,467,468,469,470,471,472,473,474,485,486,488,489,490,491,492,496,505,510,517,519,520,523,524,554,577,584,587,593,598],"new":[4,5,6,11,21,148,152,188,189,194,195,213,253,375,376,377,378,456,466,489,490,491,492,506,507,550,561,562,580,581,585,594,620],"null":[16,152,179,253,281,283,317],"public":[23,40,45,46,584],"return":[2,4,10,13,14,15,17,21,22,23,32,37,40,46,50,55,56,58,64,67,68,69,70,71,72,73,74,77,81,82,83,84,85,87,88,89,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,127,128,129,130,138,139,140,142,143,144,148,149,150,152,166,175,176,177,188,189,192,193,195,199,204,205,206,210,211,212,213,214,223,234,236,239,241,253,256,261,262,265,266,267,269,271,272,273,275,276,277,279,280,281,282,284,285,286,291,292,295,296,297,298,299,300,301,302,304,305,306,308,309,312,313,317,320,322,324,328,329,330,331,333,334,336,337,339,342,343,344,345,346,348,349,351,352,358,361,362,363,365,367,368,369,371,372,373,374,375,376,380,390,399,405,409,415,421,430,431,453,456,457,458,463,464,465,466,468,470,471,472,473,474,477,478,481,482,484,489,490,491,492,493,494,495,496,497,503,505,510,527,533,534,535,536,537,539,540,541,546,547,550,551,553,555,563,565,568,569,571,573,577,584,585,586,587,589,591,594,602,603,605,629,644,647,648],"short":[73,114],"static":[53,58,73,77,140,144,146,150,167,169,177,180,184,188,189,224,239,253,263,266,268,269,273,287,289,293,296,300,302,306,312,314,317,320,323,326,328,334,337,361,365,371,375,377,384,386,389,392,405,439,450,457,475,478,483,485,493,498,500,506,515,575,577],"switch":584,"throw":[96,466],"true":[1,2,4,5,6,8,9,11,12,13,14,15,16,18,20,22,23,32,34,55,73,77,81,82,83,84,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,140,142,144,152,175,188,189,192,193,195,213,239,241,244,253,262,282,286,339,343,344,345,374,379,399,430,456,463,464,466,467,468,470,471,472,473,489,490,491,492,500,501,502,510,540,550,551,553,554,579,629],"void":[23,37,584],"while":[0,3,4,7,10,11,12,13,15,21,22,23,75,584],ALE:538,Added:[533,534,535,536,537,541],Axes:[410,509],But:7,For:[0,1,2,3,4,7,8,11,12,13,14,15,16,17,21,23,132,133,199,204,230,253,276,277,310,324,326,363,373,374,453,456,466,493,494,544,545,550,551,563,565,569,579],Its:582,Not:22,One:[9,11,18,19,20,21,212,231,584],Such:10,That:380,The:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,28,37,40,42,46,48,49,50,51,52,53,55,56,57,58,59,60,61,73,74,75,76,77,85,86,87,88,89,132,133,134,135,136,137,138,139,140,142,143,144,146,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,174,175,176,177,179,180,182,183,184,187,188,189,192,193,194,195,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,228,229,230,231,239,242,243,244,245,246,247,248,249,250,251,252,253,257,261,262,263,265,266,268,269,273,276,277,278,279,280,281,282,283,284,285,286,287,289,291,292,293,295,296,298,299,300,302,306,309,310,311,312,314,317,320,323,324,325,326,328,330,331,332,333,334,337,339,340,361,363,364,365,369,370,371,373,374,375,377,379,380,381,382,383,384,386,388,389,390,391,392,394,395,396,397,398,399,401,402,403,404,405,409,410,411,412,413,414,415,417,418,419,420,421,422,423,424,426,427,428,429,430,431,433,434,435,436,437,438,439,442,443,444,445,446,447,448,449,450,453,454,455,456,457,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,483,484,485,486,487,488,489,490,491,492,493,496,497,498,500,503,504,505,506,508,509,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,529,530,531,532,533,534,535,536,537,539,540,541,544,545,546,547,550,551,552,554,557,562,566,569,575,577,579,582,584,585,587,594,596,601,611,626,629,630,647,648,650],Then:[0,1,5,6,7,10,16,22,23],There:[3,11,16,587],These:[4,8,10,21,212,314,535,585],Use:[0,1,2,7,8,10,11,12,16,17,18,20,23,24,34,46,96,188,517,521,523,598],Useful:[140,399],Using:[2,3,4,17,18,19,20],With:[0,4,7,8,10,11,13,14,15,16,21,23,593],Yes:571,__init__:[4,10,584],__new__:585,_bool_:540,_boost:[177,577],_cell_:152,_dirichletbc_:549,_domain:584,_double_:496,_form_:549,_function_:[210,229,587],_functionspace_:[149,594],_mesh:[489,490,491,492,584],_mesh_:469,_meshfunction_:488,_multistagescheme_:[647,648],_not_:584,_std:[89,379,464],a_coeffici:[549,551],a_form:[549,551],a_function_spac:[549,551],a_r_dt:144,a_r_t:144,a_star:144,a_tensor:551,aabb:380,abl:[4,9,16,22],about:[4,5,6,8,22,48,93,194,326,580,581,584],abov:[0,1,3,4,7,8,9,10,11,12,13,15,16,17,21,23,93,253,380,551,569],abs:[13,286],absolut:[13,286],absolute_toler:74,accept:[363,373],access:[4,10,37,73,74,243,276,277,310,324,363,373,374,431,584],access_count:[73,74],accomplish:[12,21],accord:[11,244,253,359,375,376,379,456,485,487,493,495],accordingli:375,accuraci:[0,569],across:[475,476,478,481,629],act:[10,138,585],action:[4,13,280,292],actual:[0,10,12,13,18,19,20,212,223,257,280,380],adapt:[24,132,133,150,202,544,545,548,579],adapt_coeffici:195,adapt_mark:202,adapt_problem:150,adapted_mesh:195,adaptive_data:150,adaptive_poisson:0,adaptivelinearvariationalsolv:[0,133,202,548],adaptivenonlinearvariationalsolv:[202,548],adaptivesolv:[544,545,546,547,566],add:[11,74,138,139,182,206,262,282,284,285,286,331,414,467],add_add:211,add_cel:[414,467],add_edg:284,add_loc:286,add_polygon:253,add_sub:211,add_valu:[135,550,551],add_vertex:[414,467],add_vertex_glob:467,added:[40,45,46,74,380,390,561],adding:[11,27,182,550,569],addit:[8,10,12,16,21,37,468,496,535,550,552,562,579,587],additional_declar:37,additional_system_head:37,adjac:[430,456],adjacent_cel:430,adjoint:[0,564],adjust:[8,253],adopt:8,advanc:[4,34,276,277,310,324,363,373,374],advantag:[4,8],affect:253,after:[10,253,455,475],afterward:21,again:[8,455],aggreg:283,agre:149,aim:[132,133,544,545],ale:[613,614,616,626],ale_mov:538,algebra:[7,11,13,16,17,282,285,291,292,295,332,339,343,344,345,348,349,351,352,353,354,355,356,357,358,374,550,579],algorithm:[146,326,377,378,483,533,534,535,536,537,541,579],alia:[632,634,635,640,642,643,645],align:380,all:[0,1,7,8,9,10,12,14,15,17,18,19,20,21,22,23,37,45,61,74,132,133,136,140,148,149,150,152,166,176,188,210,214,243,253,254,261,276,277,282,285,286,291,295,310,312,324,326,330,339,363,373,374,380,437,456,463,464,466,470,471,472,473,474,478,481,482,484,485,486,488,489,490,491,492,493,495,505,512,535,544,545,550,554,574,576,579,584,587,594,621,644,650],all_interact:253,all_kei:619,allow:[3,10,11,22,23,26,74,136,176,469,488],almost:[17,58,67],along:[9,299,535],alpha:2,alreadi:[14,595,599],also:[0,1,3,8,10,12,13,14,15,17,18,19,20,21,23,34,77,80,87,136,140,253,326,456,464,475,550,554,584],alt:253,altern:[10,12,34,140,253,496,510,551,554,571,584,593,597,598],alwai:[50,56,88,140,554],amg:[11,17],aneurysm:1,angl:[456,485,486,496],ani:[5,6,7,11,16,22,37,40,44,55,149,152,187,195,213,253,261,276,282,285,295,310,330,363,373,453,456,466,484,549,551,559,562,584,587],anim:253,anoth:[140,152,207,212,213,231,379,415,496,574,576,587],ans:[212,231],ansatz:16,appear:[152,253],append:[244,253],appli:[0,4,8,10,11,12,13,14,15,16,17,23,140,182,187,198,261,284,285,493,495,549,551,554],applic:[326,511,551],approach:[2,8,140,554],appropri:[488,489,490,491,492],approproi:287,approxim:[0,4,8,17,18,19,20,133,144,146,261,283,323,411,412,545,569],arang:37,arbitrari:[74,285,375,430,505],area:[8,209,399,405,424,604],arg:[34,37,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,343,344,345,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,417,418,419,420,421,422,423,424,426,427,428,429,430,431,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,529,530,531,532,533,534,535,536,537,539,540,541,554,575,577,579,580,587,593],argc:[74,77,79,80],argument:[0,1,3,4,5,6,7,8,9,10,12,13,14,15,16,18,19,20,21,22,23,34,37,38,45,46,74,75,77,80,92,93,114,117,132,133,134,136,137,138,139,140,142,144,149,150,152,177,179,188,189,192,193,195,199,200,203,204,205,206,207,208,210,212,213,229,231,239,240,241,282,296,299,320,339,363,373,374,379,380,382,383,399,409,410,411,412,415,421,430,454,456,464,465,467,468,469,470,471,472,473,485,486,487,488,489,490,491,492,496,503,504,505,508,509,510,514,517,519,520,523,524,539,540,544,545,546,547,549,550,554,555,557,561,562,568,569,571,573,574,576,577,579,582,584,585,587,588,590,592,593,594,596,597,598,599,602,603,604,605,613,614,629,647,648],argv:[74,77,79,80,623],argyri:593,aris:10,arnold:593,arnoldi:326,around:[13,20,22,409,421,456,485,486,496],arpack:326,arrai:[23,37,50,56,88,140,149,152,188,189,199,207,208,210,213,230,243,282,286,339,374,380,399,456,464,467,470,471,472,473,474,496,510,527,554,582,584,594],arrow:253,artifici:453,as_backend_typ:347,as_matrix:23,as_str:32,as_vector:8,ascii:239,ask:7,aspect:4,assembl:[4,7,8,11,16,17,21,85,87,135,137,149,169,179,184,185,186,187,198,202,261,285,464,549,551,566,569,584,650],assemble_cel:[134,169],assemble_exterior_facet:[134,169],assemble_interior_facet:[134,169],assemble_system:[17,202,552],assemblerbas:[134,179,187,202],assert:[37,584],assig:212,assign:[7,11,74,134,207,212,213,233,276,282,295,310,331,363,373,489,490,491,492,587],assigning_func:[212,231],assigning_spac:212,associ:[4,7,17,21,89,140,182,244,253,456,464,468,470,471,472,473,488,489,490,491,492],assum:[0,1,8,14,15,23,40,45,46,146,380,405,613,614],attach:[16,140,213,464,554],attribut:[243,244,584],attribute_nam:243,auto:[24,253,260],autogener:612,autom:[4,134,144,179,579],automat:[0,4,8,11,37,48,117,132,133,140,253,456,544,545,554,579],autosubdomain:556,auxiliari:[456,464],avail:[7,10,11,12,13,17,18,19,20,21,37,74,136,140,205,207,210,239,269,271,272,273,275,279,282,302,304,305,306,308,317,319,320,322,334,336,339,343,344,345,348,349,351,352,353,354,355,356,357,358,365,367,368,374,383,399,410,415,454,456,464,465,467,478,481,482,484,496,504,509,519,520,523,524,540,554,579,584],averag:[2,128,456],avg:2,avoid:[8,11,50,56,88,140,363,373,554],axes:253,axi:[148,214,282,299,363,373,380,421,456,485,486,496],axial:[454,521,522],axpi:[211,262,282,286],axpy0:211,axpy1:211,axpyfunct:644,azimuth:253,aztec00:269,aztecoo:269,b_coeffici:[549,551],b_form:[549,551],b_function_spac:[549,551],b_tensor:551,backend:[7,13,16,17,266,267,280,282,285,289,292,295,332,339,343,344,345,348,349,351,352,353,354,355,356,357,358,374,550,551,579],backward:4,backwardeul:646,bar:[34,74,75,253],barrier:[58,62],base:[4,11,37,49,50,51,52,53,55,56,57,58,59,60,61,65,66,73,74,75,76,77,85,86,87,88,89,132,133,134,135,136,137,138,139,140,142,143,144,146,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,174,175,176,177,179,180,182,183,184,187,188,189,194,195,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,228,229,230,239,242,243,244,245,246,247,248,249,250,251,252,253,257,261,262,263,265,266,268,269,273,276,277,278,279,280,281,282,283,284,285,286,287,289,291,292,293,295,296,298,299,300,302,306,309,310,311,312,314,317,320,323,324,325,326,328,330,331,332,333,334,337,339,340,361,363,364,365,369,370,371,373,374,375,377,379,380,381,382,383,384,386,388,389,390,391,392,394,395,396,397,398,399,400,401,402,403,404,405,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,442,443,444,445,446,447,448,449,450,453,454,455,456,457,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,483,484,485,488,489,490,491,492,493,496,497,498,500,503,504,505,506,508,509,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,541,544,545,549,553,554,557,559,562,574,575,576,577,579,580,582,584,586,587,593,594,595,596,597,598,604,606,608,631,633,636,637,638,639,641,644,647,648],base_on:265,basi:[2,4,7,16,21,136,148,210,223,287,340,550,569,587],basic:[17,29,87,535],basisfunct:202,bc0:[1,14,17,18,19,20],bc1:[1,17,18,19,20,579],bc2:[1,17,18,19,20,579],bc3:1,bcl:8,bcp:11,bcr:8,bcs:[8,14,17,18,19,20,21,144,166,175,176,187,194,198,201,549,550,551,553,554,555,566,573,574,576,579,631,633,636,637,638,639,641,644],bcu:11,bdf1:[632,643,646],bdfm:593,bdm:[10,34,584,593],becaus:[0,12,13,14,15,23,584],been:[7,8,14,15,16,17,18,19,20,23,73,77,81,82,92,121,149,176,188,189,253,254,259,312,380,455,468,519,521,579],befor:[1,4,7,10,11,12,17,21,22,23,188,189,213,298,430,550],begin:[0,1,4,11,15,16,21,93,113],behavior:[8,253],behaviour:585,behind:[22,584,585],being:[4,134,146],below:[7,11,12,24,149,253,535,550,571,579,584,593],berkelei:399,beta:19,between:[2,21,50,56,88,152,199,204,212,233,236,291,380,415,437,456,463,477,539,617],beyond:[533,534,535,536,537,541],biharmon:24,bilinear:[0,1,2,4,7,10,11,12,13,14,15,16,17,18,19,20,23,139,143,144,149,166,549,550,557,561,579],bilinear_form:166,bin:239,binari:[4,188,189,239,310],binary_dump:310,bit:[533,534,535,536,537,541],block:[140,261,282,284,285,286,324,330,331,339,374,584],block_siz:[152,330],blockmatrix:347,blockvector:347,blood:1,bodi:[8,21,152],bool:[14,22,23,49,93,140,142,144,150,151,177,188,189,192,193,195,210,213,239,241,296,320,379,399,456,464,467,468,469,470,471,472,473,488,489,490,491,492,496,510,547,577,594,629],boolparamet:113,boost:[23,37,140,212,213,224,363,373,374,377,584],boostgraphord:538,boostgraphordering_compute_cuthill_mcke:538,both:[0,1,2,3,4,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,142,212,231,253,282,299,326,363,373,456,569,585,613,614],bottom:[10,21,22,411,412],bottom_radiu:411,boudari:[142,379],bound:[176,177,320,380,437,456,577],boundari:[0,2,4,5,8,10,11,13,15,16,18,19,21,22,23,24,140,144,150,166,175,176,187,196,198,201,253,375,376,379,392,393,413,430,431,456,493,495,510,535,549,550,551,554,555,574,576,579,584,617],boundary_mesh:617,boundary_part:550,boundary_valu:140,boundarymesh:[456,538],boundarysourc:10,boundarysubdomainfind:[617,618,619,620,621,623,624,625,626],bounding_box_tre:456,boundingboxtre:[437,538],boundingboxtree3d:538,box:[3,6,380,390,437,456,538],box_with_d:7,boxmesh:[3,520,538],brezzi:[10,593],broadcast:[58,65],broadcast_mesh_data:455,brought:13,btmp:17,bubbl:[18,593],buffer:244,build:[134,138,139,142,184,185,186,206,212,380,382,409,411,412,421,437,439,440,441,475,476,497,503,508,514],build_ccfem:184,build_distributed_mesh:[475,476],built:[0,4,8,12,13,14,15,16,23,24,253,289,380,456],c00:23,c00_file:23,c01:23,c01_file:23,c11:23,c11_file:23,c2v:[619,620,621],c_vec:326,cach:[212,599,609],cahn:24,cahnhilliardequ:4,calcul:[18,20,424],call:[0,1,3,4,7,8,10,11,12,13,14,15,16,17,18,19,20,22,23,50,56,77,78,87,88,120,140,150,214,253,298,312,313,430,453,456,550,551,579,584],callback:584,caller:[223,261,456],camera:253,can:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,34,37,40,48,74,87,136,140,143,146,179,180,183,208,212,213,214,231,239,253,283,292,298,299,317,326,334,379,380,382,409,411,412,421,453,456,457,459,460,461,463,465,469,470,471,472,473,488,489,490,491,492,497,500,503,505,508,514,550,551,554,579,582,584,587,646],canon:[0,1,12,13,14,15,16,23],care:[17,585],carri:[551,584],cast:[4,291,341],cauchi:8,ccfem:[137,138,139,184,186,205,206],ccfemassembl:202,ccfemdofmap:[202,206],ccfemform:202,ccfemfunct:233,ccfemfunctionspac:[139,205,233],ccw:497,cdot:10,cell:[2,3,8,9,10,18,19,20,21,22,23,87,134,136,140,142,144,148,149,152,174,179,195,200,203,208,209,210,213,214,244,379,380,383,390,405,406,407,408,410,414,430,431,439,440,454,455,456,457,458,459,460,461,467,468,475,476,477,478,479,480,481,482,484,488,489,490,491,492,504,505,509,510,519,520,521,522,523,524,535,538,540,554,582,584,593,594,602,603,604,617,620,621,629],cell_color:[457,458],cell_data:584,cell_dim:244,cell_dimens:[152,399,584],cell_dof:152,cell_domain:[134,149,549,550,551],cell_index:[23,489,490,491,492],cell_mark:[195,540,629],cell_norm:[399,405],cell_orient:[148,456],cell_partit:[455,475,476],cell_shap:[148,584],cell_siz:[410,498,499,500,501,502,509],cell_typ:405,cell_vertic:455,cellfunct:[21,401,402,403,404,456,478,482,538,584,629],cellfunctionbool:538,cellfunctiondoubl:538,cellfunctionint:538,cellfunctionsizet:538,celliter:584,cellsiz:[2,19,607],celltyp:[456,467,538],celltype_cr:538,celltype_string2typ:538,celltype_type2str:538,cellvolum:607,center:[3,5,6,45,409,410,411,412,421,456,485,486,508,509],certain:[4,74,283,405],cg1:465,cgal:[3,5,6,9,99,384,386,422,423,450,452,498,499,500],chang:[2,8,11,73,74,140,453,550,561,582],change_count:[73,74],changeset:98,check:[4,5,6,9,16,17,23,55,74,77,81,82,140,143,149,176,188,189,213,232,235,239,241,243,244,399,405,453,456,464,466,468,484,505,510,512,533,534,535,536,537,541,554],check_kei:73,check_midpoint:[140,510,554],checkpoint:257,chemic:4,child:[153,154,155,158,165,210,213,444,445,446,447,448],choic:[0,10,13,579],choleski:263,cholmod:[100,263],cholmodcholeskysolv:347,cholmodcholeskysolver_default_paramet:347,choos:[0,8,208],chord:584,chorin:11,chosen:[12,43,287],circl:[3,5,390,410,517,538],circlemesh:[3,518,538],circumradiu:[399,405,456,478,481,482],cise:[263,337],classic:[17,18,19,20],clean:[175,456],clear:[55,74,118,128,129,138,139,188,189,206,314,315,330,455,456,463,464,466,474,484,489,490,491,492],clear_child:[153,154,155,156,157,158,159,160,161,162,163,164,165,215,216,217,218,219,220,221,222,245,246,247,248,249,250,251,252,442,443,444,445,446,447,448,449],clock:126,close:[9,21,140,235,244,414,467,500,554,569],closest:[188,189,326,380,437],closur:453,cloud:[380,437],cmath:584,cn2:[634,646],coarsest:[210,213],code:[37,38,40,46,149,205,207,210,239,383,399,410,415,454,456,467,478,481,482,496,504,509,519,520,523,524,540,552,582,584],codimens:[399,400,401,402,403,404,430,432,433,434,435,436,456],coeffici:[7,11,13,16,18,20,21,149,195,205,208,210,213,214,550,557,559,562,582,584,585,587,604,606],coefficient_nam:149,coefficient_numb:149,col:[85,282],collaps:[152,213,594],collapsed_dof:[213,594],collect:[8,11,14,17,18,19,20,25,470,471,472,473,488,489,490,491,492,500,501,502],collid:[380,399,405],collis:[380,437,456],color:[34,149,253,456,457,458,459,460,461,462,484],color_cel:457,coloring_typ:[439,441,456,457,458],colormap:253,column:[140,208,265,282,284,299,330],com:456,combin:[10,12,13,16,211,330,561,579,587],command:[13,14,15,23,74,77,80,117,579],common:[8,30,32,34,35,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,140,144,149,150,152,167,175,177,180,188,189,213,214,223,238,244,253,257,280,281,282,283,284,285,286,291,296,299,317,326,334,375,376,384,386,390,405,455,456,464,470,471,472,473,489,490,491,492,535,569,575,577,612,613,614],common_cel:559,commonli:[4,650],commun:[59,464],communc:58,compabl:140,compat:[39,140,212,239,282,299,363,373,470,471,472,473],compil:[0,2,4,5,6,8,9,12,13,15,16,17,23,37,39,40,41,43,44,45,46,47,99,100,101,102,103,104,105,106,107,108,109,110,111,112,238,550,552,559,569,574,576,582,584,585,593,599],compile_express:[41,585],compile_extension_modul:39,compile_subdomain:47,compiledmodul:585,compiledsubdomain:[8,46,47],compilemodul:[8,37,38,40,44,45,46,612],compiletim:48,complement:2,complet:[40,45,46,140,650],complex:[7,23,584],complic:[21,584],compon:[2,4,8,10,12,16,18,19,20,23,148,152,213,230,399,405,424,430,584,587,589,591,594,598],compos:[17,18,19,20],composit:[137,139,205,206],compress:[4,8,188,192,193,282],compresss:282,comput:[0,1,2,4,7,8,10,11,12,13,14,15,18,19,20,23,75,136,140,144,146,147,152,184,188,199,200,203,204,210,214,224,253,280,292,298,309,326,360,363,369,373,377,378,380,399,405,415,424,430,437,456,457,461,468,475,477,478,481,482,493,494,496,506,507,539,554,561,562,567,569,570,571,572,579,613,614],computation:7,compute_cell_residu:144,compute_closest_ent:[380,437],compute_closest_point:[380,437],compute_collis:[380,437],compute_color:457,compute_cuthill_mcke:[377,378],compute_du:144,compute_dual_graph:439,compute_edge_map:615,compute_entity_collis:[380,437],compute_extrapol:144,compute_facet_residu:144,compute_first_collis:[380,437],compute_first_entity_collis:[380,437],compute_gp:506,compute_ind:144,compute_partit:506,compute_periodic_pair:493,compute_reord:506,compute_vertex_map:615,compute_vertex_valu:[210,214],conatrained_boundari:142,concret:[291,292,295,339,342,456],condit:[0,2,4,8,10,11,13,15,16,18,19,21,22,23,24,140,144,150,166,175,176,187,196,198,201,253,413,493,495,510,549,551,554,555,574,576,579],conduct:23,conductivity_cod:23,cone:[6,390,412,538],configur:[3,7,16,17,317,334,579],conform:[2,132,133,253,544,545],confus:380,connect:[10,188,430,439,440,455,456,463,484,533,534,535,536,537,541,621],consid:[0,1,2,7,8,11,12,13,14,15,16,17,18,19,20,21,23,557,569],consider:4,consist:[0,1,7,9,10,11,12,13,15,16,23,40,152,456,484,525,526,596],constant:[1,2,8,11,12,13,14,15,16,17,18,19,20,21,23,28,223,233,584,601,644],constrain:[142,176,593],constrained_domain:[14,142,152,593,594,597,598],constraint:[8,11,12,16,177,320,577],construct:[2,6,7,10,17,21,50,56,87,88,152,213,374,382,384,386,390,392,395,409,411,412,421,489,490,491,492,497,503,508,514,647,648],constructor:[4,6,52,53,89,134,137,138,140,149,175,179,180,183,187,207,208,209,210,211,213,223,228,242,243,244,257,262,263,265,266,273,277,287,289,295,298,306,309,310,312,323,324,337,339,340,363,364,369,373,374,413,414,424,430,454,463,464,465,467,468,470,471,472,473,474,484,496,510,512,533,534,535,536,537,541,554],constuctor:276,conta:587,contain:[0,1,2,4,7,8,10,11,12,13,14,15,16,17,18,19,20,21,23,40,45,46,48,93,208,210,380,399,456,464,466,505,600,613,614],contin:0,continu:[0,1,2,4,7,8,10,11,13,15,17,18,19,20,23,120,593],contour:9,control:[0,4,14,15,22,23,132,133,144,195,253,326,379,550,557,579,584],conveni:[4,29,413,464,511],convent:[379,456],converg:[4,13,17,177,296,320,326,577],convergence_criterion:4,convert:[5,74,405,407,408,457,462],convex:4,coordin:[3,6,9,14,21,136,148,152,208,210,228,265,283,375,376,382,399,409,414,421,455,456,467,474,485,486,496,503,508,510,527,584,606],coordinatematrix:347,copi:[4,18,20,50,56,59,74,88,89,140,142,152,174,207,208,210,211,213,223,262,276,277,282,286,295,310,324,331,339,363,373,374,456,463,465,470,471,472,473,474,484,496,512,533,534,535,536,537,541,554,587],corner:[3,5,6,140,382,503,514,554],correct:[11,22,23,282],correctli:74,correspond:[7,8,11,17,18,19,20,21,132,133,149,390,431,439,455,456,488,489,490,491,492,544,545,550,552,565,589,591],cos:[8,584],cost:55,could:[4,380,593],count:[52,73,561],counter:253,coupl:[4,11,475],cover:10,cpp:[34,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,539,540,541,544,545,549,553,554,559,560,574,575,576,577,580,582,585,587,594,595,599,604,606,608,612,644,647,648,649],cpp_assembl:552,cpp_optim:[2,4,8],cpparg:40,cppcode:[23,45,46,584],cppv:595,cpu:[126,127,130],crank:4,cranknicolson:646,creat:[0,1,2,3,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,49,50,51,55,56,57,59,74,75,76,85,86,87,88,89,132,133,136,139,140,142,143,144,148,149,152,166,167,176,177,182,188,189,205,206,207,208,210,212,213,223,229,230,239,253,257,261,269,276,277,279,292,293,295,296,302,310,317,320,324,326,330,331,332,333,334,339,363,365,373,374,379,380,382,383,388,391,398,399,400,405,406,409,410,411,412,415,416,421,425,431,432,450,451,452,453,455,456,463,465,466,467,470,471,472,473,474,478,479,480,484,489,490,491,492,496,500,501,502,503,505,508,509,511,512,514,515,516,517,519,520,521,522,523,524,525,526,527,528,533,534,535,536,537,540,541,544,545,546,547,549,550,553,554,559,561,562,574,575,576,577,582,583,584,585,587,588,589,590,591,593,594,596,597,598,604,606,617],create_arrai:464,create_compiled_expression_class:585,create_ent:405,create_krylov_solv:279,create_layout:279,create_linear_oper:279,create_local_vector:279,create_lu_solv:279,create_map:622,create_matrix:279,create_mesh_funct:464,create_parent_path:239,create_python_derived_expression_class:585,create_sub_el:148,create_ufc_function_spac:[600,610],create_vector:279,creation:585,criterion:629,cross:[3,496,504,523,524],crouzeix:593,crude:261,csg:[24,382,384,386,388,390,391,392,393,395,398,409,411,412,421,456,497,503,508,514],csgcgalmeshgenerator2d:538,csgcgalmeshgenerator2d_default_paramet:538,csgcgalmeshgenerator3d:538,csgcgalmeshgenerator3d_default_paramet:538,csgdiffer:538,csggeometri:[394,395,538],csgintersect:538,csgmeshgener:538,csgmeshgenerator_gener:538,csgoper:[388,391,398,538],csgprimit:[396,397,538],csgprimitive2d:[409,421,497,503,538],csgprimitive3d:[382,411,508,513,514,538],csgunion:538,cube:[3,8,9,17,20,519,520],cubic:18,curl:[571,593],current:[4,11,22,32,58,65,66,127,138,152,253,259,284,296,298,330,343,344,345,348,349,352,353,354,356,357,358,456,464,533,534,535,536,537,541],curv:[140,554],custom:[134,584],cut:[137,139,205,206],cuthil:[377,378],cylind:[140,538,554],d2dx:224,damp:52,darci:10,data:[0,1,4,5,6,10,12,13,15,21,23,50,55,56,73,74,88,114,140,142,148,149,150,188,192,193,208,210,213,239,244,253,257,282,324,330,339,365,374,380,399,455,456,463,464,466,468,470,471,472,473,474,475,476,478,479,484,488,489,490,491,492,511,539,554,582,584,616],data_label:[150,151],databas:53,dataset:[243,244,464],dataset_nam:244,dbc:14,ddx:[223,224],deal:17,dealt:4,debug:[113,119,213,493,495],debug_level:90,decid:[9,140,253,292,554],decim:257,declar:[0,4,8,12,13,15,16,23,37,584],decreas:95,deduc:[597,598],deep:[18,20],deepcopi:[18,20,210,282,339,374,587],def:[2,4,10,13,14,15,17,21,22,23,584],default_paramet:[53,140,144,150,167,177,180,188,189,253,263,269,273,287,289,293,296,302,306,317,320,326,334,337,365,384,386,575,577,579],defaultfactori:347,defaultfactory_factori:347,defin:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,27,43,46,53,138,139,140,144,176,177,182,205,206,208,213,280,282,285,286,287,292,296,323,340,382,390,399,411,412,453,456,465,469,470,471,472,473,485,487,488,489,490,491,492,500,503,505,510,511,514,535,550,554,557,558,560,569,577,582,584,585,593,600,607,629,646],definit:[17,40,510],deform:8,degener:[399,478,481,482],degre:[0,10,12,13,15,23,138,140,142,210,213,223,456,485,486,554,563,569,584,593,597,598],degree_rais:569,degree_ris:569,delta:[19,182,584],demo:[0,1,2,3,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],demo_auto:0,demo_bc:1,demo_biharmon:2,demo_built:3,demo_cahn:4,demo_csg:6,demo_csg_2d:5,demo_eigenvalu:7,demo_hyperelast:8,demo_mesh_generaton:9,demo_mix:10,demo_navi:11,demo_neumann:12,demo_nonlinear:13,demo_period:14,demo_poisson:[15,24],demo_singular:16,demo_stok:[17,18,20],demo_subdomain:[21,22],demo_tensorweight:23,demonstr:[1,3,4,5,6,8,21],denot:[0,2,8,10,11,12,13,15,21,23,587],dens:370,depend:[0,4,8,11,13,23,208,430,550,579,584,585],deprec:[46,113,125,194,517,518,519,521,523,542,580,581,612],depth:[74,153,154,155,156,157,158,159,160,161,162,163,164,165,215,216,217,218,219,220,221,222,245,246,247,248,249,250,251,252,442,443,444,445,446,447,448,449],deriv:[0,2,4,8,12,15,16,21,136,148,223,224,225,226,312,564,584,587],descret:0,describ:[0,1,9,12,13,15,16,17,21,23,257,382,390,409,411,412,421,497,498,499,503,508,513,514,644,649],descript:[0,1,5,6,12,13,15,16,17,18,21,23,73,89,253,405],design:[132,133,437,544,545],desir:[14,15,23],destin:[475,476],destroi:[87,282,330,339,363,373,374],destruct:[282,339,374],destructor:[77,78],det:8,detail:[10,12,14,15,17,21,23],detect_sharp_featur:[500,501,502],determin:[12,16,58,65,66,126,223,239,286,550,593],develop:[93,96,363,373,380,464],dfdc:4,dg_0:144,diag_val:140,diagion:284,diagnost:11,diagon:[3,140,282,284,504,517,523,524,550,554],diagonal_pattern:284,diamet:[399,405,456],dict:[38,74,550,584,594,599],dictionari:8,diff:4,differ:[3,4,11,17,18,19,20,21,22,136,140,187,253,291,330,388,390,405,463,488,489,490,491,492,549,550,554,584,585,646],differenti:[0,1,2,4,7,10,11,12,13,14,15,16,23,140,554,579],dim0:[208,439,441],dim1:[208,439,441],dim:[22,74,152,206,207,208,213,229,282,284,286,299,332,340,363,373,390,399,405,422,423,456,464,466,468,469,470,471,472,473,474,484,488,489,490,491,492,493,494,495,496,505,510,535,550,598],dimems:284,dimens:[4,7,8,22,23,148,149,152,206,208,210,213,214,229,244,261,280,282,283,284,285,286,292,299,309,331,333,340,363,369,373,379,380,390,405,414,415,416,417,418,419,420,424,425,426,427,428,429,437,456,457,459,461,462,463,464,465,466,467,468,469,470,471,472,473,474,484,488,489,490,491,492,493,494,495,496,505,510,527,528,529,530,531,532,533,534,535,536,537,541,582,597,598],dimension:[0,6,8,505],dirac:182,direct:[0,3,4,8,12,13,15,23,211,263,273,306,326,337,383,399,405,454,456,474,504,517,519,520,521,522,523,524],directli:[0,11,50,56,88,280,585],directori:48,dirichet:140,dirichlet:[0,1,2,8,13,14,15,17,18,19,20,21,23,140,195,198,554],dirichletbc:[0,1,2,8,10,11,13,14,15,17,18,19,20,21,23,34,144,150,202,549,551,555,556,573,650],dirichletbc_default_paramet:202,dirichletboundari:[2,13,14],disabl:[50,56,88,253],discard:453,discontinu:[2,10,140,554,565,573,593],discret:[0,4,10,16,132,133,144,469,470,471,472,473,544,545,587,593,600],disk:244,displac:[8,253,375,376,456,465],displai:[52,624],distanc:[380,399,405,437,453,496],distinct:[21,223],distribut:[236,244,380,439,440,475,476,540,629],div:[2,10,11,17,18,19,20,571],diverg:11,divid:[0,10,12,13,15,16,23],divis:466,dmu:4,doc:[363,373,374],docstr:[26,27,28,29,31,33,36,39,41,42,43,47,48,113,202,233,238,258,347,489,490,491,492,538,543,548,552,556,558,560,564,566,567,570,572,578,581,583,585,592,600,601,607,610,611,612,615,622,626,627,628,630,646,649],document:[139,206,363,373,374,456,650],doe:[50,56,88,176,317,334,455,466,488,489,490,491,492,551],doesn:16,dof:[140,142,148,152,199,204,210,212,213,554,594],dof_to_vertex_map:[152,202],dofmap0:[439,441],dofmap1:[439,441],dofmap:[16,138,152,202,206,210,213,244,439,441,584],doing:[18,19,20,21],dolfin:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,30,32,34,35,37,38,40,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,539,540,541,542,544,545,546,547,549,550,551,553,554,555,557,559,561,562,563,565,568,569,571,573,574,575,576,577,579,580,582,584,586,587,588,589,590,591,593,594,595,596,597,598,599,602,603,604,605,606,608,609,613,614,616,617,618,619,620,621,623,624,625,629,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,647,648,650],dolfin_cel:210,dolfin_el:594,dolfin_ep:[0,10,11,13,14,15,17,22,23,26,232,235],dolfin_error:[96,113],dolfin_fin:[18,19,20,22],dolfin_fine_subdomain:[18,19,20],dolfin_pi:[14,26],dolfin_plot_:253,dolfin_sqrt_ep:26,dolfin_stage_form:644,dolfin_vers:113,dolfinerrorcontrolgener:558,dolli:253,dolphin:[20,22],domain:[0,1,2,4,5,6,8,9,10,11,12,13,14,15,16,18,19,21,22,23,140,149,198,212,450,456,466,469,470,471,472,473,498,499,505,510,511,550,554,584],domain_data:455,domain_mark:505,domain_numb:505,domain_vertic:9,domainboundari:538,domian:2,don:[12,484],done:[7,10,12,16,17,18,19,20,22],dorfler:200,dorfler_mark:202,dot:[1,4,7,8,10,14,21,415,496],doubl:[22,23,37,51,73,74,93,140,150,151,243,253,314,316,326,331,380,469,478,482,488,496,510,584],doublearrai:113,doubleparamet:113,dougla:[10,593],down:[0,13,14,15,16,23,399],down_cast:[295,339,543],download:24,dqdx:223,draw:253,driven:11,dt_stage_offset:175,dual:[0,132,133,144,146,439,440,544,545,579],dual_variational_solv:0,dualiti:0,dummi:17,dump:310,dure:[8,11,14,15,23,75,475,584],dynam:[414,585],dynamicmesheditor:538,each:[0,4,8,9,10,11,12,13,15,16,21,22,23,46,74,140,142,150,229,286,383,405,430,455,463,464,466,475,476,504,519,520,523,524,550,554,584,604,606],eas:380,easi:[7,9,11,17,58,182,569],easiest:21,easili:[0,7,11,12,13,15,16,17,18,19,20,23],edg:[9,21,284,377,378,456,457,460,535,538,613],edgefunct:[417,418,419,420,538],edgefunctionbool:538,edgefunctiondoubl:538,edgefunctionint:538,edgefunctionsizet:538,edit:[414,467],editor:[414,467],edu:[263,337,399],effect:[10,12,253],effici:[0,8,12,13,15,16,23,50,55,56,88,188,189,414,456],eigenfunct:7,eigenpair:[7,326],eigenproblem:[7,326],eigensolv:[7,326],eigenvalu:[24,326],eigenvector:7,either:[0,17,22,40,74,75,143,179,208,253,282,326,463,464,533,534,535,536,537,541,550,579,582,587],elaps:130,element:[0,1,2,4,7,8,9,10,11,12,13,14,15,16,17,21,23,24,34,136,137,139,140,148,149,152,205,206,207,208,210,213,214,383,399,478,481,482,517,519,520,523,524,554,562,567,568,569,572,573,584,587,593,594,595,596,597,598,600,650],elemj:399,elev:253,elimin:8,eliminate_zero:8,ellips:[3,390,422,538],ellipsemesh:[3,410,538],ellipsoid:[3,410,423,509],ellipsoidmesh:[3,422,509,538],ellipt:[0,1,2,12,14,15,16,23],els:[11,23,253,584],elsewher:7,embed:[399,405],empti:[9,55,73,74,85,139,179,188,189,206,213,262,276,277,279,286,295,310,324,330,332,339,363,373,374,380,399,455,456,463,466,470,471,472,473,474,484,489,490,491,492],enabl:[50,56,88,253,456],encapsul:[375,376,456,465],encod:239,end:[0,4,6,11,87,113,512,533,534,535,536,537,541],end_iter:[512,533,534,535,536,537,541],enforc:10,enhanc:326,enough:[18,20],enrich:18,ensur:[4,7,140,312,550],enter:[253,254,259],entii:484,entinti:456,entir:[140,179,413,463,554],entiri:484,entit:[437,512],entiti:[18,19,20,21,149,152,253,379,380,399,405,414,415,437,456,463,466,467,468,469,470,471,472,473,484,488,489,490,491,492,493,494,495,505,510,512,527,533,534,536,537,538,541,550],entitit:405,entity_dim:149,entity_index:[489,490,491,492],entity_map:379,entri:[23,85,86,152,261,276,277,282,284,285,286,295,310,324,330,339,363,373,374,550],envelop:437,epetra:[13,17,85,269,273,276,277,334],epetra_blockmap:277,epetra_crsgraph:276,epetra_fecrsmatrix:276,epetra_fevector:277,epetrafactori:347,epetrakrylovsolv:[334,347],epetrakrylovsolver_default_paramet:347,epetrakrylovsolver_method:347,epetrakrylovsolver_precondition:347,epetralusolv:347,epetralusolver_default_paramet:347,epetralusolver_method:347,epetramatrix:347,epetravector:347,equal:[8,22,58,67,463,465],equat:[5,6,7,22,24,140,201,202,296,551,554],equilater:399,eras:464,erase_arrai:464,erk1:[635,640,642,646],erk4:[645,646],erk:646,error:[0,1,13,14,15,23,93,113,132,133,144,150,194,195,200,203,312,313,341,363,373,464,466,468,544,545,557,569,579,580,581,629],error_control:0,errorcontrol:[132,133,195,202,546,547,557],errorcontrol_default_paramet:202,errorcontrolgener:[557,566],errornorm:570,esdirk3:646,esdirk4:646,essenti:[8,10,17,21,201],estim:[0,132,133,144,544,545,579],estimate_error:144,eta_t:144,etc:[139,149,230,380,496,568],euclidean:[415,474,496],euler:4,eulerian:375,eval:[2,4,10,14,23,136,208,210,214,223,224,584],eval_cel:[10,208,214,584],eval_deriv:136,evalu:[2,10,21,23,136,144,148,150,208,210,214,224,225,226,227,465,469,470,471,472,473,550,569,584,587,604,606],evaluate_basi:[136,148],evaluate_basis_al:148,evaluate_basis_deriv:[136,148],evaluate_basis_derivatives_al:148,evaluate_dof:[136,148],evaluate_go:150,evalut:569,even:[77,82,253,254,259,551],event:113,everi:[4,253,550],exactli:4,examin:[7,10,12],exampl:[4,7,8,10,13,14,15,18,19,20,21,23,34,37,45,46,52,75,85,140,152,205,207,210,223,230,239,253,383,399,410,415,454,456,467,469,470,471,472,473,478,481,482,496,504,509,519,520,523,524,535,540,550,551,554,568,569,571,573,579,582,584,587,593,596,597,598,599,602,603,604,605,629],except:[96,456],excess:11,exchang:[50,56,88],excist:595,exclus:[199,204],exhaust:[5,6,114],exist:[11,12,16,149,239,241,243,244,253,456,464,466,489,490,491,492],exit:[5,6,7,9,16,17],exodu:101,exp:[0,10,12,14,15,16,21,23,584],expand:569,expans:[205,210,213,214,587],expansion_coeffici:213,experiment:453,explain:[92,93,579],explicit:[21,261,636,637,638,639,641],expliciteul:646,explicitli:[17,77,78,87,239,456,550],explicitmidpoint:646,explictli:195,expos:238,expr:38,express:[0,1,2,4,8,10,11,12,13,14,15,16,17,18,19,20,21,23,29,34,38,40,42,45,46,207,209,214,228,229,233,253,260,340,363,373,375,376,456,465,493,495,567,568,569,572,573,601,604,606,650],expression_to_code_frag:39,expressionmetaclass:585,ext_modul:37,extens:[37,39],exterior:[21,134,149,179,379,430],exterior_facet_domain:[134,149,549,550,551],extern:379,extra:[55,326],extract:[7,10,12,18,19,20,21,38,148,149,150,152,210,213,465,557,587,594],extract_bc:150,extract_mesh_data:455,extract_sub_dofmap:152,extract_sub_el:148,extract_sub_spac:[213,594],extrapol:[0,144,147,202,210],extrapolation_extrapol:202,extratc:[470,471,472,473],f_e:229,face:[9,411,412,456,535,538],facefunct:[426,427,428,429,538],facefunctionbool:538,facefunctiondoubl:538,facefunctionint:538,facefunctionsizet:538,facet:[2,9,10,18,19,20,21,22,134,140,144,149,152,179,208,209,229,379,399,405,431,456,457,460,464,500,501,502,505,510,535,538,554,584,593,604,605],facet_area:[399,405],facet_index:431,facet_orient:464,facet_typ:405,facetarea:[233,607],facetcel:538,facetfunct:[21,433,434,435,436,538],facetfunctionbool:538,facetfunctiondoubl:538,facetfunctionint:538,facetfunctionsizet:538,facetnorm:[2,21,607],facilit:212,fact:21,factor:[11,263,273,306,337,364,478,481,482],factori:[177,266,285,296,405,406,577],factorized_solv:263,fail:[17,93],failur:93,fals:[4,5,6,8,11,13,14,15,22,23,34,73,74,114,188,195,210,253,282,310,324,339,374,377,378,379,430,464,466,489,490,491,492,550,551,587,594,629],famili:[0,4,10,12,13,15,23,593,597,598],familiar:[7,17,21],fanci:34,fashion:[17,551],fast:55,faster:[4,140,554],fastest:330,featur:[8,92,390],feec:[593,598],fem:[132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,238,544,545,546,547,549,550,551,553,554,555,557,559,561,562,563,565,568,569,571,573,574,575,576,577,579,580,584,612,644,647,648],fem_solv:202,fenic:[13,24,149],ffc:[8,149,550,552,557,560],ffc_option:8,field:[4,8,10,11,569,593,598],figur:149,file:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,48,93,188,189,192,193,210,240,241,243,244,253,257,258,455,470,471,472,473,488,489,490,491,492,500,501,502,513,584],file_bool:22,file_create_parent_path:258,file_doubl:22,file_exist:258,file_mod:244,filenam:[188,192,193,210,239,240,241,253,456,469,470,471,472,473,488,489,490,491,492,587],filename_data:188,filename_dofdata:210,filename_tim:188,filename_vector:210,fill:[55,284,380,399],filter:[77,80],finalis:[77,81,82],finalize_tensor:[135,550,551],find:[0,1,2,4,7,8,10,12,13,14,15,16,17,18,19,20,21,23,55,58,63,132,133,166,176,544,545,574,576,620,621],find_all_subdomain:622,find_keys_on_one_subdomain:622,find_new_cell_kei:622,find_paramet:74,find_parameter_set:74,find_subdomain:622,finest:[210,213],finish:[61,414,467],finit:[0,1,2,4,7,8,10,12,13,14,15,16,17,18,20,21,23,34,136,137,139,148,149,152,205,206,208,210,213,214,383,399,517,519,520,523,524,562,567,568,572,573,584,587,593,594,595,596,597,598,600,650],finite_el:148,finiteel:[34,136,202,213,584,594],first:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,207,224,226,230,326,380,382,430,437,455,456,463,467,488,489,490,491,492,503,569,587,631,636],first_corn:503,fix:[4,13,463,469,470,471,472,473],fixm:[22,139,175,180,183,206],flag:[4,32,49,50,51,52,53,55,56,57,58,59,60,61,73,74,75,76,77,85,86,87,88,89,132,133,134,135,136,137,138,139,140,142,143,144,146,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,174,175,176,177,179,180,182,183,184,187,188,189,194,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,228,229,230,239,242,243,244,245,246,247,248,249,250,251,252,253,257,261,262,263,265,266,268,269,273,276,277,278,279,280,281,282,283,284,285,286,287,289,291,292,293,295,296,298,299,300,302,306,309,310,311,312,314,317,320,323,324,325,326,328,330,331,332,333,334,337,339,340,361,363,364,365,369,370,371,373,374,375,377,379,380,381,382,383,384,386,388,389,390,391,392,394,395,396,397,398,399,401,402,403,404,405,409,410,411,412,413,414,415,417,418,419,420,421,422,423,424,426,427,428,429,430,431,433,434,435,436,437,438,439,442,443,444,445,446,447,448,449,450,453,454,455,456,457,463,464,465,466,467,468,470,471,472,473,474,475,477,478,483,484,485,489,490,491,492,493,496,497,498,500,503,504,505,506,508,509,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,529,530,531,532,533,534,535,536,537,541,575,577],flat:405,flatten:207,flip:[17,18,19,20],flow:[10,11],flush:244,flux:10,focu:22,focus:[3,5,6,8,9],follow:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,26,37,74,139,144,206,253,326,455,456,464,535,550,579,584,629],foo:[74,542],forc:[8,37],form:[0,1,2,7,8,10,11,12,13,14,15,16,18,19,20,23,43,44,132,133,134,137,139,143,144,150,166,176,179,184,185,186,187,195,202,208,214,263,269,273,296,298,302,306,337,365,465,544,545,546,547,549,550,551,552,557,558,561,562,566,569,574,576,579,584,585,586,588,590,593,598,599,644],form_0:194,form_1:194,form_compil:[2,4,8,44,550],form_compiler_paramet:[8,549,550,551,559,573,574,576,579],form_degre:[593,598],format:[2,8,9,11,13,15,17,18,19,20,23,92,93,152,188,189,192,193,239,244,257,310,456,500,501,502],formmanipul:[561,562,563,565,566],formul:[0,2,17,18,19,24,144],formula:[0,12,13,15,16,21,23],fortin:593,fortun:7,forwardeul:646,found:[239,380,468],four:[6,9,18,19,20,22,514],fourth:[2,4,14,22,467],fraction:[200,203],fragment:[409,421],framework:[17,18,19,20],free:[11,292],freedom:[10,138,140,142,213,554,593],freeli:11,from:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,44,50,56,74,88,93,132,133,134,137,140,144,146,147,148,149,152,179,187,207,210,213,238,244,253,269,276,277,292,295,302,310,312,324,331,334,339,363,373,374,379,380,392,393,405,406,407,408,415,439,440,441,450,451,452,455,456,470,471,472,473,475,476,484,488,489,490,491,492,493,494,496,500,501,502,505,511,513,515,516,527,546,549,553,554,559,562,584,585,587,594,595,597,598,599,613,614],fs0:599,fs1:599,full:[10,12,18,19,20,21,40,379,505],func0:211,func1:211,func:211,function_spac:[139,140,149,206,210,550,559,584,586],function_space_0:139,function_space_1:139,functionassign:233,functionaxpi:233,functionspac:[0,1,2,4,7,8,10,11,12,13,14,15,16,17,18,19,20,21,23,140,149,199,204,206,210,212,230,231,233,550,554,568,573,584,586,587,594,595,596,597,598,599,601,608,650],functionspacebas:[593,595,596,597,600],functionspacefromcpp:600,further:[0,12,13,15,16,18,20,23,93,569],furthermor:230,futur:[464,550],g2d:5,g3d:6,g_l:21,g_r:21,galerkin:[0,2,13,593],gather:[140,277,286,324,339,374],gather_on_zero:286,gdim:[380,414,455,467],gen_hermitian:326,gen_non_hermitian:326,gener:[0,4,5,6,7,8,10,12,13,15,16,21,23,24,37,40,45,46,48,93,132,133,134,149,152,179,211,237,281,283,284,293,326,332,363,373,384,386,392,393,399,405,411,412,422,423,439,441,450,489,490,491,492,498,499,500,501,535,544,545,552,579,582,584,593,627],generate_error_control:548,generate_error_control_form:548,generate_surfac:450,generate_surface_mesh:[500,502],generateswigcod:48,generic_function_memb:[38,40],genericadaptivevariationalsolv:[132,133,202],genericadaptivevariationalsolver_default_paramet:202,genericboundingboxtre:[381,538],genericdofmap:[138,142,202,213,283,584],genericfil:[239,257,258],genericfunct:[140,149,195,208,210,213,233,456,554,584],genericlinearalgebrafactori:[266,268,296,300,328,347,361,371],genericlinearoper:[282,292,309,347,369],genericlinearsolv:[263,269,278,287,293,296,302,347,365],genericlusolv:[273,289,306,337,347],genericmatrix:[140,276,280,295,310,330,347,363,373],genericprecondition:[317,334,347],genericsparsitypattern:[332,347],generictensor:[134,137,282,286,331,347],genericvector:[140,177,188,189,205,210,213,277,296,320,324,339,347,374,577,587],genericvetor:[295,339],genericvtkplott:253,genet:[314,316],genrat:[450,452],geometr:[11,140,208,210,283,380,414,455,465,467,510,554,582],geometri:[9,10,11,21,24,382,384,386,388,390,391,392,393,395,398,409,411,412,421,456,474,497,503,508,514],geometric_dimens:[148,152,210,478,481,482,510,584],get:[5,6,13,17,18,20,22,74,85,89,97,140,149,243,261,262,269,273,277,282,286,302,306,324,326,331,339,374,379,380,399,456,466,484,488,489,490,491,492,569,584,593],get_block:[261,262],get_boundary_valu:140,get_cell_data:399,get_cell_topolog:399,get_edg:284,get_eigenpair:[7,326],get_eigenvalu:326,get_iteration_numb:326,get_loc:[277,286,324,339,374],get_log_level:113,get_mark:466,get_mpi_comm:268,get_number_converg:326,get_oper:[269,273,302,306,337,365],get_rang:[73,74],get_serial_comm:268,get_tensor_typ:347,get_valu:[85,489,490,491,492],get_vertex_coordin:399,get_widget:253,getrow:282,gettyp:390,getval:331,ghost:[214,277,286,324,339,374],ghost_indic:[277,286,324,339,374],gibb:[506,507],git:98,git_commit_hash:113,give:[3,5,6,16,22,23,194,243,326,463,579,580,581],given:[0,1,3,4,5,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,34,55,58,67,74,75,89,119,128,132,133,134,136,137,139,140,144,146,148,149,150,152,167,177,179,182,184,185,186,188,189,203,205,208,209,210,213,214,223,228,230,239,244,261,262,276,277,280,282,284,285,286,292,295,296,302,309,310,320,323,324,326,330,331,333,339,341,346,359,363,369,373,374,379,380,383,399,400,405,414,415,416,425,430,431,432,437,454,455,456,457,459,460,461,463,464,465,466,467,468,470,471,472,473,474,484,485,486,487,488,489,490,491,492,496,504,510,511,512,519,520,521,522,523,524,527,528,533,534,535,536,537,541,544,545,550,551,553,555,559,561,562,563,565,568,569,571,573,575,577,579,582,583,584,587,594,602,603,604,605,606,629],global:[27,53,58,63,68,69,87,142,152,174,213,277,279,286,324,330,374,375,376,379,399,430,455,456,463,467,468,469,470,471,472,473,484,488,489,490,491,492,511,550,593],global_cell_indic:455,global_dimens:152,global_index:[467,468],global_indic:484,global_norm:456,global_offset:58,global_s:484,global_vertex_indic:399,globalis:320,globalparamet:[28,113],globalparameters_default_paramet:113,glyph:[34,253],gmre:[11,16,579],gmres_restart:74,goal:[0,132,133,144,150,544,545,546,547,579],goalfunct:[132,133],goe:[0,1,5,6,12,13,15,16,17,18,21,23,87],going:[22,647,648],good:399,grad:[0,1,2,4,7,8,11,12,13,14,15,16,17,18,19,20,21,23,550],gradient:[8,10,13,21],graph:[276,377,378,439,440,441,538],graphbuild:538,graphbuilder_compute_dual_graph:538,graphbuilder_local_graph:538,greater:629,green:8,guess:13,gurante:16,h10:571,h_avg:2,half:23,hand:[2,8,10,11,12,16,17,21,140,143,182,323,363,373],handl:[10,74,117,138,140,142,554,558,573,585,592],hardcopy_prefix:34,harmon:456,harmonic_smooth:456,has:[0,1,3,4,7,8,16,17,18,19,20,50,56,73,74,77,81,82,88,92,121,176,213,253,254,259,312,326,330,380,455,456,468,475,478,481,482,512,519,521,533,534,535,536,537,541,550,562,579,629],has_cel:213,has_cgal:[3,5,6,9,113],has_child:[153,154,155,156,157,158,159,160,161,162,163,164,165,215,216,217,218,219,220,221,222,245,246,247,248,249,250,251,252,442,443,444,445,446,447,448,449],has_cholmod:113,has_dataset:244,has_el:213,has_exodu:113,has_hdf5:113,has_index:55,has_jacobian:176,has_kei:74,has_krylov_solver_method:347,has_krylov_solver_precondition:[11,17,347],has_linear_algebra_backend:[7,13,16,17],has_lower_bound:176,has_lu_solver_method:347,has_mpi:113,has_openmp:113,has_par:[153,154,155,156,157,158,159,160,161,162,163,164,165,215,216,217,218,219,220,221,222,245,246,247,248,249,250,251,252,442,443,444,445,446,447,448,449],has_paramet:74,has_parameter_set:74,has_parmeti:113,has_petsc:[1,113],has_scotch:113,has_slepc:[7,113],has_subdomain:390,has_tao:113,has_trilino:113,has_typ:347,has_umfpack:113,has_upper_bound:176,has_zlib:113,hash:[98,148,456,463,474,484],have:[0,1,5,6,7,9,12,13,14,15,16,17,18,19,20,21,22,23,24,140,149,176,188,189,282,550,554,584,593,613,614],have_global_indic:484,hcurl0:571,hcurl:571,hdf5:[102,243,244,257],hdf5attribut:258,hdf5file:258,hdiv0:571,hdiv:571,header:[37,584],heavi:585,height:253,help:[38,253],helper:196,helptext:253,henc:[0,7,8,10,12,13,15,16,23],her:[323,593],here:[0,1,4,7,8,10,11,12,13,14,15,18,19,20,21,23,144,194,230,412,456,580,581,584,593,650],hermit:593,hermitian:326,hex:37,hide:[34,253],hide_abov:253,hide_below:253,hierarchi:[210,213,280],hierarchicaldirichletbc:[140,202],hierarchicalerrorcontrol:[144,202],hierarchicalform:[149,202],hierarchicalfunct:[202,210,233,258,538],hierarchicalfunctionspac:[202,213,233,258,538],hierarchicallinearvariationalproblem:[166,202],hierarchicalmesh:[202,233,258,456,538],hierarchicalmeshfunctionbool:[202,233,258,470,538],hierarchicalmeshfunctiondoubl:[202,233,258,471,538],hierarchicalmeshfunctionint:[202,233,258,472,538],hierarchicalmeshfunctionsizet:[202,233,258,473,538],hierarchicalmeshfunctionuint:[202,233,258,538],hierarchicalnonlinearvariationalproblem:[176,202],high:569,higher:[0,22,146,550,563,569],hilliard:24,histogram:[478,479,480],histor:330,hmax:456,hmin:456,hold:[4,8,11,34,456],homogen:[140,144,556],hood:[11,17,24],hookean:8,horizont:[3,421,523,524],hover:253,how:[0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,149,535,579,584],howev:[11,12,14,15,17,21,23,149,550,561,569,584],htm:[363,373,374],http:[257,263,337,363,373,374,399,456],human_form:175,hyperelast:24,hypr:17,hypre_amg:579,ident:[8,282,399,550],ident_zero:[282,550],identifi:[2,21,74,89,140,148,464,484,505,510,554],iff:[144,399,456],ifilenam:618,ignor:[11,253,555],illustr:[0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,535,584],ilu:[13,364,579],imaginari:326,immedi:[15,23],impact:629,implement:[37,40,45,46,121,136,137,146,167,177,214,263,269,273,276,277,302,306,310,320,323,324,330,331,332,337,363,364,365,373,374,375,380,405,437,483,485,550,575,577,584],impli:[550,593],implicit:[17,175,450,451,452,631,633,638,639],implicitdomainmeshgener:538,implicitdomainmeshgenerator_gener:538,implicitdomainmeshgenerator_generate_surfac:538,impliciteul:646,implicitsurfac:[450,538],importhandl:612,impos:[2,11,16],improv:11,incarn:330,incid:[431,463,468,484,533,534,535,536,537,541],includ:[24,37,40,140,152,180,183,239,280,320,554,570,571,579,584,593],inclus:[232,454,584],incomplet:[11,364],incompress:[17,24],incorpor:21,increas:90,increase_ord:564,increment:[4,8,187],indent:[11,90,95],independ:[280,456],index:[9,10,18,19,20,22,23,25,55,58,63,64,136,139,140,149,188,192,199,204,210,213,284,286,363,373,374,379,380,399,415,430,431,465,466,467,468,470,471,472,473,474,484,488,489,490,491,492,493,494,527,535,554,584,586],index_own:58,indexset:113,indic:[0,2,3,4,5,6,21,24,55,114,134,140,144,152,199,200,203,204,208,230,277,286,324,339,374,380,399,466,467,477,478,481,482,484,517,523,524,554,579,629],individu:463,inequ:320,infin:571,inflow:[11,17,18,19,20,22],info:[5,6,16,17,50,56,85,88,113,551,579,584],info_stream:113,info_underlin:113,inform:[1,5,6,10,18,19,20,21,22,48,50,56,74,85,88,89,96,140,194,261,262,292,326,333,463,464,468,474,484,496,554,573,580,581,584,587],ingredi:[0,13,14,15,23],inherit:[253,292,584,585],init:[113,284,285,370,456,463,466,468,470,471,472,473,474,484,489,490,491,492],init_cel:467,init_cell_orient:456,init_glob:484,init_global_indic:484,init_global_tensor:135,init_layout:[292,309,369],init_mpi:[77,79],init_parent_edge_indic:615,init_petsc:[77,80],init_vertic:467,initi:[0,4,7,8,12,13,14,15,17,18,19,20,21,23,45,74,77,80,117,149,213,284,285,430,456,463,466,468,470,471,472,473,474,484,547,584,587,595,616],initialcondit:4,initialis:[10,77,79,82,213,312,370,489,490,491,492],initialize_data:557,inlet:1,inlin:[363,373],inner:[0,2,11,12,13,15,16,17,18,19,20,21,23,182,262,286,550],input:[0,1,2,3,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,283,380,550],input_kei:253,inradiu:[399,405,456,478,481,482],inscrib:[399,456],insert:[10,55,282,284,466,489,490,491,492],insid:[0,2,13,14,15,21,22,23,46,140,187,380,510,553,554,584],inside_funct:553,instal:[5,6,24,263,337],instanc:[6,7,9,12,14,16,18,19,20,21,22,45,46,132,133,148,266,267,268,291,292,295,300,301,328,329,339,361,362,371,372,550,551,555,585],instanti:[4,585,587,599],instead:[0,10,13,14,15,17,23,46,50,56,88,96,253,280,455,550,551,585,587,593,598],intarrai:113,integ:[5,18,19,20,21,22,32,89,253,314,316,326,466,587],integr:[2,10,12,21,550,569],intend:[142,210,213],intens:7,intention:[276,277,310,324,363,373,374],inter:379,interact:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,34,253,254,258],interest:[0,18,20],interfac:[4,37,136,140,152,194,208,210,214,224,253,276,277,280,282,284,285,286,287,292,310,320,323,324,330,331,332,363,370,373,374,405,414,456,506,510,554,580,581,584,585],interior:[2,21,22,134,140,149,179,326,375,379,464,554],interior_facet_domain:[134,149,549,550,551],intermedi:211,intern:[96,126,130,140,142,210,280,456,464,554],interpol:[4,148,188,189,195,208,210,213,375,566,569,584],interpolate_vertex_valu:148,interpret:[24,40,45,46,584],intersect:[139,205,206,380,390,391,477,538],intersected_cel:477,interv:[3,11,180,183,405,414,454,521,522],intervalmesh:[522,538],intial:4,intialis:[77,83,84],intparamet:113,introduc:[4,10,12],invari:8,invers:[58,64,363,373],invert:[326,363,373],invok:579,involv:[0,4,8,13,15,16,23,36,584],ipow:233,is_broadcast:58,is_compat:[140,253],is_empti:466,is_linear:[143,144],is_oper:390,is_orthogon:340,is_orthonorm:340,is_receiv:58,is_restrict:142,is_set:73,is_symmetr:282,is_view:152,issu:92,item:[46,74],iter:[8,11,13,16,17,23,74,75,177,253,269,296,302,320,326,365,431,456,512,533,534,535,536,537,541,577],iterdata:74,iteritem:74,iterkei:74,itervalu:74,its:[8,9,16,21,74,298,493,494,584,594],itself:[210,390,399,587],jacobian:[4,8,13,176,296,298,320,576,579],jacobian_form:176,jit:[23,37,42,552,559,584,585],jonathan:399,jrs:399,jump:2,just:[8,9,10,18,20,37,44,412,456,569],keep:[261,276,282,285,295,310,330,363,373,456],keep_diagon:[135,550,551],kei:[49,51,57,73,74,76,253,256,466,550,620],kept:[7,11,282,339,374,550],key_press:253,keyboard:4,keyword:8,kind:[533,534,535,536,537,541,585,593],kinemat:[8,11],known:[4,17,18,20,21,75,98,414,489,490,491,492],krylov:[16,17,269,279,287,302,323,326,334,343,348,353,364,365,370,579],krylov_solv:281,krylov_solver_method:[279,347],krylov_solver_precondition:[279,347],krylovsolv:[16,17,347,650],krylovsolver_default_paramet:347,ksp:[302,306],kwarg:[34,37,40,44,45,73,74,77,150,152,214,268,278,279,280,281,282,284,285,286,299,300,328,361,370,371,381,390,394,395,396,397,405,437,453,456,554,579,580,584,587],l_r_dt:144,l_r_t:144,l_star:144,la_index:[142,204],la_solv:347,label:[18,19,20,21,89,140,212,253,512,554,584],lagrang:[0,2,4,7,8,11,12,13,15,18,23,233,568,573,593,596],lagrangian:375,lambda:[7,8,326],lame:8,lanczo:326,lapack:326,larg:[253,569,629],larger:455,largest:[7,326],last:[0,3,4,5,9,18,19,20,644],last_stag:[175,644],later:[2,4,13,14,15,17,21,23,77,82,213,561],latest:390,latex:85,latter:21,layer:[548,578],layout:[152,279,282,285,299,330,363,373],lb_func:176,lead:[2,19,149],leaf:[150,380],leaf_nod:[0,153,154,155,158,165,210,213,444,445,446,447,448],least:[133,545],left:[3,8,14,16,17,21,22,23,45,46,143,399,504,523,524],legendr:233,legendre_d2dx:233,legendre_ddx:233,legendre_ev:233,lego:389,length:[11,209,399,405,410,415,496,509,604],less:[0,13,17,21,23,150,544,545],let:[1,7,10,21],letter:437,level:[0,22,37,77,79,90,95,97,119,123,230,253],lhs:[11,21,143],lib:[363,373,374],librari:[7,48,142,210],lie:16,like:[13,23,93,140,208,453,496,533,534,535,536,537,541,554,584],limit:[52,284],line:[4,5,6,8,9,74,77,80,114,117,320,454],linear:[0,1,2,4,7,8,10,11,12,13,14,15,16,18,19,20,21,23,132,134,139,140,143,144,148,149,166,167,177,179,195,201,211,263,269,273,278,279,280,281,282,285,287,289,291,292,293,295,296,302,306,323,332,337,339,343,344,345,348,349,350,351,352,353,354,355,356,357,358,365,370,374,399,544,549,550,557,562,574,575,577,579,587,593,650],linear_algebra_backend:[13,16,292,347],linear_form:166,linear_solv:[0,4,296,579],linear_solver_method:347,linearalgebraobject:[280,285,347],linearis:4,linearoper:[280,347],linearsolv:[281,347],linearsolver_default_paramet:347,linearvariationalproblem:[0,132,202,544,546,547,578,650],linearvariationalsolv:[202,578,579,650],linearvariationalsolver_default_paramet:202,linf:571,link:[363,373,456],linux:32,list:[8,9,10,11,12,14,37,40,46,74,118,144,149,150,152,166,176,201,212,229,239,269,271,272,273,275,279,302,304,305,306,308,317,319,320,322,334,336,348,349,352,353,354,355,356,357,358,365,367,368,380,430,455,456,474,477,496,549,550,551,555,573,579,582,596],list_krylov_method:579,list_krylov_solver_method:347,list_krylov_solver_precondition:347,list_linear_algebra_backend:347,list_linear_solver_method:347,list_lu_method:579,list_lu_solver_method:347,list_precondition:579,list_solver_method:579,list_tim:[87,113,125],literatur:149,live:[0,1,13,14,15,23,286,324,339],lmbda:[4,8],load:[7,11,17,18,19,20,513,550],local:[0,58,67,140,142,152,174,175,199,213,214,277,279,282,284,285,286,299,324,330,339,374,379,380,399,405,414,431,439,441,455,456,457,463,467,468,474,475,476,477,484,488,489,490,491,492,493,494,540,554,613,614,628],local_ent:[152,489,490,491,492],local_facet:[10,584],local_graph:[439,441],local_index:467,local_nnz:330,local_rang:[58,64,67,284,285,286,299],local_s:[286,484],localassembl:202,localassembler_assembl:202,localassembler_assemble_cel:202,localassembler_assemble_exterior_facet:202,localassembler_assemble_interior_facet:202,localmeshdata:[439,440,538],localsolv:202,locat:[93,140,554],log:[11,22,93,97,113,122,123],logg:144,logic:[46,584,585],longer:[4,464],look:[0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,22,23,579],loop:[4,11,150],low:37,lower:[146,176,210,253,320,411,412,505],lower_bound:176,lowercas:93,lshape:11,lu_solv:281,lu_solver_method:[279,347],lump:[363,373],lusolv:[347,650],lusolver_default_paramet:347,machin:[0,13,14,15,21,23],made:[2,18,19,20,21],magic:[584,585],magnitud:[4,7,182,326],mai:[0,1,4,5,7,11,12,18,20,21,22,74,75,77,78,80,87,93,134,140,148,179,208,214,253,257,326,430,456,463,464,469,470,471,472,473,484,488,489,490,491,492,510,550,551,554,562,569,574,576,579,582,584,585,596,629],main:[21,612,622],maintain:17,make:[3,4,5,6,9,11,14,16,22,37,138,140,253,254,259,456,585],manag:77,mani:[9,11,533,534,535,536,537,541],manipul:[7,13,14,15,17,23],manner:17,manual:[10,11,12],map:[14,21,34,138,140,142,148,149,152,199,204,212,213,253,277,330,377,378,379,455,464,484,488,489,490,491,492,493,494,495,506,507,510,511,585,593,594,613,614,617],map_from_reference_cel:148,map_to_reference_cel:148,map_tol:510,map_toler:510,mardal:593,marini:[10,593],mark:[0,8,18,19,20,21,24,140,142,200,202,390,466,469,470,471,472,473,493,495,510,511,550,584,629],mark_cel:510,mark_facet:510,marker:[18,19,20,22,140,195,200,203,466,469,470,471,472,473,489,490,491,492,505,510,554,629],marker_valu:[489,490,491,492],marking_fract:[150,151],marking_strategi:[150,151],mass:[456,485,486],master:[493,494,495],masters_slav:493,mat:[276,299,310,363,373],mat_mumps_icntl_14:[1,314],match:[29,140,210,456,511,512,554,561],materi:[8,21,584],math:[3,28,30,149,584],mathemat:[0,12,13,15,16,23],mathworld:456,matplotlib:[478,480],matric:[11,140,263,280,282,284,299,326,584],matrix:[4,7,16,17,23,40,140,149,152,187,208,261,263,265,269,273,276,279,280,281,282,283,287,292,299,302,306,309,310,326,330,334,337,339,347,363,365,369,370,373,374,550,551,579,584,650],max:[58,68,262,286,380,383,468,504],max_cell_dimens:152,max_dim:466,max_dimens:[150,151],max_iter:[150,151],max_valu:73,maxcount:52,maxim:456,maximum:[32,52,152,262,286,326,454,456,466,478,481,484,587],maximum_iter:326,mayavi:11,mayb:579,mckee:[377,378],mean:[0,12,21,23,50,56,88,488,489,490,491,492],measur:[0,2,21,126,399,410,509],mechan:[182,291],media:[8,10],member:[4,40,45,46,363,373,456],membership:[49,50,51,52,53,55,56,57,58,59,60,61,73,74,75,76,77,85,86,87,88,89,132,133,134,135,136,137,138,139,140,142,143,144,146,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,174,175,176,177,179,180,182,183,184,187,188,189,194,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,228,229,230,239,242,243,244,245,246,247,248,249,250,251,252,253,257,261,262,263,265,266,268,269,273,276,277,278,279,280,281,282,283,284,285,286,287,289,291,292,293,295,296,298,299,300,302,306,309,310,311,312,314,317,320,323,324,325,326,328,330,331,332,333,334,337,339,340,361,363,364,365,369,370,371,373,374,375,377,379,380,381,382,383,384,386,388,389,390,391,392,394,395,396,397,398,399,401,402,403,404,405,409,410,411,412,413,414,415,417,418,419,420,421,422,423,424,426,427,428,429,430,431,433,434,435,436,437,438,439,442,443,444,445,446,447,448,449,450,453,454,455,456,457,463,464,465,466,467,468,470,471,472,473,474,475,477,478,483,484,485,489,490,491,492,493,496,497,498,500,503,504,505,506,508,509,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,529,530,531,532,533,534,535,536,537,541,575,577],memori:[1,4,28,32,120],memory_usag:31,mere:455,mesh0:[375,376,613,614],mesh1:[375,376,613,614],mesh2d:5,mesh3d:6,mesh:[0,2,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,23,24,34,138,139,140,142,146,149,150,152,179,188,189,195,205,206,208,209,210,213,214,228,238,244,253,257,260,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,539,540,541,550,553,554,568,569,571,573,579,584,593,594,596,597,598,599,600,602,603,604,605,606,608,609,612,613,614,616,617,618,619,620,621,623,624,625,629,650],mesh_a:437,mesh_b:437,mesh_copi:456,mesh_displac:465,mesh_fil:23,mesh_funct:[195,464,488,489,490,491,492],mesh_id:468,mesh_identifi:584,mesh_shared_ptr:149,mesh_tim:[188,189],mesh_valu:244,meshcolor:538,meshcoloring_cell_color:538,meshcoloring_color:538,meshcoloring_color_cel:538,meshcoloring_compute_color:538,meshcoloring_type_to_dim:538,meshconnect:538,meshcoordin:[233,607],meshdata:[456,538],meshdisplac:[375,376,456,538],meshdomain:[456,470,471,472,473,538],mesheditor:[414,538],meshent:[399,415,424,430,527,535,538],meshentityiter:[512,535],meshentityiteratorbas:[533,534,536,537,541],meshfunct:[5,18,19,20,21,22,23,34,134,140,144,149,179,200,203,212,244,400,401,402,403,404,416,417,418,419,420,425,426,427,428,429,432,433,434,435,436,457,458,470,471,472,473,484,488,489,490,491,492,493,495,505,510,512,528,529,530,531,532,538,540,550,554,584,593,613,614,629,650],meshfunctionbool:[401,417,426,433,529,538],meshfunctiondoubl:[402,418,427,434,530,538],meshfunctionint:[403,419,428,435,531,538],meshfunctionsizet:[404,420,429,436,532,538],meshgeometri:[456,538],meshpartit:538,meshpartitioning_build_distributed_mesh:538,meshpointintersect:[538,539],meshqual:538,meshquality_radius_ratio:538,meshquality_radius_ratio_histogram_data:538,meshquality_radius_ratio_matplotlib_histogram:538,meshquality_radius_ratio_min_max:538,meshrenumb:538,meshtopolog:[456,538],meshtransform:538,meshtransformation_rot:538,meshtransformation_transl:538,meshvaluecollecion:[470,471,472,473],meshvaluecollect:[244,470,471,472,473,489,490,491,492,510,511,538],meshvaluecollectionbool:538,meshvaluecollectiondoubl:538,meshvaluecollectionint:538,meshvaluecollectionsizet:538,mesn:510,mess:[10,149,175],messag:[11,22,52,91,92,93,96,115,116,119,194,312,313,464,580,581],meta:585,method:[2,4,7,8,10,13,16,19,21,140,176,208,212,243,253,269,271,273,275,279,282,287,289,302,304,306,308,320,322,323,334,339,343,345,348,352,353,356,357,358,365,367,374,375,554,579,584,585],middl:22,midpoint:[23,140,468,510,554],might:[140,569],min:[58,69,262,286,383,504],min_valu:73,mini:24,minim:[0,8],minimis:8,minimum:[8,16,262,286,454,456,478,481],minu:22,minut:7,miscellan:399,miss:[489,490,491,492],misspel:8,mix:[2,12,17,18,19,20,21,24,148,212,231,568,587,589,591,594,596],mixedel:562,mixedfunctionspac:[4,10,17,18,19,20,199,204,587,598,600],mixtur:4,mode:[8,34,149,253,254,259,260],model:[1,4,8,450],modifi:[12,14,15,23],modul:[0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,18,19,20,22,23,37,569,612],module_nam:37,modulu:8,momentum:11,monitor:120,monitor_converg:74,monitor_memory_usag:113,mor:593,more:[4,7,8,10,12,14,15,17,21,23,34,40,96,134,139,179,205,206,380,414,477,533,534,535,536,537,541,551,573,584],moreov:17,morlei:593,most:[7,8,14,15,16,117,149,269,332,650],mostli:[211,284],move:[3,11,21,375,376,456],mpi:[4,77,79,81,82,83,103,113,456,474],mpi_:[58,63],mpi_barri:113,mpi_comm_world:59,mpi_fin:77,mpi_global_offset:113,mpi_index_own:113,mpi_initi:77,mpi_is_broadcast:113,mpi_is_receiv:113,mpi_local_rang:113,mpi_max:113,mpi_min:113,mpi_num_process:113,mpi_process_numb:113,mpi_sum:[58,63,113],mpicommun:113,mpiinfo:113,mpinonblock:113,msg:[73,90],mtw:593,mu0:4,mu_:4,mu_mid:4,much:[14,15,22,23],mult:[261,280,292,309,369],multi:149,multigrid:[11,283],multiphys:511,multipl:[24,262,282,286,551,596],multipli:[2,10,12],multistag:[612,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,647,648],multistageschem:[202,630,631,632,633,634,635,636,637,638,639,640,641,642,643,645,647,648],multistagesolv:[630,647,648],mump:1,must:[0,1,2,3,4,5,6,9,11,13,15,16,17,18,19,20,21,22,23,24,50,56,88,143,150,152,182,208,212,231,282,286,312,324,326,339,363,373,430,456,496,550,561,587],mutabl:456,my_paramet:74,myexpression0:584,myexpression1:584,myfunc:584,myplot:34,myvectorvalu:587,n1curl:593,n2curl:593,name:[7,8,10,34,37,40,44,45,46,74,89,92,93,149,175,188,189,192,193,210,238,239,240,241,242,243,244,253,302,334,456,464,488,489,490,491,492,511,535,582,584,587,593,613,614],namespac:[37,238,584],natur:[10,12],navier:[17,24],ncell:584,ncompact:[5,6],ndofs_per_cel:584,near_nullspac:317,necessari:[12,77,78,140,146,149],necessarili:551,nedelec:593,need:[0,2,4,5,6,7,8,9,10,12,13,14,15,16,18,19,20,21,23,37,45,50,52,56,88,117,175,208,213,282,292,323,339,374,431,466,484,488,489,490,491,492,550,584,585,587],nef_polyhedron:386,neg:[10,187],neighbor:456,neighbour:[140,152],neo:8,nest:[74,582],nested_paramet:74,neumann:[0,8,13,15,16,21,23,24],new_boundari:[375,376],newton:[4,8,13,176,177,187,296,298,320,577],newton_solv:13,newtonsolv:[4,347],newtonsolver_default_paramet:347,next:[0,1,2,3,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,253,512,533,534,535,536,537,541],nicolson:4,nnz:330,nodal:223,node:[13,150],non:[4,8,10,16,17,18,19,20,50,56,88,140,205,210,262,279,282,284,291,295,326,330,339,363,373,374],non_hermitian:326,non_matching_ev:210,none:[38,40,74,152,253,326,341,549,550,551,559,561,562,569,571,573,574,576,582,584,586,593,594,595,597,598,599,609,629,631,633,636,637,638,639,641],nonlinear:[4,8,24,133,140,143,176,177,195,201,296,298,320,545,576,577,579],nonlinear_funct:[296,320],nonlinear_poisson:13,nonlinear_problem:320,nonlinearproblem:[4,296,320,347],nonlinearvariationalproblem:[133,202,545,546,547,578,650],nonlinearvariationalsolv:[202,578,579,650],nonlinearvariationalsolver_default_paramet:202,nonloc:152,nonzero:284,norm:[4,16,18,20,253,262,265,282,286,496,566,569],norm_typ:[569,571],normal:[0,2,4,10,12,13,15,16,21,23,140,208,347,379,399,405,424,430,456,478,481,482,584,605],noslip:[1,11,17,18,19,20,22],not_working_in_parallel:113,notat:[144,149,593,598],note:[0,4,5,6,7,8,11,12,13,14,15,16,21,23,32,46,50,56,74,77,80,88,93,96,140,149,150,208,326,363,373,380,455,456,464,466,484,554,584],noth:11,notic:14,now:[0,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,550],null_spac:16,null_vec:16,nullspac:[152,340],num_assigning_funct:212,num_cel:[456,467,584],num_coeffici:149,num_connect:463,num_edg:456,num_ent:[405,456,463,468],num_entity_dof:152,num_fac:456,num_facet:456,num_facet_dof:152,num_global_cel:455,num_global_ent:468,num_global_vertic:455,num_iter:456,num_local_nonzero:284,num_mark:466,num_nonzero:284,num_nonzeros_diagon:284,num_nonzeros_off_diagon:284,num_part:[138,139,206],num_process:[58,67],num_receiving_funct:212,num_row:[282,285,286,331],num_sub_el:148,num_sub_spac:594,num_vertic:[405,456,467],num_vertices_per_cel:455,number:[0,3,4,8,9,10,12,13,14,15,18,19,20,22,23,52,58,70,71,73,75,92,138,139,140,148,149,152,177,199,204,205,206,212,223,231,236,237,262,269,284,285,296,299,302,320,326,330,365,383,405,409,411,412,414,421,454,455,456,463,466,467,468,469,470,471,472,473,474,478,479,484,485,486,488,489,490,491,492,504,510,519,520,521,522,523,524,550,554,569,577,587,594,598,613,614],number_of_edg:9,number_of_fac:9,number_of_vertic:9,number_of_vertices_on_face_1:9,number_of_vertices_on_face_2:9,number_of_vertices_on_face_3:9,number_of_vertices_on_face_q:9,numer:[21,363,373,374,579],numeric_limit:380,numerical_limit:468,numpi:[37,50,56,88,140,149,152,188,189,199,207,208,210,213,282,286,380,399,456,464,467,470,471,472,473,510,554,582,594],nverbos:[5,6],object:[0,4,5,6,8,9,10,16,34,40,50,52,55,56,58,59,60,61,73,74,75,77,86,87,88,89,114,132,133,135,137,139,140,143,144,146,148,153,154,155,156,157,158,159,160,161,162,163,164,165,169,174,182,183,184,188,189,194,195,205,206,207,208,210,211,212,213,215,216,217,218,219,220,221,222,224,239,242,243,245,246,247,248,249,250,251,252,253,256,261,262,265,276,277,279,283,291,298,311,312,314,317,324,325,333,340,370,375,377,379,380,389,392,400,405,414,416,425,432,437,438,439,442,443,444,445,446,447,448,449,450,453,456,457,463,465,466,467,468,469,470,471,472,473,474,475,477,478,483,484,485,488,493,496,498,500,501,502,505,506,510,512,515,528,533,534,535,536,537,541,546,547,554,557,558,561,584,598,644],obstacl:21,obtain:[0,10,11,13,146],occur:[46,596],off:[0,9,11,13,14,15,23,122,214,284,500,501,502,569],off_diagonal_pattern:284,off_fil:[500,501,502],off_process_own:[152,332],offset:[58,63,199,204],ofilenam:618,often:[0,7,11,13,14,15,23],old:[188,189,213,377,378,506,507,594],oldest:11,omit:[3,9,13],on_boundari:[2,8,11,13,14,17,21,22,45,510,553],onc:[4,286,374],one:[0,1,3,4,5,6,7,8,9,10,11,22,23,37,40,50,56,88,114,139,140,180,183,200,203,205,206,212,223,230,231,253,282,326,330,380,431,456,457,459,460,461,478,481,482,493,494,550,551,554,562,569,593],ones:[20,22],onli:[3,4,10,11,12,14,16,17,22,23,32,34,52,140,142,194,199,204,208,210,253,280,282,286,292,323,326,339,374,390,456,464,469,470,471,472,473,484,488,489,490,491,492,493,494,554,580,581,584,593,629],onlin:399,onto:[567,572,573],open:[11,414,453,467],openmp:104,openmpassembl:202,oper:[0,1,2,4,7,10,12,13,14,15,16,17,18,19,20,21,23,74,152,207,211,213,262,269,273,276,279,280,281,282,283,286,292,295,302,306,310,337,340,363,365,373,384,386,465,496,561,562],opposit:[2,3,5,6,382,399,503,561],optim:[2,4,8,23,55,579],option:[2,3,4,5,6,8,18,20,22,23,74,93,114,118,128,129,140,149,152,188,189,195,208,212,214,239,253,284,302,314,315,316,379,430,469,488,517,523,524,540,549,551,554,569,571,573,574,576,579,582,584,587,594,597,598,629],option_str:74,order:[0,2,4,7,8,10,12,13,15,16,17,18,20,21,23,24,46,136,146,148,149,175,182,224,225,226,227,377,378,379,399,405,414,430,456,467,506,507,551,561,569,631,633,636,637,638,639,641,644],org:[257,363,373,374],organ:650,orient:[0,132,133,144,150,379,399,405,456,464,544,545,579],origin:[7,37,146,379,431,496,540,584,607,644],orthogon:[0,16,146,340],orthonorm:340,oscil:11,ostream:239,other:[4,5,6,7,8,10,11,13,21,22,23,50,56,74,75,88,140,149,150,380,415,456,493,495,555,561,569,570,579,593],other_paramet:74,otherwis:[8,17,18,19,20,32,73,117,253,282,339,374,464,466,584],our:[0,1,3,5,6,9,10,12,13,14,15,16,18,19,20,22,23],out:[87,149,363,373,413,456,551],outfil:239,outfilenam:625,outflow:[11,17,18,19,20,22],outlet:1,outlin:550,output:[4,5,6,11,13,14,15,23,124,257,468,496],outsid:[13,14,15,23],outstream:239,outward:[0,2,4,10,12,13,15,23,379,456],over:[3,10,11,18,19,20,21,22,23,74,87,134,137,144,149,179,212,253,379,383,431,456,464,474,484,510,512,517,519,520,523,524,533,534,535,536,537,540,541,550,557,558,593,600,613,614,629],overlap:390,overload:[10,49,50,51,56,57,58,67,73,75,76,77,79,80,85,88,89,90,132,133,138,139,140,142,143,148,149,150,166,167,175,176,177,182,187,188,189,194,195,197,198,201,205,206,207,208,210,211,212,213,214,223,229,230,231,239,243,244,253,260,261,262,263,269,273,276,277,278,279,281,282,285,286,287,289,291,292,293,295,296,302,306,310,314,316,320,324,326,330,331,332,334,337,339,363,365,370,373,374,375,376,377,378,379,380,392,393,399,405,406,414,415,424,430,437,439,441,455,456,457,458,463,464,465,466,467,468,470,471,472,473,474,475,476,484,485,486,489,490,491,492,496,498,499,500,501,502,505,510,511,512,527,533,534,535,536,537,540,541,554,575,577,584,586,588,589,590,591],overridden:550,overrul:[582,587],overwrit:[21,22,489,490,491,492],own:[34,58,64,152,284,286,317,323,334,493,494],owner:[493,494],ownership:[50,56,88,152,253,277,285,286,324,339,374],ownership_rang:[152,332],owns_index:286,p2v:596,p_in:11,packag:13,pair:[11,17,20,140,177,211,296,320,330,380,456,463,484,489,490,491,492,577],paper:399,parabol:4,parallel:[4,11,58,65,66,121,140,142,152,199,214,257,282,299,363,373,455,469,470,471,472,473,506],paramet:[0,2,11,13,16,27,40,44,49,51,53,54,57,73,76,77,80,89,113,114,140,141,144,145,150,151,167,168,177,178,180,181,183,188,189,190,191,253,255,260,263,264,269,270,273,274,281,287,288,289,290,292,293,294,296,297,302,303,306,307,314,317,318,320,321,326,327,334,335,337,338,365,366,384,385,386,387,550,573,574,575,576,577,579,584],parameter_typ:281,parametervalu:[49,51,57,76,113],paramt:1,paraview:11,parent:[153,154,155,158,165,210,213,444,445,446,447,448,511,613,614],parent_edge_indic:616,parent_vertex_indic:[464,511,613,614],parmeti:105,pars:[74,77,80,455],part:[2,4,7,8,9,10,12,13,14,15,18,19,20,21,22,23,138,139,205,206,286,326,550],partial:[0,1,2,7,10,11,12,13,14,15,16,23,140,554],particular:[0,1,4,7,10,12,13,14,15,23,140,149,269,291,302,317,320,326,334,365,375,554,600],particularli:465,partit:[140,152,284,430,455,475,476],partli:593,pass:[4,8,37,50,56,88,180,183,212,341,550,574,576,579,584,587,646],path:[23,239,240],pattern:[4,184,185,186,284,332,463,550],pbc:14,pde:[552,648],pdf:[253,399],penalti:2,per:[8,199,200,203,204],perform:[4,10,11,12,18,19,20,212,253,456],period:[24,142,493,495,510],periodicboundari:14,periodicboundarycomput:538,periodicboundarycomputation_compute_periodic_pair:538,periodicboundarycomputation_masters_slav:538,permit:[4,314],perserv:551,petsc:[1,7,16,17,37,77,80,84,85,106,117,302,306,310,312,313,314,315,316,317,320,324,326],petsc_error:312,petsc_exp:37,petscbasematrix:[309,310,347],petscfactori:347,petscfactory_inst:347,petsckrylovsolv:[299,317,347],petsckrylovsolver_default_paramet:347,petsckrylovsolver_method:347,petsckrylovsolver_precondition:347,petsclinearoper:347,petsclusolv:347,petsclusolver_default_paramet:347,petsclusolver_method:347,petscmatrix:[7,347,550],petscmatrixdelet:347,petscobject:[299,302,306,317,320,323,324,326,347],petscobject_petsc_error:347,petscopt:[1,347],petscoptions_clear:347,petscoptions_set:347,petscprecondition:[302,323,347],petscpreconditioner_default_paramet:347,petscpreconditioner_precondition:347,petscsnessolv:347,petscsnessolver_default_paramet:347,petscsnessolver_method:347,petscuserprecondition:347,petscvec:37,petscvector:[37,347],petscvectordelet:347,pfile:11,pfile_pvd:[17,18,19,20],phase:4,phrase:10,physic:0,pick:413,piec:[10,326],piecewis:[0,1,7,8,11,13,15,17,18,19,20,23,569],pixel:253,place:[8,10,363,373,455,464,562],plai:[6,17],plot:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,28,253,254,256,258,259,478,480],plot_mesh:[150,151],plotfil:34,plotter:[253,256],png:253,point:[0,1,3,6,8,9,10,13,14,15,22,23,58,62,136,148,182,208,210,214,223,224,225,226,227,253,257,298,379,380,399,405,410,411,412,414,422,423,437,453,454,455,456,467,468,474,477,485,486,487,509,510,514,515,516,527,533,534,535,536,537,538,539,541,553],pointer:[50,56,88,138,139,140,149,152,166,167,176,177,179,205,206,269,276,277,292,302,310,324,466,505,575,577],pointintegr:647,pointintegralsolv:[202,649],pointintegralsolver_default_paramet:202,pointload:[140,554],pointsourc:202,pointwis:[140,554],poisson:[1,2,7,8,17,24],polici:[58,65,66],polygon:[9,390,498,499,500,538],polygonalmeshgener:[9,538],polygonalmeshgenerator_gener:538,polyhedr:[9,411,412,500],polyhedra:500,polyhedralmeshgener:[9,538],polyhedralmeshgenerator_gener:538,polyhedralmeshgenerator_generate_surface_mesh:538,polylin:453,polynomi:[0,1,4,7,8,10,12,13,15,23,223,224,225,226,227,563,569,598],pool:[506,507],popul:21,porou:10,portion:[8,58,67,455],pos:[533,534,535,536,537,541],pos_gen_non_hermitian:326,pose:12,posit:[17,18,19,20,55,326,489,490,491,492,533,534,535,536,537,541],possibilti:[140,554],possibl:[4,8,17,22,34,37,50,56,87,88,136,139,140,146,149,205,206,210,326,453,456,505,550,554,571,579],post:573,potenti:[4,8,550],pow:[0,10,12,15,16,21,23],power:[234,326,584],pprox:453,practic:23,pre:195,prec:11,preced:390,precis:[0,13,14,15,21,23,126],precompil:550,precomput:456,precompute_basis_const:8,precompute_ip_const:8,precondition:[11,17,152,269,272,279,281,283,287,302,305,317,319,334,336,344,349,354,364,365,368,370,579],preconditioner_typ:573,precondtion:[317,334],predefin:21,prefer:93,prefix:[253,302,314],preprocess:552,prescrib:[1,2,8,10,18,19,20,21,550],presenc:4,present:[4,150,188,189,292],preserv:[187,549,551],press:[253,254,259],pressur:[11,17,18,19,20,230],pretti:[50,56,74,85,88,89,261,262,292,333,463,468,474,484,496],prevent:1,previou:[4,8,21],previous:[0,13,14,15,23],primal:[0,132,133,144,146,150,544,545,546,547],primari:284,primary_dim:[284,332],primit:[93,395,396,397],print:[3,5,6,7,9,11,18,20,21,22,37,50,52,56,74,85,87,88,89,93,96,114,115,116,119,131,213,261,262,292,312,313,333,463,464,468,474,484,496,535,571],print_dofmap:213,printf:93,prior:214,priori:414,prism:[3,383],probabl:7,problem:[17,36,132,133,140,144,146,150,166,167,174,176,177,182,195,201,257,296,298,320,326,544,545,546,547,574,575,576,577,579,650],problem_typ:326,proccess:[58,71],proce:[12,23],procedur:[0,13,24],process:[4,11,14,15,23,32,58,64,67,70,120,127,140,152,214,277,282,284,286,324,339,374,379,456,474,475,476,478,481,484,488,489,490,491,492,493,494,533,534,535,536,537,541,573,629],process_numb:[4,58],processor:[199,455],produc:[3,22,379],product:[10,11,12,17,18,19,20,182,214,261,262,280,282,286,292,299,309,333,363,369,373,415,496],program:[4,11,22,25,120],progress:113,proivd:506,project:[11,21,566],promis:261,propag:40,propel:389,properti:[0,21,584],propos:11,proven:330,provid:[0,4,12,13,15,16,18,19,20,21,23,36,39,41,44,47,50,55,56,58,75,85,88,134,135,152,179,182,184,187,214,276,277,281,283,291,293,295,296,310,314,324,326,339,363,373,374,375,405,413,414,456,478,511,533,534,535,536,537,541,548,549,550,552,557,558,561,562,567,570,572,578,597,598,627,628],psi:8,ptr:[132,133,291,295,339],punctuat:93,pure:[5,6,9,16,24,550],purpos:[21,50,56,88],put:[14,456],pvd:[1,2,4,8,11,13,14,15,17,18,19,20,22,23,239],pydolfin:[39,586,588,589,590,591],python:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,27,36,37,48,50,56,88,149,208,210,334,465,548,552,578,584,585,592,627,649],quadrant:11,quadrat:[2,8,11,17,20],quadratur:[4,593],qualiti:[399,478,479,480],quantifi:478,quantiti:[0,8,21,331],quasi:187,queri:584,quicker:650,r_dt:144,r_t:144,r_vec:326,radii:[3,6,456,478,481],radiu:[3,5,6,140,399,409,410,411,412,478,481,482,508,509,554],radius_ratio:[399,405,478],radius_ratio_histogram_data:478,radius_ratio_matplotlib_histogram:478,radius_ratio_min_max:478,rand:233,random:[4,236,237],rang:[16,21,52,58,67,73,74,75,152,253,277,284,285,286,299,324,339,374,478,481,482,512],range_max:253,range_min:253,range_str:73,rank:[40,139,148,149,208,214,284,285,286,465,550,584],rather:[17,18,19,20],ratio:[8,399,478,479,481,482],raviart:593,raw:239,reach:[4,512,533,534,535,536,537,541],read:[0,1,2,4,10,12,13,14,15,16,17,18,19,20,21,22,23,93,188,189,239,242,244,488,489,490,491,492],readabl:11,readi:[1,7,9,10,17,22],readili:573,readm:93,real:[7,12,326,331,593],realiz:557,realli:[253,254,259],reason:93,rebuild:456,receiv:[58,66,212,231],receive_mesh_data:455,receiving_func:[212,231],receiving_spac:212,recent:[8,269],reciev:[212,231],recogn:464,recommend:7,recomput:253,rectangl:[3,5,21,390,504,538],rectanglemesh:[3,524,538],rectangular:[3,383],recurs:74,redefin:12,redistribiut:540,redistribut:[455,475,540,629],reduc:4,reduct:[58,63],refer:[0,4,8,10,11,50,56,88,138,139,148,150,151,206,282,339,363,373,374],refin:[0,195,196,405,469,470,471,472,473,538,579,626],refine_cel:405,refined_mesh:540,reflect:[140,149],regener:[2,11],region:[18,19,20,21,320],regist:44,regular:384,reimplement:[208,552],rel:[0,1,7,13,14,15,16,23,140,144,213,296,379,380,399,405,430,456,488,489,490,491,492,554],relat:[456,463,484,535],relative_residu:296,relative_toler:[4,13,74],releas:92,relev:[10,629],reli:[7,136,176,533,534,535,536,537,541,552],remain:[4,10,11,12,17,140],remaind:[8,21],remedi:[140,554],rememb:11,remov:[11,16,22,74,92,464],renam:[74,89,552],render:[34,253],renumb:483,renumber_by_color:[456,483],reorder:[142,506,507],reordered_argu:561,repartit:[455,475],repeat:[253,286,374],rephras:4,replac:[10,286],repons:223,report:121,repres:[0,4,5,6,9,13,14,15,18,19,20,21,23,86,136,139,143,166,176,205,206,207,208,209,210,211,213,228,230,239,331,431,464,468,477,496,505,574,576,582,584,587,593,595,596,597,598,604,606],represent:[4,37,50,56,74,85,88,89,144,243,261,262,282,286,292,333,450,451,452,456,463,465,468,474,484,496,586,587],request:[61,298],requir:[1,2,4,7,8,10,12,16,77,79,152,176,283,326,547,557,582],required_thread_level:[77,79],rerturn:[317,319],rescal:[11,253],research:[263,337],reserv:8,reset:[73,277,324,550],reset_spars:[4,135,550,551],resid:[212,231,587],residu:[0,4,13,16,132,133,144,146,176,269,296,347,544,545,579],residual_form:176,residual_represent:144,resiz:[3,9,277,282,286,299,324,331,339,363,373,374],resolut:[5,6,9,392,393,456,517],respect:[0,1,2,3,4,8,16,20,21,340,399,405,411,412,431,535,562],respet:1,respons:[77,83,84,456],responsible_mpi:77,responsible_petsc:77,rest:21,restrict:[2,142,152,214,538,593,597,598],result:[4,7,10,11,12,16,17,18,20,174,390,477,562,585],retain:464,retreiv:314,retriev:[74,188,189],reus:[188,189,557],revers:[377,378],rhs:[11,21,143,187,211,587,644],rhs_form:[631,633,636,637,638,639,641,644],rhs_int:143,richard:399,right:[2,3,7,8,10,11,12,14,16,17,21,22,23,45,46,140,143,149,182,323,363,373,379,399,504,523,524,550],rigid:152,rk4:646,rksolver:[202,646,649],rmax:456,rmin:456,robust:21,robustli:[488,489,490,491,492],rogn:144,root:11,root_nod:[0,153,154,155,158,165,210,213,444,445,446,447,448],rotat:[3,9,11,152,456,485,486,496],roughli:2,round:[0,13,14,15,23,569],rout:22,routin:37,row:[85,140,208,265,276,277,282,283,284,285,286,295,299,310,324,330,331,339,363,373,374],run:[0,4,5,6,9,12,13,15,16,22,23,24,142,214,292,579],runtim:[48,585],safe:[50,56,88],safeguard:[533,534,535,536,537,541],safisfi:12,sai:[0,9,13,14,15,23],same:[8,9,10,14,17,21,22,46,146,188,189,212,231,253,380,399,456,550,562,563,569,587,596],sampl:[188,189,550],satisfi:[0,1,8,10,12,14,15,17,21,23,132,133,544,545],save:[1,2,4,8,11,13,14,15,17,18,19,20,22,23,253,457,459,460],save_data:[150,151],save_off:386,scalar:[4,8,11,19,40,45,46,182,197,207,208,211,229,253,347,496,550,582,584,598],scalarbar:[34,253],scale:[8,34,253],scan:[58,63,584],scene:[22,584],scheme:[175,469,470,471,472,473,484,631,633,636,637,638,639,641,647,648],schur:[261,326],schur_approxim:261,scipi:282,scope:87,scotch:[107,538],scotch_compute_gp:538,screen:[2,4,8,34],script:48,search:320,second:[0,2,3,4,5,6,9,10,12,13,15,16,18,19,20,22,23,126,207,224,225,380,382,467,488,489,490,491,492,503,587],second_corn:503,see:[2,8,10,253,399,551,569,571,573,584,585,593,597,598],seed:[4,233],seem:126,seen:12,select:[277,286,324,374],self:[2,4,10,13,14,21,22,74,584],semi:[421,633],semicolon:13,semidefinit:326,semilinear:13,send:[0,6,9],sent:[77,80,585],separ:[4,10,12,17,18,19,20,21,229,484],sequenc:4,seri:[188,189,192,193],serial:629,series_nam:[188,192,193],set:[0,2,3,4,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,27,34,37,55,58,62,73,74,85,123,124,138,140,149,152,176,179,223,243,253,254,259,261,262,276,281,282,283,285,286,295,302,306,310,314,316,317,330,334,339,363,373,374,379,384,456,463,466,468,469,470,471,472,473,474,484,489,490,491,492,510,535,550,554,584,629],set_al:[21,22,470,471,472,473,629],set_block:[261,262],set_bound:176,set_cell_domain:149,set_child:[153,154,155,156,157,158,159,160,161,162,163,164,165,215,216,217,218,219,220,221,222,245,246,247,248,249,250,251,252,442,443,444,445,446,447,448,449],set_coeffici:149,set_coordin:283,set_current_part:138,set_deflation_spac:326,set_exterior_facet_domain:149,set_fieldsplit:317,set_global_index:484,set_global_s:463,set_interior_facet_domain:149,set_kei:253,set_loc:286,set_log_act:113,set_log_level:[22,113],set_mark:466,set_mesh:149,set_min_max:253,set_nullspac:[16,281,283],set_oper:[17,281,302,306],set_options_prefix:302,set_output_stream:113,set_par:[153,154,155,156,157,158,159,160,161,162,163,164,165,215,216,217,218,219,220,221,222,245,246,247,248,249,250,251,252,442,443,444,445,446,447,448,449],set_paramet:334,set_rang:[73,74],set_subdomain:[5,390],set_valu:[140,470,471,472,473,489,490,491,492],set_viewangl:253,set_x:152,setrow:282,setup:323,sever:[0,212,231,253],shall:[0,1,12,13,14,15,16,17,18,19,20,23],shallow:[18,20,210],shape:[11,22,148,207,208,465,584,597],share:[2,50,56,88,132,133,138,139,140,148,149,152,166,167,176,177,205,206,210,213,291,292,295,339,456,466,484,493,494,505,575,577,587],shared_dof:152,shared_ent:484,shared_inst:[291,292,295,339],shared_ptr:[23,37,177,212,260,302,470,471,472,473,489,490,491,492,577,584],shewchuk:399,shift:[253,326],should:[4,5,6,10,11,13,14,15,17,18,19,20,23,58,65,66,93,96,114,117,126,130,140,149,179,195,199,204,244,253,279,280,314,379,380,456,466,489,490,491,492,510,540,550,554,569,584,629],show:[5,7,12,37,253,535],shown:[7,253],side:[2,8,9,10,11,12,16,17,21,140,143,182,323,363,373,411,412,552],sigma:10,sign:[17,18,19,20,453],signal:11,signatur:148,significantli:584,similar:512,similarli:456,simpl:[0,6,12,13,14,15,16,23,24,50,56,75,88,148,208,276,277,310,324,330,363,373,374,467,567,569,570,572,584,627],simplest:[34,140,550,554],simpli:[0,13,14,15,23,34],simplic:21,simplici:467,simplifi:74,simul:0,simultan:[17,18,19,20],sin:[0,2,8,10,11,12,13,14,15,16,17,18,19,20,568,573,584],sinc:[0,4,8,9,10,11,12,13,15,16,18,19,20,22,23,117,140,380,533,534,535,536,537,541,552,569],singl:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,166,176,201,212,231,511,525,526,549,550,562,582,584],singleton:[77,300,301,328,329,361,362,371,372],singular:[24,281,340],size:[2,3,4,9,11,19,50,55,56,58,67,88,208,212,214,223,231,261,262,265,277,280,282,285,286,292,299,309,324,330,339,363,369,373,374,377,378,410,456,463,470,471,472,473,474,484,489,490,491,492,509,602],size_glob:[456,463,484],size_t:[5,18,19,20,21,22,23,140,149,195,213,456,464,468,469,488,489,490,491,492,510,550],size_t_:89,slave:[493,494,495],slepc:[7,108,326],slepceigensolv:[7,347],slepceigensolver_default_paramet:347,slice:[411,412],slip:[11,17,18,19,20,22],slower:584,slowest:[140,554],small:[0,13,14,15,23,326,569,578],smallest:326,smooth:[283,456],smooth_boundari:456,smoother:465,snap:[456,510],snap_boundari:456,sne:320,snippet:38,sole:21,solid:[6,382,384,386,390,392,395,409,411,412,421,497,503,508,514],solut:[0,1,2,4,8,10,12,13,14,15,16,17,18,19,20,21,23,132,133,140,144,146,150,166,176,187,263,273,292,306,326,337,544,545,554,579,631,633,636,637,638,639,641,644],solv:[0,1,2,4,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,85,150,167,174,177,194,201,263,269,273,278,281,287,289,293,296,302,306,320,323,326,337,350,363,365,370,373,544,545,566,573,574,575,576,577,647,648,650],solvabl:16,solve_in_plac:[363,373],solve_prim:150,solve_transpos:[273,278,281,289,306],solver:[0,1,2,4,8,10,11,12,13,14,15,16,17,18,19,20,21,23,24,167,176,177,180,183,187,269,271,273,275,278,279,280,281,287,289,293,296,298,302,304,306,308,320,322,326,334,352,356,363,364,365,367,370,373,575,577,578,579],solver_paramet:[13,579],solver_typ:573,some:[1,2,3,4,6,7,8,13,17,19,21,29,74,135,257,326,379,468,475,535,550,579,607,629,650],someth:569,sometim:[4,5,6,7,114,140,554],somewhat:585,sorri:17,sort:[7,284,330],sought:[8,12],sourc:[0,1,2,10,11,12,13,14,15,16,21,23,24,37,93,182],space:[0,1,2,4,7,8,10,11,12,13,14,15,16,17,18,19,20,21,23,74,137,138,139,140,146,148,149,152,166,176,182,195,199,204,205,206,208,210,212,213,230,231,281,283,317,340,405,464,468,496,550,554,562,563,565,567,568,569,572,573,574,576,584,587,589,591,593,594,595,596,597,598,600],space_dimens:148,span:16,sparrai:282,spars:[134,179,261,263,265,276,282,285,295,310,330,337,363,370,373,463],sparsiti:[184,185,186,284,332,550],sparsity_pattern:324,sparsitypattern:347,sparsitypatternbuild:202,sparsitypatternbuilder_build:202,sparsitypatternbuilder_build_ccfem:202,spatial:[4,8,152],special:[21,77,78,380,412,439,441,585,607],specialfacetfunct:[144,233],specialfunct:[601,602,603,604,605,606],specialis:[363,373],specif:[7,8,12,27,142,405,468,535,550,593],specifi:[0,1,3,4,5,6,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,34,134,140,149,152,176,179,223,230,239,323,326,370,413,430,456,457,459,461,463,464,467,512,540,550,554,571,574,576,579,584,597,598,629],spectral:326,spectral_shift:326,spectral_transform:326,spectrum:326,sphere:[3,6,140,390,399,453,456,509,538,554],spheremesh:[3,538],split:[2,4,10,11,12,17,18,19,20,58,67,587,594],sqr:29,squar:[0,2,3,4,10,11,12,13,14,15,16,18,21,22,23,399,405,496,523,524,569,593],squared_dist:[399,405,496],stabil:24,stabl:[10,17,20,569],stage:[175,644],stage_form:175,stage_solut:[175,644],stand:593,standard:[2,4,7,13,14,15,16,17,20,21,276,277,310,324,363,373,374,456,496,550,551,568,570,571,593],start:[6,9,17,21,22,87,120,126,149],start_vertex:621,statement:[4,551],stationari:144,std:[140,142,149,150,151,195,204,212,213,239,330,380,456,464,468,470,471,472,473,488,489,490,491,492,510,517,523,524],std_out_all_process:11,step:[0,4,7,11,12,13,15,16,17,18,21,23,36,75,180,183,552],step_interv:[180,183],stiff:[7,52,550],stl:[330,533,534,535,536,537,541],stlfactori:347,stlfactory_inst:347,stlmatrix:347,stockmey:[506,507],stoke:[22,24,230],stop:[0,87],storag:[55,85,282,484],store:[1,2,4,10,11,12,16,17,18,19,20,21,22,23,74,87,118,129,140,142,150,188,189,210,257,330,455,456,463,464,466,469,470,471,472,473,477,484,488,489,490,491,492,511,550,557],store_connect:188,str:[37,40,46,50,56,73,74,75,88,89,92,93,140,149,188,189,192,193,203,210,239,240,241,243,261,262,292,333,456,463,464,467,468,469,470,471,472,473,474,484,488,489,490,491,492,496,504,517,523,524,554,582,584,587],str_latex:85,strain:8,strategi:[4,8,11,132,133,203,544,545],stream:[115,124,239],string2typ:405,string:[0,4,5,6,12,13,15,16,23,32,40,41,45,46,47,50,52,56,73,74,76,85,88,89,92,93,94,114,140,148,150,151,243,253,261,262,292,314,316,333,405,406,407,408,463,464,468,469,474,478,480,484,488,496,517,523,524,554,584,593,597,598],string_:379,stringparamet:113,strong:[18,19,140,144,554],structur:[4,55,261,276,282,285,295,310,330,363,373,380,456,463,584],studi:21,style:93,sub:[4,8,10,13,14,17,18,19,20,21,22,77,140,142,148,152,198,210,212,213,214,231,262,456,464,465,469,470,471,472,473,505,511,554,587,594],sub_add:211,sub_compon:230,sub_domain:[18,19,20,22,140,456,505,510,511,554],sub_domains_bool:22,sub_domains_doubl:22,sub_sub:211,subclass:[2,4,10,14,37,40,45,46,50,56,88,149,150,279,341,342,346,375,376,456,553,584,585],subdomain:[1,2,5,8,13,14,15,18,19,20,23,24,29,42,45,46,134,140,142,179,390,413,456,466,470,471,472,473,505,511,538,550,553,554,559,593,625,650],subdomains_bool:22,subdomains_doubl:22,subdomian:8,subel:[589,591],subfunct:[210,465],subject:187,submesh:[464,538,616],subregion:21,subscript:2,subsequ:[11,13,132,133,455,465,544,545],subset:[11,74,140,149,466,488,489,490,491,492,505,511,512,554],subset_it:512,subsetiter:538,subspac:[0,10,213,233,326,587,594],subsystemsmanag:[113,312],subsystemsmanager_fin:113,subsystemsmanager_init_mpi:113,subsystemsmanager_init_petsc:113,subsystemsmanager_mpi_fin:113,subsystemsmanager_mpi_initi:113,subsystemsmanager_responsible_mpi:113,subsystemsmanager_responsible_petsc:113,subsytem:[77,78],subtract:[5,6,11,569],suffix:[11,13,14,15,23,239,253],suggest:[7,17,21],suitabl:[1,2,8,12,13,14,15,16,17,21,23,187,244,257,546],sum:[4,58,72,212,231,277,286,324,339,374,569],summari:[0,1,5,6,13,14,15,23,87,113,114,118,129,150,253],superspac:213,suppli:[8,149,208,253,323,475,476,579],support:[17,77,79,142,253,257,457,464,496,513,593],suppos:10,sure:16,surfac:[4,6,392,393,450,451,452,453,500,502,513],surface3d:[390,538],svg:239,swig:[37,48,585,612,627],swigimportinfo:42,symmetr:[17,18,19,20,23,282,551,597],symmetri:[17,187,261,549,551,597],synchron:[58,62],synonym:13,syntax:[0,2,4,8,12,13,15,16,23,45,46],synthes:253,system:[4,11,13,16,18,19,20,22,32,37,52,77,134,140,179,187,198,263,269,273,278,281,287,289,292,293,296,302,306,314,320,323,326,337,350,365,370,474,549,551,579,650],systemassembl:[202,552],tabl:[86,113,129,253],tableentri:113,tabul:152,tabulate_all_coordin:152,tabulate_all_dof:283,tabulate_coordin:152,tabulate_entity_dof:152,tabulate_facet_dof:152,tag:[18,19,20,21],tai:593,take:[0,1,3,4,5,6,7,9,10,13,14,15,21,22,23,50,56,88,253,314,316,317,334,390,455,585],taken:[0,17],tan:584,tao:109,target:[14,326],task:[4,8,87,90,93,95,118,128,129],tau:10,taylor:[11,17,24],taylorhood:20,tdim:[380,414,437,455,467],tear:564,techniqu:[0,320],tell:[4,8,13],temam:11,tend:7,tensor:[4,7,8,24,134,137,149,179,197,207,208,261,262,279,284,285,286,331,332,333,341,342,346,550,551,582,584,597],tensorfunctionspac:600,tensorproductvector:347,tent:11,term:[0,1,2,8,10,12,13,14,15,16,23,25,280,292,569,571,600],termin:4,test:[0,1,2,4,5,6,7,8,10,11,12,13,14,15,16,17,21,23,146,149,166,176,282,340,525,526,550,561,574,576,579,588],test_spac:[166,176],testfunct:[0,1,2,4,7,8,10,11,12,13,14,15,16,17,18,19,20,21,23,592,650],tetrahedr:[8,383,423,519,520],tetrahedra:[7,383,519,520],tetrahedron:[9,34,390,405,414,525,538],tetrahedroncel:380,text:253,tfqmr:17,than:[0,11,13,17,18,19,20,22,23,40,140,150,380,544,545,584,629],thei:[4,7,9,18,20,21,46,214,569],them:[11,14],thereaft:4,therebi:[3,146],therefor:[3,7,8,11,17,19,77,83,84,584],theta:[4,8,496],thi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,32,36,37,39,41,43,46,47,48,50,53,55,56,58,74,75,77,78,85,86,88,93,96,117,120,125,132,133,134,135,136,137,138,139,140,142,143,146,148,149,152,166,167,175,176,177,179,182,184,187,188,189,194,205,206,207,208,209,210,211,212,213,214,223,228,230,239,243,253,257,263,269,273,276,277,278,279,280,281,282,283,284,285,286,287,291,292,293,295,296,298,299,302,306,310,312,317,320,323,324,326,330,331,332,334,337,339,340,363,364,365,370,373,374,375,377,379,380,382,383,390,399,405,409,410,411,412,413,414,415,421,430,431,439,450,452,453,454,455,456,457,464,465,467,475,477,478,481,482,483,485,489,490,491,492,493,494,495,496,497,503,504,505,506,508,509,510,513,514,517,518,519,520,521,523,524,525,526,540,544,545,548,549,550,552,554,557,558,560,562,567,569,570,572,573,574,575,576,577,578,580,581,584,585,586,587,588,589,590,591,592,600,604,606,607,627,628,646,649],think:21,third:[0,1,3,4,5,9,10,12,13,15,22,23,140,207,467,554],thisown:[49,50,51,52,53,55,56,57,58,59,60,61,73,74,75,76,77,85,86,87,88,89,132,133,134,135,136,137,138,139,140,142,143,144,146,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,174,175,176,177,179,180,182,183,184,187,188,189,194,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,228,229,230,239,242,243,244,245,246,247,248,249,250,251,252,253,257,261,262,263,265,266,268,269,273,276,277,278,279,280,281,282,283,284,285,286,287,289,291,292,293,295,296,298,299,300,302,306,309,310,311,312,314,317,320,323,324,325,326,328,330,331,332,333,334,337,339,340,361,363,364,365,369,370,371,373,374,375,377,379,380,381,382,383,384,386,388,389,390,391,392,394,395,396,397,398,399,401,402,403,404,405,409,410,411,412,413,414,415,417,418,419,420,421,422,423,424,426,427,428,429,430,431,433,434,435,436,437,438,439,442,443,444,445,446,447,448,449,450,453,454,455,456,457,463,464,465,466,467,468,470,471,472,473,474,475,477,478,483,484,485,489,490,491,492,493,496,497,498,500,503,504,505,506,508,509,510,511,512,513,514,515,517,518,519,520,521,522,523,524,525,526,527,529,530,531,532,533,534,535,536,537,541,575,577],thoma:593,those:[13,14,15,21,23,188,189],thousand:569,thread:[77,79,149],three:[1,3,7,8,9,10,11,13,14,15,22,23,140,554,587],through:[0,1,5,6,9,10,12,13,15,16,17,18,21,22,23,136,253,456,485,486,488,489,490,491,492],throughout:23,thu:[0,1,12,13,15,16,21,22,23,569,582,585],tic:113,tied:142,tile:253,tile_window:253,time:[0,11,12,13,15,16,23,28,37,44,52,73,85,87,113,118,126,130,180,183,187,188,189,192,193,253,292,399,456,549,582,584,644],timer:113,timeseri:202,timeseries_default_paramet:202,timeseries_filename_data:202,timeseries_filename_tim:202,timeserieshdf5:202,timeserieshdf5_default_paramet:202,timestamp:244,timestep:175,tite:34,titl:[0,3,5,6,11,13,21,23,34,75,85,253,260],to_dict:74,to_kei:253,toc:113,togeth:[0,8,22,40,74,140,212,282,298,339,374,475,554],toi:37,tol:[0,74,132,133,150,194,201,544,545,579],toler:[0,4,13,132,133,150,326,510,544,545,579],too:[550,629],tool:573,top:[10,21,22,253,411,412,548,578],top_bottom:17,top_radiu:411,topic:650,topolog:[22,23,140,380,399,400,401,402,403,404,405,414,415,416,417,418,419,420,424,425,426,427,428,429,430,432,433,434,435,436,455,456,457,459,460,461,462,463,466,467,468,469,470,471,472,473,484,488,489,490,491,492,505,510,527,528,529,530,531,532,533,534,535,536,537,541,550,554],topological_dimens:[23,148,584],total:[3,8,284,383,454,463,504,519,520,521,522,523,524,587],tpetsc:16,traction:8,transfer:[195,253],transform:[16,326,485,517],translat:[9,456,485,487],transpmult:282,transpos:[261,306,340],tree:[93,380,437,456,474],trial:[0,1,2,4,8,10,11,12,13,14,15,16,23,140,149,166,176,550,554,561,574,576,590],trial_spac:[166,176],trialfunct:[0,1,2,4,7,8,10,11,12,14,15,16,17,18,19,20,21,23,592,650],triangl:[0,10,12,13,15,16,23,405,414,424,504,523,524,526],triangul:[2,516,538],triangular:[23,422,504,523,524],triangulate_triangul:538,trigger:11,trilino:[13,17,110],trilinosprecondition:[269,347],trilinospreconditioner_default_paramet:347,trilinospreconditioner_precondition:347,trilono:334,trust:320,tupl:[32,40,74,547,555,557,561,562,582,584,589,591,596],turn:[7,11,122,140,456,468,496,554],twice:2,two:[0,1,2,3,4,5,6,8,9,10,11,12,13,15,16,17,18,19,20,21,23,214,223,230,380,382,388,391,398,430,456,488,489,490,491,492,503,569,579],type2str:405,type:[4,7,8,10,12,18,19,20,21,22,23,49,51,57,73,74,76,93,140,149,188,192,193,212,231,239,243,253,277,281,283,287,291,317,324,326,334,359,365,374,379,399,405,406,407,408,414,453,456,457,459,460,461,462,467,469,488,513,517,535,550,554,555,569,571,582,584],type_nam:[188,192,193],type_str:[73,243],type_to_dim:457,typemap:37,typic:[4,17,18,19,20,21,36,152,230,340,455,593],u_h:[132,133,544,545,569],u_infti:584,u_init:4,ub_func:176,ubla:[85,282,339,363,364,365,370,373,374],ublas_vector:374,ublasdensefactori:347,ublasdensefactory_inst:347,ublasdensematrix:347,ublasiluprecondition:347,ublaskrylovsolv:347,ublaskrylovsolver_default_paramet:347,ublaskrylovsolver_method:347,ublaskrylovsolver_precondition:347,ublaslinearoper:347,ublasmatrix:[363,373],ublasprecondition:[347,364,365],ublassparsefactori:347,ublassparsefactory_inst:347,ublassparsematrix:347,ublasvector:347,ufc:[23,136,142,148,149,208,210,214,379,399,456,550,560,584,599],ufc_cel:[10,210,584],ufc_dofmap:[142,608],ufc_finite_el:608,ufc_form0:599,ufc_form1:599,ufc_form:[149,599,609],ufc_functionspac:[601,608,609],ufcfunctionspac:610,ufil:11,ufile_pvd:[17,18,19,20],ufl:[0,1,2,4,8,10,12,13,14,15,16,21,23,263,337,456,547,549,557,558,561,562,582,584,585,586,587,588,589,590,591,594,604,606,644],ufl_cel:456,ufl_el:[584,587,594],ufl_evalu:[584,587],ufl_stage_form:644,uint:[23,93,584,594],uintarrai:113,umfpack:[111,337],umfpacklusolv:347,umfpacklusolver_default_paramet:347,unanticip:[50,56,88],unchang:140,undergon:330,underlai:[282,339,374],underli:[142,284,363,373,374],underlin:116,underscor:464,uniform:[383,517,519,520,523,524,628],uniformli:[195,236,405,540,629],union:[2,6,388,390,398],uniqu:[74,89,253,464,468],unit:[0,2,3,4,8,10,11,12,13,14,15,16,17,18,20,21,22,23,379,496,517,519,520,521,522,523,524,525,526,593],unitcircl:538,unitcirclemesh:[3,517,538],unitcub:538,unitcubemesh:[3,8,17,519,538],unitinterv:538,unitintervalmesh:[3,521,538],unitsquar:[34,456,538,593,602,603,604,605],unitsquaremesh:[0,2,3,4,10,12,13,14,15,16,21,23,523,538],unittetrahedronmesh:538,unittrianglemesh:538,unknown:[4,10,11,12,16,75,98,557,579,582,598],unless:[8,239],unmark:466,unnam:89,unordered_map:[140,213],unpack_cell_vertic:455,unpack_vertex_coordin:455,unrefin:0,unrestrict:505,unset:[49,51,57,76],unsign:[380,469,488,584],unsort:284,unstructur:[3,410,509],unsupport:243,until:4,unwrap:[291,292,295,339],updat:[11,74,75,140,214,253,281,286,584],update_ghost_valu:286,update_paramet:281,upon:[0,13,14,15,23,456],upper:[11,23,176,253,320,411,412],upper_bound:176,uppercas:93,usag:[6,32,34,37,45,46,74,85,87,120,139,206,276,277,310,324,363,373,374,550,551,568,571,573,582,593,596,597,598,599,602,603,604,605,622,629],use:[0,1,3,4,5,6,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,34,37,93,125,136,140,142,176,187,210,213,276,277,280,310,324,334,363,373,374,414,456,464,470,471,472,473,535,550,551,554,557,584,585,647,648],use_gpu:[310,324],used:[0,4,8,9,11,13,14,15,16,22,23,36,37,75,87,96,126,127,130,135,136,140,144,146,152,179,188,189,208,210,211,212,253,280,281,283,292,298,299,326,332,334,340,379,382,409,411,412,421,422,423,450,453,455,456,457,458,464,465,469,470,471,472,473,488,489,490,491,492,493,495,497,503,508,510,514,517,550,552,554,569,579,584,585,587,593,598,644,650],useful:[2,18,19,20,21,22,29,140,213,281,375,431,465,493,495,525,526,573],user:[4,10,12,23,26,134,140,194,208,253,280,292,314,323,464,467,554,561,580,581,584,585],user_paramet:584,user_sub_domain:140,uses:[2,12,23,44,377,450,452,498,500],using:[0,1,2,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,37,50,56,88,140,176,180,183,200,213,263,276,277,283,285,296,310,324,337,363,365,373,377,378,382,409,411,412,421,497,503,506,507,508,510,514,550,552,554,584],usual:[4,10,21],utel:48,util:[58,384,386],v2c:[619,621],v_0:149,v_1:149,v_h:[132,133,544,545,565],vaiation:23,valid:[253,551],valu:[1,2,4,8,9,10,11,13,14,15,18,19,20,21,22,23,34,35,40,45,49,51,53,54,57,58,68,69,72,73,74,76,85,87,136,140,141,143,144,145,148,150,151,152,167,168,177,178,180,181,188,189,190,191,195,207,208,210,214,223,229,243,253,255,262,263,264,265,269,270,273,274,277,282,285,286,287,288,289,290,292,293,294,296,297,302,303,306,307,314,316,317,318,320,321,324,326,327,330,331,334,335,337,338,339,365,366,374,379,384,385,386,387,456,464,465,466,467,470,471,472,473,474,488,489,490,491,492,496,527,550,554,575,577,579,582,583,584,586,588,589,590,591,597,598],value0:207,value1:207,value2:207,value_collect:[470,471,472,473],value_dimens:[148,214],value_rank:[148,214],value_s:214,value_shap:[4,10,207,208,584],value_str:73,vanish:[0,10],vari:[21,23],variabl:[4,8,10,11,17,18,19,20,45,46,50,56,85,88,113,114,140,144,149,150,152,167,175,177,180,188,189,213,214,223,244,253,256,257,260,281,284,291,296,299,317,326,334,384,386,390,455,456,464,470,471,472,473,489,490,491,492,554,575,577,585],variant:[13,586,588,589,590,591],variat:[0,1,2,4,7,8,10,11,12,13,14,15,16,17,18,19,20,23,132,133,134,139,143,144,150,166,167,176,177,179,182,195,201,208,320,544,545,550,574,575,576,577,579,584,650],variationalproblem:[202,566,578],variationalsolv:548,variou:[4,8,13,14,15,21,23,77,253,330,439,485,570,579],vec:[37,277,324,374],vec_ptr:277,vecexp:37,vector:[4,7,8,10,11,16,17,18,19,20,34,40,140,142,149,152,174,182,187,188,189,204,205,207,208,210,212,213,229,243,244,253,261,262,277,279,280,282,284,286,287,292,295,296,299,309,320,324,330,333,340,347,359,363,369,373,374,380,456,470,471,472,473,485,487,496,550,570,571,579,582,584,587,598,650],vector_:464,vector_tim:[188,189],vectorfloat:243,vectorfunctionspac:[8,11,17,18,19,20,587,596,600],vectorint:243,vectorspacebasi:[16,347],veloc:[11,17,18,19,20,230],verbos:[5,6,114,468,496,587],veri:[5,6,15,17,55,114],version:[3,21,49,50,51,56,57,58,67,73,75,76,77,79,80,85,88,89,90,92,94,132,133,138,139,140,142,143,148,149,166,167,175,176,177,180,182,183,187,188,189,194,195,197,198,201,205,206,207,208,210,211,212,213,214,223,229,230,231,239,243,244,253,260,261,262,263,269,273,276,277,278,281,282,285,286,287,289,291,292,293,295,296,302,306,310,314,316,320,324,326,330,331,332,334,337,339,363,365,370,373,374,375,376,377,378,379,380,392,393,399,405,406,414,415,424,430,437,439,441,455,456,457,458,463,464,465,466,467,468,470,471,472,473,474,475,476,484,485,486,489,490,491,492,496,498,499,500,501,502,505,506,510,511,512,527,533,534,535,536,537,540,541,554,555,575,577],vertex:[9,140,148,199,204,284,399,414,455,456,457,460,467,484,535,538,606,613,614],vertex_1:9,vertex_2:9,vertex_3:9,vertex_coordin:[148,455],vertex_i:9,vertex_indic:455,vertex_k:9,vertex_l:9,vertex_m:9,vertex_to_dof_map:[152,202],vertex_valu:210,vertexfunct:[529,530,531,532,538],vertexfunctionbool:538,vertexfunctiondoubl:538,vertexfunctionint:538,vertexfunctionsizet:538,vertic:[3,4,8,9,13,140,152,199,204,210,214,375,376,383,405,414,421,454,455,456,467,485,486,497,498,499,500,501,502,504,511,519,520,521,522,523,524,525,526,538,613,614,617],vessel:1,via:[11,12,224,243,314,320,453,500,584],view:[50,56,88,142,152,277,399,405,470,471,472,473,593],virtual:[4,370],viscos:11,visit:512,visual:[4,5,6,7,13,14,15,23,34,253,573],visualis:[457,458,493,495],vmtk:[140,554],vol:603,volum:[8,399,405,450,451,500,501,603],vtk:[2,4,8,11,13,14,15,17,18,19,20,22,23,239],vtkplotter:258,vtkplotter_all_interact:258,vtkplotter_default_paramet:258,vtkplotter_to_kei:258,wai:[7,13,14,15,17,18,19,20,21,22,23,75,140,253,413,464,488,489,490,491,492,511,554,567,570,572,579],wait:[4,61],wait_al:61,wall:1,want:[0,7,8,10,12,13,14,15,16,17,18,20,21,22,23,24,584],warn:[92,113,210,453],warn_onc:73,warp:[34,253],weak:[0,2,4,18,19,144],weakli:2,weight:[0,21,24,132,133,544,545,579],well:[12,182,578],were:8,wether:346,what:[0,14,21,22,199,204,399,456],when:[0,1,4,5,6,8,11,13,14,17,18,20,22,23,87,140,142,146,149,188,189,214,253,411,412,414,456,488,510,554,584,585,593,629],where:[0,1,2,4,5,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,140,149,152,166,176,180,183,187,210,211,431,453,466,484,550,552,554,574,576,579,584,587],whether:[5,6,7,21,23,55,58,65,66,114,140,143,176,177,232,235,286,296,320,379,399,405,466,505,510,554,577,597,629],which:[0,1,2,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,40,48,50,52,56,58,64,77,88,92,93,126,136,140,143,146,150,176,187,188,189,208,210,212,213,292,298,326,363,373,374,379,380,382,409,411,412,413,421,453,456,457,459,460,461,463,465,470,471,472,473,485,486,488,489,490,491,492,493,495,497,503,505,508,514,540,549,550,552,554,562,569,571,573,579,582,584,585,593,613,614,629,646],who:134,whole:[22,175,585],wide:16,widget:253,width:253,window:[11,253,254],window_height:253,window_width:253,winther:593,wirefram:[34,253],wirth:[489,490,491,492],wise:[0,13,14,15,23,174],wish:[0,8,134,323],within:[4,21,232,235,484],without:[2,8,11,77,80,149,166,176,201,582],wll:550,wolfram:456,word:[0,13,15,23,149],work:[0,22,24,32,121,199,204,456],world:7,would:[2,4,10,21,140],wrap:[37,43,253,552,560],wrapper:[50,56,58,63,88,148,269,273,276,277,281,302,306,310,317,324,326,334,363,373,374,553,627,649],write:[0,1,13,14,15,16,18,19,20,21,23,149,188,189,239,242,244],write_fil:622,write_pdf:253,write_png:253,written:[2,4,13,239,593],wrong:341,www:[257,263,337,363,373,374,399],x3d:239,xd3:239,xdmf:[239,257],xdmffile:258,xhat:148,xml:[1,7,11,18,19,20,22,23,239,257,455,456,488,489,490,491,492,587],xyz:239,yet:121,you:[0,7,17,21,24],young:8,your:34,yourself:21,zero:[0,4,8,13,14,15,16,17,18,19,20,23,140,149,223,261,276,282,284,285,295,310,326,330,331,363,373,456,463,464,477,478,481,482,550,569],zero_column:140,zlib:112,zoom:[11,253]},titles:["1. Auto adaptive Poisson equation","2. Set boundary conditions for meshes that include boundary indicators","3. Biharmonic equation","4. Built-in meshes","5. Cahn-Hilliard equation","6. Create CSG 2D-geometry","7. Create CSG 3D-geometry","8. A simple eigenvalue solver","9. Hyperelasticity","10. Generate mesh","11. Mixed formulation for Poisson equation","12. Incompressible Navier-Stokes equations","13. Poisson equation with pure Neumann boundary conditions","14. Nonlinear Poisson equation","15. Poisson equation with periodic boundary conditions","16. Poisson equation","17. Singular Poisson","18. Stokes equations","19. Stokes equations with Mini elements","20. Stokes equations with stabilized first order elements","21. Stokes equations with Taylor-Hood elements","22. Poisson equation with multiple subdomains","23. Marking subdomains of a mesh","24. Tensor-weighted Poisson","Collection of documented demos","Documentation for DOLFIN-1.3.0 (Python)","dolfin.common.constants module","dolfin.common.globalparameters module","dolfin.common module","dolfin.common.math module","sqr","dolfin.common.memory module","memory_usage","dolfin.common.plotting module","plot","Time","dolfin.common.time module","compile_extension_module","expression_to_code_fragments","dolfin.compilemodules.compilemodule module","compile_expressions","dolfin.compilemodules.expressions module","dolfin.compilemodules module","dolfin.compilemodules.jit module","jit","CompiledSubDomain","compile_subdomains","dolfin.compilemodules.subdomains module","dolfin.compilemodules.swigimportinfo module","BoolParameter","DoubleArray","DoubleParameter","Event","GlobalParameters","GlobalParameters_default_parameters","IndexSet","IntArray","IntParameter","MPI","MPICommunicator","MPIInfo","MPINonblocking","MPI_barrier","MPI_global_offset","MPI_index_owner","MPI_is_broadcaster","MPI_is_receiver","MPI_local_range","MPI_max","MPI_min","MPI_num_processes","MPI_process_number","MPI_sum","ParameterValue","Parameters","Progress","StringParameter","SubSystemsManager","SubSystemsManager_finalize","SubSystemsManager_init_mpi","SubSystemsManager_init_petsc","SubSystemsManager_mpi_finalized","SubSystemsManager_mpi_initialized","SubSystemsManager_responsible_mpi","SubSystemsManager_responsible_petsc","Table","TableEntry","Timer","UIntArray","Variable","begin","debug","deprecation","dolfin_error","dolfin_version","end","error","get_log_level","git_commit_hash","has_cgal","has_cholmod","has_exodus","has_hdf5","has_mpi","has_openmp","has_parmetis","has_petsc","has_scotch","has_slepc","has_tao","has_trilinos","has_umfpack","has_zlib","dolfin.cpp.common module","info","info_stream","info_underline","init","list_timings","log","monitor_memory_usage","not_working_in_parallel","set_log_active","set_log_level","set_output_stream","summary","tic","time","timing","timings","toc","warning","AdaptiveLinearVariationalSolver","AdaptiveNonlinearVariationalSolver","Assembler","AssemblerBase","BasisFunction","CCFEMAssembler","CCFEMDofMap","CCFEMForm","DirichletBC","DirichletBC_default_parameters","DofMap","Equation","ErrorControl","ErrorControl_default_parameters","Extrapolation","Extrapolation_extrapolate","FiniteElement","Form","GenericAdaptiveVariationalSolver","GenericAdaptiveVariationalSolver_default_parameters","GenericDofMap","HierarchicalDirichletBC","HierarchicalErrorControl","HierarchicalForm","HierarchicalFunction","HierarchicalFunctionSpace","HierarchicalLinearVariationalProblem","HierarchicalMesh","HierarchicalMeshFunctionBool","HierarchicalMeshFunctionDouble","HierarchicalMeshFunctionInt","HierarchicalMeshFunctionSizet","HierarchicalMeshFunctionUInt","HierarchicalNonlinearVariationalProblem","LinearVariationalProblem","LinearVariationalSolver","LinearVariationalSolver_default_parameters","LocalAssembler","LocalAssembler_assemble","LocalAssembler_assemble_cell","LocalAssembler_assemble_exterior_facet","LocalAssembler_assemble_interior_facet","LocalSolver","MultiStageScheme","NonlinearVariationalProblem","NonlinearVariationalSolver","NonlinearVariationalSolver_default_parameters","OpenMpAssembler","PointIntegralSolver","PointIntegralSolver_default_parameters","PointSource","RKSolver","SparsityPatternBuilder","SparsityPatternBuilder_build","SparsityPatternBuilder_build_ccfem","SystemAssembler","TimeSeries","TimeSeriesHDF5","TimeSeriesHDF5_default_parameters","TimeSeries_default_parameters","TimeSeries_filename_data","TimeSeries_filename_times","VariationalProblem","adapt","adapt_markers","assemble","assemble_system","dof_to_vertex_map","dorfler_mark","fem_solve","dolfin.cpp.fem module","mark","vertex_to_dof_map","CCFEMFunction","CCFEMFunctionSpace","Constant","Expression","FacetArea","Function","FunctionAXPY","FunctionAssigner","FunctionSpace","GenericFunction","HierarchicalFunction","HierarchicalFunctionSpace","HierarchicalMesh","HierarchicalMeshFunctionBool","HierarchicalMeshFunctionDouble","HierarchicalMeshFunctionInt","HierarchicalMeshFunctionSizet","HierarchicalMeshFunctionUInt","Lagrange","Legendre","Legendre_d2dx","Legendre_ddx","Legendre_eval","MeshCoordinates","SpecialFacetFunction","SubSpace","assign","between","dolfin.cpp.function module","ipow","near","rand","seed","dolfin.cpp module","File","File_create_parent_path","File_exists","GenericFile","HDF5Attribute","HDF5File","HierarchicalFunction","HierarchicalFunctionSpace","HierarchicalMesh","HierarchicalMeshFunctionBool","HierarchicalMeshFunctionDouble","HierarchicalMeshFunctionInt","HierarchicalMeshFunctionSizet","HierarchicalMeshFunctionUInt","VTKPlotter","VTKPlotter_all_interactive","VTKPlotter_default_parameters","VTKPlotter_to_key","XDMFFile","dolfin.cpp.io module","interactive","plot","BlockMatrix","BlockVector","CholmodCholeskySolver","CholmodCholeskySolver_default_parameters","CoordinateMatrix","DefaultFactory","DefaultFactory_factory","EpetraFactory","EpetraKrylovSolver","EpetraKrylovSolver_default_parameters","EpetraKrylovSolver_methods","EpetraKrylovSolver_preconditioners","EpetraLUSolver","EpetraLUSolver_default_parameters","EpetraLUSolver_methods","EpetraMatrix","EpetraVector","GenericLUSolver","GenericLinearAlgebraFactory","GenericLinearOperator","GenericLinearSolver","GenericMatrix","GenericPreconditioner","GenericSparsityPattern","GenericTensor","GenericVector","KrylovSolver","KrylovSolver_default_parameters","LUSolver","LUSolver_default_parameters","LinearAlgebraObject","LinearOperator","LinearSolver","LinearSolver_default_parameters","Matrix","NewtonSolver","NewtonSolver_default_parameters","NonlinearProblem","PETScBaseMatrix","PETScFactory","PETScFactory_instance","PETScKrylovSolver","PETScKrylovSolver_default_parameters","PETScKrylovSolver_methods","PETScKrylovSolver_preconditioners","PETScLUSolver","PETScLUSolver_default_parameters","PETScLUSolver_methods","PETScLinearOperator","PETScMatrix","PETScMatrixDeleter","PETScObject","PETScObject_petsc_error","PETScOptions","PETScOptions_clear","PETScOptions_set","PETScPreconditioner","PETScPreconditioner_default_parameters","PETScPreconditioner_preconditioners","PETScSNESSolver","PETScSNESSolver_default_parameters","PETScSNESSolver_methods","PETScUserPreconditioner","PETScVector","PETScVectorDeleter","SLEPcEigenSolver","SLEPcEigenSolver_default_parameters","STLFactory","STLFactory_instance","STLMatrix","Scalar","SparsityPattern","TensorProductVector","TrilinosPreconditioner","TrilinosPreconditioner_default_parameters","TrilinosPreconditioner_preconditioners","UmfpackLUSolver","UmfpackLUSolver_default_parameters","Vector","VectorSpaceBasis","as_backend_type","get_tensor_type","has_krylov_solver_method","has_krylov_solver_preconditioner","has_lu_solver_method","has_type","dolfin.cpp.la module","krylov_solver_methods","krylov_solver_preconditioners","la_solve","linear_algebra_backends","linear_solver_methods","list_krylov_solver_methods","list_krylov_solver_preconditioners","list_linear_algebra_backends","list_linear_solver_methods","list_lu_solver_methods","lu_solver_methods","normalize","residual","uBLASDenseFactory","uBLASDenseFactory_instance","uBLASDenseMatrix","uBLASILUPreconditioner","uBLASKrylovSolver","uBLASKrylovSolver_default_parameters","uBLASKrylovSolver_methods","uBLASKrylovSolver_preconditioners","uBLASLinearOperator","uBLASPreconditioner","uBLASSparseFactory","uBLASSparseFactory_instance","uBLASSparseMatrix","uBLASVector","ALE","ALE_move","BoostGraphOrdering","BoostGraphOrdering_compute_cuthill_mckee","BoundaryMesh","BoundingBoxTree","BoundingBoxTree3D","Box","BoxMesh","CSGCGALMeshGenerator2D","CSGCGALMeshGenerator2D_default_parameters","CSGCGALMeshGenerator3D","CSGCGALMeshGenerator3D_default_parameters","CSGDifference","CSGGeometries","CSGGeometry","CSGIntersection","CSGMeshGenerator","CSGMeshGenerator_generate","CSGOperator","CSGPrimitive","CSGPrimitive2D","CSGPrimitive3D","CSGUnion","Cell","CellFunction","CellFunctionBool","CellFunctionDouble","CellFunctionInt","CellFunctionSizet","CellType","CellType_create","CellType_string2type","CellType_type2string","Circle","CircleMesh","Cone","Cylinder","DomainBoundary","DynamicMeshEditor","Edge","EdgeFunction","EdgeFunctionBool","EdgeFunctionDouble","EdgeFunctionInt","EdgeFunctionSizet","Ellipse","EllipseMesh","EllipsoidMesh","Face","FaceFunction","FaceFunctionBool","FaceFunctionDouble","FaceFunctionInt","FaceFunctionSizet","Facet","FacetCell","FacetFunction","FacetFunctionBool","FacetFunctionDouble","FacetFunctionInt","FacetFunctionSizet","GenericBoundingBoxTree","Graph","GraphBuilder","GraphBuilder_compute_dual_graph","GraphBuilder_local_graph","HierarchicalFunction","HierarchicalFunctionSpace","HierarchicalMesh","HierarchicalMeshFunctionBool","HierarchicalMeshFunctionDouble","HierarchicalMeshFunctionInt","HierarchicalMeshFunctionSizet","HierarchicalMeshFunctionUInt","ImplicitDomainMeshGenerator","ImplicitDomainMeshGenerator_generate","ImplicitDomainMeshGenerator_generate_surface","ImplicitSurface","IntervalMesh","LocalMeshData","Mesh","MeshColoring","MeshColoring_cell_colors","MeshColoring_color","MeshColoring_color_cells","MeshColoring_compute_colors","MeshColoring_type_to_dim","MeshConnectivity","MeshData","MeshDisplacement","MeshDomains","MeshEditor","MeshEntity","MeshFunction","MeshFunctionBool","MeshFunctionDouble","MeshFunctionInt","MeshFunctionSizet","MeshGeometry","MeshPartitioning","MeshPartitioning_build_distributed_mesh","MeshPointIntersection","MeshQuality","MeshQuality_radius_ratio_histogram_data","MeshQuality_radius_ratio_matplotlib_histogram","MeshQuality_radius_ratio_min_max","MeshQuality_radius_ratios","MeshRenumbering","MeshTopology","MeshTransformation","MeshTransformation_rotate","MeshTransformation_translate","MeshValueCollection","MeshValueCollectionBool","MeshValueCollectionDouble","MeshValueCollectionInt","MeshValueCollectionSizet","PeriodicBoundaryComputation","PeriodicBoundaryComputation_compute_periodic_pairs","PeriodicBoundaryComputation_masters_slaves","Point","Polygon","PolygonalMeshGenerator","PolygonalMeshGenerator_generate","PolyhedralMeshGenerator","PolyhedralMeshGenerator_generate","PolyhedralMeshGenerator_generate_surface_mesh","Rectangle","RectangleMesh","Restriction","SCOTCH","SCOTCH_compute_gps","Sphere","SphereMesh","SubDomain","SubMesh","SubsetIterator","Surface3D","Tetrahedron","Triangulate","Triangulate_triangulate","UnitCircle","UnitCircleMesh","UnitCube","UnitCubeMesh","UnitInterval","UnitIntervalMesh","UnitSquare","UnitSquareMesh","UnitTetrahedronMesh","UnitTriangleMesh","Vertex","VertexFunction","VertexFunctionBool","VertexFunctionDouble","VertexFunctionInt","VertexFunctionSizet","cells","edges","entities","faces","facets","dolfin.cpp.mesh module","intersect","refine","vertices","down_cast","dolfin.deprecation module","AdaptiveLinearVariationalSolver","AdaptiveNonlinearVariationalSolver","generate_error_control","generate_error_control_forms","dolfin.fem.adaptivesolving module","SystemAssembler","assemble","assemble_system","dolfin.fem.assembling module","AutoSubDomain","DirichletBC","homogenize","dolfin.fem.bcs module","DOLFINErrorControlGenerator","dolfin.fem.errorcontrolgenerator module","Form","dolfin.fem.form module","adjoint","derivative","increase_order","dolfin.fem.formmanipulations module","tear","dolfin.fem module","dolfin.fem.interpolation module","interpolate","errornorm","dolfin.fem.norms module","norm","dolfin.fem.projection module","project","LinearVariationalProblem","LinearVariationalSolver","NonlinearVariationalProblem","NonlinearVariationalSolver","dolfin.fem.solving module","solve","VariationalProblem","dolfin.fem.variationalproblem module","Constant","dolfin.functions.constant module","Expression","dolfin.functions.expression module","Argument","Function","TestFunction","TestFunctions","TrialFunction","TrialFunctions","dolfin.functions.function module","FunctionSpace","FunctionSpaceBase","FunctionSpaceFromCpp","MixedFunctionSpace","TensorFunctionSpace","VectorFunctionSpace","create_ufc_function_spaces","dolfin.functions.functionspace module","dolfin.functions module","CellSize","CellVolume","FacetArea","FacetNormal","MeshCoordinates","dolfin.functions.specialfunctions module","UFCFunctionSpace","create_ufc_function_spaces","dolfin.functions.ufc_functionspace module","dolfin.importhandler module","Programmer&#8217;s reference for DOLFIN (Python)","compute_edge_map","compute_vertex_map","dolfin.mesh.ale module","init_parent_edge_indices","create_maps","find_all_subdomains","find_keys_on_one_subdomain","find_new_cell_key","find_subdomain","dolfin.mesh.boundarysubdomainfinder module","main","usage","write_file","dolfin.mesh module","dolfin.mesh.meshes module","dolfin.mesh.refinement module","refine","dolfin.multistage module","BDF1","BackwardEuler","CN2","CrankNicolson","ERK","ERK1","ERK4","ESDIRK3","ESDIRK4","ExplicitEuler","ExplicitMidPoint","ForwardEuler","ImplicitEuler","MultiStageScheme","RK4","dolfin.multistage.multistagescheme module","PointIntegralSolver","RKSolver","dolfin.multistage.multistagesolvers module","Quick Programmer&#8217;s Reference (Python)"],titleterms:{"function":[210,233,583,585,587,592,600,601,607,610],ALE:375,The:25,adapt:[0,195],adapt_mark:196,adaptivelinearvariationalsolv:[132,544],adaptivenonlinearvariationalsolv:[133,545],adaptivesolv:548,adjoint:561,ale:615,ale_mov:376,argument:586,as_backend_typ:341,assembl:[134,197,550,552],assemble_system:[198,551],assemblerbas:135,assign:231,auto:0,autosubdomain:553,backwardeul:632,basisfunct:136,bcs:556,bdf1:631,begin:90,between:232,biharmon:2,blockmatrix:261,blockvector:262,boolparamet:49,boostgraphord:377,boostgraphordering_compute_cuthill_mcke:378,boundari:[1,12,14,17,20],boundarymesh:379,boundarysubdomainfind:622,boundingboxtre:380,boundingboxtree3d:381,box:382,boxmesh:383,built:3,cahn:4,ccfemassembl:137,ccfemdofmap:138,ccfemform:139,ccfemfunct:205,ccfemfunctionspac:206,cell:[399,533],cellfunct:400,cellfunctionbool:401,cellfunctiondoubl:402,cellfunctionint:403,cellfunctionsizet:404,cellsiz:602,celltyp:405,celltype_cr:406,celltype_string2typ:407,celltype_type2str:408,cellvolum:603,cholmodcholeskysolv:263,cholmodcholeskysolver_default_paramet:264,circl:409,circlemesh:410,cn2:633,code:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],collect:24,common:[26,27,28,29,31,33,36,113],compile_express:40,compile_extension_modul:37,compile_subdomain:46,compiledsubdomain:45,compilemodul:[39,41,42,43,47,48],complet:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],compute_edge_map:613,compute_vertex_map:614,condit:[1,12,14,17,20],cone:411,constant:[26,207,582,583],coordinatematrix:265,cpp:[113,202,233,238,258,347,538],cranknicolson:634,creat:[5,6],create_map:617,create_ufc_function_spac:[599,609],csg:[5,6],csgcgalmeshgenerator2d:384,csgcgalmeshgenerator2d_default_paramet:385,csgcgalmeshgenerator3d:386,csgcgalmeshgenerator3d_default_paramet:387,csgdiffer:388,csggeometri:[389,390],csgintersect:391,csgmeshgener:392,csgmeshgenerator_gener:393,csgoper:394,csgprimit:395,csgprimitive2d:396,csgprimitive3d:397,csgunion:398,cylind:412,debug:91,defaultfactori:266,defaultfactory_factori:267,definit:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23],demo:[4,8,24,25],densiti:8,deprec:[92,543],deriv:562,dirichletbc:[140,554],dirichletbc_default_paramet:141,discretis:4,document:[24,25],dof_to_vertex_map:199,dofmap:142,dolfin:[25,26,27,28,29,31,33,36,39,41,42,43,47,48,113,202,233,238,258,347,538,543,548,552,556,558,560,564,566,567,570,572,578,581,583,585,592,600,601,607,610,611,612,615,622,626,627,628,630,646,649],dolfin_error:93,dolfin_vers:94,dolfinerrorcontrolgener:557,domain:[17,20],domainboundari:413,dorfler_mark:200,doublearrai:50,doubleparamet:51,down_cast:542,dynamicmesheditor:414,edg:[415,534],edgefunct:416,edgefunctionbool:417,edgefunctiondoubl:418,edgefunctionint:419,edgefunctionsizet:420,eigenvalu:7,elast:8,element:[18,19,20],ellips:421,ellipsemesh:422,ellipsoidmesh:423,end:95,energi:8,entiti:535,epetrafactori:268,epetrakrylovsolv:269,epetrakrylovsolver_default_paramet:270,epetrakrylovsolver_method:271,epetrakrylovsolver_precondition:272,epetralusolv:273,epetralusolver_default_paramet:274,epetralusolver_method:275,epetramatrix:276,epetravector:277,equat:[0,1,2,4,8,10,11,12,13,14,15,16,17,18,19,20,21,23,143],erk1:636,erk4:637,erk:635,error:96,errorcontrol:144,errorcontrol_default_paramet:145,errorcontrolgener:558,errornorm:569,esdirk3:638,esdirk4:639,event:52,expliciteul:640,explicitmidpoint:641,express:[41,208,584,585],expression_to_code_frag:38,extrapol:146,extrapolation_extrapol:147,face:[424,536],facefunct:425,facefunctionbool:426,facefunctiondoubl:427,facefunctionint:428,facefunctionsizet:429,facet:[430,537],facetarea:[209,604],facetcel:431,facetfunct:432,facetfunctionbool:433,facetfunctiondoubl:434,facetfunctionint:435,facetfunctionsizet:436,facetnorm:605,fem:[202,548,552,556,558,560,564,566,567,570,572,578,581],fem_solv:201,file:239,file_create_parent_path:240,file_exist:241,find_all_subdomain:618,find_keys_on_one_subdomain:619,find_new_cell_kei:620,find_subdomain:621,finiteel:148,first:19,form:[4,17,21,149,559,560],formmanipul:564,formul:[10,20],forwardeul:642,functionassign:212,functionaxpi:211,functionspac:[213,593,600],functionspacebas:594,functionspacefromcpp:595,gener:9,generate_data:23,generate_error_control:546,generate_error_control_form:547,genericadaptivevariationalsolv:150,genericadaptivevariationalsolver_default_paramet:151,genericboundingboxtre:437,genericdofmap:152,genericfil:242,genericfunct:214,genericlinearalgebrafactori:279,genericlinearoper:280,genericlinearsolv:281,genericlusolv:278,genericmatrix:282,genericprecondition:283,genericsparsitypattern:284,generictensor:285,genericvector:286,geometri:[5,6],get_log_level:97,get_tensor_typ:342,git_commit_hash:98,globalparamet:[27,53],globalparameters_default_paramet:54,graph:438,graphbuild:439,graphbuilder_compute_dual_graph:440,graphbuilder_local_graph:441,has_cgal:99,has_cholmod:100,has_exodu:101,has_hdf5:102,has_krylov_solver_method:343,has_krylov_solver_precondition:344,has_lu_solver_method:345,has_mpi:103,has_openmp:104,has_parmeti:105,has_petsc:106,has_scotch:107,has_slepc:108,has_tao:109,has_trilino:110,has_typ:346,has_umfpack:111,has_zlib:112,hdf5attribut:243,hdf5file:244,hierarchicaldirichletbc:153,hierarchicalerrorcontrol:154,hierarchicalform:155,hierarchicalfunct:[156,215,245,442],hierarchicalfunctionspac:[157,216,246,443],hierarchicallinearvariationalproblem:158,hierarchicalmesh:[159,217,247,444],hierarchicalmeshfunctionbool:[160,218,248,445],hierarchicalmeshfunctiondoubl:[161,219,249,446],hierarchicalmeshfunctionint:[162,220,250,447],hierarchicalmeshfunctionsizet:[163,221,251,448],hierarchicalmeshfunctionuint:[164,222,252,449],hierarchicalnonlinearvariationalproblem:165,hilliard:4,homogen:555,hood:20,hyperelast:8,implement:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],implicitdomainmeshgener:450,implicitdomainmeshgenerator_gener:451,implicitdomainmeshgenerator_generate_surfac:452,impliciteul:643,implicitsurfac:453,importhandl:611,includ:1,incompress:11,increase_ord:563,indexset:55,indic:1,info:114,info_stream:115,info_underlin:116,init:117,init_parent_edge_indic:616,intarrai:56,interact:259,interpol:[567,568],intersect:539,intervalmesh:454,intparamet:57,ipow:234,jit:[43,44],krylov_solver_method:348,krylov_solver_precondition:349,krylovsolv:287,krylovsolver_default_paramet:288,la_solv:350,lagrang:223,legendr:224,legendre_d2dx:225,legendre_ddx:226,legendre_ev:227,linear:17,linear_algebra_backend:351,linear_solver_method:352,linearalgebraobject:291,linearoper:292,linearsolv:293,linearsolver_default_paramet:294,linearvariationalproblem:[166,574],linearvariationalsolv:[167,575],linearvariationalsolver_default_paramet:168,list_krylov_solver_method:353,list_krylov_solver_precondition:354,list_linear_algebra_backend:355,list_linear_solver_method:356,list_lu_solver_method:357,list_tim:118,localassembl:169,localassembler_assembl:170,localassembler_assemble_cel:171,localassembler_assemble_exterior_facet:172,localassembler_assemble_interior_facet:173,localmeshdata:455,localsolv:174,log:119,lu_solver_method:358,lusolv:289,lusolver_default_paramet:290,main:623,mark:[22,203],math:29,matrix:295,memori:31,memory_usag:32,mesh:[1,3,9,22,456,538,615,622,626,627,628],meshcolor:457,meshcoloring_cell_color:458,meshcoloring_color:459,meshcoloring_color_cel:460,meshcoloring_compute_color:461,meshcoloring_type_to_dim:462,meshconnect:463,meshcoordin:[228,606],meshdata:464,meshdisplac:465,meshdomain:466,mesheditor:467,meshent:468,meshfunct:469,meshfunctionbool:470,meshfunctiondoubl:471,meshfunctionint:472,meshfunctionsizet:473,meshgeometri:474,meshpartit:475,meshpartitioning_build_distributed_mesh:476,meshpointintersect:477,meshqual:478,meshquality_radius_ratio:482,meshquality_radius_ratio_histogram_data:479,meshquality_radius_ratio_matplotlib_histogram:480,meshquality_radius_ratio_min_max:481,meshrenumb:483,meshtopolog:484,meshtransform:485,meshtransformation_rot:486,meshtransformation_transl:487,meshvaluecollect:488,meshvaluecollectionbool:489,meshvaluecollectiondoubl:490,meshvaluecollectionint:491,meshvaluecollectionsizet:492,method:11,mini:18,mix:[4,10],mixedfunctionspac:596,modul:[25,26,27,28,29,31,33,36,39,41,42,43,47,48,113,202,233,238,258,347,538,543,548,552,556,558,560,564,566,567,570,572,578,581,583,585,592,600,601,607,610,611,615,622,626,627,628,630,646,649],monitor_memory_usag:120,mpi:58,mpi_barri:62,mpi_global_offset:63,mpi_index_own:64,mpi_is_broadcast:65,mpi_is_receiv:66,mpi_local_rang:67,mpi_max:68,mpi_min:69,mpi_num_process:70,mpi_process_numb:71,mpi_sum:72,mpicommun:59,mpiinfo:60,mpinonblock:61,multipl:21,multistag:[630,646,649],multistageschem:[175,644,646],multistagesolv:649,navier:11,neumann:12,newtonsolv:296,newtonsolver_default_paramet:297,nonlinear:13,nonlinearproblem:298,nonlinearvariationalproblem:[176,576],nonlinearvariationalsolv:[177,577],nonlinearvariationalsolver_default_paramet:178,norm:[570,571],normal:359,not_working_in_parallel:121,openmpassembl:179,order:19,paramet:[4,8,74],parametervalu:73,period:14,periodicboundarycomput:493,periodicboundarycomputation_compute_periodic_pair:494,periodicboundarycomputation_masters_slav:495,petscbasematrix:299,petscfactori:300,petscfactory_inst:301,petsckrylovsolv:302,petsckrylovsolver_default_paramet:303,petsckrylovsolver_method:304,petsckrylovsolver_precondition:305,petsclinearoper:309,petsclusolv:306,petsclusolver_default_paramet:307,petsclusolver_method:308,petscmatrix:310,petscmatrixdelet:311,petscobject:312,petscobject_petsc_error:313,petscopt:314,petscoptions_clear:315,petscoptions_set:316,petscprecondition:317,petscpreconditioner_default_paramet:318,petscpreconditioner_precondition:319,petscsnessolv:320,petscsnessolver_default_paramet:321,petscsnessolver_method:322,petscuserprecondition:323,petscvector:324,petscvectordelet:325,plot:[33,34,260],point:496,pointintegralsolv:[180,647],pointintegralsolver_default_paramet:181,pointsourc:182,poisson:[0,10,12,13,14,15,16,21,23],polygon:497,polygonalmeshgener:498,polygonalmeshgenerator_gener:499,polyhedralmeshgener:500,polyhedralmeshgenerator_gener:501,polyhedralmeshgenerator_generate_surface_mesh:502,precondit:17,problem:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23],programm:[25,612,650],progress:75,project:[572,573],pure:12,python:[25,612,650],quick:650,rand:236,rectangl:503,rectanglemesh:504,refer:[25,612,650],refin:[540,628,629],residu:360,restrict:505,rk4:645,rksolver:[183,648],scalar:331,scotch:506,scotch_compute_gp:507,seed:237,set:1,set_log_act:122,set_log_level:123,set_output_stream:124,simpl:7,singular:16,slepceigensolv:326,slepceigensolver_default_paramet:327,solut:11,solv:[578,579],solver:7,sparsitypattern:332,sparsitypatternbuild:184,sparsitypatternbuilder_build:185,sparsitypatternbuilder_build_ccfem:186,specialfacetfunct:229,specialfunct:607,sphere:508,spheremesh:509,sqr:30,stabil:19,stlfactori:328,stlfactory_inst:329,stlmatrix:330,stoke:[11,17,18,19,20],store:8,stringparamet:76,strong:[17,20],subdomain:[21,22,47,510],submesh:511,subsetiter:512,subspac:230,subsystemsmanag:77,subsystemsmanager_fin:78,subsystemsmanager_init_mpi:79,subsystemsmanager_init_petsc:80,subsystemsmanager_mpi_fin:81,subsystemsmanager_mpi_initi:82,subsystemsmanager_responsible_mpi:83,subsystemsmanager_responsible_petsc:84,summari:125,surface3d:513,swigimportinfo:48,system:17,systemassembl:[187,549],tabl:85,tableentri:86,taylor:20,tear:565,tensor:23,tensorfunctionspac:597,tensorproductvector:333,testfunct:[588,589],tetrahedron:514,tic:126,time:[4,35,36,127,128,129],timer:87,timeseri:188,timeseries_default_paramet:191,timeseries_filename_data:192,timeseries_filename_tim:193,timeserieshdf5:189,timeserieshdf5_default_paramet:190,toc:130,trialfunct:[590,591],triangul:515,triangulate_triangul:516,trilinosprecondition:334,trilinospreconditioner_default_paramet:335,trilinospreconditioner_precondition:336,ublasdensefactori:361,ublasdensefactory_inst:362,ublasdensematrix:363,ublasiluprecondition:364,ublaskrylovsolv:365,ublaskrylovsolver_default_paramet:366,ublaskrylovsolver_method:367,ublaskrylovsolver_precondition:368,ublaslinearoper:369,ublasprecondition:370,ublassparsefactori:371,ublassparsefactory_inst:372,ublassparsematrix:373,ublasvector:374,ufc_functionspac:610,ufcfunctionspac:608,uintarrai:88,umfpacklusolv:337,umfpacklusolver_default_paramet:338,unitcircl:517,unitcirclemesh:518,unitcub:519,unitcubemesh:520,unitinterv:521,unitintervalmesh:522,unitsquar:523,unitsquaremesh:524,unittetrahedronmesh:525,unittrianglemesh:526,usag:624,variabl:89,variat:21,variationalproblem:[194,580,581],vector:339,vectorfunctionspac:598,vectorspacebasi:340,vertex:527,vertex_to_dof_map:204,vertexfunct:528,vertexfunctionbool:529,vertexfunctiondoubl:530,vertexfunctionint:531,vertexfunctionsizet:532,vertic:541,vtkplotter:253,vtkplotter_all_interact:254,vtkplotter_default_paramet:255,vtkplotter_to_kei:256,warn:131,weak:[17,20],weight:23,write_fil:625,xdmffile:257}})