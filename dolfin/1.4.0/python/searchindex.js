Search.setIndex({docnames:["demo/documented/auto-adaptive-poisson/python/documentation","demo/documented/bcs/python/documentation","demo/documented/biharmonic/python/documentation","demo/documented/built-in_meshes/python/documentation","demo/documented/cahn-hilliard/python/documentation","demo/documented/csg-2D/python/documentation","demo/documented/csg-3D/python/documentation","demo/documented/eigenvalue/python/documentation","demo/documented/hyperelasticity/python/documentation","demo/documented/mesh-generation/python/documentation","demo/documented/mixed-poisson-dual/python/documentation","demo/documented/mixed-poisson/python/documentation","demo/documented/navier-stokes/python/documentation","demo/documented/neumann-poisson/python/documentation","demo/documented/nonlinear-poisson/python/documentation","demo/documented/periodic/python/documentation","demo/documented/poisson/python/documentation","demo/documented/singular-poisson/python/documentation","demo/documented/stokes-iterative/python/documentation","demo/documented/stokes-mini/python/documentation","demo/documented/stokes-stabilized/python/documentation","demo/documented/stokes-taylor-hood/python/documentation","demo/documented/subdomains-poisson/python/documentation","demo/documented/subdomains/python/documentation","demo/documented/tensor-weighted-poisson/python/documentation","demo/index","index","programmers-reference/common/constants/index","programmers-reference/common/globalparameters/index","programmers-reference/common/index","programmers-reference/common/math/index","programmers-reference/common/math/sqr","programmers-reference/common/memory/index","programmers-reference/common/memory/memory_usage","programmers-reference/common/plotting/index","programmers-reference/common/plotting/plot","programmers-reference/common/time/Time","programmers-reference/common/time/index","programmers-reference/compilemodules/compilemodule/compile_extension_module","programmers-reference/compilemodules/compilemodule/expression_to_code_fragments","programmers-reference/compilemodules/compilemodule/index","programmers-reference/compilemodules/expressions/compile_expressions","programmers-reference/compilemodules/expressions/index","programmers-reference/compilemodules/index","programmers-reference/compilemodules/jit/index","programmers-reference/compilemodules/jit/jit","programmers-reference/compilemodules/subdomains/CompiledSubDomain","programmers-reference/compilemodules/subdomains/compile_subdomains","programmers-reference/compilemodules/subdomains/index","programmers-reference/compilemodules/swigimportinfo/index","programmers-reference/cpp/common/BoolParameter","programmers-reference/cpp/common/DoubleArray","programmers-reference/cpp/common/DoubleParameter","programmers-reference/cpp/common/Event","programmers-reference/cpp/common/GlobalParameters","programmers-reference/cpp/common/GlobalParameters_default_parameters","programmers-reference/cpp/common/IndexSet","programmers-reference/cpp/common/IntArray","programmers-reference/cpp/common/IntParameter","programmers-reference/cpp/common/MPI","programmers-reference/cpp/common/MPIInfo","programmers-reference/cpp/common/MPI_Comm","programmers-reference/cpp/common/MPI_barrier","programmers-reference/cpp/common/MPI_compute_local_range","programmers-reference/cpp/common/MPI_gather","programmers-reference/cpp/common/MPI_global_offset","programmers-reference/cpp/common/MPI_index_owner","programmers-reference/cpp/common/MPI_is_broadcaster","programmers-reference/cpp/common/MPI_is_receiver","programmers-reference/cpp/common/MPI_local_range","programmers-reference/cpp/common/MPI_max","programmers-reference/cpp/common/MPI_min","programmers-reference/cpp/common/MPI_num_processes","programmers-reference/cpp/common/MPI_process_number","programmers-reference/cpp/common/MPI_rank","programmers-reference/cpp/common/MPI_size","programmers-reference/cpp/common/MPI_sum","programmers-reference/cpp/common/ParameterValue","programmers-reference/cpp/common/Parameters","programmers-reference/cpp/common/Progress","programmers-reference/cpp/common/StringParameter","programmers-reference/cpp/common/SubSystemsManager","programmers-reference/cpp/common/SubSystemsManager_finalize","programmers-reference/cpp/common/SubSystemsManager_init_mpi","programmers-reference/cpp/common/SubSystemsManager_init_petsc","programmers-reference/cpp/common/SubSystemsManager_mpi_finalized","programmers-reference/cpp/common/SubSystemsManager_mpi_initialized","programmers-reference/cpp/common/SubSystemsManager_responsible_mpi","programmers-reference/cpp/common/SubSystemsManager_responsible_petsc","programmers-reference/cpp/common/Table","programmers-reference/cpp/common/TableEntry","programmers-reference/cpp/common/Timer","programmers-reference/cpp/common/UIntArray","programmers-reference/cpp/common/Variable","programmers-reference/cpp/common/begin","programmers-reference/cpp/common/debug","programmers-reference/cpp/common/deprecation","programmers-reference/cpp/common/dolfin_error","programmers-reference/cpp/common/dolfin_version","programmers-reference/cpp/common/end","programmers-reference/cpp/common/error","programmers-reference/cpp/common/get_log_level","programmers-reference/cpp/common/git_commit_hash","programmers-reference/cpp/common/has_cgal","programmers-reference/cpp/common/has_cholmod","programmers-reference/cpp/common/has_exodus","programmers-reference/cpp/common/has_hdf5","programmers-reference/cpp/common/has_mpi","programmers-reference/cpp/common/has_openmp","programmers-reference/cpp/common/has_parmetis","programmers-reference/cpp/common/has_petsc","programmers-reference/cpp/common/has_petsc_snes","programmers-reference/cpp/common/has_petsc_tao","programmers-reference/cpp/common/has_scotch","programmers-reference/cpp/common/has_slepc","programmers-reference/cpp/common/has_trilinos","programmers-reference/cpp/common/has_umfpack","programmers-reference/cpp/common/has_zlib","programmers-reference/cpp/common/index","programmers-reference/cpp/common/info","programmers-reference/cpp/common/info_stream","programmers-reference/cpp/common/info_underline","programmers-reference/cpp/common/init","programmers-reference/cpp/common/list_timings","programmers-reference/cpp/common/log","programmers-reference/cpp/common/monitor_memory_usage","programmers-reference/cpp/common/not_working_in_parallel","programmers-reference/cpp/common/set_log_active","programmers-reference/cpp/common/set_log_level","programmers-reference/cpp/common/set_output_stream","programmers-reference/cpp/common/summary","programmers-reference/cpp/common/tic","programmers-reference/cpp/common/time","programmers-reference/cpp/common/timing","programmers-reference/cpp/common/timings","programmers-reference/cpp/common/toc","programmers-reference/cpp/common/warning","programmers-reference/cpp/fem/AdaptiveLinearVariationalSolver","programmers-reference/cpp/fem/AdaptiveNonlinearVariationalSolver","programmers-reference/cpp/fem/Assembler","programmers-reference/cpp/fem/AssemblerBase","programmers-reference/cpp/fem/BasisFunction","programmers-reference/cpp/fem/CCFEMAssembler","programmers-reference/cpp/fem/CCFEMDofMap","programmers-reference/cpp/fem/CCFEMForm","programmers-reference/cpp/fem/DirichletBC","programmers-reference/cpp/fem/DirichletBC_default_parameters","programmers-reference/cpp/fem/DofMap","programmers-reference/cpp/fem/Equation","programmers-reference/cpp/fem/ErrorControl","programmers-reference/cpp/fem/ErrorControl_default_parameters","programmers-reference/cpp/fem/Extrapolation","programmers-reference/cpp/fem/Extrapolation_extrapolate","programmers-reference/cpp/fem/FiniteElement","programmers-reference/cpp/fem/Form","programmers-reference/cpp/fem/GenericAdaptiveVariationalSolver","programmers-reference/cpp/fem/GenericAdaptiveVariationalSolver_default_parameters","programmers-reference/cpp/fem/GenericDofMap","programmers-reference/cpp/fem/HierarchicalDirichletBC","programmers-reference/cpp/fem/HierarchicalErrorControl","programmers-reference/cpp/fem/HierarchicalForm","programmers-reference/cpp/fem/HierarchicalFunction","programmers-reference/cpp/fem/HierarchicalFunctionSpace","programmers-reference/cpp/fem/HierarchicalLinearVariationalProblem","programmers-reference/cpp/fem/HierarchicalMesh","programmers-reference/cpp/fem/HierarchicalMeshFunctionBool","programmers-reference/cpp/fem/HierarchicalMeshFunctionDouble","programmers-reference/cpp/fem/HierarchicalMeshFunctionInt","programmers-reference/cpp/fem/HierarchicalMeshFunctionSizet","programmers-reference/cpp/fem/HierarchicalMeshFunctionUInt","programmers-reference/cpp/fem/HierarchicalNonlinearVariationalProblem","programmers-reference/cpp/fem/LinearVariationalProblem","programmers-reference/cpp/fem/LinearVariationalSolver","programmers-reference/cpp/fem/LinearVariationalSolver_default_parameters","programmers-reference/cpp/fem/LocalAssembler","programmers-reference/cpp/fem/LocalAssembler_assemble","programmers-reference/cpp/fem/LocalAssembler_assemble_cell","programmers-reference/cpp/fem/LocalAssembler_assemble_exterior_facet","programmers-reference/cpp/fem/LocalAssembler_assemble_interior_facet","programmers-reference/cpp/fem/LocalSolver","programmers-reference/cpp/fem/MultiStageScheme","programmers-reference/cpp/fem/NonlinearVariationalProblem","programmers-reference/cpp/fem/NonlinearVariationalSolver","programmers-reference/cpp/fem/NonlinearVariationalSolver_default_parameters","programmers-reference/cpp/fem/OpenMpAssembler","programmers-reference/cpp/fem/PointIntegralSolver","programmers-reference/cpp/fem/PointIntegralSolver_default_parameters","programmers-reference/cpp/fem/PointSource","programmers-reference/cpp/fem/RKSolver","programmers-reference/cpp/fem/SparsityPatternBuilder","programmers-reference/cpp/fem/SparsityPatternBuilder_build","programmers-reference/cpp/fem/SparsityPatternBuilder_build_ccfem","programmers-reference/cpp/fem/SystemAssembler","programmers-reference/cpp/fem/TimeSeries","programmers-reference/cpp/fem/TimeSeriesHDF5","programmers-reference/cpp/fem/TimeSeriesHDF5_default_parameters","programmers-reference/cpp/fem/TimeSeries_default_parameters","programmers-reference/cpp/fem/TimeSeries_filename_data","programmers-reference/cpp/fem/TimeSeries_filename_times","programmers-reference/cpp/fem/adapt","programmers-reference/cpp/fem/adapt_markers","programmers-reference/cpp/fem/assemble","programmers-reference/cpp/fem/assemble_system","programmers-reference/cpp/fem/bool_deprecated","programmers-reference/cpp/fem/dof_to_vertex_map","programmers-reference/cpp/fem/dorfler_mark","programmers-reference/cpp/fem/fem_solve","programmers-reference/cpp/fem/index","programmers-reference/cpp/fem/mark","programmers-reference/cpp/fem/vertex_to_dof_map","programmers-reference/cpp/function/ALE","programmers-reference/cpp/function/ALE_move","programmers-reference/cpp/function/BoostGraphOrdering","programmers-reference/cpp/function/BoostGraphOrdering_compute_cuthill_mckee","programmers-reference/cpp/function/CCFEMFunction","programmers-reference/cpp/function/CCFEMFunctionSpace","programmers-reference/cpp/function/Constant","programmers-reference/cpp/function/Expression","programmers-reference/cpp/function/FacetArea","programmers-reference/cpp/function/Function","programmers-reference/cpp/function/FunctionAXPY","programmers-reference/cpp/function/FunctionAssigner","programmers-reference/cpp/function/FunctionSpace","programmers-reference/cpp/function/GenericFunction","programmers-reference/cpp/function/Graph","programmers-reference/cpp/function/GraphBuilder","programmers-reference/cpp/function/GraphBuilder_compute_dual_graph","programmers-reference/cpp/function/GraphBuilder_local_graph","programmers-reference/cpp/function/HierarchicalFunction","programmers-reference/cpp/function/HierarchicalFunctionSpace","programmers-reference/cpp/function/HierarchicalMesh","programmers-reference/cpp/function/HierarchicalMeshFunctionBool","programmers-reference/cpp/function/HierarchicalMeshFunctionDouble","programmers-reference/cpp/function/HierarchicalMeshFunctionInt","programmers-reference/cpp/function/HierarchicalMeshFunctionSizet","programmers-reference/cpp/function/HierarchicalMeshFunctionUInt","programmers-reference/cpp/function/Lagrange","programmers-reference/cpp/function/LagrangeInterpolator","programmers-reference/cpp/function/Legendre","programmers-reference/cpp/function/Legendre_d2dx","programmers-reference/cpp/function/Legendre_ddx","programmers-reference/cpp/function/Legendre_eval","programmers-reference/cpp/function/MeshCoordinates","programmers-reference/cpp/function/MeshDisplacement","programmers-reference/cpp/function/SCOTCH","programmers-reference/cpp/function/SCOTCH_compute_gps","programmers-reference/cpp/function/SpecialFacetFunction","programmers-reference/cpp/function/SubSpace","programmers-reference/cpp/function/assign","programmers-reference/cpp/function/between","programmers-reference/cpp/function/index","programmers-reference/cpp/function/ipow","programmers-reference/cpp/function/lt_coordinate","programmers-reference/cpp/function/near","programmers-reference/cpp/function/rand","programmers-reference/cpp/function/seed","programmers-reference/cpp/index","programmers-reference/cpp/io/File","programmers-reference/cpp/io/File_create_parent_path","programmers-reference/cpp/io/File_exists","programmers-reference/cpp/io/GenericFile","programmers-reference/cpp/io/HDF5Attribute","programmers-reference/cpp/io/HDF5File","programmers-reference/cpp/io/HierarchicalFunction","programmers-reference/cpp/io/HierarchicalFunctionSpace","programmers-reference/cpp/io/HierarchicalMesh","programmers-reference/cpp/io/HierarchicalMeshFunctionBool","programmers-reference/cpp/io/HierarchicalMeshFunctionDouble","programmers-reference/cpp/io/HierarchicalMeshFunctionInt","programmers-reference/cpp/io/HierarchicalMeshFunctionSizet","programmers-reference/cpp/io/HierarchicalMeshFunctionUInt","programmers-reference/cpp/io/VTKPlotter","programmers-reference/cpp/io/VTKPlotter_all_interactive","programmers-reference/cpp/io/VTKPlotter_default_parameters","programmers-reference/cpp/io/VTKPlotter_to_key","programmers-reference/cpp/io/XDMFFile","programmers-reference/cpp/io/index","programmers-reference/cpp/io/interactive","programmers-reference/cpp/io/plot","programmers-reference/cpp/la/BlockMatrix","programmers-reference/cpp/la/BlockVector","programmers-reference/cpp/la/CholmodCholeskySolver","programmers-reference/cpp/la/CholmodCholeskySolver_default_parameters","programmers-reference/cpp/la/CoordinateMatrix","programmers-reference/cpp/la/DefaultFactory","programmers-reference/cpp/la/DefaultFactory_factory","programmers-reference/cpp/la/EpetraFactory","programmers-reference/cpp/la/EpetraKrylovSolver","programmers-reference/cpp/la/EpetraKrylovSolver_default_parameters","programmers-reference/cpp/la/EpetraKrylovSolver_methods","programmers-reference/cpp/la/EpetraKrylovSolver_preconditioners","programmers-reference/cpp/la/EpetraLUSolver","programmers-reference/cpp/la/EpetraLUSolver_default_parameters","programmers-reference/cpp/la/EpetraLUSolver_methods","programmers-reference/cpp/la/EpetraMatrix","programmers-reference/cpp/la/EpetraVector","programmers-reference/cpp/la/GenericLUSolver","programmers-reference/cpp/la/GenericLinearAlgebraFactory","programmers-reference/cpp/la/GenericLinearOperator","programmers-reference/cpp/la/GenericLinearSolver","programmers-reference/cpp/la/GenericMatrix","programmers-reference/cpp/la/GenericPreconditioner","programmers-reference/cpp/la/GenericSparsityPattern","programmers-reference/cpp/la/GenericTensor","programmers-reference/cpp/la/GenericVector","programmers-reference/cpp/la/KrylovSolver","programmers-reference/cpp/la/KrylovSolver_default_parameters","programmers-reference/cpp/la/LUSolver","programmers-reference/cpp/la/LUSolver_default_parameters","programmers-reference/cpp/la/LinearAlgebraObject","programmers-reference/cpp/la/LinearOperator","programmers-reference/cpp/la/LinearSolver","programmers-reference/cpp/la/LinearSolver_default_parameters","programmers-reference/cpp/la/Matrix","programmers-reference/cpp/la/NewtonSolver","programmers-reference/cpp/la/NewtonSolver_default_parameters","programmers-reference/cpp/la/NonlinearProblem","programmers-reference/cpp/la/PETScBaseMatrix","programmers-reference/cpp/la/PETScFactory","programmers-reference/cpp/la/PETScFactory_instance","programmers-reference/cpp/la/PETScKrylovSolver","programmers-reference/cpp/la/PETScKrylovSolver_default_parameters","programmers-reference/cpp/la/PETScKrylovSolver_methods","programmers-reference/cpp/la/PETScKrylovSolver_preconditioners","programmers-reference/cpp/la/PETScLUSolver","programmers-reference/cpp/la/PETScLUSolver_default_parameters","programmers-reference/cpp/la/PETScLUSolver_methods","programmers-reference/cpp/la/PETScLinearOperator","programmers-reference/cpp/la/PETScMatrix","programmers-reference/cpp/la/PETScObject","programmers-reference/cpp/la/PETScObject_petsc_error","programmers-reference/cpp/la/PETScOptions","programmers-reference/cpp/la/PETScOptions_clear","programmers-reference/cpp/la/PETScOptions_set","programmers-reference/cpp/la/PETScPreconditioner","programmers-reference/cpp/la/PETScPreconditioner_default_parameters","programmers-reference/cpp/la/PETScPreconditioner_preconditioners","programmers-reference/cpp/la/PETScSNESSolver","programmers-reference/cpp/la/PETScSNESSolver_default_parameters","programmers-reference/cpp/la/PETScSNESSolver_methods","programmers-reference/cpp/la/PETScUserPreconditioner","programmers-reference/cpp/la/PETScVector","programmers-reference/cpp/la/SLEPcEigenSolver","programmers-reference/cpp/la/SLEPcEigenSolver_default_parameters","programmers-reference/cpp/la/STLFactory","programmers-reference/cpp/la/STLFactory_instance","programmers-reference/cpp/la/STLMatrix","programmers-reference/cpp/la/Scalar","programmers-reference/cpp/la/SparsityPattern","programmers-reference/cpp/la/TrilinosPreconditioner","programmers-reference/cpp/la/TrilinosPreconditioner_default_parameters","programmers-reference/cpp/la/TrilinosPreconditioner_preconditioners","programmers-reference/cpp/la/UmfpackLUSolver","programmers-reference/cpp/la/UmfpackLUSolver_default_parameters","programmers-reference/cpp/la/Vector","programmers-reference/cpp/la/VectorSpaceBasis","programmers-reference/cpp/la/as_backend_type","programmers-reference/cpp/la/get_tensor_type","programmers-reference/cpp/la/has_krylov_solver_method","programmers-reference/cpp/la/has_krylov_solver_preconditioner","programmers-reference/cpp/la/has_lu_solver_method","programmers-reference/cpp/la/has_type","programmers-reference/cpp/la/index","programmers-reference/cpp/la/krylov_solver_methods","programmers-reference/cpp/la/krylov_solver_preconditioners","programmers-reference/cpp/la/la_solve","programmers-reference/cpp/la/linear_algebra_backends","programmers-reference/cpp/la/linear_solver_methods","programmers-reference/cpp/la/list_krylov_solver_methods","programmers-reference/cpp/la/list_krylov_solver_preconditioners","programmers-reference/cpp/la/list_linear_algebra_backends","programmers-reference/cpp/la/list_linear_solver_methods","programmers-reference/cpp/la/list_lu_solver_methods","programmers-reference/cpp/la/lu_solver_methods","programmers-reference/cpp/la/normalize","programmers-reference/cpp/la/residual","programmers-reference/cpp/la/uBLASDenseFactory","programmers-reference/cpp/la/uBLASDenseFactory_instance","programmers-reference/cpp/la/uBLASDenseMatrix","programmers-reference/cpp/la/uBLASILUPreconditioner","programmers-reference/cpp/la/uBLASKrylovSolver","programmers-reference/cpp/la/uBLASKrylovSolver_default_parameters","programmers-reference/cpp/la/uBLASKrylovSolver_methods","programmers-reference/cpp/la/uBLASKrylovSolver_preconditioners","programmers-reference/cpp/la/uBLASLinearOperator","programmers-reference/cpp/la/uBLASPreconditioner","programmers-reference/cpp/la/uBLASSparseFactory","programmers-reference/cpp/la/uBLASSparseFactory_instance","programmers-reference/cpp/la/uBLASSparseMatrix","programmers-reference/cpp/la/uBLASVector","programmers-reference/cpp/mesh/BoundaryMesh","programmers-reference/cpp/mesh/BoundingBoxTree","programmers-reference/cpp/mesh/BoundingBoxTree3D","programmers-reference/cpp/mesh/Box","programmers-reference/cpp/mesh/BoxMesh","programmers-reference/cpp/mesh/CSGCGALMeshGenerator2D","programmers-reference/cpp/mesh/CSGCGALMeshGenerator2D_default_parameters","programmers-reference/cpp/mesh/CSGCGALMeshGenerator3D","programmers-reference/cpp/mesh/CSGCGALMeshGenerator3D_default_parameters","programmers-reference/cpp/mesh/CSGDifference","programmers-reference/cpp/mesh/CSGGeometries","programmers-reference/cpp/mesh/CSGGeometry","programmers-reference/cpp/mesh/CSGIntersection","programmers-reference/cpp/mesh/CSGMeshGenerator","programmers-reference/cpp/mesh/CSGMeshGenerator_generate","programmers-reference/cpp/mesh/CSGOperator","programmers-reference/cpp/mesh/CSGPrimitive","programmers-reference/cpp/mesh/CSGPrimitive2D","programmers-reference/cpp/mesh/CSGPrimitive3D","programmers-reference/cpp/mesh/CSGUnion","programmers-reference/cpp/mesh/Cell","programmers-reference/cpp/mesh/CellFunction","programmers-reference/cpp/mesh/CellFunctionBool","programmers-reference/cpp/mesh/CellFunctionDouble","programmers-reference/cpp/mesh/CellFunctionInt","programmers-reference/cpp/mesh/CellFunctionSizet","programmers-reference/cpp/mesh/CellType","programmers-reference/cpp/mesh/CellType_create","programmers-reference/cpp/mesh/CellType_string2type","programmers-reference/cpp/mesh/CellType_type2string","programmers-reference/cpp/mesh/Circle","programmers-reference/cpp/mesh/CircleMesh","programmers-reference/cpp/mesh/Cone","programmers-reference/cpp/mesh/Cylinder","programmers-reference/cpp/mesh/DomainBoundary","programmers-reference/cpp/mesh/DynamicMeshEditor","programmers-reference/cpp/mesh/Edge","programmers-reference/cpp/mesh/EdgeFunction","programmers-reference/cpp/mesh/EdgeFunctionBool","programmers-reference/cpp/mesh/EdgeFunctionDouble","programmers-reference/cpp/mesh/EdgeFunctionInt","programmers-reference/cpp/mesh/EdgeFunctionSizet","programmers-reference/cpp/mesh/Ellipse","programmers-reference/cpp/mesh/EllipseMesh","programmers-reference/cpp/mesh/EllipsoidMesh","programmers-reference/cpp/mesh/Face","programmers-reference/cpp/mesh/FaceFunction","programmers-reference/cpp/mesh/FaceFunctionBool","programmers-reference/cpp/mesh/FaceFunctionDouble","programmers-reference/cpp/mesh/FaceFunctionInt","programmers-reference/cpp/mesh/FaceFunctionSizet","programmers-reference/cpp/mesh/Facet","programmers-reference/cpp/mesh/FacetCell","programmers-reference/cpp/mesh/FacetFunction","programmers-reference/cpp/mesh/FacetFunctionBool","programmers-reference/cpp/mesh/FacetFunctionDouble","programmers-reference/cpp/mesh/FacetFunctionInt","programmers-reference/cpp/mesh/FacetFunctionSizet","programmers-reference/cpp/mesh/GenericBoundingBoxTree","programmers-reference/cpp/mesh/HierarchicalFunction","programmers-reference/cpp/mesh/HierarchicalFunctionSpace","programmers-reference/cpp/mesh/HierarchicalMesh","programmers-reference/cpp/mesh/HierarchicalMeshFunctionBool","programmers-reference/cpp/mesh/HierarchicalMeshFunctionDouble","programmers-reference/cpp/mesh/HierarchicalMeshFunctionInt","programmers-reference/cpp/mesh/HierarchicalMeshFunctionSizet","programmers-reference/cpp/mesh/HierarchicalMeshFunctionUInt","programmers-reference/cpp/mesh/ImplicitDomainMeshGenerator","programmers-reference/cpp/mesh/ImplicitDomainMeshGenerator_generate","programmers-reference/cpp/mesh/ImplicitDomainMeshGenerator_generate_surface","programmers-reference/cpp/mesh/ImplicitSurface","programmers-reference/cpp/mesh/IntervalMesh","programmers-reference/cpp/mesh/LocalMeshData","programmers-reference/cpp/mesh/Mesh","programmers-reference/cpp/mesh/MeshColoring","programmers-reference/cpp/mesh/MeshColoring_cell_colors","programmers-reference/cpp/mesh/MeshColoring_color","programmers-reference/cpp/mesh/MeshColoring_color_cells","programmers-reference/cpp/mesh/MeshColoring_compute_colors","programmers-reference/cpp/mesh/MeshColoring_type_to_dim","programmers-reference/cpp/mesh/MeshConnectivity","programmers-reference/cpp/mesh/MeshData","programmers-reference/cpp/mesh/MeshDomains","programmers-reference/cpp/mesh/MeshEditor","programmers-reference/cpp/mesh/MeshEntity","programmers-reference/cpp/mesh/MeshFunction","programmers-reference/cpp/mesh/MeshFunctionBool","programmers-reference/cpp/mesh/MeshFunctionDouble","programmers-reference/cpp/mesh/MeshFunctionInt","programmers-reference/cpp/mesh/MeshFunctionSizet","programmers-reference/cpp/mesh/MeshGeometry","programmers-reference/cpp/mesh/MeshPointIntersection","programmers-reference/cpp/mesh/MeshQuality","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_histogram_data","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_matplotlib_histogram","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_min_max","programmers-reference/cpp/mesh/MeshQuality_radius_ratios","programmers-reference/cpp/mesh/MeshRenumbering","programmers-reference/cpp/mesh/MeshTopology","programmers-reference/cpp/mesh/MeshTransformation","programmers-reference/cpp/mesh/MeshTransformation_rotate","programmers-reference/cpp/mesh/MeshTransformation_translate","programmers-reference/cpp/mesh/MeshValueCollection","programmers-reference/cpp/mesh/MeshValueCollectionBool","programmers-reference/cpp/mesh/MeshValueCollectionDouble","programmers-reference/cpp/mesh/MeshValueCollectionInt","programmers-reference/cpp/mesh/MeshValueCollectionSizet","programmers-reference/cpp/mesh/PeriodicBoundaryComputation","programmers-reference/cpp/mesh/PeriodicBoundaryComputation_compute_periodic_pairs","programmers-reference/cpp/mesh/PeriodicBoundaryComputation_masters_slaves","programmers-reference/cpp/mesh/Point","programmers-reference/cpp/mesh/Polygon","programmers-reference/cpp/mesh/PolygonalMeshGenerator","programmers-reference/cpp/mesh/PolygonalMeshGenerator_generate","programmers-reference/cpp/mesh/PolyhedralMeshGenerator","programmers-reference/cpp/mesh/PolyhedralMeshGenerator_generate","programmers-reference/cpp/mesh/PolyhedralMeshGenerator_generate_surface_mesh","programmers-reference/cpp/mesh/Rectangle","programmers-reference/cpp/mesh/RectangleMesh","programmers-reference/cpp/mesh/Restriction","programmers-reference/cpp/mesh/Sphere","programmers-reference/cpp/mesh/SphereMesh","programmers-reference/cpp/mesh/SubDomain","programmers-reference/cpp/mesh/SubMesh","programmers-reference/cpp/mesh/SubsetIterator","programmers-reference/cpp/mesh/Surface3D","programmers-reference/cpp/mesh/Tetrahedron","programmers-reference/cpp/mesh/Triangulate","programmers-reference/cpp/mesh/Triangulate_triangulate","programmers-reference/cpp/mesh/UnitCubeMesh","programmers-reference/cpp/mesh/UnitIntervalMesh","programmers-reference/cpp/mesh/UnitSquareMesh","programmers-reference/cpp/mesh/UnitTetrahedronMesh","programmers-reference/cpp/mesh/UnitTriangleMesh","programmers-reference/cpp/mesh/Vertex","programmers-reference/cpp/mesh/VertexFunction","programmers-reference/cpp/mesh/VertexFunctionBool","programmers-reference/cpp/mesh/VertexFunctionDouble","programmers-reference/cpp/mesh/VertexFunctionInt","programmers-reference/cpp/mesh/VertexFunctionSizet","programmers-reference/cpp/mesh/cells","programmers-reference/cpp/mesh/edges","programmers-reference/cpp/mesh/entities","programmers-reference/cpp/mesh/faces","programmers-reference/cpp/mesh/facets","programmers-reference/cpp/mesh/index","programmers-reference/cpp/mesh/intersect","programmers-reference/cpp/mesh/refine","programmers-reference/cpp/mesh/vertices","programmers-reference/deprecation/down_cast","programmers-reference/deprecation/index","programmers-reference/fem/adaptivesolving/AdaptiveLinearVariationalSolver","programmers-reference/fem/adaptivesolving/AdaptiveNonlinearVariationalSolver","programmers-reference/fem/adaptivesolving/generate_error_control","programmers-reference/fem/adaptivesolving/generate_error_control_forms","programmers-reference/fem/adaptivesolving/index","programmers-reference/fem/assembling/SystemAssembler","programmers-reference/fem/assembling/assemble","programmers-reference/fem/assembling/assemble_system","programmers-reference/fem/assembling/index","programmers-reference/fem/bcs/AutoSubDomain","programmers-reference/fem/bcs/DirichletBC","programmers-reference/fem/bcs/homogenize","programmers-reference/fem/bcs/index","programmers-reference/fem/errorcontrolgenerator/DOLFINErrorControlGenerator","programmers-reference/fem/errorcontrolgenerator/index","programmers-reference/fem/form/Form","programmers-reference/fem/form/index","programmers-reference/fem/formmanipulations/adjoint","programmers-reference/fem/formmanipulations/derivative","programmers-reference/fem/formmanipulations/increase_order","programmers-reference/fem/formmanipulations/index","programmers-reference/fem/formmanipulations/tear","programmers-reference/fem/index","programmers-reference/fem/interpolation/index","programmers-reference/fem/interpolation/interpolate","programmers-reference/fem/norms/errornorm","programmers-reference/fem/norms/index","programmers-reference/fem/norms/norm","programmers-reference/fem/projection/index","programmers-reference/fem/projection/project","programmers-reference/fem/solving/LinearVariationalProblem","programmers-reference/fem/solving/LinearVariationalSolver","programmers-reference/fem/solving/NonlinearVariationalProblem","programmers-reference/fem/solving/NonlinearVariationalSolver","programmers-reference/fem/solving/index","programmers-reference/fem/solving/solve","programmers-reference/functions/constant/Constant","programmers-reference/functions/constant/index","programmers-reference/functions/expression/Expression","programmers-reference/functions/expression/index","programmers-reference/functions/function/Argument","programmers-reference/functions/function/Function","programmers-reference/functions/function/TestFunction","programmers-reference/functions/function/TestFunctions","programmers-reference/functions/function/TrialFunction","programmers-reference/functions/function/TrialFunctions","programmers-reference/functions/function/index","programmers-reference/functions/functionspace/FunctionSpace","programmers-reference/functions/functionspace/FunctionSpaceBase","programmers-reference/functions/functionspace/FunctionSpaceFromCpp","programmers-reference/functions/functionspace/MixedFunctionSpace","programmers-reference/functions/functionspace/TensorFunctionSpace","programmers-reference/functions/functionspace/VectorFunctionSpace","programmers-reference/functions/functionspace/create_ufc_function_spaces","programmers-reference/functions/functionspace/index","programmers-reference/functions/index","programmers-reference/functions/specialfunctions/CellNormal","programmers-reference/functions/specialfunctions/CellSize","programmers-reference/functions/specialfunctions/CellVolume","programmers-reference/functions/specialfunctions/Circumradius","programmers-reference/functions/specialfunctions/FacetArea","programmers-reference/functions/specialfunctions/FacetNormal","programmers-reference/functions/specialfunctions/MaxFacetEdgeLength","programmers-reference/functions/specialfunctions/MeshCoordinates","programmers-reference/functions/specialfunctions/MinFacetEdgeLength","programmers-reference/functions/specialfunctions/SpatialCoordinate","programmers-reference/functions/specialfunctions/index","programmers-reference/functions/ufc_functionspace/UFCFunctionSpace","programmers-reference/functions/ufc_functionspace/create_ufc_function_spaces","programmers-reference/functions/ufc_functionspace/index","programmers-reference/importhandler/index","programmers-reference/index","programmers-reference/mesh/ale/compute_edge_map","programmers-reference/mesh/ale/compute_vertex_map","programmers-reference/mesh/ale/index","programmers-reference/mesh/ale/init_parent_edge_indices","programmers-reference/mesh/boundarysubdomainfinder/create_maps","programmers-reference/mesh/boundarysubdomainfinder/find_all_subdomains","programmers-reference/mesh/boundarysubdomainfinder/find_keys_on_one_subdomain","programmers-reference/mesh/boundarysubdomainfinder/find_new_cell_key","programmers-reference/mesh/boundarysubdomainfinder/find_subdomain","programmers-reference/mesh/boundarysubdomainfinder/index","programmers-reference/mesh/boundarysubdomainfinder/main","programmers-reference/mesh/boundarysubdomainfinder/usage","programmers-reference/mesh/boundarysubdomainfinder/write_file","programmers-reference/mesh/index","programmers-reference/mesh/meshes/index","programmers-reference/mesh/refinement/index","programmers-reference/mesh/refinement/refine","programmers-reference/mesh/svgtools/index","programmers-reference/mesh/svgtools/mesh2svg","programmers-reference/multistage/index","programmers-reference/multistage/multistagescheme/BDF1","programmers-reference/multistage/multistagescheme/BackwardEuler","programmers-reference/multistage/multistagescheme/CN2","programmers-reference/multistage/multistagescheme/CrankNicolson","programmers-reference/multistage/multistagescheme/ERK","programmers-reference/multistage/multistagescheme/ERK1","programmers-reference/multistage/multistagescheme/ERK4","programmers-reference/multistage/multistagescheme/ESDIRK3","programmers-reference/multistage/multistagescheme/ESDIRK4","programmers-reference/multistage/multistagescheme/ExplicitEuler","programmers-reference/multistage/multistagescheme/ExplicitMidPoint","programmers-reference/multistage/multistagescheme/ForwardEuler","programmers-reference/multistage/multistagescheme/ImplicitEuler","programmers-reference/multistage/multistagescheme/MultiStageScheme","programmers-reference/multistage/multistagescheme/RK4","programmers-reference/multistage/multistagescheme/index","programmers-reference/multistage/multistagesolvers/PointIntegralSolver","programmers-reference/multistage/multistagesolvers/RKSolver","programmers-reference/multistage/multistagesolvers/index","quick_reference"],envversion:50,filenames:["demo/documented/auto-adaptive-poisson/python/documentation.rst","demo/documented/bcs/python/documentation.rst","demo/documented/biharmonic/python/documentation.rst","demo/documented/built-in_meshes/python/documentation.rst","demo/documented/cahn-hilliard/python/documentation.rst","demo/documented/csg-2D/python/documentation.rst","demo/documented/csg-3D/python/documentation.rst","demo/documented/eigenvalue/python/documentation.rst","demo/documented/hyperelasticity/python/documentation.rst","demo/documented/mesh-generation/python/documentation.rst","demo/documented/mixed-poisson-dual/python/documentation.rst","demo/documented/mixed-poisson/python/documentation.rst","demo/documented/navier-stokes/python/documentation.rst","demo/documented/neumann-poisson/python/documentation.rst","demo/documented/nonlinear-poisson/python/documentation.rst","demo/documented/periodic/python/documentation.rst","demo/documented/poisson/python/documentation.rst","demo/documented/singular-poisson/python/documentation.rst","demo/documented/stokes-iterative/python/documentation.rst","demo/documented/stokes-mini/python/documentation.rst","demo/documented/stokes-stabilized/python/documentation.rst","demo/documented/stokes-taylor-hood/python/documentation.rst","demo/documented/subdomains-poisson/python/documentation.rst","demo/documented/subdomains/python/documentation.rst","demo/documented/tensor-weighted-poisson/python/documentation.rst","demo/index.rst","index.rst","programmers-reference/common/constants/index.rst","programmers-reference/common/globalparameters/index.rst","programmers-reference/common/index.rst","programmers-reference/common/math/index.rst","programmers-reference/common/math/sqr.rst","programmers-reference/common/memory/index.rst","programmers-reference/common/memory/memory_usage.rst","programmers-reference/common/plotting/index.rst","programmers-reference/common/plotting/plot.rst","programmers-reference/common/time/Time.rst","programmers-reference/common/time/index.rst","programmers-reference/compilemodules/compilemodule/compile_extension_module.rst","programmers-reference/compilemodules/compilemodule/expression_to_code_fragments.rst","programmers-reference/compilemodules/compilemodule/index.rst","programmers-reference/compilemodules/expressions/compile_expressions.rst","programmers-reference/compilemodules/expressions/index.rst","programmers-reference/compilemodules/index.rst","programmers-reference/compilemodules/jit/index.rst","programmers-reference/compilemodules/jit/jit.rst","programmers-reference/compilemodules/subdomains/CompiledSubDomain.rst","programmers-reference/compilemodules/subdomains/compile_subdomains.rst","programmers-reference/compilemodules/subdomains/index.rst","programmers-reference/compilemodules/swigimportinfo/index.rst","programmers-reference/cpp/common/BoolParameter.rst","programmers-reference/cpp/common/DoubleArray.rst","programmers-reference/cpp/common/DoubleParameter.rst","programmers-reference/cpp/common/Event.rst","programmers-reference/cpp/common/GlobalParameters.rst","programmers-reference/cpp/common/GlobalParameters_default_parameters.rst","programmers-reference/cpp/common/IndexSet.rst","programmers-reference/cpp/common/IntArray.rst","programmers-reference/cpp/common/IntParameter.rst","programmers-reference/cpp/common/MPI.rst","programmers-reference/cpp/common/MPIInfo.rst","programmers-reference/cpp/common/MPI_Comm.rst","programmers-reference/cpp/common/MPI_barrier.rst","programmers-reference/cpp/common/MPI_compute_local_range.rst","programmers-reference/cpp/common/MPI_gather.rst","programmers-reference/cpp/common/MPI_global_offset.rst","programmers-reference/cpp/common/MPI_index_owner.rst","programmers-reference/cpp/common/MPI_is_broadcaster.rst","programmers-reference/cpp/common/MPI_is_receiver.rst","programmers-reference/cpp/common/MPI_local_range.rst","programmers-reference/cpp/common/MPI_max.rst","programmers-reference/cpp/common/MPI_min.rst","programmers-reference/cpp/common/MPI_num_processes.rst","programmers-reference/cpp/common/MPI_process_number.rst","programmers-reference/cpp/common/MPI_rank.rst","programmers-reference/cpp/common/MPI_size.rst","programmers-reference/cpp/common/MPI_sum.rst","programmers-reference/cpp/common/ParameterValue.rst","programmers-reference/cpp/common/Parameters.rst","programmers-reference/cpp/common/Progress.rst","programmers-reference/cpp/common/StringParameter.rst","programmers-reference/cpp/common/SubSystemsManager.rst","programmers-reference/cpp/common/SubSystemsManager_finalize.rst","programmers-reference/cpp/common/SubSystemsManager_init_mpi.rst","programmers-reference/cpp/common/SubSystemsManager_init_petsc.rst","programmers-reference/cpp/common/SubSystemsManager_mpi_finalized.rst","programmers-reference/cpp/common/SubSystemsManager_mpi_initialized.rst","programmers-reference/cpp/common/SubSystemsManager_responsible_mpi.rst","programmers-reference/cpp/common/SubSystemsManager_responsible_petsc.rst","programmers-reference/cpp/common/Table.rst","programmers-reference/cpp/common/TableEntry.rst","programmers-reference/cpp/common/Timer.rst","programmers-reference/cpp/common/UIntArray.rst","programmers-reference/cpp/common/Variable.rst","programmers-reference/cpp/common/begin.rst","programmers-reference/cpp/common/debug.rst","programmers-reference/cpp/common/deprecation.rst","programmers-reference/cpp/common/dolfin_error.rst","programmers-reference/cpp/common/dolfin_version.rst","programmers-reference/cpp/common/end.rst","programmers-reference/cpp/common/error.rst","programmers-reference/cpp/common/get_log_level.rst","programmers-reference/cpp/common/git_commit_hash.rst","programmers-reference/cpp/common/has_cgal.rst","programmers-reference/cpp/common/has_cholmod.rst","programmers-reference/cpp/common/has_exodus.rst","programmers-reference/cpp/common/has_hdf5.rst","programmers-reference/cpp/common/has_mpi.rst","programmers-reference/cpp/common/has_openmp.rst","programmers-reference/cpp/common/has_parmetis.rst","programmers-reference/cpp/common/has_petsc.rst","programmers-reference/cpp/common/has_petsc_snes.rst","programmers-reference/cpp/common/has_petsc_tao.rst","programmers-reference/cpp/common/has_scotch.rst","programmers-reference/cpp/common/has_slepc.rst","programmers-reference/cpp/common/has_trilinos.rst","programmers-reference/cpp/common/has_umfpack.rst","programmers-reference/cpp/common/has_zlib.rst","programmers-reference/cpp/common/index.rst","programmers-reference/cpp/common/info.rst","programmers-reference/cpp/common/info_stream.rst","programmers-reference/cpp/common/info_underline.rst","programmers-reference/cpp/common/init.rst","programmers-reference/cpp/common/list_timings.rst","programmers-reference/cpp/common/log.rst","programmers-reference/cpp/common/monitor_memory_usage.rst","programmers-reference/cpp/common/not_working_in_parallel.rst","programmers-reference/cpp/common/set_log_active.rst","programmers-reference/cpp/common/set_log_level.rst","programmers-reference/cpp/common/set_output_stream.rst","programmers-reference/cpp/common/summary.rst","programmers-reference/cpp/common/tic.rst","programmers-reference/cpp/common/time.rst","programmers-reference/cpp/common/timing.rst","programmers-reference/cpp/common/timings.rst","programmers-reference/cpp/common/toc.rst","programmers-reference/cpp/common/warning.rst","programmers-reference/cpp/fem/AdaptiveLinearVariationalSolver.rst","programmers-reference/cpp/fem/AdaptiveNonlinearVariationalSolver.rst","programmers-reference/cpp/fem/Assembler.rst","programmers-reference/cpp/fem/AssemblerBase.rst","programmers-reference/cpp/fem/BasisFunction.rst","programmers-reference/cpp/fem/CCFEMAssembler.rst","programmers-reference/cpp/fem/CCFEMDofMap.rst","programmers-reference/cpp/fem/CCFEMForm.rst","programmers-reference/cpp/fem/DirichletBC.rst","programmers-reference/cpp/fem/DirichletBC_default_parameters.rst","programmers-reference/cpp/fem/DofMap.rst","programmers-reference/cpp/fem/Equation.rst","programmers-reference/cpp/fem/ErrorControl.rst","programmers-reference/cpp/fem/ErrorControl_default_parameters.rst","programmers-reference/cpp/fem/Extrapolation.rst","programmers-reference/cpp/fem/Extrapolation_extrapolate.rst","programmers-reference/cpp/fem/FiniteElement.rst","programmers-reference/cpp/fem/Form.rst","programmers-reference/cpp/fem/GenericAdaptiveVariationalSolver.rst","programmers-reference/cpp/fem/GenericAdaptiveVariationalSolver_default_parameters.rst","programmers-reference/cpp/fem/GenericDofMap.rst","programmers-reference/cpp/fem/HierarchicalDirichletBC.rst","programmers-reference/cpp/fem/HierarchicalErrorControl.rst","programmers-reference/cpp/fem/HierarchicalForm.rst","programmers-reference/cpp/fem/HierarchicalFunction.rst","programmers-reference/cpp/fem/HierarchicalFunctionSpace.rst","programmers-reference/cpp/fem/HierarchicalLinearVariationalProblem.rst","programmers-reference/cpp/fem/HierarchicalMesh.rst","programmers-reference/cpp/fem/HierarchicalMeshFunctionBool.rst","programmers-reference/cpp/fem/HierarchicalMeshFunctionDouble.rst","programmers-reference/cpp/fem/HierarchicalMeshFunctionInt.rst","programmers-reference/cpp/fem/HierarchicalMeshFunctionSizet.rst","programmers-reference/cpp/fem/HierarchicalMeshFunctionUInt.rst","programmers-reference/cpp/fem/HierarchicalNonlinearVariationalProblem.rst","programmers-reference/cpp/fem/LinearVariationalProblem.rst","programmers-reference/cpp/fem/LinearVariationalSolver.rst","programmers-reference/cpp/fem/LinearVariationalSolver_default_parameters.rst","programmers-reference/cpp/fem/LocalAssembler.rst","programmers-reference/cpp/fem/LocalAssembler_assemble.rst","programmers-reference/cpp/fem/LocalAssembler_assemble_cell.rst","programmers-reference/cpp/fem/LocalAssembler_assemble_exterior_facet.rst","programmers-reference/cpp/fem/LocalAssembler_assemble_interior_facet.rst","programmers-reference/cpp/fem/LocalSolver.rst","programmers-reference/cpp/fem/MultiStageScheme.rst","programmers-reference/cpp/fem/NonlinearVariationalProblem.rst","programmers-reference/cpp/fem/NonlinearVariationalSolver.rst","programmers-reference/cpp/fem/NonlinearVariationalSolver_default_parameters.rst","programmers-reference/cpp/fem/OpenMpAssembler.rst","programmers-reference/cpp/fem/PointIntegralSolver.rst","programmers-reference/cpp/fem/PointIntegralSolver_default_parameters.rst","programmers-reference/cpp/fem/PointSource.rst","programmers-reference/cpp/fem/RKSolver.rst","programmers-reference/cpp/fem/SparsityPatternBuilder.rst","programmers-reference/cpp/fem/SparsityPatternBuilder_build.rst","programmers-reference/cpp/fem/SparsityPatternBuilder_build_ccfem.rst","programmers-reference/cpp/fem/SystemAssembler.rst","programmers-reference/cpp/fem/TimeSeries.rst","programmers-reference/cpp/fem/TimeSeriesHDF5.rst","programmers-reference/cpp/fem/TimeSeriesHDF5_default_parameters.rst","programmers-reference/cpp/fem/TimeSeries_default_parameters.rst","programmers-reference/cpp/fem/TimeSeries_filename_data.rst","programmers-reference/cpp/fem/TimeSeries_filename_times.rst","programmers-reference/cpp/fem/adapt.rst","programmers-reference/cpp/fem/adapt_markers.rst","programmers-reference/cpp/fem/assemble.rst","programmers-reference/cpp/fem/assemble_system.rst","programmers-reference/cpp/fem/bool_deprecated.rst","programmers-reference/cpp/fem/dof_to_vertex_map.rst","programmers-reference/cpp/fem/dorfler_mark.rst","programmers-reference/cpp/fem/fem_solve.rst","programmers-reference/cpp/fem/index.rst","programmers-reference/cpp/fem/mark.rst","programmers-reference/cpp/fem/vertex_to_dof_map.rst","programmers-reference/cpp/function/ALE.rst","programmers-reference/cpp/function/ALE_move.rst","programmers-reference/cpp/function/BoostGraphOrdering.rst","programmers-reference/cpp/function/BoostGraphOrdering_compute_cuthill_mckee.rst","programmers-reference/cpp/function/CCFEMFunction.rst","programmers-reference/cpp/function/CCFEMFunctionSpace.rst","programmers-reference/cpp/function/Constant.rst","programmers-reference/cpp/function/Expression.rst","programmers-reference/cpp/function/FacetArea.rst","programmers-reference/cpp/function/Function.rst","programmers-reference/cpp/function/FunctionAXPY.rst","programmers-reference/cpp/function/FunctionAssigner.rst","programmers-reference/cpp/function/FunctionSpace.rst","programmers-reference/cpp/function/GenericFunction.rst","programmers-reference/cpp/function/Graph.rst","programmers-reference/cpp/function/GraphBuilder.rst","programmers-reference/cpp/function/GraphBuilder_compute_dual_graph.rst","programmers-reference/cpp/function/GraphBuilder_local_graph.rst","programmers-reference/cpp/function/HierarchicalFunction.rst","programmers-reference/cpp/function/HierarchicalFunctionSpace.rst","programmers-reference/cpp/function/HierarchicalMesh.rst","programmers-reference/cpp/function/HierarchicalMeshFunctionBool.rst","programmers-reference/cpp/function/HierarchicalMeshFunctionDouble.rst","programmers-reference/cpp/function/HierarchicalMeshFunctionInt.rst","programmers-reference/cpp/function/HierarchicalMeshFunctionSizet.rst","programmers-reference/cpp/function/HierarchicalMeshFunctionUInt.rst","programmers-reference/cpp/function/Lagrange.rst","programmers-reference/cpp/function/LagrangeInterpolator.rst","programmers-reference/cpp/function/Legendre.rst","programmers-reference/cpp/function/Legendre_d2dx.rst","programmers-reference/cpp/function/Legendre_ddx.rst","programmers-reference/cpp/function/Legendre_eval.rst","programmers-reference/cpp/function/MeshCoordinates.rst","programmers-reference/cpp/function/MeshDisplacement.rst","programmers-reference/cpp/function/SCOTCH.rst","programmers-reference/cpp/function/SCOTCH_compute_gps.rst","programmers-reference/cpp/function/SpecialFacetFunction.rst","programmers-reference/cpp/function/SubSpace.rst","programmers-reference/cpp/function/assign.rst","programmers-reference/cpp/function/between.rst","programmers-reference/cpp/function/index.rst","programmers-reference/cpp/function/ipow.rst","programmers-reference/cpp/function/lt_coordinate.rst","programmers-reference/cpp/function/near.rst","programmers-reference/cpp/function/rand.rst","programmers-reference/cpp/function/seed.rst","programmers-reference/cpp/index.rst","programmers-reference/cpp/io/File.rst","programmers-reference/cpp/io/File_create_parent_path.rst","programmers-reference/cpp/io/File_exists.rst","programmers-reference/cpp/io/GenericFile.rst","programmers-reference/cpp/io/HDF5Attribute.rst","programmers-reference/cpp/io/HDF5File.rst","programmers-reference/cpp/io/HierarchicalFunction.rst","programmers-reference/cpp/io/HierarchicalFunctionSpace.rst","programmers-reference/cpp/io/HierarchicalMesh.rst","programmers-reference/cpp/io/HierarchicalMeshFunctionBool.rst","programmers-reference/cpp/io/HierarchicalMeshFunctionDouble.rst","programmers-reference/cpp/io/HierarchicalMeshFunctionInt.rst","programmers-reference/cpp/io/HierarchicalMeshFunctionSizet.rst","programmers-reference/cpp/io/HierarchicalMeshFunctionUInt.rst","programmers-reference/cpp/io/VTKPlotter.rst","programmers-reference/cpp/io/VTKPlotter_all_interactive.rst","programmers-reference/cpp/io/VTKPlotter_default_parameters.rst","programmers-reference/cpp/io/VTKPlotter_to_key.rst","programmers-reference/cpp/io/XDMFFile.rst","programmers-reference/cpp/io/index.rst","programmers-reference/cpp/io/interactive.rst","programmers-reference/cpp/io/plot.rst","programmers-reference/cpp/la/BlockMatrix.rst","programmers-reference/cpp/la/BlockVector.rst","programmers-reference/cpp/la/CholmodCholeskySolver.rst","programmers-reference/cpp/la/CholmodCholeskySolver_default_parameters.rst","programmers-reference/cpp/la/CoordinateMatrix.rst","programmers-reference/cpp/la/DefaultFactory.rst","programmers-reference/cpp/la/DefaultFactory_factory.rst","programmers-reference/cpp/la/EpetraFactory.rst","programmers-reference/cpp/la/EpetraKrylovSolver.rst","programmers-reference/cpp/la/EpetraKrylovSolver_default_parameters.rst","programmers-reference/cpp/la/EpetraKrylovSolver_methods.rst","programmers-reference/cpp/la/EpetraKrylovSolver_preconditioners.rst","programmers-reference/cpp/la/EpetraLUSolver.rst","programmers-reference/cpp/la/EpetraLUSolver_default_parameters.rst","programmers-reference/cpp/la/EpetraLUSolver_methods.rst","programmers-reference/cpp/la/EpetraMatrix.rst","programmers-reference/cpp/la/EpetraVector.rst","programmers-reference/cpp/la/GenericLUSolver.rst","programmers-reference/cpp/la/GenericLinearAlgebraFactory.rst","programmers-reference/cpp/la/GenericLinearOperator.rst","programmers-reference/cpp/la/GenericLinearSolver.rst","programmers-reference/cpp/la/GenericMatrix.rst","programmers-reference/cpp/la/GenericPreconditioner.rst","programmers-reference/cpp/la/GenericSparsityPattern.rst","programmers-reference/cpp/la/GenericTensor.rst","programmers-reference/cpp/la/GenericVector.rst","programmers-reference/cpp/la/KrylovSolver.rst","programmers-reference/cpp/la/KrylovSolver_default_parameters.rst","programmers-reference/cpp/la/LUSolver.rst","programmers-reference/cpp/la/LUSolver_default_parameters.rst","programmers-reference/cpp/la/LinearAlgebraObject.rst","programmers-reference/cpp/la/LinearOperator.rst","programmers-reference/cpp/la/LinearSolver.rst","programmers-reference/cpp/la/LinearSolver_default_parameters.rst","programmers-reference/cpp/la/Matrix.rst","programmers-reference/cpp/la/NewtonSolver.rst","programmers-reference/cpp/la/NewtonSolver_default_parameters.rst","programmers-reference/cpp/la/NonlinearProblem.rst","programmers-reference/cpp/la/PETScBaseMatrix.rst","programmers-reference/cpp/la/PETScFactory.rst","programmers-reference/cpp/la/PETScFactory_instance.rst","programmers-reference/cpp/la/PETScKrylovSolver.rst","programmers-reference/cpp/la/PETScKrylovSolver_default_parameters.rst","programmers-reference/cpp/la/PETScKrylovSolver_methods.rst","programmers-reference/cpp/la/PETScKrylovSolver_preconditioners.rst","programmers-reference/cpp/la/PETScLUSolver.rst","programmers-reference/cpp/la/PETScLUSolver_default_parameters.rst","programmers-reference/cpp/la/PETScLUSolver_methods.rst","programmers-reference/cpp/la/PETScLinearOperator.rst","programmers-reference/cpp/la/PETScMatrix.rst","programmers-reference/cpp/la/PETScObject.rst","programmers-reference/cpp/la/PETScObject_petsc_error.rst","programmers-reference/cpp/la/PETScOptions.rst","programmers-reference/cpp/la/PETScOptions_clear.rst","programmers-reference/cpp/la/PETScOptions_set.rst","programmers-reference/cpp/la/PETScPreconditioner.rst","programmers-reference/cpp/la/PETScPreconditioner_default_parameters.rst","programmers-reference/cpp/la/PETScPreconditioner_preconditioners.rst","programmers-reference/cpp/la/PETScSNESSolver.rst","programmers-reference/cpp/la/PETScSNESSolver_default_parameters.rst","programmers-reference/cpp/la/PETScSNESSolver_methods.rst","programmers-reference/cpp/la/PETScUserPreconditioner.rst","programmers-reference/cpp/la/PETScVector.rst","programmers-reference/cpp/la/SLEPcEigenSolver.rst","programmers-reference/cpp/la/SLEPcEigenSolver_default_parameters.rst","programmers-reference/cpp/la/STLFactory.rst","programmers-reference/cpp/la/STLFactory_instance.rst","programmers-reference/cpp/la/STLMatrix.rst","programmers-reference/cpp/la/Scalar.rst","programmers-reference/cpp/la/SparsityPattern.rst","programmers-reference/cpp/la/TrilinosPreconditioner.rst","programmers-reference/cpp/la/TrilinosPreconditioner_default_parameters.rst","programmers-reference/cpp/la/TrilinosPreconditioner_preconditioners.rst","programmers-reference/cpp/la/UmfpackLUSolver.rst","programmers-reference/cpp/la/UmfpackLUSolver_default_parameters.rst","programmers-reference/cpp/la/Vector.rst","programmers-reference/cpp/la/VectorSpaceBasis.rst","programmers-reference/cpp/la/as_backend_type.rst","programmers-reference/cpp/la/get_tensor_type.rst","programmers-reference/cpp/la/has_krylov_solver_method.rst","programmers-reference/cpp/la/has_krylov_solver_preconditioner.rst","programmers-reference/cpp/la/has_lu_solver_method.rst","programmers-reference/cpp/la/has_type.rst","programmers-reference/cpp/la/index.rst","programmers-reference/cpp/la/krylov_solver_methods.rst","programmers-reference/cpp/la/krylov_solver_preconditioners.rst","programmers-reference/cpp/la/la_solve.rst","programmers-reference/cpp/la/linear_algebra_backends.rst","programmers-reference/cpp/la/linear_solver_methods.rst","programmers-reference/cpp/la/list_krylov_solver_methods.rst","programmers-reference/cpp/la/list_krylov_solver_preconditioners.rst","programmers-reference/cpp/la/list_linear_algebra_backends.rst","programmers-reference/cpp/la/list_linear_solver_methods.rst","programmers-reference/cpp/la/list_lu_solver_methods.rst","programmers-reference/cpp/la/lu_solver_methods.rst","programmers-reference/cpp/la/normalize.rst","programmers-reference/cpp/la/residual.rst","programmers-reference/cpp/la/uBLASDenseFactory.rst","programmers-reference/cpp/la/uBLASDenseFactory_instance.rst","programmers-reference/cpp/la/uBLASDenseMatrix.rst","programmers-reference/cpp/la/uBLASILUPreconditioner.rst","programmers-reference/cpp/la/uBLASKrylovSolver.rst","programmers-reference/cpp/la/uBLASKrylovSolver_default_parameters.rst","programmers-reference/cpp/la/uBLASKrylovSolver_methods.rst","programmers-reference/cpp/la/uBLASKrylovSolver_preconditioners.rst","programmers-reference/cpp/la/uBLASLinearOperator.rst","programmers-reference/cpp/la/uBLASPreconditioner.rst","programmers-reference/cpp/la/uBLASSparseFactory.rst","programmers-reference/cpp/la/uBLASSparseFactory_instance.rst","programmers-reference/cpp/la/uBLASSparseMatrix.rst","programmers-reference/cpp/la/uBLASVector.rst","programmers-reference/cpp/mesh/BoundaryMesh.rst","programmers-reference/cpp/mesh/BoundingBoxTree.rst","programmers-reference/cpp/mesh/BoundingBoxTree3D.rst","programmers-reference/cpp/mesh/Box.rst","programmers-reference/cpp/mesh/BoxMesh.rst","programmers-reference/cpp/mesh/CSGCGALMeshGenerator2D.rst","programmers-reference/cpp/mesh/CSGCGALMeshGenerator2D_default_parameters.rst","programmers-reference/cpp/mesh/CSGCGALMeshGenerator3D.rst","programmers-reference/cpp/mesh/CSGCGALMeshGenerator3D_default_parameters.rst","programmers-reference/cpp/mesh/CSGDifference.rst","programmers-reference/cpp/mesh/CSGGeometries.rst","programmers-reference/cpp/mesh/CSGGeometry.rst","programmers-reference/cpp/mesh/CSGIntersection.rst","programmers-reference/cpp/mesh/CSGMeshGenerator.rst","programmers-reference/cpp/mesh/CSGMeshGenerator_generate.rst","programmers-reference/cpp/mesh/CSGOperator.rst","programmers-reference/cpp/mesh/CSGPrimitive.rst","programmers-reference/cpp/mesh/CSGPrimitive2D.rst","programmers-reference/cpp/mesh/CSGPrimitive3D.rst","programmers-reference/cpp/mesh/CSGUnion.rst","programmers-reference/cpp/mesh/Cell.rst","programmers-reference/cpp/mesh/CellFunction.rst","programmers-reference/cpp/mesh/CellFunctionBool.rst","programmers-reference/cpp/mesh/CellFunctionDouble.rst","programmers-reference/cpp/mesh/CellFunctionInt.rst","programmers-reference/cpp/mesh/CellFunctionSizet.rst","programmers-reference/cpp/mesh/CellType.rst","programmers-reference/cpp/mesh/CellType_create.rst","programmers-reference/cpp/mesh/CellType_string2type.rst","programmers-reference/cpp/mesh/CellType_type2string.rst","programmers-reference/cpp/mesh/Circle.rst","programmers-reference/cpp/mesh/CircleMesh.rst","programmers-reference/cpp/mesh/Cone.rst","programmers-reference/cpp/mesh/Cylinder.rst","programmers-reference/cpp/mesh/DomainBoundary.rst","programmers-reference/cpp/mesh/DynamicMeshEditor.rst","programmers-reference/cpp/mesh/Edge.rst","programmers-reference/cpp/mesh/EdgeFunction.rst","programmers-reference/cpp/mesh/EdgeFunctionBool.rst","programmers-reference/cpp/mesh/EdgeFunctionDouble.rst","programmers-reference/cpp/mesh/EdgeFunctionInt.rst","programmers-reference/cpp/mesh/EdgeFunctionSizet.rst","programmers-reference/cpp/mesh/Ellipse.rst","programmers-reference/cpp/mesh/EllipseMesh.rst","programmers-reference/cpp/mesh/EllipsoidMesh.rst","programmers-reference/cpp/mesh/Face.rst","programmers-reference/cpp/mesh/FaceFunction.rst","programmers-reference/cpp/mesh/FaceFunctionBool.rst","programmers-reference/cpp/mesh/FaceFunctionDouble.rst","programmers-reference/cpp/mesh/FaceFunctionInt.rst","programmers-reference/cpp/mesh/FaceFunctionSizet.rst","programmers-reference/cpp/mesh/Facet.rst","programmers-reference/cpp/mesh/FacetCell.rst","programmers-reference/cpp/mesh/FacetFunction.rst","programmers-reference/cpp/mesh/FacetFunctionBool.rst","programmers-reference/cpp/mesh/FacetFunctionDouble.rst","programmers-reference/cpp/mesh/FacetFunctionInt.rst","programmers-reference/cpp/mesh/FacetFunctionSizet.rst","programmers-reference/cpp/mesh/GenericBoundingBoxTree.rst","programmers-reference/cpp/mesh/HierarchicalFunction.rst","programmers-reference/cpp/mesh/HierarchicalFunctionSpace.rst","programmers-reference/cpp/mesh/HierarchicalMesh.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionBool.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionDouble.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionInt.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionSizet.rst","programmers-reference/cpp/mesh/HierarchicalMeshFunctionUInt.rst","programmers-reference/cpp/mesh/ImplicitDomainMeshGenerator.rst","programmers-reference/cpp/mesh/ImplicitDomainMeshGenerator_generate.rst","programmers-reference/cpp/mesh/ImplicitDomainMeshGenerator_generate_surface.rst","programmers-reference/cpp/mesh/ImplicitSurface.rst","programmers-reference/cpp/mesh/IntervalMesh.rst","programmers-reference/cpp/mesh/LocalMeshData.rst","programmers-reference/cpp/mesh/Mesh.rst","programmers-reference/cpp/mesh/MeshColoring.rst","programmers-reference/cpp/mesh/MeshColoring_cell_colors.rst","programmers-reference/cpp/mesh/MeshColoring_color.rst","programmers-reference/cpp/mesh/MeshColoring_color_cells.rst","programmers-reference/cpp/mesh/MeshColoring_compute_colors.rst","programmers-reference/cpp/mesh/MeshColoring_type_to_dim.rst","programmers-reference/cpp/mesh/MeshConnectivity.rst","programmers-reference/cpp/mesh/MeshData.rst","programmers-reference/cpp/mesh/MeshDomains.rst","programmers-reference/cpp/mesh/MeshEditor.rst","programmers-reference/cpp/mesh/MeshEntity.rst","programmers-reference/cpp/mesh/MeshFunction.rst","programmers-reference/cpp/mesh/MeshFunctionBool.rst","programmers-reference/cpp/mesh/MeshFunctionDouble.rst","programmers-reference/cpp/mesh/MeshFunctionInt.rst","programmers-reference/cpp/mesh/MeshFunctionSizet.rst","programmers-reference/cpp/mesh/MeshGeometry.rst","programmers-reference/cpp/mesh/MeshPointIntersection.rst","programmers-reference/cpp/mesh/MeshQuality.rst","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_histogram_data.rst","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_matplotlib_histogram.rst","programmers-reference/cpp/mesh/MeshQuality_radius_ratio_min_max.rst","programmers-reference/cpp/mesh/MeshQuality_radius_ratios.rst","programmers-reference/cpp/mesh/MeshRenumbering.rst","programmers-reference/cpp/mesh/MeshTopology.rst","programmers-reference/cpp/mesh/MeshTransformation.rst","programmers-reference/cpp/mesh/MeshTransformation_rotate.rst","programmers-reference/cpp/mesh/MeshTransformation_translate.rst","programmers-reference/cpp/mesh/MeshValueCollection.rst","programmers-reference/cpp/mesh/MeshValueCollectionBool.rst","programmers-reference/cpp/mesh/MeshValueCollectionDouble.rst","programmers-reference/cpp/mesh/MeshValueCollectionInt.rst","programmers-reference/cpp/mesh/MeshValueCollectionSizet.rst","programmers-reference/cpp/mesh/PeriodicBoundaryComputation.rst","programmers-reference/cpp/mesh/PeriodicBoundaryComputation_compute_periodic_pairs.rst","programmers-reference/cpp/mesh/PeriodicBoundaryComputation_masters_slaves.rst","programmers-reference/cpp/mesh/Point.rst","programmers-reference/cpp/mesh/Polygon.rst","programmers-reference/cpp/mesh/PolygonalMeshGenerator.rst","programmers-reference/cpp/mesh/PolygonalMeshGenerator_generate.rst","programmers-reference/cpp/mesh/PolyhedralMeshGenerator.rst","programmers-reference/cpp/mesh/PolyhedralMeshGenerator_generate.rst","programmers-reference/cpp/mesh/PolyhedralMeshGenerator_generate_surface_mesh.rst","programmers-reference/cpp/mesh/Rectangle.rst","programmers-reference/cpp/mesh/RectangleMesh.rst","programmers-reference/cpp/mesh/Restriction.rst","programmers-reference/cpp/mesh/Sphere.rst","programmers-reference/cpp/mesh/SphereMesh.rst","programmers-reference/cpp/mesh/SubDomain.rst","programmers-reference/cpp/mesh/SubMesh.rst","programmers-reference/cpp/mesh/SubsetIterator.rst","programmers-reference/cpp/mesh/Surface3D.rst","programmers-reference/cpp/mesh/Tetrahedron.rst","programmers-reference/cpp/mesh/Triangulate.rst","programmers-reference/cpp/mesh/Triangulate_triangulate.rst","programmers-reference/cpp/mesh/UnitCubeMesh.rst","programmers-reference/cpp/mesh/UnitIntervalMesh.rst","programmers-reference/cpp/mesh/UnitSquareMesh.rst","programmers-reference/cpp/mesh/UnitTetrahedronMesh.rst","programmers-reference/cpp/mesh/UnitTriangleMesh.rst","programmers-reference/cpp/mesh/Vertex.rst","programmers-reference/cpp/mesh/VertexFunction.rst","programmers-reference/cpp/mesh/VertexFunctionBool.rst","programmers-reference/cpp/mesh/VertexFunctionDouble.rst","programmers-reference/cpp/mesh/VertexFunctionInt.rst","programmers-reference/cpp/mesh/VertexFunctionSizet.rst","programmers-reference/cpp/mesh/cells.rst","programmers-reference/cpp/mesh/edges.rst","programmers-reference/cpp/mesh/entities.rst","programmers-reference/cpp/mesh/faces.rst","programmers-reference/cpp/mesh/facets.rst","programmers-reference/cpp/mesh/index.rst","programmers-reference/cpp/mesh/intersect.rst","programmers-reference/cpp/mesh/refine.rst","programmers-reference/cpp/mesh/vertices.rst","programmers-reference/deprecation/down_cast.rst","programmers-reference/deprecation/index.rst","programmers-reference/fem/adaptivesolving/AdaptiveLinearVariationalSolver.rst","programmers-reference/fem/adaptivesolving/AdaptiveNonlinearVariationalSolver.rst","programmers-reference/fem/adaptivesolving/generate_error_control.rst","programmers-reference/fem/adaptivesolving/generate_error_control_forms.rst","programmers-reference/fem/adaptivesolving/index.rst","programmers-reference/fem/assembling/SystemAssembler.rst","programmers-reference/fem/assembling/assemble.rst","programmers-reference/fem/assembling/assemble_system.rst","programmers-reference/fem/assembling/index.rst","programmers-reference/fem/bcs/AutoSubDomain.rst","programmers-reference/fem/bcs/DirichletBC.rst","programmers-reference/fem/bcs/homogenize.rst","programmers-reference/fem/bcs/index.rst","programmers-reference/fem/errorcontrolgenerator/DOLFINErrorControlGenerator.rst","programmers-reference/fem/errorcontrolgenerator/index.rst","programmers-reference/fem/form/Form.rst","programmers-reference/fem/form/index.rst","programmers-reference/fem/formmanipulations/adjoint.rst","programmers-reference/fem/formmanipulations/derivative.rst","programmers-reference/fem/formmanipulations/increase_order.rst","programmers-reference/fem/formmanipulations/index.rst","programmers-reference/fem/formmanipulations/tear.rst","programmers-reference/fem/index.rst","programmers-reference/fem/interpolation/index.rst","programmers-reference/fem/interpolation/interpolate.rst","programmers-reference/fem/norms/errornorm.rst","programmers-reference/fem/norms/index.rst","programmers-reference/fem/norms/norm.rst","programmers-reference/fem/projection/index.rst","programmers-reference/fem/projection/project.rst","programmers-reference/fem/solving/LinearVariationalProblem.rst","programmers-reference/fem/solving/LinearVariationalSolver.rst","programmers-reference/fem/solving/NonlinearVariationalProblem.rst","programmers-reference/fem/solving/NonlinearVariationalSolver.rst","programmers-reference/fem/solving/index.rst","programmers-reference/fem/solving/solve.rst","programmers-reference/functions/constant/Constant.rst","programmers-reference/functions/constant/index.rst","programmers-reference/functions/expression/Expression.rst","programmers-reference/functions/expression/index.rst","programmers-reference/functions/function/Argument.rst","programmers-reference/functions/function/Function.rst","programmers-reference/functions/function/TestFunction.rst","programmers-reference/functions/function/TestFunctions.rst","programmers-reference/functions/function/TrialFunction.rst","programmers-reference/functions/function/TrialFunctions.rst","programmers-reference/functions/function/index.rst","programmers-reference/functions/functionspace/FunctionSpace.rst","programmers-reference/functions/functionspace/FunctionSpaceBase.rst","programmers-reference/functions/functionspace/FunctionSpaceFromCpp.rst","programmers-reference/functions/functionspace/MixedFunctionSpace.rst","programmers-reference/functions/functionspace/TensorFunctionSpace.rst","programmers-reference/functions/functionspace/VectorFunctionSpace.rst","programmers-reference/functions/functionspace/create_ufc_function_spaces.rst","programmers-reference/functions/functionspace/index.rst","programmers-reference/functions/index.rst","programmers-reference/functions/specialfunctions/CellNormal.rst","programmers-reference/functions/specialfunctions/CellSize.rst","programmers-reference/functions/specialfunctions/CellVolume.rst","programmers-reference/functions/specialfunctions/Circumradius.rst","programmers-reference/functions/specialfunctions/FacetArea.rst","programmers-reference/functions/specialfunctions/FacetNormal.rst","programmers-reference/functions/specialfunctions/MaxFacetEdgeLength.rst","programmers-reference/functions/specialfunctions/MeshCoordinates.rst","programmers-reference/functions/specialfunctions/MinFacetEdgeLength.rst","programmers-reference/functions/specialfunctions/SpatialCoordinate.rst","programmers-reference/functions/specialfunctions/index.rst","programmers-reference/functions/ufc_functionspace/UFCFunctionSpace.rst","programmers-reference/functions/ufc_functionspace/create_ufc_function_spaces.rst","programmers-reference/functions/ufc_functionspace/index.rst","programmers-reference/importhandler/index.rst","programmers-reference/index.rst","programmers-reference/mesh/ale/compute_edge_map.rst","programmers-reference/mesh/ale/compute_vertex_map.rst","programmers-reference/mesh/ale/index.rst","programmers-reference/mesh/ale/init_parent_edge_indices.rst","programmers-reference/mesh/boundarysubdomainfinder/create_maps.rst","programmers-reference/mesh/boundarysubdomainfinder/find_all_subdomains.rst","programmers-reference/mesh/boundarysubdomainfinder/find_keys_on_one_subdomain.rst","programmers-reference/mesh/boundarysubdomainfinder/find_new_cell_key.rst","programmers-reference/mesh/boundarysubdomainfinder/find_subdomain.rst","programmers-reference/mesh/boundarysubdomainfinder/index.rst","programmers-reference/mesh/boundarysubdomainfinder/main.rst","programmers-reference/mesh/boundarysubdomainfinder/usage.rst","programmers-reference/mesh/boundarysubdomainfinder/write_file.rst","programmers-reference/mesh/index.rst","programmers-reference/mesh/meshes/index.rst","programmers-reference/mesh/refinement/index.rst","programmers-reference/mesh/refinement/refine.rst","programmers-reference/mesh/svgtools/index.rst","programmers-reference/mesh/svgtools/mesh2svg.rst","programmers-reference/multistage/index.rst","programmers-reference/multistage/multistagescheme/BDF1.rst","programmers-reference/multistage/multistagescheme/BackwardEuler.rst","programmers-reference/multistage/multistagescheme/CN2.rst","programmers-reference/multistage/multistagescheme/CrankNicolson.rst","programmers-reference/multistage/multistagescheme/ERK.rst","programmers-reference/multistage/multistagescheme/ERK1.rst","programmers-reference/multistage/multistagescheme/ERK4.rst","programmers-reference/multistage/multistagescheme/ESDIRK3.rst","programmers-reference/multistage/multistagescheme/ESDIRK4.rst","programmers-reference/multistage/multistagescheme/ExplicitEuler.rst","programmers-reference/multistage/multistagescheme/ExplicitMidPoint.rst","programmers-reference/multistage/multistagescheme/ForwardEuler.rst","programmers-reference/multistage/multistagescheme/ImplicitEuler.rst","programmers-reference/multistage/multistagescheme/MultiStageScheme.rst","programmers-reference/multistage/multistagescheme/RK4.rst","programmers-reference/multistage/multistagescheme/index.rst","programmers-reference/multistage/multistagesolvers/PointIntegralSolver.rst","programmers-reference/multistage/multistagesolvers/RKSolver.rst","programmers-reference/multistage/multistagesolvers/index.rst","quick_reference.rst"],objects:{"":{dolfin:[612,0,0,"-"]},"dolfin.common":{constants:[27,0,0,"-"],globalparameters:[28,0,0,"-"],math:[30,0,0,"-"],memory:[32,0,0,"-"],plotting:[34,0,0,"-"],time:[37,0,0,"-"]},"dolfin.common.math":{sqr:[31,1,1,""]},"dolfin.common.memory":{memory_usage:[33,1,1,""]},"dolfin.common.plotting":{plot:[35,1,1,""]},"dolfin.common.time":{Time:[36,2,1,""]},"dolfin.compilemodules":{compilemodule:[40,0,0,"-"],expressions:[42,0,0,"-"],jit:[44,0,0,"-"],subdomains:[48,0,0,"-"],swigimportinfo:[49,0,0,"-"]},"dolfin.compilemodules.compilemodule":{compile_extension_module:[38,1,1,""],expression_to_code_fragments:[39,1,1,""]},"dolfin.compilemodules.expressions":{compile_expressions:[41,1,1,""]},"dolfin.compilemodules.jit":{jit:[45,1,1,""]},"dolfin.compilemodules.subdomains":{CompiledSubDomain:[46,1,1,""],compile_subdomains:[47,1,1,""]},"dolfin.cpp":{"function":[250,0,0,"-"],common:[118,0,0,"-"],fem:[207,0,0,"-"],io:[276,0,0,"-"],la:[362,0,0,"-"],mesh:[535,0,0,"-"]},"dolfin.cpp.common":{BoolParameter:[50,2,1,""],DoubleArray:[51,2,1,""],DoubleParameter:[52,2,1,""],Event:[53,2,1,""],GlobalParameters:[54,2,1,""],GlobalParameters_default_parameters:[55,1,1,""],IndexSet:[56,2,1,""],IntArray:[57,2,1,""],IntParameter:[58,2,1,""],MPI:[59,2,1,""],MPIInfo:[60,2,1,""],MPI_Comm:[61,2,1,""],MPI_barrier:[62,1,1,""],MPI_compute_local_range:[63,1,1,""],MPI_gather:[64,1,1,""],MPI_global_offset:[65,1,1,""],MPI_index_owner:[66,1,1,""],MPI_is_broadcaster:[67,1,1,""],MPI_is_receiver:[68,1,1,""],MPI_local_range:[69,1,1,""],MPI_max:[70,1,1,""],MPI_min:[71,1,1,""],MPI_num_processes:[72,1,1,""],MPI_process_number:[73,1,1,""],MPI_rank:[74,1,1,""],MPI_size:[75,1,1,""],MPI_sum:[76,1,1,""],ParameterValue:[77,2,1,""],Parameters:[78,2,1,""],Progress:[79,2,1,""],StringParameter:[80,2,1,""],SubSystemsManager:[81,2,1,""],SubSystemsManager_finalize:[82,1,1,""],SubSystemsManager_init_mpi:[83,1,1,""],SubSystemsManager_init_petsc:[84,1,1,""],SubSystemsManager_mpi_finalized:[85,1,1,""],SubSystemsManager_mpi_initialized:[86,1,1,""],SubSystemsManager_responsible_mpi:[87,1,1,""],SubSystemsManager_responsible_petsc:[88,1,1,""],Table:[89,2,1,""],TableEntry:[90,2,1,""],Timer:[91,2,1,""],UIntArray:[92,2,1,""],Variable:[93,2,1,""],begin:[94,1,1,""],debug:[95,1,1,""],deprecation:[96,1,1,""],dolfin_error:[97,1,1,""],dolfin_version:[98,1,1,""],end:[99,1,1,""],error:[100,1,1,""],get_log_level:[101,1,1,""],git_commit_hash:[102,1,1,""],has_cgal:[103,1,1,""],has_cholmod:[104,1,1,""],has_exodus:[105,1,1,""],has_hdf5:[106,1,1,""],has_mpi:[107,1,1,""],has_openmp:[108,1,1,""],has_parmetis:[109,1,1,""],has_petsc:[110,1,1,""],has_petsc_snes:[111,1,1,""],has_petsc_tao:[112,1,1,""],has_scotch:[113,1,1,""],has_slepc:[114,1,1,""],has_trilinos:[115,1,1,""],has_umfpack:[116,1,1,""],has_zlib:[117,1,1,""],info:[119,1,1,""],info_stream:[120,1,1,""],info_underline:[121,1,1,""],init:[122,1,1,""],list_timings:[123,1,1,""],log:[124,1,1,""],monitor_memory_usage:[125,1,1,""],not_working_in_parallel:[126,1,1,""],set_log_active:[127,1,1,""],set_log_level:[128,1,1,""],set_output_stream:[129,1,1,""],summary:[130,1,1,""],tic:[131,1,1,""],time:[132,1,1,""],timing:[133,1,1,""],timings:[134,1,1,""],toc:[135,1,1,""],warning:[136,1,1,""]},"dolfin.cpp.common.BoolParameter":{thisown:[50,3,1,""]},"dolfin.cpp.common.DoubleArray":{array:[51,4,1,""],data:[51,4,1,""],size:[51,4,1,""],str:[51,4,1,""],thisown:[51,3,1,""]},"dolfin.cpp.common.DoubleParameter":{thisown:[52,3,1,""]},"dolfin.cpp.common.Event":{count:[53,4,1,""],maxcount:[53,4,1,""],thisown:[53,3,1,""]},"dolfin.cpp.common.GlobalParameters":{default_parameters:[54,5,1,""],thisown:[54,3,1,""]},"dolfin.cpp.common.IndexSet":{clear:[56,4,1,""],empty:[56,4,1,""],fill:[56,4,1,""],find:[56,4,1,""],has_index:[56,4,1,""],insert:[56,4,1,""],size:[56,4,1,""],thisown:[56,3,1,""]},"dolfin.cpp.common.IntArray":{array:[57,4,1,""],data:[57,4,1,""],size:[57,4,1,""],str:[57,4,1,""],thisown:[57,3,1,""]},"dolfin.cpp.common.IntParameter":{thisown:[58,3,1,""]},"dolfin.cpp.common.MPI":{barrier:[59,5,1,""],compute_local_range:[59,5,1,""],gather:[59,5,1,""],global_offset:[59,5,1,""],index_owner:[59,5,1,""],is_broadcaster:[59,5,1,""],is_receiver:[59,5,1,""],local_range:[59,5,1,""],max:[59,5,1,""],min:[59,5,1,""],num_processes:[59,5,1,""],process_number:[59,5,1,""],rank:[59,5,1,""],size:[59,5,1,""],sum:[59,5,1,""],thisown:[59,3,1,""]},"dolfin.cpp.common.MPIInfo":{thisown:[60,3,1,""]},"dolfin.cpp.common.MPI_Comm":{thisown:[61,3,1,""]},"dolfin.cpp.common.ParameterValue":{access_count:[77,4,1,""],change_count:[77,4,1,""],check_key:[77,5,1,""],data:[77,4,1,""],description:[77,4,1,""],get_range:[77,4,1,""],is_set:[77,4,1,""],key:[77,4,1,""],range_str:[77,4,1,""],reset:[77,4,1,""],set_range:[77,4,1,""],str:[77,4,1,""],thisown:[77,3,1,""],type_str:[77,4,1,""],value:[77,4,1,""],value_str:[77,4,1,""],warn_once:[77,4,1,""]},"dolfin.cpp.common.Parameters":{add:[78,4,1,""],assign:[78,4,1,""],clear:[78,4,1,""],copy:[78,4,1,""],find_parameter:[78,4,1,""],find_parameter_set:[78,4,1,""],get:[78,4,1,""],get_range:[78,4,1,""],has_key:[78,4,1,""],has_parameter:[78,4,1,""],has_parameter_set:[78,4,1,""],items:[78,4,1,""],iterdata:[78,4,1,""],iteritems:[78,4,1,""],iterkeys:[78,4,1,""],itervalues:[78,4,1,""],keys:[78,4,1,""],name:[78,4,1,""],option_string:[78,4,1,""],parse:[78,4,1,""],remove:[78,4,1,""],rename:[78,4,1,""],set_range:[78,4,1,""],str:[78,4,1,""],thisown:[78,3,1,""],to_dict:[78,4,1,""],update:[78,4,1,""],values:[78,4,1,""]},"dolfin.cpp.common.Progress":{thisown:[79,3,1,""],update:[79,4,1,""]},"dolfin.cpp.common.StringParameter":{thisown:[80,3,1,""]},"dolfin.cpp.common.SubSystemsManager":{finalize:[81,5,1,""],init_mpi:[81,5,1,""],init_petsc:[81,5,1,""],mpi_finalized:[81,5,1,""],mpi_initialized:[81,5,1,""],responsible_mpi:[81,5,1,""],responsible_petsc:[81,5,1,""],thisown:[81,3,1,""]},"dolfin.cpp.common.Table":{get:[89,4,1,""],get_value:[89,4,1,""],set:[89,4,1,""],str_latex:[89,4,1,""],thisown:[89,3,1,""],title:[89,4,1,""]},"dolfin.cpp.common.TableEntry":{thisown:[90,3,1,""]},"dolfin.cpp.common.Timer":{start:[91,4,1,""],stop:[91,4,1,""],thisown:[91,3,1,""],value:[91,4,1,""]},"dolfin.cpp.common.UIntArray":{array:[92,4,1,""],data:[92,4,1,""],size:[92,4,1,""],str:[92,4,1,""],thisown:[92,3,1,""]},"dolfin.cpp.common.Variable":{id:[93,4,1,""],label:[93,4,1,""],name:[93,4,1,""],parameters:[93,3,1,""],rename:[93,4,1,""],str:[93,4,1,""],thisown:[93,3,1,""]},"dolfin.cpp.fem":{AdaptiveLinearVariationalSolver:[137,2,1,""],AdaptiveNonlinearVariationalSolver:[138,2,1,""],Assembler:[139,2,1,""],AssemblerBase:[140,2,1,""],BasisFunction:[141,2,1,""],CCFEMAssembler:[142,2,1,""],CCFEMDofMap:[143,2,1,""],CCFEMForm:[144,2,1,""],DirichletBC:[145,2,1,""],DirichletBC_default_parameters:[146,1,1,""],DofMap:[147,2,1,""],Equation:[148,2,1,""],ErrorControl:[149,2,1,""],ErrorControl_default_parameters:[150,1,1,""],Extrapolation:[151,2,1,""],Extrapolation_extrapolate:[152,1,1,""],FiniteElement:[153,2,1,""],Form:[154,2,1,""],GenericAdaptiveVariationalSolver:[155,2,1,""],GenericAdaptiveVariationalSolver_default_parameters:[156,1,1,""],GenericDofMap:[157,2,1,""],HierarchicalDirichletBC:[158,2,1,""],HierarchicalErrorControl:[159,2,1,""],HierarchicalForm:[160,2,1,""],HierarchicalFunction:[161,2,1,""],HierarchicalFunctionSpace:[162,2,1,""],HierarchicalLinearVariationalProblem:[163,2,1,""],HierarchicalMesh:[164,2,1,""],HierarchicalMeshFunctionBool:[165,2,1,""],HierarchicalMeshFunctionDouble:[166,2,1,""],HierarchicalMeshFunctionInt:[167,2,1,""],HierarchicalMeshFunctionSizet:[168,2,1,""],HierarchicalMeshFunctionUInt:[169,2,1,""],HierarchicalNonlinearVariationalProblem:[170,2,1,""],LinearVariationalProblem:[171,2,1,""],LinearVariationalSolver:[172,2,1,""],LinearVariationalSolver_default_parameters:[173,1,1,""],LocalAssembler:[174,2,1,""],LocalAssembler_assemble:[175,1,1,""],LocalAssembler_assemble_cell:[176,1,1,""],LocalAssembler_assemble_exterior_facet:[177,1,1,""],LocalAssembler_assemble_interior_facet:[178,1,1,""],LocalSolver:[179,2,1,""],MultiStageScheme:[180,2,1,""],NonlinearVariationalProblem:[181,2,1,""],NonlinearVariationalSolver:[182,2,1,""],NonlinearVariationalSolver_default_parameters:[183,1,1,""],OpenMpAssembler:[184,2,1,""],PointIntegralSolver:[185,2,1,""],PointIntegralSolver_default_parameters:[186,1,1,""],PointSource:[187,2,1,""],RKSolver:[188,2,1,""],SparsityPatternBuilder:[189,2,1,""],SparsityPatternBuilder_build:[190,1,1,""],SparsityPatternBuilder_build_ccfem:[191,1,1,""],SystemAssembler:[192,2,1,""],TimeSeries:[193,2,1,""],TimeSeriesHDF5:[194,2,1,""],TimeSeriesHDF5_default_parameters:[195,1,1,""],TimeSeries_default_parameters:[196,1,1,""],TimeSeries_filename_data:[197,1,1,""],TimeSeries_filename_times:[198,1,1,""],adapt:[199,1,1,""],adapt_markers:[200,1,1,""],assemble:[201,1,1,""],assemble_system:[202,1,1,""],bool_deprecated:[203,2,1,""],dof_to_vertex_map:[204,1,1,""],dorfler_mark:[205,1,1,""],fem_solve:[206,1,1,""],mark:[208,1,1,""],vertex_to_dof_map:[209,1,1,""]},"dolfin.cpp.fem.AdaptiveLinearVariationalSolver":{thisown:[137,3,1,""]},"dolfin.cpp.fem.AdaptiveNonlinearVariationalSolver":{thisown:[138,3,1,""]},"dolfin.cpp.fem.Assembler":{assemble:[139,4,1,""],assemble_cells:[139,4,1,""],assemble_exterior_facets:[139,4,1,""],assemble_interior_facets:[139,4,1,""],thisown:[139,3,1,""]},"dolfin.cpp.fem.AssemblerBase":{add_values:[140,3,1,""],finalize_tensor:[140,3,1,""],init_global_tensor:[140,4,1,""],keep_diagonal:[140,3,1,""],reset_sparsity:[140,3,1,""],thisown:[140,3,1,""]},"dolfin.cpp.fem.BasisFunction":{eval:[141,4,1,""],eval_derivatives:[141,4,1,""],thisown:[141,3,1,""]},"dolfin.cpp.fem.CCFEMAssembler":{assemble:[142,4,1,""],thisown:[142,3,1,""]},"dolfin.cpp.fem.CCFEMDofMap":{add:[143,4,1,""],build:[143,4,1,""],clear:[143,4,1,""],num_parts:[143,4,1,""],part:[143,4,1,""],set_current_part:[143,4,1,""],thisown:[143,3,1,""]},"dolfin.cpp.fem.CCFEMForm":{add:[144,4,1,""],build:[144,4,1,""],clear:[144,4,1,""],function_space:[144,4,1,""],num_parts:[144,4,1,""],part:[144,4,1,""],rank:[144,4,1,""],thisown:[144,3,1,""]},"dolfin.cpp.fem.DirichletBC":{apply:[145,4,1,""],default_parameters:[145,5,1,""],function_space:[145,4,1,""],get_boundary_values:[145,4,1,""],homogenize:[145,4,1,""],is_compatible:[145,4,1,""],markers:[145,4,1,""],method:[145,4,1,""],set_value:[145,4,1,""],thisown:[145,3,1,""],user_sub_domain:[145,4,1,""],value:[145,4,1,""],zero:[145,4,1,""],zero_columns:[145,4,1,""]},"dolfin.cpp.fem.DofMap":{data:[147,4,1,""],is_restricted:[147,4,1,""],thisown:[147,3,1,""]},"dolfin.cpp.fem.Equation":{is_linear:[148,4,1,""],lhs:[148,4,1,""],rhs:[148,4,1,""],rhs_int:[148,4,1,""],thisown:[148,3,1,""]},"dolfin.cpp.fem.ErrorControl":{compute_cell_residual:[149,4,1,""],compute_dual:[149,4,1,""],compute_extrapolation:[149,4,1,""],compute_facet_residual:[149,4,1,""],compute_indicators:[149,4,1,""],default_parameters:[149,5,1,""],estimate_error:[149,4,1,""],residual_representation:[149,4,1,""],thisown:[149,3,1,""]},"dolfin.cpp.fem.Extrapolation":{extrapolate:[151,5,1,""],thisown:[151,3,1,""]},"dolfin.cpp.fem.FiniteElement":{cell_shape:[153,4,1,""],create:[153,4,1,""],create_sub_element:[153,4,1,""],evaluate_basis:[153,4,1,""],evaluate_basis_all:[153,4,1,""],evaluate_basis_derivatives:[153,4,1,""],evaluate_basis_derivatives_all:[153,4,1,""],evaluate_dof:[153,4,1,""],evaluate_dofs:[153,4,1,""],extract_sub_element:[153,4,1,""],geometric_dimension:[153,4,1,""],hash:[153,4,1,""],interpolate_vertex_values:[153,4,1,""],map_from_reference_cell:[153,4,1,""],map_to_reference_cell:[153,4,1,""],num_sub_elements:[153,4,1,""],signature:[153,4,1,""],space_dimension:[153,4,1,""],thisown:[153,3,1,""],topological_dimension:[153,4,1,""],value_dimension:[153,4,1,""],value_rank:[153,4,1,""]},"dolfin.cpp.fem.Form":{cell_domains:[154,4,1,""],check:[154,4,1,""],coefficient:[154,4,1,""],coefficient_name:[154,4,1,""],coefficient_number:[154,4,1,""],coefficients:[154,4,1,""],coloring:[154,4,1,""],exterior_facet_domains:[154,4,1,""],function_space:[154,4,1,""],function_spaces:[154,4,1,""],interior_facet_domains:[154,4,1,""],mesh:[154,4,1,""],mesh_shared_ptr:[154,4,1,""],num_coefficients:[154,4,1,""],rank:[154,4,1,""],set_cell_domains:[154,4,1,""],set_coefficient:[154,4,1,""],set_coefficients:[154,4,1,""],set_exterior_facet_domains:[154,4,1,""],set_interior_facet_domains:[154,4,1,""],set_mesh:[154,4,1,""],set_some_coefficients:[154,4,1,""],thisown:[154,3,1,""],ufc_form:[154,4,1,""]},"dolfin.cpp.fem.GenericAdaptiveVariationalSolver":{adapt_problem:[155,4,1,""],adaptive_data:[155,4,1,""],default_parameters:[155,5,1,""],evaluate_goal:[155,4,1,""],extract_bcs:[155,4,1,""],solve:[155,4,1,""],solve_primal:[155,4,1,""],summary:[155,4,1,""],thisown:[155,3,1,""]},"dolfin.cpp.fem.GenericDofMap":{block_size:[157,3,1,""],cell_dimension:[157,4,1,""],cell_dofs:[157,4,1,""],collapse:[157,4,1,""],constrained_domain:[157,3,1,""],copy:[157,4,1,""],create:[157,4,1,""],dofs:[157,4,1,""],extract_sub_dofmap:[157,4,1,""],geometric_dimension:[157,4,1,""],global_dimension:[157,4,1,""],is_view:[157,4,1,""],max_cell_dimension:[157,4,1,""],neighbours:[157,4,1,""],num_entity_dofs:[157,4,1,""],num_facet_dofs:[157,4,1,""],off_process_owner:[157,4,1,""],ownership_range:[157,4,1,""],restriction:[157,4,1,""],set:[157,4,1,""],set_x:[157,4,1,""],shared_dofs:[157,4,1,""],tabulate_all_coordinates:[157,4,1,""],tabulate_coordinates:[157,4,1,""],tabulate_entity_dofs:[157,4,1,""],tabulate_facet_dofs:[157,4,1,""],thisown:[157,3,1,""]},"dolfin.cpp.fem.HierarchicalDirichletBC":{child:[158,4,1,""],clear_child:[158,4,1,""],depth:[158,4,1,""],has_child:[158,4,1,""],has_parent:[158,4,1,""],leaf_node:[158,4,1,""],parent:[158,4,1,""],root_node:[158,4,1,""],set_child:[158,4,1,""],set_parent:[158,4,1,""],thisown:[158,3,1,""]},"dolfin.cpp.fem.HierarchicalErrorControl":{child:[159,4,1,""],clear_child:[159,4,1,""],depth:[159,4,1,""],has_child:[159,4,1,""],has_parent:[159,4,1,""],leaf_node:[159,4,1,""],parent:[159,4,1,""],root_node:[159,4,1,""],set_child:[159,4,1,""],set_parent:[159,4,1,""],thisown:[159,3,1,""]},"dolfin.cpp.fem.HierarchicalForm":{child:[160,4,1,""],clear_child:[160,4,1,""],depth:[160,4,1,""],has_child:[160,4,1,""],has_parent:[160,4,1,""],leaf_node:[160,4,1,""],parent:[160,4,1,""],root_node:[160,4,1,""],set_child:[160,4,1,""],set_parent:[160,4,1,""],thisown:[160,3,1,""]},"dolfin.cpp.fem.HierarchicalFunction":{clear_child:[161,4,1,""],depth:[161,4,1,""],has_child:[161,4,1,""],has_parent:[161,4,1,""],set_child:[161,4,1,""],set_parent:[161,4,1,""],thisown:[161,3,1,""]},"dolfin.cpp.fem.HierarchicalFunctionSpace":{clear_child:[162,4,1,""],depth:[162,4,1,""],has_child:[162,4,1,""],has_parent:[162,4,1,""],set_child:[162,4,1,""],set_parent:[162,4,1,""],thisown:[162,3,1,""]},"dolfin.cpp.fem.HierarchicalLinearVariationalProblem":{child:[163,4,1,""],clear_child:[163,4,1,""],depth:[163,4,1,""],has_child:[163,4,1,""],has_parent:[163,4,1,""],leaf_node:[163,4,1,""],parent:[163,4,1,""],root_node:[163,4,1,""],set_child:[163,4,1,""],set_parent:[163,4,1,""],thisown:[163,3,1,""]},"dolfin.cpp.fem.HierarchicalMesh":{clear_child:[164,4,1,""],depth:[164,4,1,""],has_child:[164,4,1,""],has_parent:[164,4,1,""],set_child:[164,4,1,""],set_parent:[164,4,1,""],thisown:[164,3,1,""]},"dolfin.cpp.fem.HierarchicalMeshFunctionBool":{clear_child:[165,4,1,""],depth:[165,4,1,""],has_child:[165,4,1,""],has_parent:[165,4,1,""],set_child:[165,4,1,""],set_parent:[165,4,1,""],thisown:[165,3,1,""]},"dolfin.cpp.fem.HierarchicalMeshFunctionDouble":{clear_child:[166,4,1,""],depth:[166,4,1,""],has_child:[166,4,1,""],has_parent:[166,4,1,""],set_child:[166,4,1,""],set_parent:[166,4,1,""],thisown:[166,3,1,""]},"dolfin.cpp.fem.HierarchicalMeshFunctionInt":{clear_child:[167,4,1,""],depth:[167,4,1,""],has_child:[167,4,1,""],has_parent:[167,4,1,""],set_child:[167,4,1,""],set_parent:[167,4,1,""],thisown:[167,3,1,""]},"dolfin.cpp.fem.HierarchicalMeshFunctionSizet":{clear_child:[168,4,1,""],depth:[168,4,1,""],has_child:[168,4,1,""],has_parent:[168,4,1,""],set_child:[168,4,1,""],set_parent:[168,4,1,""],thisown:[168,3,1,""]},"dolfin.cpp.fem.HierarchicalMeshFunctionUInt":{clear_child:[169,4,1,""],depth:[169,4,1,""],has_child:[169,4,1,""],has_parent:[169,4,1,""],set_child:[169,4,1,""],set_parent:[169,4,1,""],thisown:[169,3,1,""]},"dolfin.cpp.fem.HierarchicalNonlinearVariationalProblem":{child:[170,4,1,""],clear_child:[170,4,1,""],depth:[170,4,1,""],has_child:[170,4,1,""],has_parent:[170,4,1,""],leaf_node:[170,4,1,""],parent:[170,4,1,""],root_node:[170,4,1,""],set_child:[170,4,1,""],set_parent:[170,4,1,""],thisown:[170,3,1,""]},"dolfin.cpp.fem.LinearVariationalProblem":{bcs:[171,4,1,""],bilinear_form:[171,4,1,""],linear_form:[171,4,1,""],solution:[171,4,1,""],test_space:[171,4,1,""],thisown:[171,3,1,""],trial_space:[171,4,1,""]},"dolfin.cpp.fem.LinearVariationalSolver":{default_parameters:[172,5,1,""],solve:[172,4,1,""],thisown:[172,3,1,""]},"dolfin.cpp.fem.LocalAssembler":{assemble:[174,5,1,""],assemble_cell:[174,5,1,""],assemble_exterior_facet:[174,5,1,""],assemble_interior_facet:[174,5,1,""],thisown:[174,3,1,""]},"dolfin.cpp.fem.LocalSolver":{solve:[179,4,1,""],thisown:[179,3,1,""]},"dolfin.cpp.fem.MultiStageScheme":{bcs:[180,4,1,""],dt_stage_offset:[180,4,1,""],implicit:[180,4,1,""],jacobian_index:[180,4,1,""],order:[180,4,1,""],thisown:[180,3,1,""]},"dolfin.cpp.fem.NonlinearVariationalProblem":{bcs:[181,4,1,""],has_jacobian:[181,4,1,""],has_lower_bound:[181,4,1,""],has_upper_bound:[181,4,1,""],jacobian_form:[181,4,1,""],lower_bound:[181,4,1,""],residual_form:[181,4,1,""],set_bounds:[181,4,1,""],solution:[181,4,1,""],test_space:[181,4,1,""],thisown:[181,3,1,""],trial_space:[181,4,1,""],upper_bound:[181,4,1,""]},"dolfin.cpp.fem.NonlinearVariationalSolver":{default_parameters:[182,5,1,""],solve:[182,4,1,""],thisown:[182,3,1,""]},"dolfin.cpp.fem.OpenMpAssembler":{assemble:[184,4,1,""],thisown:[184,3,1,""]},"dolfin.cpp.fem.PointIntegralSolver":{default_parameters:[185,5,1,""],num_jacobian_computations:[185,4,1,""],reset_newton_solver:[185,4,1,""],reset_stage_solutions:[185,4,1,""],step:[185,4,1,""],step_interval:[185,4,1,""],thisown:[185,3,1,""]},"dolfin.cpp.fem.PointSource":{apply:[187,4,1,""],thisown:[187,3,1,""]},"dolfin.cpp.fem.RKSolver":{step:[188,4,1,""],step_interval:[188,4,1,""],thisown:[188,3,1,""]},"dolfin.cpp.fem.SparsityPatternBuilder":{build:[189,5,1,""],build_ccfem:[189,5,1,""],thisown:[189,3,1,""]},"dolfin.cpp.fem.SystemAssembler":{assemble:[192,4,1,""],thisown:[192,3,1,""]},"dolfin.cpp.fem.TimeSeries":{clear:[193,4,1,""],default_parameters:[193,5,1,""],filename_data:[193,5,1,""],filename_times:[193,5,1,""],mesh_times:[193,4,1,""],retrieve:[193,4,1,""],store:[193,4,1,""],thisown:[193,3,1,""],vector_times:[193,4,1,""]},"dolfin.cpp.fem.TimeSeriesHDF5":{clear:[194,4,1,""],default_parameters:[194,5,1,""],mesh_times:[194,4,1,""],retrieve:[194,4,1,""],store:[194,4,1,""],thisown:[194,3,1,""],vector_times:[194,4,1,""]},"dolfin.cpp.fem.bool_deprecated":{thisown:[203,3,1,""]},"dolfin.cpp.function":{ALE:[210,2,1,""],ALE_move:[211,1,1,""],BoostGraphOrdering:[212,2,1,""],BoostGraphOrdering_compute_cuthill_mckee:[213,1,1,""],CCFEMFunction:[214,2,1,""],CCFEMFunctionSpace:[215,2,1,""],Constant:[216,2,1,""],Expression:[217,2,1,""],FacetArea:[218,2,1,""],Function:[219,2,1,""],FunctionAXPY:[220,2,1,""],FunctionAssigner:[221,2,1,""],FunctionSpace:[222,2,1,""],GenericFunction:[223,2,1,""],Graph:[224,2,1,""],GraphBuilder:[225,2,1,""],GraphBuilder_compute_dual_graph:[226,1,1,""],GraphBuilder_local_graph:[227,1,1,""],HierarchicalFunction:[228,2,1,""],HierarchicalFunctionSpace:[229,2,1,""],HierarchicalMesh:[230,2,1,""],HierarchicalMeshFunctionBool:[231,2,1,""],HierarchicalMeshFunctionDouble:[232,2,1,""],HierarchicalMeshFunctionInt:[233,2,1,""],HierarchicalMeshFunctionSizet:[234,2,1,""],HierarchicalMeshFunctionUInt:[235,2,1,""],Lagrange:[236,2,1,""],LagrangeInterpolator:[237,2,1,""],Legendre:[238,2,1,""],Legendre_d2dx:[239,1,1,""],Legendre_ddx:[240,1,1,""],Legendre_eval:[241,1,1,""],MeshCoordinates:[242,2,1,""],MeshDisplacement:[243,2,1,""],SCOTCH:[244,2,1,""],SCOTCH_compute_gps:[245,1,1,""],SpecialFacetFunction:[246,2,1,""],SubSpace:[247,2,1,""],assign:[248,1,1,""],between:[249,1,1,""],ipow:[251,1,1,""],lt_coordinate:[252,2,1,""],near:[253,1,1,""],rand:[254,1,1,""],seed:[255,1,1,""]},"dolfin.cpp.function.ALE":{move:[210,5,1,""],thisown:[210,3,1,""]},"dolfin.cpp.function.BoostGraphOrdering":{compute_cuthill_mckee:[212,5,1,""],thisown:[212,3,1,""]},"dolfin.cpp.function.CCFEMFunction":{part:[214,4,1,""],thisown:[214,3,1,""],vector:[214,4,1,""]},"dolfin.cpp.function.CCFEMFunctionSpace":{add:[215,4,1,""],build:[215,4,1,""],collision_map_cut_cells:[215,4,1,""],covered_cells:[215,4,1,""],cut_cells:[215,4,1,""],dim:[215,4,1,""],dofmap:[215,4,1,""],num_parts:[215,4,1,""],part:[215,4,1,""],quadrature_rule_cut_cells:[215,4,1,""],thisown:[215,3,1,""],uncut_cells:[215,4,1,""]},"dolfin.cpp.function.Constant":{assign:[216,4,1,""],thisown:[216,3,1,""]},"dolfin.cpp.function.Expression":{eval:[217,4,1,""],eval_cell:[217,4,1,""],thisown:[217,3,1,""]},"dolfin.cpp.function.FacetArea":{thisown:[218,3,1,""]},"dolfin.cpp.function.Function":{child:[219,4,1,""],compute_vertex_values:[219,4,1,""],copy:[219,4,1,""],eval:[219,4,1,""],extrapolate:[219,4,1,""],function_space:[219,4,1,""],geometric_dimension:[219,4,1,""],interpolate:[219,4,1,""],leaf_node:[219,4,1,""],non_matching_eval:[219,4,1,""],parent:[219,4,1,""],root_node:[219,4,1,""],sub:[219,4,1,""],thisown:[219,3,1,""],vector:[219,4,1,""]},"dolfin.cpp.function.FunctionAXPY":{ADD_ADD:[220,3,1,""],ADD_SUB:[220,3,1,""],SUB_ADD:[220,3,1,""],SUB_SUB:[220,3,1,""],pairs:[220,4,1,""],thisown:[220,3,1,""]},"dolfin.cpp.function.FunctionAssigner":{assign:[221,4,1,""],num_assigning_functions:[221,4,1,""],num_receiving_functions:[221,4,1,""],thisown:[221,3,1,""]},"dolfin.cpp.function.FunctionSpace":{assign:[222,4,1,""],child:[222,4,1,""],collapse:[222,4,1,""],component:[222,4,1,""],dim:[222,4,1,""],dofmap:[222,4,1,""],element:[222,4,1,""],extract_sub_space:[222,4,1,""],has_cell:[222,4,1,""],has_element:[222,4,1,""],interpolate:[222,4,1,""],leaf_node:[222,4,1,""],mesh:[222,4,1,""],parent:[222,4,1,""],print_dofmap:[222,4,1,""],root_node:[222,4,1,""],sub:[222,4,1,""],thisown:[222,3,1,""]},"dolfin.cpp.function.GenericFunction":{compute_vertex_values:[223,4,1,""],eval:[223,4,1,""],eval_cell:[223,4,1,""],restrict:[223,4,1,""],thisown:[223,3,1,""],update:[223,4,1,""],value_dimension:[223,4,1,""],value_rank:[223,4,1,""],value_size:[223,4,1,""]},"dolfin.cpp.function.Graph":{thisown:[224,3,1,""]},"dolfin.cpp.function.GraphBuilder":{compute_dual_graph:[225,5,1,""],local_graph:[225,5,1,""],thisown:[225,3,1,""]},"dolfin.cpp.function.HierarchicalFunction":{clear_child:[228,4,1,""],depth:[228,4,1,""],has_child:[228,4,1,""],has_parent:[228,4,1,""],set_child:[228,4,1,""],set_parent:[228,4,1,""],thisown:[228,3,1,""]},"dolfin.cpp.function.HierarchicalFunctionSpace":{clear_child:[229,4,1,""],depth:[229,4,1,""],has_child:[229,4,1,""],has_parent:[229,4,1,""],set_child:[229,4,1,""],set_parent:[229,4,1,""],thisown:[229,3,1,""]},"dolfin.cpp.function.HierarchicalMesh":{clear_child:[230,4,1,""],depth:[230,4,1,""],has_child:[230,4,1,""],has_parent:[230,4,1,""],set_child:[230,4,1,""],set_parent:[230,4,1,""],thisown:[230,3,1,""]},"dolfin.cpp.function.HierarchicalMeshFunctionBool":{clear_child:[231,4,1,""],depth:[231,4,1,""],has_child:[231,4,1,""],has_parent:[231,4,1,""],set_child:[231,4,1,""],set_parent:[231,4,1,""],thisown:[231,3,1,""]},"dolfin.cpp.function.HierarchicalMeshFunctionDouble":{clear_child:[232,4,1,""],depth:[232,4,1,""],has_child:[232,4,1,""],has_parent:[232,4,1,""],set_child:[232,4,1,""],set_parent:[232,4,1,""],thisown:[232,3,1,""]},"dolfin.cpp.function.HierarchicalMeshFunctionInt":{clear_child:[233,4,1,""],depth:[233,4,1,""],has_child:[233,4,1,""],has_parent:[233,4,1,""],set_child:[233,4,1,""],set_parent:[233,4,1,""],thisown:[233,3,1,""]},"dolfin.cpp.function.HierarchicalMeshFunctionSizet":{clear_child:[234,4,1,""],depth:[234,4,1,""],has_child:[234,4,1,""],has_parent:[234,4,1,""],set_child:[234,4,1,""],set_parent:[234,4,1,""],thisown:[234,3,1,""]},"dolfin.cpp.function.HierarchicalMeshFunctionUInt":{clear_child:[235,4,1,""],depth:[235,4,1,""],has_child:[235,4,1,""],has_parent:[235,4,1,""],set_child:[235,4,1,""],set_parent:[235,4,1,""],thisown:[235,3,1,""]},"dolfin.cpp.function.Lagrange":{ddx:[236,4,1,""],degree:[236,4,1,""],dqdx:[236,4,1,""],eval:[236,4,1,""],point:[236,4,1,""],set:[236,4,1,""],size:[236,4,1,""],thisown:[236,3,1,""]},"dolfin.cpp.function.LagrangeInterpolator":{interpolate:[237,4,1,""],thisown:[237,3,1,""]},"dolfin.cpp.function.Legendre":{d2dx:[238,5,1,""],ddx:[238,5,1,""],eval:[238,5,1,""],thisown:[238,3,1,""]},"dolfin.cpp.function.MeshCoordinates":{thisown:[242,3,1,""]},"dolfin.cpp.function.MeshDisplacement":{sub:[243,4,1,""],thisown:[243,3,1,""]},"dolfin.cpp.function.SCOTCH":{compute_gps:[244,5,1,""],compute_partition:[244,5,1,""],compute_reordering:[244,5,1,""],thisown:[244,3,1,""]},"dolfin.cpp.function.SpecialFacetFunction":{thisown:[246,3,1,""]},"dolfin.cpp.function.SubSpace":{thisown:[247,3,1,""]},"dolfin.cpp.function.lt_coordinate":{TOL:[252,3,1,""],thisown:[252,3,1,""]},"dolfin.cpp.io":{File:[257,2,1,""],File_create_parent_path:[258,1,1,""],File_exists:[259,1,1,""],GenericFile:[260,2,1,""],HDF5Attribute:[261,2,1,""],HDF5File:[262,2,1,""],HierarchicalFunction:[263,2,1,""],HierarchicalFunctionSpace:[264,2,1,""],HierarchicalMesh:[265,2,1,""],HierarchicalMeshFunctionBool:[266,2,1,""],HierarchicalMeshFunctionDouble:[267,2,1,""],HierarchicalMeshFunctionInt:[268,2,1,""],HierarchicalMeshFunctionSizet:[269,2,1,""],HierarchicalMeshFunctionUInt:[270,2,1,""],VTKPlotter:[271,2,1,""],VTKPlotter_all_interactive:[272,1,1,""],VTKPlotter_default_parameters:[273,1,1,""],VTKPlotter_to_key:[274,1,1,""],XDMFFile:[275,2,1,""],interactive:[277,1,1,""],plot:[278,1,1,""]},"dolfin.cpp.io.File":{binary:[257,3,1,""],create_parent_path:[257,5,1,""],exists:[257,5,1,""],raw:[257,3,1,""],svg:[257,3,1,""],thisown:[257,3,1,""],vtk:[257,3,1,""],x3d:[257,3,1,""],xdmf:[257,3,1,""],xml:[257,3,1,""],xyz:[257,3,1,""]},"dolfin.cpp.io.GenericFile":{name:[260,4,1,""],read:[260,4,1,""],thisown:[260,3,1,""],write:[260,4,1,""]},"dolfin.cpp.io.HDF5Attribute":{exists:[261,4,1,""],get:[261,4,1,""],set:[261,4,1,""],str:[261,4,1,""],thisown:[261,3,1,""],type_str:[261,4,1,""]},"dolfin.cpp.io.HDF5File":{attributes:[262,4,1,""],close:[262,4,1,""],flush:[262,4,1,""],has_dataset:[262,4,1,""],read:[262,4,1,""],thisown:[262,3,1,""],write:[262,4,1,""]},"dolfin.cpp.io.HierarchicalFunction":{clear_child:[263,4,1,""],depth:[263,4,1,""],has_child:[263,4,1,""],has_parent:[263,4,1,""],set_child:[263,4,1,""],set_parent:[263,4,1,""],thisown:[263,3,1,""]},"dolfin.cpp.io.HierarchicalFunctionSpace":{clear_child:[264,4,1,""],depth:[264,4,1,""],has_child:[264,4,1,""],has_parent:[264,4,1,""],set_child:[264,4,1,""],set_parent:[264,4,1,""],thisown:[264,3,1,""]},"dolfin.cpp.io.HierarchicalMesh":{clear_child:[265,4,1,""],depth:[265,4,1,""],has_child:[265,4,1,""],has_parent:[265,4,1,""],set_child:[265,4,1,""],set_parent:[265,4,1,""],thisown:[265,3,1,""]},"dolfin.cpp.io.HierarchicalMeshFunctionBool":{clear_child:[266,4,1,""],depth:[266,4,1,""],has_child:[266,4,1,""],has_parent:[266,4,1,""],set_child:[266,4,1,""],set_parent:[266,4,1,""],thisown:[266,3,1,""]},"dolfin.cpp.io.HierarchicalMeshFunctionDouble":{clear_child:[267,4,1,""],depth:[267,4,1,""],has_child:[267,4,1,""],has_parent:[267,4,1,""],set_child:[267,4,1,""],set_parent:[267,4,1,""],thisown:[267,3,1,""]},"dolfin.cpp.io.HierarchicalMeshFunctionInt":{clear_child:[268,4,1,""],depth:[268,4,1,""],has_child:[268,4,1,""],has_parent:[268,4,1,""],set_child:[268,4,1,""],set_parent:[268,4,1,""],thisown:[268,3,1,""]},"dolfin.cpp.io.HierarchicalMeshFunctionSizet":{clear_child:[269,4,1,""],depth:[269,4,1,""],has_child:[269,4,1,""],has_parent:[269,4,1,""],set_child:[269,4,1,""],set_parent:[269,4,1,""],thisown:[269,3,1,""]},"dolfin.cpp.io.HierarchicalMeshFunctionUInt":{clear_child:[270,4,1,""],depth:[270,4,1,""],has_child:[270,4,1,""],has_parent:[270,4,1,""],set_child:[270,4,1,""],set_parent:[270,4,1,""],thisown:[270,3,1,""]},"dolfin.cpp.io.VTKPlotter":{ALT:[271,3,1,""],CONTROL:[271,3,1,""],SHIFT:[271,3,1,""],add_polygon:[271,4,1,""],all_interactive:[271,5,1,""],azimuth:[271,4,1,""],default_parameters:[271,5,1,""],dolly:[271,4,1,""],elevate:[271,4,1,""],get_widget:[271,4,1,""],interactive:[271,4,1,""],is_compatible:[271,4,1,""],key:[271,4,1,""],key_pressed:[271,4,1,""],plot:[271,4,1,""],set_key:[271,4,1,""],set_min_max:[271,4,1,""],set_viewangle:[271,4,1,""],thisown:[271,3,1,""],to_key:[271,5,1,""],update:[271,4,1,""],write_pdf:[271,4,1,""],write_png:[271,4,1,""],zoom:[271,4,1,""]},"dolfin.cpp.io.XDMFFile":{read:[275,4,1,""],thisown:[275,3,1,""],write:[275,4,1,""]},"dolfin.cpp.la":{BlockMatrix:[279,2,1,""],BlockVector:[280,2,1,""],CholmodCholeskySolver:[281,2,1,""],CholmodCholeskySolver_default_parameters:[282,1,1,""],CoordinateMatrix:[283,2,1,""],DefaultFactory:[284,2,1,""],DefaultFactory_factory:[285,1,1,""],GenericLUSolver:[296,2,1,""],GenericLinearAlgebraFactory:[297,2,1,""],GenericLinearOperator:[298,2,1,""],GenericLinearSolver:[299,2,1,""],GenericMatrix:[300,2,1,""],GenericPreconditioner:[301,2,1,""],GenericSparsityPattern:[302,2,1,""],GenericTensor:[303,2,1,""],GenericVector:[304,2,1,""],KrylovSolver:[305,2,1,""],KrylovSolver_default_parameters:[306,1,1,""],LUSolver:[307,2,1,""],LUSolver_default_parameters:[308,1,1,""],LinearAlgebraObject:[309,2,1,""],LinearOperator:[310,2,1,""],LinearSolver:[311,2,1,""],LinearSolver_default_parameters:[312,1,1,""],Matrix:[313,2,1,""],NewtonSolver:[314,2,1,""],NewtonSolver_default_parameters:[315,1,1,""],NonlinearProblem:[316,2,1,""],PETScBaseMatrix:[317,2,1,""],PETScFactory:[318,2,1,""],PETScFactory_instance:[319,1,1,""],PETScKrylovSolver:[320,2,1,""],PETScKrylovSolver_default_parameters:[321,1,1,""],PETScKrylovSolver_methods:[322,1,1,""],PETScKrylovSolver_preconditioners:[323,1,1,""],PETScLUSolver:[324,2,1,""],PETScLUSolver_default_parameters:[325,1,1,""],PETScLUSolver_methods:[326,1,1,""],PETScLinearOperator:[327,2,1,""],PETScMatrix:[328,2,1,""],PETScObject:[329,2,1,""],PETScObject_petsc_error:[330,1,1,""],PETScOptions:[331,2,1,""],PETScOptions_clear:[332,1,1,""],PETScOptions_set:[333,1,1,""],PETScPreconditioner:[334,2,1,""],PETScPreconditioner_default_parameters:[335,1,1,""],PETScPreconditioner_preconditioners:[336,1,1,""],PETScSNESSolver:[337,2,1,""],PETScSNESSolver_default_parameters:[338,1,1,""],PETScSNESSolver_methods:[339,1,1,""],PETScUserPreconditioner:[340,2,1,""],PETScVector:[341,2,1,""],SLEPcEigenSolver:[342,2,1,""],SLEPcEigenSolver_default_parameters:[343,1,1,""],STLFactory:[344,2,1,""],STLFactory_instance:[345,1,1,""],STLMatrix:[346,2,1,""],Scalar:[347,2,1,""],SparsityPattern:[348,2,1,""],UmfpackLUSolver:[352,2,1,""],UmfpackLUSolver_default_parameters:[353,1,1,""],Vector:[354,2,1,""],VectorSpaceBasis:[355,2,1,""],as_backend_type:[356,1,1,""],get_tensor_type:[357,1,1,""],has_krylov_solver_method:[358,1,1,""],has_krylov_solver_preconditioner:[359,1,1,""],has_lu_solver_method:[360,1,1,""],has_type:[361,1,1,""],krylov_solver_methods:[363,1,1,""],krylov_solver_preconditioners:[364,1,1,""],la_solve:[365,1,1,""],linear_algebra_backends:[366,1,1,""],linear_solver_methods:[367,1,1,""],list_krylov_solver_methods:[368,1,1,""],list_krylov_solver_preconditioners:[369,1,1,""],list_linear_algebra_backends:[370,1,1,""],list_linear_solver_methods:[371,1,1,""],list_lu_solver_methods:[372,1,1,""],lu_solver_methods:[373,1,1,""],normalize:[374,1,1,""],residual:[375,1,1,""],uBLASDenseFactory:[376,2,1,""],uBLASDenseFactory_instance:[377,1,1,""],uBLASDenseMatrix:[378,2,1,""],uBLASILUPreconditioner:[379,2,1,""],uBLASKrylovSolver:[380,2,1,""],uBLASKrylovSolver_default_parameters:[381,1,1,""],uBLASKrylovSolver_methods:[382,1,1,""],uBLASKrylovSolver_preconditioners:[383,1,1,""],uBLASLinearOperator:[384,2,1,""],uBLASPreconditioner:[385,2,1,""],uBLASSparseFactory:[386,2,1,""],uBLASSparseFactory_instance:[387,1,1,""],uBLASSparseMatrix:[388,2,1,""],uBLASVector:[389,2,1,""]},"dolfin.cpp.la.BlockMatrix":{apply:[279,4,1,""],get_block:[279,4,1,""],mult:[279,4,1,""],schur_approximation:[279,4,1,""],set_block:[279,4,1,""],size:[279,4,1,""],str:[279,4,1,""],thisown:[279,3,1,""],zero:[279,4,1,""]},"dolfin.cpp.la.BlockVector":{axpy:[280,4,1,""],copy:[280,4,1,""],empty:[280,4,1,""],get_block:[280,4,1,""],inner:[280,4,1,""],max:[280,4,1,""],min:[280,4,1,""],norm:[280,4,1,""],set_block:[280,4,1,""],size:[280,4,1,""],str:[280,4,1,""],thisown:[280,3,1,""]},"dolfin.cpp.la.CholmodCholeskySolver":{default_parameters:[281,5,1,""],factorize:[281,4,1,""],factorized_solve:[281,4,1,""],thisown:[281,3,1,""]},"dolfin.cpp.la.CoordinateMatrix":{base_one:[283,4,1,""],columns:[283,4,1,""],mpi_comm:[283,4,1,""],norm:[283,4,1,""],rows:[283,4,1,""],size:[283,4,1,""],thisown:[283,3,1,""],values:[283,4,1,""]},"dolfin.cpp.la.DefaultFactory":{factory:[284,5,1,""],thisown:[284,3,1,""]},"dolfin.cpp.la.GenericLUSolver":{solve:[296,4,1,""],solve_transpose:[296,4,1,""],thisown:[296,3,1,""]},"dolfin.cpp.la.GenericLinearAlgebraFactory":{create_krylov_solver:[297,4,1,""],create_layout:[297,4,1,""],create_linear_operator:[297,4,1,""],create_lu_solver:[297,4,1,""],create_matrix:[297,4,1,""],create_vector:[297,4,1,""],krylov_solver_methods:[297,4,1,""],krylov_solver_preconditioners:[297,4,1,""],lu_solver_methods:[297,4,1,""],thisown:[297,3,1,""]},"dolfin.cpp.la.GenericLinearOperator":{mult:[298,4,1,""],size:[298,4,1,""],thisown:[298,3,1,""]},"dolfin.cpp.la.GenericLinearSolver":{parameter_type:[299,4,1,""],set_nullspace:[299,4,1,""],set_operator:[299,4,1,""],set_operators:[299,4,1,""],solve:[299,4,1,""],solve_transpose:[299,4,1,""],thisown:[299,3,1,""],update_parameters:[299,4,1,""]},"dolfin.cpp.la.GenericMatrix":{add:[300,4,1,""],array:[300,4,1,""],assign:[300,4,1,""],axpy:[300,4,1,""],compressed:[300,4,1,""],copy:[300,4,1,""],data:[300,4,1,""],get:[300,4,1,""],getrow:[300,4,1,""],ident:[300,4,1,""],ident_zeros:[300,4,1,""],init_vector:[300,4,1,""],is_symmetric:[300,4,1,""],norm:[300,4,1,""],set:[300,4,1,""],set_diagonal:[300,4,1,""],setrow:[300,4,1,""],sparray:[300,4,1,""],thisown:[300,3,1,""],transpmult:[300,4,1,""],zero:[300,4,1,""]},"dolfin.cpp.la.GenericPreconditioner":{set_coordinates:[301,4,1,""],set_nullspace:[301,4,1,""],thisown:[301,3,1,""]},"dolfin.cpp.la.GenericSparsityPattern":{add_edges:[302,4,1,""],apply:[302,4,1,""],diagonal_pattern:[302,4,1,""],get_edges:[302,4,1,""],init:[302,4,1,""],insert:[302,4,1,""],local_range:[302,4,1,""],mpi_comm:[302,4,1,""],num_local_nonzeros:[302,4,1,""],num_nonzeros:[302,4,1,""],num_nonzeros_diagonal:[302,4,1,""],num_nonzeros_off_diagonal:[302,4,1,""],off_diagonal_pattern:[302,4,1,""],primary_dim:[302,4,1,""],rank:[302,4,1,""],sorted:[302,3,1,""],thisown:[302,3,1,""],unsorted:[302,3,1,""]},"dolfin.cpp.la.GenericTensor":{add:[303,4,1,""],apply:[303,4,1,""],empty:[303,4,1,""],factory:[303,4,1,""],init:[303,4,1,""],local_range:[303,4,1,""],mpi_comm:[303,4,1,""],rank:[303,4,1,""],size:[303,4,1,""],thisown:[303,3,1,""],zero:[303,4,1,""]},"dolfin.cpp.la.GenericVector":{abs:[304,4,1,""],add:[304,4,1,""],add_local:[304,4,1,""],array:[304,4,1,""],axpy:[304,4,1,""],copy:[304,4,1,""],gather:[304,4,1,""],gather_on_zero:[304,4,1,""],get_local:[304,4,1,""],init:[304,4,1,""],inner:[304,4,1,""],local_range:[304,4,1,""],local_size:[304,4,1,""],max:[304,4,1,""],min:[304,4,1,""],norm:[304,4,1,""],owns_index:[304,4,1,""],resize:[304,4,1,""],set_local:[304,4,1,""],size:[304,4,1,""],sum:[304,4,1,""],thisown:[304,3,1,""]},"dolfin.cpp.la.KrylovSolver":{default_parameters:[305,5,1,""],solve:[305,4,1,""],thisown:[305,3,1,""]},"dolfin.cpp.la.LUSolver":{default_parameters:[307,5,1,""],solve:[307,4,1,""],solve_transpose:[307,4,1,""],thisown:[307,3,1,""]},"dolfin.cpp.la.LinearAlgebraObject":{shared_instance:[309,4,1,""],thisown:[309,3,1,""]},"dolfin.cpp.la.LinearOperator":{init_layout:[310,4,1,""],mult:[310,4,1,""],shared_instance:[310,4,1,""],size:[310,4,1,""],str:[310,4,1,""],thisown:[310,3,1,""]},"dolfin.cpp.la.LinearSolver":{default_parameters:[311,5,1,""],solve:[311,4,1,""],thisown:[311,3,1,""]},"dolfin.cpp.la.Matrix":{assign:[313,4,1,""],down_cast:[313,4,1,""],shared_instance:[313,4,1,""],thisown:[313,3,1,""],zero:[313,4,1,""]},"dolfin.cpp.la.NewtonSolver":{default_parameters:[314,5,1,""],iteration:[314,4,1,""],linear_solver:[314,4,1,""],relative_residual:[314,4,1,""],residual:[314,4,1,""],solve:[314,4,1,""],thisown:[314,3,1,""]},"dolfin.cpp.la.NonlinearProblem":{F:[316,4,1,""],J:[316,4,1,""],form:[316,4,1,""],thisown:[316,3,1,""]},"dolfin.cpp.la.PETScBaseMatrix":{init_vector:[317,4,1,""],local_range:[317,4,1,""],mat:[317,4,1,""],size:[317,4,1,""],thisown:[317,3,1,""]},"dolfin.cpp.la.PETScFactory":{instance:[318,5,1,""],thisown:[318,3,1,""]},"dolfin.cpp.la.PETScKrylovSolver":{default_parameters:[320,5,1,""],get_operator:[320,4,1,""],ksp:[320,4,1,""],methods:[320,5,1,""],preconditioners:[320,5,1,""],set_operator:[320,4,1,""],set_operators:[320,4,1,""],set_options_prefix:[320,4,1,""],solve:[320,4,1,""],thisown:[320,3,1,""]},"dolfin.cpp.la.PETScLUSolver":{default_parameters:[324,5,1,""],get_operator:[324,4,1,""],ksp:[324,4,1,""],methods:[324,5,1,""],set_operator:[324,4,1,""],solve:[324,4,1,""],solve_transpose:[324,4,1,""],thisown:[324,3,1,""]},"dolfin.cpp.la.PETScLinearOperator":{init_layout:[327,4,1,""],mult:[327,4,1,""],size:[327,4,1,""],thisown:[327,3,1,""]},"dolfin.cpp.la.PETScMatrix":{assign:[328,4,1,""],binary_dump:[328,4,1,""],thisown:[328,3,1,""],zero:[328,4,1,""]},"dolfin.cpp.la.PETScObject":{petsc_error:[329,5,1,""],thisown:[329,3,1,""]},"dolfin.cpp.la.PETScOptions":{clear:[331,5,1,""],set:[331,5,1,""],thisown:[331,3,1,""]},"dolfin.cpp.la.PETScPreconditioner":{default_parameters:[334,5,1,""],preconditioners:[334,5,1,""],set:[334,4,1,""],set_fieldsplit:[334,4,1,""],thisown:[334,3,1,""]},"dolfin.cpp.la.PETScSNESSolver":{default_parameters:[337,5,1,""],init:[337,4,1,""],methods:[337,5,1,""],parameters:[337,3,1,""],snes:[337,4,1,""],solve:[337,4,1,""],thisown:[337,3,1,""]},"dolfin.cpp.la.PETScUserPreconditioner":{setup:[340,5,1,""],solve:[340,4,1,""],thisown:[340,3,1,""]},"dolfin.cpp.la.PETScVector":{gather:[341,4,1,""],get_local:[341,4,1,""],init:[341,4,1,""],sum:[341,4,1,""],thisown:[341,3,1,""],update_ghost_values:[341,4,1,""],vec:[341,4,1,""]},"dolfin.cpp.la.SLEPcEigenSolver":{default_parameters:[342,5,1,""],get_eigenpair:[342,4,1,""],get_eigenvalue:[342,4,1,""],get_iteration_number:[342,4,1,""],get_number_converged:[342,4,1,""],set_deflation_space:[342,4,1,""],solve:[342,4,1,""],thisown:[342,3,1,""]},"dolfin.cpp.la.STLFactory":{instance:[344,5,1,""],thisown:[344,3,1,""]},"dolfin.cpp.la.STLMatrix":{block_size:[346,4,1,""],clear:[346,4,1,""],local_nnz:[346,4,1,""],nnz:[346,4,1,""],sort:[346,4,1,""],thisown:[346,3,1,""],zero:[346,4,1,""]},"dolfin.cpp.la.Scalar":{add:[347,4,1,""],assign:[347,4,1,""],copy:[347,4,1,""],getval:[347,4,1,""],thisown:[347,3,1,""]},"dolfin.cpp.la.SparsityPattern":{thisown:[348,3,1,""]},"dolfin.cpp.la.UmfpackLUSolver":{default_parameters:[352,5,1,""],get_operator:[352,4,1,""],solve:[352,4,1,""],thisown:[352,3,1,""]},"dolfin.cpp.la.Vector":{data:[354,4,1,""],down_cast:[354,4,1,""],gather:[354,4,1,""],get_local:[354,4,1,""],init:[354,4,1,""],shared_instance:[354,4,1,""],sum:[354,4,1,""],thisown:[354,3,1,""]},"dolfin.cpp.la.VectorSpaceBasis":{dim:[355,4,1,""],is_orthogonal:[355,4,1,""],is_orthonormal:[355,4,1,""],orthogonalize:[355,4,1,""],thisown:[355,3,1,""]},"dolfin.cpp.la.uBLASDenseFactory":{instance:[376,5,1,""],thisown:[376,3,1,""]},"dolfin.cpp.la.uBLASDenseMatrix":{assign:[378,4,1,""],compress:[378,4,1,""],invert:[378,4,1,""],lump:[378,4,1,""],mat:[378,4,1,""],resize:[378,4,1,""],solve:[378,4,1,""],solve_in_place:[378,4,1,""],thisown:[378,3,1,""],zero:[378,4,1,""]},"dolfin.cpp.la.uBLASILUPreconditioner":{thisown:[379,3,1,""]},"dolfin.cpp.la.uBLASKrylovSolver":{default_parameters:[380,5,1,""],get_operator:[380,4,1,""],methods:[380,5,1,""],preconditioners:[380,5,1,""],solve:[380,4,1,""],thisown:[380,3,1,""]},"dolfin.cpp.la.uBLASLinearOperator":{init_layout:[384,4,1,""],mult:[384,4,1,""],size:[384,4,1,""],thisown:[384,3,1,""]},"dolfin.cpp.la.uBLASPreconditioner":{init:[385,4,1,""],solve:[385,4,1,""],thisown:[385,3,1,""]},"dolfin.cpp.la.uBLASSparseFactory":{instance:[386,5,1,""],thisown:[386,3,1,""]},"dolfin.cpp.la.uBLASSparseMatrix":{assign:[388,4,1,""],compress:[388,4,1,""],invert:[388,4,1,""],lump:[388,4,1,""],mat:[388,4,1,""],resize:[388,4,1,""],solve:[388,4,1,""],solve_in_place:[388,4,1,""],thisown:[388,3,1,""],zero:[388,4,1,""]},"dolfin.cpp.la.uBLASVector":{data:[389,4,1,""],gather:[389,4,1,""],get_local:[389,4,1,""],init:[389,4,1,""],resize:[389,4,1,""],sum:[389,4,1,""],thisown:[389,3,1,""],vec:[389,4,1,""]},"dolfin.cpp.mesh":{BoundaryMesh:[390,2,1,""],BoundingBoxTree3D:[392,2,1,""],BoundingBoxTree:[391,2,1,""],Box:[393,2,1,""],BoxMesh:[394,2,1,""],CSGCGALMeshGenerator2D:[395,2,1,""],CSGCGALMeshGenerator2D_default_parameters:[396,1,1,""],CSGCGALMeshGenerator3D:[397,2,1,""],CSGCGALMeshGenerator3D_default_parameters:[398,1,1,""],CSGDifference:[399,2,1,""],CSGGeometries:[400,2,1,""],CSGGeometry:[401,2,1,""],CSGIntersection:[402,2,1,""],CSGMeshGenerator:[403,2,1,""],CSGMeshGenerator_generate:[404,1,1,""],CSGOperator:[405,2,1,""],CSGPrimitive2D:[407,2,1,""],CSGPrimitive3D:[408,2,1,""],CSGPrimitive:[406,2,1,""],CSGUnion:[409,2,1,""],Cell:[410,2,1,""],CellFunction:[411,2,1,""],CellFunctionBool:[412,2,1,""],CellFunctionDouble:[413,2,1,""],CellFunctionInt:[414,2,1,""],CellFunctionSizet:[415,2,1,""],CellType:[416,2,1,""],CellType_create:[417,1,1,""],CellType_string2type:[418,1,1,""],CellType_type2string:[419,1,1,""],Circle:[420,2,1,""],CircleMesh:[421,2,1,""],Cone:[422,2,1,""],Cylinder:[423,2,1,""],DomainBoundary:[424,2,1,""],DynamicMeshEditor:[425,2,1,""],Edge:[426,2,1,""],EdgeFunction:[427,2,1,""],EdgeFunctionBool:[428,2,1,""],EdgeFunctionDouble:[429,2,1,""],EdgeFunctionInt:[430,2,1,""],EdgeFunctionSizet:[431,2,1,""],Ellipse:[432,2,1,""],EllipseMesh:[433,2,1,""],EllipsoidMesh:[434,2,1,""],Face:[435,2,1,""],FaceFunction:[436,2,1,""],FaceFunctionBool:[437,2,1,""],FaceFunctionDouble:[438,2,1,""],FaceFunctionInt:[439,2,1,""],FaceFunctionSizet:[440,2,1,""],Facet:[441,2,1,""],FacetCell:[442,2,1,""],FacetFunction:[443,2,1,""],FacetFunctionBool:[444,2,1,""],FacetFunctionDouble:[445,2,1,""],FacetFunctionInt:[446,2,1,""],FacetFunctionSizet:[447,2,1,""],GenericBoundingBoxTree:[448,2,1,""],HierarchicalFunction:[449,2,1,""],HierarchicalFunctionSpace:[450,2,1,""],HierarchicalMesh:[451,2,1,""],HierarchicalMeshFunctionBool:[452,2,1,""],HierarchicalMeshFunctionDouble:[453,2,1,""],HierarchicalMeshFunctionInt:[454,2,1,""],HierarchicalMeshFunctionSizet:[455,2,1,""],HierarchicalMeshFunctionUInt:[456,2,1,""],ImplicitSurface:[460,2,1,""],IntervalMesh:[461,2,1,""],LocalMeshData:[462,2,1,""],Mesh:[463,2,1,""],MeshColoring:[464,2,1,""],MeshColoring_cell_colors:[465,1,1,""],MeshColoring_color:[466,1,1,""],MeshColoring_color_cells:[467,1,1,""],MeshColoring_compute_colors:[468,1,1,""],MeshColoring_type_to_dim:[469,1,1,""],MeshConnectivity:[470,2,1,""],MeshData:[471,2,1,""],MeshDomains:[472,2,1,""],MeshEditor:[473,2,1,""],MeshEntity:[474,2,1,""],MeshFunction:[475,2,1,""],MeshFunctionBool:[476,2,1,""],MeshFunctionDouble:[477,2,1,""],MeshFunctionInt:[478,2,1,""],MeshFunctionSizet:[479,2,1,""],MeshGeometry:[480,2,1,""],MeshPointIntersection:[481,2,1,""],MeshQuality:[482,2,1,""],MeshQuality_radius_ratio_histogram_data:[483,1,1,""],MeshQuality_radius_ratio_matplotlib_histogram:[484,1,1,""],MeshQuality_radius_ratio_min_max:[485,1,1,""],MeshQuality_radius_ratios:[486,1,1,""],MeshRenumbering:[487,2,1,""],MeshTopology:[488,2,1,""],MeshTransformation:[489,2,1,""],MeshTransformation_rotate:[490,1,1,""],MeshTransformation_translate:[491,1,1,""],MeshValueCollection:[492,2,1,""],MeshValueCollectionBool:[493,2,1,""],MeshValueCollectionDouble:[494,2,1,""],MeshValueCollectionInt:[495,2,1,""],MeshValueCollectionSizet:[496,2,1,""],PeriodicBoundaryComputation:[497,2,1,""],PeriodicBoundaryComputation_compute_periodic_pairs:[498,1,1,""],PeriodicBoundaryComputation_masters_slaves:[499,1,1,""],Point:[500,2,1,""],Polygon:[501,2,1,""],Rectangle:[507,2,1,""],RectangleMesh:[508,2,1,""],Restriction:[509,2,1,""],Sphere:[510,2,1,""],SphereMesh:[511,2,1,""],SubDomain:[512,2,1,""],SubMesh:[513,2,1,""],SubsetIterator:[514,2,1,""],Surface3D:[515,2,1,""],Tetrahedron:[516,2,1,""],UnitCubeMesh:[519,2,1,""],UnitIntervalMesh:[520,2,1,""],UnitSquareMesh:[521,2,1,""],UnitTetrahedronMesh:[522,2,1,""],UnitTriangleMesh:[523,2,1,""],Vertex:[524,2,1,""],VertexFunction:[525,2,1,""],VertexFunctionBool:[526,2,1,""],VertexFunctionDouble:[527,2,1,""],VertexFunctionInt:[528,2,1,""],VertexFunctionSizet:[529,2,1,""],cells:[530,2,1,""],edges:[531,2,1,""],entities:[532,2,1,""],faces:[533,2,1,""],facets:[534,2,1,""],intersect:[536,1,1,""],refine:[537,1,1,""],vertices:[538,2,1,""]},"dolfin.cpp.mesh.BoundaryMesh":{entity_map:[390,4,1,""],thisown:[390,3,1,""]},"dolfin.cpp.mesh.BoundingBoxTree":{build:[391,4,1,""],compute_closest_entity:[391,4,1,""],compute_closest_point:[391,4,1,""],compute_collisions:[391,4,1,""],compute_entity_collisions:[391,4,1,""],compute_first_collision:[391,4,1,""],compute_first_entity_collision:[391,4,1,""],thisown:[391,3,1,""]},"dolfin.cpp.mesh.BoundingBoxTree3D":{thisown:[392,3,1,""]},"dolfin.cpp.mesh.Box":{thisown:[393,3,1,""]},"dolfin.cpp.mesh.BoxMesh":{thisown:[394,3,1,""]},"dolfin.cpp.mesh.CSGCGALMeshGenerator2D":{default_parameters:[395,5,1,""],generate:[395,4,1,""],thisown:[395,3,1,""]},"dolfin.cpp.mesh.CSGCGALMeshGenerator3D":{default_parameters:[397,5,1,""],generate:[397,4,1,""],save_off:[397,4,1,""],thisown:[397,3,1,""]},"dolfin.cpp.mesh.CSGDifference":{thisown:[399,3,1,""]},"dolfin.cpp.mesh.CSGGeometries":{lego:[400,5,1,""],propeller:[400,5,1,""],thisown:[400,3,1,""]},"dolfin.cpp.mesh.CSGGeometry":{Box:[401,3,1,""],Circle:[401,3,1,""],Cone:[401,3,1,""],Difference:[401,3,1,""],Ellipse:[401,3,1,""],Intersection:[401,3,1,""],Polygon:[401,3,1,""],Rectangle:[401,3,1,""],Sphere:[401,3,1,""],Surface3D:[401,3,1,""],Tetrahedron:[401,3,1,""],Union:[401,3,1,""],dim:[401,4,1,""],getType:[401,4,1,""],has_subdomains:[401,4,1,""],is_operator:[401,4,1,""],set_subdomain:[401,4,1,""],subdomains:[401,3,1,""],thisown:[401,3,1,""]},"dolfin.cpp.mesh.CSGIntersection":{thisown:[402,3,1,""]},"dolfin.cpp.mesh.CSGMeshGenerator":{generate:[403,5,1,""],thisown:[403,3,1,""]},"dolfin.cpp.mesh.CSGOperator":{thisown:[405,3,1,""]},"dolfin.cpp.mesh.CSGPrimitive":{thisown:[406,3,1,""]},"dolfin.cpp.mesh.CSGPrimitive2D":{thisown:[407,3,1,""]},"dolfin.cpp.mesh.CSGPrimitive3D":{thisown:[408,3,1,""]},"dolfin.cpp.mesh.CSGUnion":{thisown:[409,3,1,""]},"dolfin.cpp.mesh.Cell":{cell_normal:[410,4,1,""],collides:[410,4,1,""],contains:[410,4,1,""],diameter:[410,4,1,""],distance:[410,4,1,""],facet_area:[410,4,1,""],get_cell_data:[410,4,1,""],get_cell_topology:[410,4,1,""],get_vertex_coordinates:[410,4,1,""],inradius:[410,4,1,""],normal:[410,4,1,""],order:[410,4,1,""],ordered:[410,4,1,""],orientation:[410,4,1,""],radius_ratio:[410,4,1,""],squared_distance:[410,4,1,""],thisown:[410,3,1,""],triangulate_intersection:[410,4,1,""],type:[410,4,1,""],volume:[410,4,1,""]},"dolfin.cpp.mesh.CellFunctionBool":{thisown:[412,3,1,""]},"dolfin.cpp.mesh.CellFunctionDouble":{thisown:[413,3,1,""]},"dolfin.cpp.mesh.CellFunctionInt":{thisown:[414,3,1,""]},"dolfin.cpp.mesh.CellFunctionSizet":{thisown:[415,3,1,""]},"dolfin.cpp.mesh.CellType":{cell_normal:[416,4,1,""],cell_type:[416,4,1,""],collides:[416,4,1,""],create:[416,5,1,""],create_entities:[416,4,1,""],description:[416,4,1,""],diameter:[416,4,1,""],dim:[416,4,1,""],facet_area:[416,4,1,""],facet_type:[416,4,1,""],inradius:[416,4,1,""],interval:[416,3,1,""],normal:[416,4,1,""],num_entities:[416,4,1,""],num_vertices:[416,4,1,""],order:[416,4,1,""],ordered:[416,4,1,""],orientation:[416,4,1,""],point:[416,3,1,""],radius_ratio:[416,4,1,""],refine_cell:[416,4,1,""],squared_distance:[416,4,1,""],string2type:[416,5,1,""],tetrahedron:[416,3,1,""],thisown:[416,3,1,""],triangle:[416,3,1,""],triangulate_intersection:[416,4,1,""],type2string:[416,5,1,""],volume:[416,4,1,""]},"dolfin.cpp.mesh.Circle":{center:[420,4,1,""],fragments:[420,4,1,""],radius:[420,4,1,""],thisown:[420,3,1,""]},"dolfin.cpp.mesh.CircleMesh":{thisown:[421,3,1,""]},"dolfin.cpp.mesh.Cone":{thisown:[422,3,1,""]},"dolfin.cpp.mesh.Cylinder":{thisown:[423,3,1,""]},"dolfin.cpp.mesh.DomainBoundary":{thisown:[424,3,1,""]},"dolfin.cpp.mesh.DynamicMeshEditor":{add_cell:[425,4,1,""],add_vertex:[425,4,1,""],close:[425,4,1,""],open:[425,4,1,""],thisown:[425,3,1,""]},"dolfin.cpp.mesh.Edge":{dot:[426,4,1,""],length:[426,4,1,""],thisown:[426,3,1,""]},"dolfin.cpp.mesh.EdgeFunctionBool":{thisown:[428,3,1,""]},"dolfin.cpp.mesh.EdgeFunctionDouble":{thisown:[429,3,1,""]},"dolfin.cpp.mesh.EdgeFunctionInt":{thisown:[430,3,1,""]},"dolfin.cpp.mesh.EdgeFunctionSizet":{thisown:[431,3,1,""]},"dolfin.cpp.mesh.Ellipse":{a:[432,4,1,""],b:[432,4,1,""],center:[432,4,1,""],fragments:[432,4,1,""],thisown:[432,3,1,""]},"dolfin.cpp.mesh.EllipseMesh":{thisown:[433,3,1,""]},"dolfin.cpp.mesh.EllipsoidMesh":{thisown:[434,3,1,""]},"dolfin.cpp.mesh.Face":{area:[435,4,1,""],normal:[435,4,1,""],thisown:[435,3,1,""]},"dolfin.cpp.mesh.FaceFunctionBool":{thisown:[437,3,1,""]},"dolfin.cpp.mesh.FaceFunctionDouble":{thisown:[438,3,1,""]},"dolfin.cpp.mesh.FaceFunctionInt":{thisown:[439,3,1,""]},"dolfin.cpp.mesh.FaceFunctionSizet":{thisown:[440,3,1,""]},"dolfin.cpp.mesh.Facet":{adjacent_cells:[441,4,1,""],exterior:[441,4,1,""],normal:[441,4,1,""],thisown:[441,3,1,""]},"dolfin.cpp.mesh.FacetCell":{facet_index:[442,4,1,""],thisown:[442,3,1,""]},"dolfin.cpp.mesh.FacetFunctionBool":{thisown:[444,3,1,""]},"dolfin.cpp.mesh.FacetFunctionDouble":{thisown:[445,3,1,""]},"dolfin.cpp.mesh.FacetFunctionInt":{thisown:[446,3,1,""]},"dolfin.cpp.mesh.FacetFunctionSizet":{thisown:[447,3,1,""]},"dolfin.cpp.mesh.GenericBoundingBoxTree":{build:[448,4,1,""],compute_closest_entity:[448,4,1,""],compute_closest_point:[448,4,1,""],compute_collisions:[448,4,1,""],compute_entity_collisions:[448,4,1,""],compute_first_collision:[448,4,1,""],compute_first_entity_collision:[448,4,1,""],thisown:[448,3,1,""]},"dolfin.cpp.mesh.HierarchicalFunction":{clear_child:[449,4,1,""],depth:[449,4,1,""],has_child:[449,4,1,""],has_parent:[449,4,1,""],set_child:[449,4,1,""],set_parent:[449,4,1,""],thisown:[449,3,1,""]},"dolfin.cpp.mesh.HierarchicalFunctionSpace":{clear_child:[450,4,1,""],depth:[450,4,1,""],has_child:[450,4,1,""],has_parent:[450,4,1,""],set_child:[450,4,1,""],set_parent:[450,4,1,""],thisown:[450,3,1,""]},"dolfin.cpp.mesh.HierarchicalMesh":{child:[451,4,1,""],clear_child:[451,4,1,""],depth:[451,4,1,""],has_child:[451,4,1,""],has_parent:[451,4,1,""],leaf_node:[451,4,1,""],parent:[451,4,1,""],root_node:[451,4,1,""],set_child:[451,4,1,""],set_parent:[451,4,1,""],thisown:[451,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionBool":{child:[452,4,1,""],clear_child:[452,4,1,""],depth:[452,4,1,""],has_child:[452,4,1,""],has_parent:[452,4,1,""],leaf_node:[452,4,1,""],parent:[452,4,1,""],root_node:[452,4,1,""],set_child:[452,4,1,""],set_parent:[452,4,1,""],thisown:[452,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionDouble":{child:[453,4,1,""],clear_child:[453,4,1,""],depth:[453,4,1,""],has_child:[453,4,1,""],has_parent:[453,4,1,""],leaf_node:[453,4,1,""],parent:[453,4,1,""],root_node:[453,4,1,""],set_child:[453,4,1,""],set_parent:[453,4,1,""],thisown:[453,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionInt":{child:[454,4,1,""],clear_child:[454,4,1,""],depth:[454,4,1,""],has_child:[454,4,1,""],has_parent:[454,4,1,""],leaf_node:[454,4,1,""],parent:[454,4,1,""],root_node:[454,4,1,""],set_child:[454,4,1,""],set_parent:[454,4,1,""],thisown:[454,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionSizet":{child:[455,4,1,""],clear_child:[455,4,1,""],depth:[455,4,1,""],has_child:[455,4,1,""],has_parent:[455,4,1,""],leaf_node:[455,4,1,""],parent:[455,4,1,""],root_node:[455,4,1,""],set_child:[455,4,1,""],set_parent:[455,4,1,""],thisown:[455,3,1,""]},"dolfin.cpp.mesh.HierarchicalMeshFunctionUInt":{clear_child:[456,4,1,""],depth:[456,4,1,""],has_child:[456,4,1,""],has_parent:[456,4,1,""],set_child:[456,4,1,""],set_parent:[456,4,1,""],thisown:[456,3,1,""]},"dolfin.cpp.mesh.ImplicitSurface":{f0:[460,4,1,""],f1:[460,4,1,""],on_surface:[460,4,1,""],polylines:[460,3,1,""],sphere:[460,3,1,""],thisown:[460,3,1,""],type:[460,3,1,""]},"dolfin.cpp.mesh.IntervalMesh":{thisown:[461,3,1,""]},"dolfin.cpp.mesh.LocalMeshData":{broadcast_mesh_data:[462,4,1,""],cell_partition:[462,3,1,""],cell_vertices:[462,3,1,""],clear:[462,4,1,""],domain_data:[462,3,1,""],extract_mesh_data:[462,4,1,""],gdim:[462,3,1,""],global_cell_indices:[462,3,1,""],mpi_comm:[462,4,1,""],num_global_cells:[462,3,1,""],num_global_vertices:[462,3,1,""],num_vertices_per_cell:[462,3,1,""],receive_mesh_data:[462,4,1,""],tdim:[462,3,1,""],thisown:[462,3,1,""],unpack_cell_vertices:[462,4,1,""],unpack_vertex_coordinates:[462,4,1,""],vertex_coordinates:[462,3,1,""],vertex_indices:[462,3,1,""]},"dolfin.cpp.mesh.Mesh":{bounding_box_tree:[463,4,1,""],cell_orientations:[463,4,1,""],cells:[463,4,1,""],clean:[463,4,1,""],clear:[463,4,1,""],color:[463,4,1,""],coordinates:[463,4,1,""],data:[463,4,1,""],domains:[463,4,1,""],geometry:[463,4,1,""],hash:[463,4,1,""],hmax:[463,4,1,""],hmin:[463,4,1,""],init:[463,4,1,""],init_cell_orientations:[463,4,1,""],move:[463,4,1,""],mpi_comm:[463,4,1,""],num_cells:[463,4,1,""],num_edges:[463,4,1,""],num_entities:[463,4,1,""],num_faces:[463,4,1,""],num_facets:[463,4,1,""],num_vertices:[463,4,1,""],order:[463,4,1,""],ordered:[463,4,1,""],renumber_by_color:[463,4,1,""],rmax:[463,4,1,""],rmin:[463,4,1,""],rotate:[463,4,1,""],size:[463,4,1,""],size_global:[463,4,1,""],smooth:[463,4,1,""],smooth_boundary:[463,4,1,""],snap_boundary:[463,4,1,""],thisown:[463,3,1,""],topology:[463,4,1,""],translate:[463,4,1,""],type:[463,4,1,""],ufl_cell:[463,4,1,""],ufl_domain:[463,4,1,""],ufl_id:[463,4,1,""]},"dolfin.cpp.mesh.MeshColoring":{cell_colors:[464,5,1,""],color:[464,5,1,""],color_cells:[464,5,1,""],compute_colors:[464,5,1,""],thisown:[464,3,1,""],type_to_dim:[464,5,1,""]},"dolfin.cpp.mesh.MeshConnectivity":{clear:[470,4,1,""],empty:[470,4,1,""],hash:[470,4,1,""],init:[470,4,1,""],set_global_size:[470,4,1,""],size:[470,4,1,""],size_global:[470,4,1,""],str:[470,4,1,""],thisown:[470,3,1,""]},"dolfin.cpp.mesh.MeshData":{array:[471,4,1,""],clear:[471,4,1,""],create_array:[471,4,1,""],create_mesh_function:[471,4,1,""],erase_array:[471,4,1,""],exists:[471,4,1,""],mesh_function:[471,4,1,""],thisown:[471,3,1,""]},"dolfin.cpp.mesh.MeshDomains":{clear:[472,4,1,""],get_marker:[472,4,1,""],init:[472,4,1,""],is_empty:[472,4,1,""],markers:[472,4,1,""],max_dim:[472,4,1,""],num_marked:[472,4,1,""],set_marker:[472,4,1,""],thisown:[472,3,1,""]},"dolfin.cpp.mesh.MeshEditor":{add_cell:[473,4,1,""],add_vertex:[473,4,1,""],add_vertex_global:[473,4,1,""],close:[473,4,1,""],init_cells:[473,4,1,""],init_cells_global:[473,4,1,""],init_vertices:[473,4,1,""],init_vertices_global:[473,4,1,""],open:[473,4,1,""],thisown:[473,3,1,""]},"dolfin.cpp.mesh.MeshEntity":{dim:[474,4,1,""],entities:[474,4,1,""],global_index:[474,4,1,""],incident:[474,4,1,""],index:[474,4,1,""],init:[474,4,1,""],mesh:[474,4,1,""],mesh_id:[474,4,1,""],midpoint:[474,4,1,""],num_entities:[474,4,1,""],num_global_entities:[474,4,1,""],str:[474,4,1,""],thisown:[474,3,1,""]},"dolfin.cpp.mesh.MeshFunctionBool":{array:[476,4,1,""],dim:[476,4,1,""],empty:[476,4,1,""],init:[476,4,1,""],mesh:[476,4,1,""],set_all:[476,4,1,""],set_value:[476,4,1,""],set_values:[476,4,1,""],size:[476,4,1,""],thisown:[476,3,1,""],ufl_id:[476,4,1,""]},"dolfin.cpp.mesh.MeshFunctionDouble":{array:[477,4,1,""],dim:[477,4,1,""],empty:[477,4,1,""],init:[477,4,1,""],mesh:[477,4,1,""],set_all:[477,4,1,""],set_value:[477,4,1,""],set_values:[477,4,1,""],size:[477,4,1,""],thisown:[477,3,1,""],ufl_id:[477,4,1,""]},"dolfin.cpp.mesh.MeshFunctionInt":{array:[478,4,1,""],dim:[478,4,1,""],empty:[478,4,1,""],init:[478,4,1,""],mesh:[478,4,1,""],set_all:[478,4,1,""],set_value:[478,4,1,""],set_values:[478,4,1,""],size:[478,4,1,""],thisown:[478,3,1,""],ufl_id:[478,4,1,""]},"dolfin.cpp.mesh.MeshFunctionSizet":{array:[479,4,1,""],dim:[479,4,1,""],empty:[479,4,1,""],init:[479,4,1,""],mesh:[479,4,1,""],set_all:[479,4,1,""],set_value:[479,4,1,""],set_values:[479,4,1,""],size:[479,4,1,""],thisown:[479,3,1,""],ufl_id:[479,4,1,""]},"dolfin.cpp.mesh.MeshGeometry":{clear:[480,4,1,""],dim:[480,4,1,""],hash:[480,4,1,""],init:[480,4,1,""],point:[480,4,1,""],set:[480,4,1,""],size:[480,4,1,""],str:[480,4,1,""],thisown:[480,3,1,""],x:[480,4,1,""]},"dolfin.cpp.mesh.MeshPointIntersection":{intersected_cells:[481,4,1,""],thisown:[481,3,1,""]},"dolfin.cpp.mesh.MeshQuality":{radius_ratio_histogram_data:[482,5,1,""],radius_ratio_matplotlib_histogram:[482,5,1,""],radius_ratio_min_max:[482,5,1,""],radius_ratios:[482,5,1,""],thisown:[482,3,1,""]},"dolfin.cpp.mesh.MeshRenumbering":{renumber_by_color:[487,5,1,""],thisown:[487,3,1,""]},"dolfin.cpp.mesh.MeshTopology":{clear:[488,4,1,""],coloring:[488,3,1,""],dim:[488,4,1,""],global_indices:[488,4,1,""],hash:[488,4,1,""],have_global_indices:[488,4,1,""],init:[488,4,1,""],init_global_indices:[488,4,1,""],set_global_index:[488,4,1,""],shared_entities:[488,4,1,""],size:[488,4,1,""],size_global:[488,4,1,""],str:[488,4,1,""],thisown:[488,3,1,""]},"dolfin.cpp.mesh.MeshTransformation":{rotate:[489,5,1,""],thisown:[489,3,1,""],translate:[489,5,1,""]},"dolfin.cpp.mesh.MeshValueCollectionBool":{assign:[493,4,1,""],clear:[493,4,1,""],dim:[493,4,1,""],empty:[493,4,1,""],get_value:[493,4,1,""],init:[493,4,1,""],mesh:[493,4,1,""],set_value:[493,4,1,""],size:[493,4,1,""],thisown:[493,3,1,""],values:[493,4,1,""]},"dolfin.cpp.mesh.MeshValueCollectionDouble":{assign:[494,4,1,""],clear:[494,4,1,""],dim:[494,4,1,""],empty:[494,4,1,""],get_value:[494,4,1,""],init:[494,4,1,""],mesh:[494,4,1,""],set_value:[494,4,1,""],size:[494,4,1,""],thisown:[494,3,1,""],values:[494,4,1,""]},"dolfin.cpp.mesh.MeshValueCollectionInt":{assign:[495,4,1,""],clear:[495,4,1,""],dim:[495,4,1,""],empty:[495,4,1,""],get_value:[495,4,1,""],init:[495,4,1,""],mesh:[495,4,1,""],set_value:[495,4,1,""],size:[495,4,1,""],thisown:[495,3,1,""],values:[495,4,1,""]},"dolfin.cpp.mesh.MeshValueCollectionSizet":{assign:[496,4,1,""],clear:[496,4,1,""],dim:[496,4,1,""],empty:[496,4,1,""],get_value:[496,4,1,""],init:[496,4,1,""],mesh:[496,4,1,""],set_value:[496,4,1,""],size:[496,4,1,""],thisown:[496,3,1,""],values:[496,4,1,""]},"dolfin.cpp.mesh.PeriodicBoundaryComputation":{compute_periodic_pairs:[497,5,1,""],masters_slaves:[497,5,1,""],thisown:[497,3,1,""]},"dolfin.cpp.mesh.Point":{coordinates:[500,4,1,""],cross:[500,4,1,""],distance:[500,4,1,""],dot:[500,4,1,""],norm:[500,4,1,""],rotate:[500,4,1,""],squared_distance:[500,4,1,""],squared_norm:[500,4,1,""],str:[500,4,1,""],thisown:[500,3,1,""],x:[500,4,1,""],y:[500,4,1,""],z:[500,4,1,""]},"dolfin.cpp.mesh.Polygon":{ccw:[501,4,1,""],thisown:[501,3,1,""],vertices:[501,4,1,""]},"dolfin.cpp.mesh.Rectangle":{first_corner:[507,4,1,""],second_corner:[507,4,1,""],thisown:[507,3,1,""]},"dolfin.cpp.mesh.RectangleMesh":{thisown:[508,3,1,""]},"dolfin.cpp.mesh.Restriction":{contains:[509,4,1,""],dim:[509,4,1,""],mesh:[509,4,1,""],thisown:[509,3,1,""]},"dolfin.cpp.mesh.Sphere":{c:[510,3,1,""],r:[510,3,1,""],thisown:[510,3,1,""]},"dolfin.cpp.mesh.SphereMesh":{thisown:[511,3,1,""]},"dolfin.cpp.mesh.SubDomain":{geometric_dimension:[512,4,1,""],inside:[512,4,1,""],map:[512,4,1,""],map_tolerance:[512,3,1,""],mark:[512,4,1,""],mark_cells:[512,4,1,""],mark_facets:[512,4,1,""],snap:[512,4,1,""],thisown:[512,3,1,""]},"dolfin.cpp.mesh.SubMesh":{thisown:[513,3,1,""],ufl_cell:[513,4,1,""],ufl_domain:[513,4,1,""],ufl_id:[513,4,1,""]},"dolfin.cpp.mesh.SubsetIterator":{end:[514,4,1,""],end_iterator:[514,4,1,""],next:[514,4,1,""],thisown:[514,3,1,""]},"dolfin.cpp.mesh.Surface3D":{thisown:[515,3,1,""]},"dolfin.cpp.mesh.Tetrahedron":{thisown:[516,3,1,""]},"dolfin.cpp.mesh.UnitCubeMesh":{thisown:[519,3,1,""]},"dolfin.cpp.mesh.UnitIntervalMesh":{thisown:[520,3,1,""]},"dolfin.cpp.mesh.UnitSquareMesh":{thisown:[521,3,1,""]},"dolfin.cpp.mesh.UnitTetrahedronMesh":{thisown:[522,3,1,""]},"dolfin.cpp.mesh.UnitTriangleMesh":{thisown:[523,3,1,""]},"dolfin.cpp.mesh.Vertex":{point:[524,4,1,""],thisown:[524,3,1,""],x:[524,4,1,""]},"dolfin.cpp.mesh.VertexFunctionBool":{thisown:[526,3,1,""]},"dolfin.cpp.mesh.VertexFunctionDouble":{thisown:[527,3,1,""]},"dolfin.cpp.mesh.VertexFunctionInt":{thisown:[528,3,1,""]},"dolfin.cpp.mesh.VertexFunctionSizet":{thisown:[529,3,1,""]},"dolfin.cpp.mesh.cells":{end:[530,4,1,""],end_iterator:[530,4,1,""],next:[530,4,1,""],pos:[530,4,1,""],thisown:[530,3,1,""]},"dolfin.cpp.mesh.edges":{end:[531,4,1,""],end_iterator:[531,4,1,""],next:[531,4,1,""],pos:[531,4,1,""],thisown:[531,3,1,""]},"dolfin.cpp.mesh.entities":{end:[532,4,1,""],end_iterator:[532,4,1,""],next:[532,4,1,""],pos:[532,4,1,""],thisown:[532,3,1,""]},"dolfin.cpp.mesh.faces":{end:[533,4,1,""],end_iterator:[533,4,1,""],next:[533,4,1,""],pos:[533,4,1,""],thisown:[533,3,1,""]},"dolfin.cpp.mesh.facets":{end:[534,4,1,""],end_iterator:[534,4,1,""],next:[534,4,1,""],pos:[534,4,1,""],thisown:[534,3,1,""]},"dolfin.cpp.mesh.vertices":{end:[538,4,1,""],end_iterator:[538,4,1,""],next:[538,4,1,""],pos:[538,4,1,""],thisown:[538,3,1,""]},"dolfin.deprecation":{down_cast:[539,1,1,""]},"dolfin.fem":{adaptivesolving:[545,0,0,"-"],assembling:[549,0,0,"-"],bcs:[553,0,0,"-"],errorcontrolgenerator:[555,0,0,"-"],form:[557,0,0,"-"],formmanipulations:[561,0,0,"-"],interpolation:[564,0,0,"-"],norms:[567,0,0,"-"],projection:[569,0,0,"-"],solving:[575,0,0,"-"]},"dolfin.fem.adaptivesolving":{AdaptiveLinearVariationalSolver:[541,2,1,""],AdaptiveNonlinearVariationalSolver:[542,2,1,""],generate_error_control:[543,1,1,""],generate_error_control_forms:[544,1,1,""]},"dolfin.fem.adaptivesolving.AdaptiveLinearVariationalSolver":{solve:[541,4,1,""]},"dolfin.fem.adaptivesolving.AdaptiveNonlinearVariationalSolver":{solve:[542,4,1,""]},"dolfin.fem.assembling":{SystemAssembler:[546,2,1,""],assemble:[547,1,1,""],assemble_system:[548,1,1,""]},"dolfin.fem.bcs":{AutoSubDomain:[550,2,1,""],DirichletBC:[551,2,1,""],homogenize:[552,1,1,""]},"dolfin.fem.bcs.AutoSubDomain":{inside:[550,4,1,""]},"dolfin.fem.errorcontrolgenerator":{DOLFINErrorControlGenerator:[554,2,1,""]},"dolfin.fem.errorcontrolgenerator.DOLFINErrorControlGenerator":{initialize_data:[554,4,1,""]},"dolfin.fem.form":{Form:[556,2,1,""]},"dolfin.fem.formmanipulations":{adjoint:[558,1,1,""],derivative:[559,1,1,""],increase_order:[560,1,1,""],tear:[562,1,1,""]},"dolfin.fem.interpolation":{interpolate:[565,1,1,""]},"dolfin.fem.norms":{errornorm:[566,1,1,""],norm:[568,1,1,""]},"dolfin.fem.projection":{project:[570,1,1,""]},"dolfin.fem.solving":{LinearVariationalProblem:[571,2,1,""],LinearVariationalSolver:[572,2,1,""],NonlinearVariationalProblem:[573,2,1,""],NonlinearVariationalSolver:[574,2,1,""],solve:[576,1,1,""]},"dolfin.fem.solving.LinearVariationalSolver":{default_parameters:[572,5,1,""],solve:[572,4,1,""],thisown:[572,3,1,""]},"dolfin.fem.solving.NonlinearVariationalSolver":{default_parameters:[574,5,1,""],solve:[574,4,1,""],thisown:[574,3,1,""]},"dolfin.functions":{"function":[587,0,0,"-"],constant:[578,0,0,"-"],expression:[580,0,0,"-"],functionspace:[595,0,0,"-"],specialfunctions:[607,0,0,"-"],ufc_functionspace:[610,0,0,"-"]},"dolfin.functions.constant":{Constant:[577,2,1,""]},"dolfin.functions.expression":{Expression:[579,2,1,""]},"dolfin.functions.expression.Expression":{str:[579,4,1,""],ufl_element:[579,4,1,""],ufl_evaluate:[579,4,1,""],value_shape:[579,4,1,""]},"dolfin.functions.function":{Argument:[581,2,1,""],Function:[582,2,1,""],TestFunction:[583,1,1,""],TestFunctions:[584,1,1,""],TrialFunction:[585,1,1,""],TrialFunctions:[586,1,1,""]},"dolfin.functions.function.Argument":{function_space:[581,4,1,""]},"dolfin.functions.function.Function":{assign:[582,4,1,""],split:[582,4,1,""],str:[582,4,1,""],sub:[582,4,1,""],ufl_element:[582,4,1,""],ufl_evaluate:[582,4,1,""]},"dolfin.functions.functionspace":{FunctionSpace:[588,2,1,""],FunctionSpaceBase:[589,2,1,""],FunctionSpaceFromCpp:[590,2,1,""],MixedFunctionSpace:[591,2,1,""],TensorFunctionSpace:[592,2,1,""],VectorFunctionSpace:[593,2,1,""],create_ufc_function_spaces:[594,1,1,""]},"dolfin.functions.functionspace.FunctionSpace":{restriction:[588,4,1,""]},"dolfin.functions.functionspace.FunctionSpaceBase":{cell:[589,4,1,""],collapse:[589,4,1,""],dolfin_element:[589,4,1,""],extract_sub_space:[589,4,1,""],num_sub_spaces:[589,4,1,""],split:[589,4,1,""],sub:[589,4,1,""],ufl_element:[589,4,1,""]},"dolfin.functions.specialfunctions":{CellNormal:[597,1,1,""],CellSize:[598,1,1,""],CellVolume:[599,1,1,""],Circumradius:[600,1,1,""],FacetArea:[601,2,1,""],FacetNormal:[602,1,1,""],MaxFacetEdgeLength:[603,1,1,""],MeshCoordinates:[604,2,1,""],MinFacetEdgeLength:[605,1,1,""],SpatialCoordinate:[606,1,1,""]},"dolfin.functions.ufc_functionspace":{UFCFunctionSpace:[608,2,1,""],create_ufc_function_spaces:[609,1,1,""]},"dolfin.mesh":{ale:[615,0,0,"-"],boundarysubdomainfinder:[622,0,0,"-"],meshes:[627,0,0,"-"],refinement:[628,0,0,"-"],svgtools:[630,0,0,"-"]},"dolfin.mesh.ale":{compute_edge_map:[613,1,1,""],compute_vertex_map:[614,1,1,""],init_parent_edge_indices:[616,1,1,""]},"dolfin.mesh.boundarysubdomainfinder":{create_maps:[617,1,1,""],find_all_subdomains:[618,1,1,""],find_keys_on_one_subdomain:[619,1,1,""],find_new_cell_key:[620,1,1,""],find_subdomain:[621,1,1,""],main:[623,1,1,""],usage:[624,1,1,""],write_file:[625,1,1,""]},"dolfin.mesh.refinement":{refine:[629,1,1,""]},"dolfin.mesh.svgtools":{mesh2svg:[631,1,1,""]},"dolfin.multistage":{multistagescheme:[648,0,0,"-"],multistagesolvers:[651,0,0,"-"]},"dolfin.multistage.multistagescheme":{BDF1:[633,2,1,""],BackwardEuler:[634,3,1,""],CN2:[635,2,1,""],CrankNicolson:[636,3,1,""],ERK1:[638,2,1,""],ERK4:[639,2,1,""],ERK:[637,3,1,""],ESDIRK3:[640,2,1,""],ESDIRK4:[641,2,1,""],ExplicitEuler:[642,3,1,""],ExplicitMidPoint:[643,2,1,""],ForwardEuler:[644,3,1,""],ImplicitEuler:[645,3,1,""],MultiStageScheme:[646,2,1,""],RK4:[647,3,1,""]},"dolfin.multistage.multistagescheme.MultiStageScheme":{dolfin_stage_forms:[646,4,1,""],dt:[646,4,1,""],last_stage:[646,4,1,""],rhs_form:[646,4,1,""],solution:[646,4,1,""],stage_solutions:[646,4,1,""],t:[646,4,1,""],to_adm:[646,4,1,""],to_tlm:[646,4,1,""],ufl_stage_forms:[646,4,1,""]},"dolfin.multistage.multistagesolvers":{PointIntegralSolver:[649,2,1,""],RKSolver:[650,2,1,""]},"dolfin.multistage.multistagesolvers.PointIntegralSolver":{scheme:[649,4,1,""]},"dolfin.multistage.multistagesolvers.RKSolver":{scheme:[650,4,1,""]},dolfin:{common:[29,0,0,"-"],compilemodules:[43,0,0,"-"],cpp:[256,0,0,"-"],deprecation:[540,0,0,"-"],fem:[563,0,0,"-"],functions:[596,0,0,"-"],importhandler:[611,0,0,"-"],mesh:[626,0,0,"-"],multistage:[632,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","function","Python function"],"2":["py","class","Python class"],"3":["py","attribute","Python attribute"],"4":["py","method","Python method"],"5":["py","staticmethod","Python static method"]},objtypes:{"0":"py:module","1":"py:function","2":"py:class","3":"py:attribute","4":"py:method","5":"py:staticmethod"},terms:{"0x50f3f50":646,"0x52c9b18":[],"15g":[19,21],"1st":588,"2nd":[588,635,643],"3rd":640,"4rd":641,"4th":639,"abstract":[4,18,19,20,21,155,314,337],"boolean":[14,15,16,23,24,78,271,331,333,395,397,475,476,477,478,479,537,629],"break":579,"case":[0,1,8,10,11,12,14,15,16,17,18,22,24,35,41,59,81,82,122,145,148,193,194,217,271,300,317,337,423,442,460,463,547,551,558,559,566,579,580],"class":[0,1,2,3,4,6,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,26,36,37,38,41,46,50,51,52,53,54,56,57,58,59,60,61,77,78,79,80,81,89,90,91,92,93,118,137,138,139,140,141,142,143,144,145,147,148,149,151,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,179,180,181,182,184,185,187,188,189,192,193,194,203,207,210,212,214,215,216,217,218,219,220,221,222,223,224,225,228,229,230,231,232,233,234,235,236,237,238,242,243,244,246,247,250,252,257,260,261,262,263,264,265,266,267,268,269,270,271,275,276,279,280,281,283,284,296,297,298,299,300,301,302,303,304,305,307,309,310,311,313,314,316,317,318,320,324,327,328,329,331,334,337,340,341,342,344,346,347,348,352,354,355,356,362,376,378,379,380,384,385,386,388,389,390,391,392,393,394,395,397,399,400,401,402,403,405,406,407,408,409,410,411,412,413,414,415,416,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,460,461,462,463,464,470,471,472,473,474,475,476,477,478,479,480,481,482,487,488,489,492,493,494,495,496,497,500,501,507,508,509,510,511,512,513,514,515,516,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,538,541,542,545,546,549,550,551,553,554,555,556,557,571,572,573,574,575,577,578,579,580,581,582,587,588,589,590,591,592,593,595,601,604,607,608,610,627,633,635,638,639,640,641,643,646,648,649,650,651,652],"const":[24,51,57,92,182,214,219,243,279,280,309,310,313,354,378,388,389,390,463,472,488,493,494,495,496,500,524,574,579],"default":[3,5,6,9,12,13,15,16,18,22,23,24,35,41,46,54,55,145,146,149,150,155,156,172,173,182,183,185,186,192,193,194,195,196,199,219,257,271,273,274,281,282,284,285,305,306,307,308,311,312,313,314,315,320,321,324,325,334,335,337,338,342,343,352,353,354,380,381,390,395,396,397,398,425,463,473,474,500,512,532,546,547,551,558,566,568,570,572,574,577,579,582,629],"export":[145,551],"final":[0,3,4,5,6,7,8,10,11,12,13,17,18,19,20,21,23,24,81,82,85,87,88,279,302,303],"float":[23,141,145,149,155,193,194,205,208,216,217,219,261,314,393,394,410,420,421,422,423,426,432,461,463,473,482,485,489,490,500,507,508,510,511,512,541,542,579],"function":[0,1,2,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,30,32,33,34,35,38,39,40,42,44,45,47,48,51,57,59,72,73,92,97,100,118,125,126,130,131,137,138,139,140,141,142,143,144,145,149,151,153,154,155,157,182,187,189,199,200,207,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,262,271,275,276,280,297,301,310,316,328,331,333,340,341,362,378,388,391,394,410,416,417,421,426,441,460,461,463,471,473,474,475,476,477,478,479,482,485,486,493,494,495,496,497,499,500,508,511,512,513,514,519,520,521,535,537,540,541,542,543,544,545,547,549,550,551,553,554,558,560,561,562,563,564,565,566,567,568,569,570,574,575,576,577,579,581,583,584,585,586,588,589,590,591,592,593,594,597,598,599,600,601,602,603,604,605,606,608,609,612,615,622,623,628,630,631,646,652],"import":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,38,145,300,317,551],"int":[22,23,24,38,58,77,78,79,97,141,143,144,145,154,155,156,182,193,197,204,215,216,217,219,222,243,246,261,300,314,317,337,391,410,420,422,423,426,432,461,463,471,473,474,475,476,477,478,479,480,489,490,492,493,494,495,496,500,509,512,519,520,521,551,574,582,588,593],"new":[4,5,6,12,22,153,157,193,194,199,210,211,212,213,222,244,245,271,463,472,493,494,495,496,547,558,559,580,589,620],"null":[17,157,184,271,299,301],"public":[24,41,46,47,579],"return":[2,4,10,11,14,15,16,18,22,23,24,33,38,41,47,51,56,57,59,63,66,69,70,71,72,73,74,75,76,77,78,81,85,86,87,88,89,91,92,93,98,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,132,133,134,135,143,144,145,147,148,149,153,154,155,157,171,180,181,182,193,194,197,198,199,204,209,210,211,214,215,219,220,221,222,223,236,243,251,254,257,259,271,274,279,280,283,284,285,297,298,299,300,302,303,304,309,310,313,314,315,316,317,318,319,320,322,323,324,326,327,329,330,337,339,341,344,345,346,347,352,354,357,358,359,360,361,363,364,366,367,373,376,377,378,380,382,383,384,386,387,388,389,391,401,410,416,420,426,432,441,442,460,463,464,465,470,471,472,474,476,477,478,479,480,481,482,485,486,488,493,494,495,496,497,498,499,500,501,507,509,512,513,524,530,531,532,533,534,536,537,538,543,544,547,548,550,552,560,562,565,566,568,570,574,579,580,581,582,584,586,589,597,598,599,600,602,603,605,606,629,646,649,650],"short":[77,119],"static":[54,59,77,81,145,149,151,155,172,174,182,185,189,193,194,210,212,225,238,244,257,271,281,284,305,307,311,314,318,320,324,329,331,334,337,340,342,344,352,376,380,386,395,397,400,403,416,464,482,487,489,497,572,574],"switch":579,"throw":[100,472],"true":[1,2,4,5,6,8,9,12,13,14,15,16,17,19,21,23,24,33,35,56,77,81,85,86,87,88,89,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,127,145,147,149,157,180,193,194,197,198,199,222,257,259,271,280,300,303,354,358,359,360,389,390,410,441,463,470,471,472,473,474,476,477,478,479,493,494,495,496,512,537,547,548,550,551,576,629],"try":18,"void":[24,38,579],"while":[0,3,4,7,10,11,12,13,14,16,22,23,24,79,579],ALE:250,Added:[530,531,532,533,534,538],Axes:[421,511],But:7,For:[0,1,2,3,4,7,8,12,13,14,15,16,17,18,22,24,137,138,204,209,247,271,328,341,342,378,388,389,460,463,472,497,498,541,542,547,548,560,562,566,576],Its:577,Not:23,ODE:646,One:[9,12,19,20,21,22,221,248,579],Such:11,That:391,The:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,29,38,41,43,47,49,50,51,52,53,54,56,57,58,59,60,61,77,78,79,80,81,89,90,91,92,93,137,138,139,140,141,142,143,144,145,147,148,149,151,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,179,180,181,182,184,185,187,188,189,192,193,194,197,198,199,203,204,209,210,212,214,215,216,217,218,219,220,221,222,223,224,225,228,229,230,231,232,233,234,235,236,237,238,242,243,244,246,247,248,252,257,260,261,262,263,264,265,266,267,268,269,270,271,275,279,280,281,283,284,296,297,298,299,300,301,302,303,304,305,307,309,310,311,313,314,316,317,318,320,324,327,328,329,331,334,337,340,341,342,344,346,347,348,352,354,355,376,378,379,380,384,385,386,388,389,390,391,392,393,394,395,397,399,400,401,402,403,405,406,407,408,409,410,412,413,414,415,416,420,421,422,423,424,425,426,428,429,430,431,432,433,434,435,437,438,439,440,441,442,444,445,446,447,448,449,450,451,452,453,454,455,456,460,461,462,463,464,470,471,472,473,474,475,476,477,478,479,480,481,482,485,486,487,488,489,490,491,492,493,494,495,496,497,500,501,507,508,509,510,511,512,513,514,515,516,519,520,521,522,523,524,526,527,528,529,530,531,532,533,534,536,537,538,541,542,543,544,547,548,549,551,554,559,563,566,572,574,576,577,579,580,582,589,591,596,611,626,629,632,649,650,652],Then:[0,1,5,6,7,10,11,17,23,24],There:[3,12,17,582],These:[4,8,10,11,22,221,331,532,580],Use:[0,1,2,7,8,10,11,12,13,17,18,19,21,24,25,35,47,59,72,73,100,193,593],Useful:[145,410],Using:[2,3,4,18,19,20,21],With:[0,4,7,8,10,11,12,14,15,16,17,22,24,588],Yes:568,__init__:[4,11,579],__new__:580,_bool_:537,_butcher_scheme_gener:646,_cell_:157,_dirichletbc_:546,_domain:579,_double_:500,_form_:546,_function_:[219,246,582],_functionspace_:[154,589],_mesh:[493,494,495,496,579],_mesh_:475,_meshfunction_:492,_multistagescheme_:[649,650],_not_:579,_std:[93,182,390,471,574],a_coeffici:[546,548],a_form:[546,548],a_function_spac:[546,548],a_r_dt:149,a_r_t:149,a_star:149,a_tensor:548,aabb:391,abl:[4,9,17,23],about:[4,5,6,8,23,49,97,342,579],abov:[0,1,3,4,7,8,9,10,11,12,13,14,16,17,18,22,24,97,271,391,548,566],abs:[14,304],absolut:[14,304],absolute_toler:78,access:[4,10,11,38,77,78,261,328,337,341,378,388,389,442,579],access_count:[77,78],accomplish:[13,22],accord:[12,210,211,262,271,374,390,463,489,491,497,499],accordingli:210,accuraci:[0,566],across:[482,485,629],act:[11,143,580],action:[4,14,298,310],activ:127,actual:[0,10,11,13,14,19,20,21,221,236,275,298,391],adapt:[25,137,138,155,207,541,542,545,576],adapt_coeffici:199,adapt_mark:207,adapt_problem:155,adapted_mesh:199,adaptive_data:155,adaptive_poisson:0,adaptivelinearvariationalsolv:[0,138,207,545],adaptivenonlinearvariationalsolv:[207,545],adaptivesolv:[541,542,543,544,563],add:[12,78,143,144,187,215,280,300,302,303,304,347,425,473],add_add:220,add_cel:[425,473],add_edg:302,add_loc:304,add_polygon:271,add_sub:220,add_valu:[140,547,548],add_vertex:[425,473],add_vertex_glob:473,added:[41,46,47,78,391,401,558],adding:[12,28,187,566],addit:[8,10,11,13,17,22,38,474,500,532,547,549,559,576,582],additional_declar:38,additional_system_head:38,adj:646,adjac:[441,463],adjacent_cel:441,adjoint:[0,561,646],adjust:[8,271],adopt:8,advanc:[4,35,328,341,378,388,389],advantag:8,affect:271,after:[10,11,145,271,462,551],afterward:22,again:[8,462],aggreg:301,agre:154,aim:[137,138,541,542],ale:[613,614,616,626],ale_mov:250,algebra:[7,12,14,17,18,300,303,309,310,313,348,354,358,359,360,363,364,366,367,368,369,370,371,372,373,389,547,576],algorithm:[151,212,213,342,487,530,531,532,533,534,538,576],alia:[634,636,637,642,644,645,647],align:391,all:[0,1,7,8,9,10,11,13,15,16,18,19,20,21,22,23,24,38,46,78,137,138,141,145,153,154,155,157,171,181,193,215,219,223,261,271,272,279,300,303,304,309,313,328,329,341,342,346,354,378,388,389,391,448,463,470,471,472,476,477,478,479,480,482,485,486,488,489,490,492,493,494,495,496,497,499,509,514,532,541,542,547,551,571,573,576,579,582,589,621,646,652],all_interact:271,all_kei:619,allow:[3,11,12,23,24,27,78,141,181,475,492],almost:[18,59,63,69],along:[9,317,532],alpha:2,alreadi:[15,594],also:[0,1,3,8,10,11,13,14,15,16,18,19,20,21,22,24,35,81,84,91,141,145,271,342,463,471,547,551,579],alt:271,altern:[10,11,13,35,145,271,500,512,548,551,568,579,588,592,593],alwai:[51,57,92,145,551],amg:[12,18],aneurysm:1,angl:[463,489,490,500],ani:[5,6,7,12,17,23,38,41,45,56,154,157,192,199,215,222,262,271,279,300,303,313,328,346,378,388,460,463,472,488,546,548,556,579,582],anim:271,anoth:[145,157,216,221,222,248,390,426,500,571,573,582,646],ans:[221,248],ansatz:17,anyth:337,appear:[157,271],append:[262,271],appli:[0,4,8,10,11,12,13,14,15,16,17,18,24,145,187,192,202,279,302,303,497,499,546,548,551],applic:[342,513,548],approach:[2,8,145,551],appropri:[492,493,494,495,496],approproi:305,approxim:[0,4,8,18,19,20,21,138,149,151,279,301,340,422,423,542,566],arang:38,arbitrari:[78,210,303,441,509],area:[8,218,410,416,435,601],arg:[35,38,45,50,51,52,53,56,57,58,59,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,83,84,90,91,92,93,94,96,97,100,120,121,122,124,126,128,129,133,136,137,138,141,143,144,145,147,148,149,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,180,181,182,185,187,188,189,190,191,192,193,194,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,274,275,278,281,283,296,297,298,299,300,302,303,304,305,307,310,313,314,317,318,320,324,328,329,330,331,332,333,341,342,344,348,352,354,355,358,359,360,365,374,375,376,378,379,380,385,386,388,389,390,392,393,394,395,397,399,401,402,403,404,405,406,407,408,409,410,412,413,414,415,416,417,418,419,420,421,422,423,426,428,429,430,431,432,433,434,435,437,438,439,440,441,442,444,445,446,447,448,449,450,451,452,453,454,455,456,460,461,462,463,464,465,466,467,468,469,470,474,476,477,478,479,480,481,482,483,484,485,486,488,489,490,491,493,494,495,496,497,498,499,500,501,507,508,509,510,511,512,513,514,515,516,519,520,521,524,526,527,528,529,530,531,532,533,534,536,537,538,551,572,574,576,582,588],argc:[78,81,83,84],argument:[0,1,3,4,5,6,7,8,9,10,11,13,14,15,16,17,19,20,21,22,23,24,35,38,39,46,47,78,79,81,84,96,97,119,122,137,138,139,141,142,143,144,145,147,149,154,155,157,182,184,193,194,197,198,199,204,205,208,209,214,215,216,217,219,221,222,237,243,246,248,257,258,259,300,314,317,337,354,389,390,391,393,394,410,420,421,422,423,426,432,441,461,463,471,473,474,475,476,477,478,479,489,490,491,492,493,494,495,496,500,507,508,509,510,511,512,516,519,520,521,536,537,541,542,543,544,546,547,551,552,554,558,559,565,566,568,570,571,573,574,576,577,579,580,582,583,585,587,588,589,590,591,592,593,594,597,598,599,600,601,602,603,605,606,613,614,629,649,650],argv:[78,81,83,84,623],argyri:588,aris:[10,11],arnold:588,arnoldi:342,around:[14,21,23,328,420,432,463,489,490,500],arpack:342,arrai:[24,38,51,57,92,145,154,157,193,194,204,215,216,217,219,222,247,261,300,304,354,389,391,410,463,471,473,476,477,478,479,480,500,512,524,551,577,579,589],arrow:271,artifici:460,as_backend_typ:362,as_matrix:24,as_str:33,as_vector:8,ascii:257,ask:7,aspect:4,assembl:[4,7,8,12,17,18,22,89,91,140,142,154,174,184,189,190,191,192,202,207,279,303,471,546,548,563,566,579,652],assemble_cel:[139,174],assemble_exterior_facet:[139,174],assemble_interior_facet:[139,174],assemble_system:[18,207,549],assemblerbas:[139,184,192,207],assert:[38,579],assig:221,assign:[7,12,78,139,216,221,222,250,300,313,328,347,378,388,493,494,495,496,582],assigning_func:[221,248],assigning_spac:221,associ:[4,7,18,22,59,75,93,145,187,262,271,275,463,471,474,476,477,478,479,492,493,494,495,496],assum:[0,1,8,15,16,24,41,46,47,151,391,416,613,614],attach:[17,145,154,222,471,551],attribut:[261,262,579],attribute_nam:261,auto:[25,271,278],autogener:612,autom:[4,139,149,184,576],automat:[0,4,8,12,38,49,122,137,138,145,271,463,541,542,551,576],autosubdomain:553,auxiliari:[463,471],avail:[7,10,11,12,13,14,18,19,20,21,22,38,78,141,145,214,216,219,243,257,262,297,300,320,322,323,324,326,334,336,337,339,354,358,359,360,363,364,366,367,368,369,370,371,372,373,380,382,383,389,394,410,421,426,461,463,471,473,482,485,486,488,500,508,511,519,520,521,537,551,576,579],averag:[2,133,463],avg:2,avoid:[8,12,51,57,92,145,378,388,551],axes:271,axi:[153,223,300,317,391,432,463,489,490,500],axial:[461,520],axpi:[220,280,300,304],axpy0:220,axpy1:220,azimuth:271,b_coeffici:[546,548],b_form:[546,548],b_function_spac:[546,548],b_tensor:548,back:215,backend:[7,14,17,18,284,285,298,300,303,307,310,313,348,354,358,359,360,363,364,366,367,368,369,370,371,372,373,389,547,548,576],backward:4,backwardeul:648,bar:[35,78,79,271,646],barrier:[59,62],base:[4,12,38,50,51,52,53,54,56,57,58,59,60,61,67,68,77,78,79,80,81,89,90,91,92,93,137,138,139,140,141,142,143,144,145,147,148,149,151,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,179,180,181,182,184,185,187,188,189,192,193,194,199,203,208,210,212,214,215,216,217,218,219,220,221,222,223,224,225,228,229,230,231,232,233,234,235,236,237,238,242,243,244,246,247,252,257,260,261,262,263,264,265,266,267,268,269,270,271,275,279,280,281,283,284,296,297,298,299,300,301,302,303,304,305,307,309,310,311,313,314,316,317,318,320,324,327,328,329,331,334,337,340,341,342,344,346,347,348,352,354,355,376,378,379,380,384,385,386,388,389,390,391,392,393,394,395,397,399,400,401,402,403,405,406,407,408,409,410,411,412,413,414,415,416,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,460,461,462,463,464,470,471,472,473,474,475,476,477,478,479,480,481,482,487,488,489,492,493,494,495,496,497,500,501,507,508,509,510,511,512,513,514,515,516,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,538,541,542,546,550,551,554,556,559,571,572,573,574,576,577,579,581,582,588,589,590,591,592,593,601,604,608,633,635,638,639,640,641,643,646,649,650],base_on:283,basi:[2,4,7,17,22,141,153,219,236,305,355,547,566,582],basic:[18,30,91,532],basisfunct:207,bc0:[1,15,18,19,20,21],bc1:[1,18,19,20,21,576],bc2:[1,18,19,20,21,576],bc3:1,bcl:8,bcp:12,bcr:8,bcs:[8,15,18,19,20,21,22,149,171,180,181,192,202,206,546,547,548,550,551,552,563,570,571,573,576,633,635,638,639,640,641,643,646],bcu:12,bdf1:[634,645,648],bdfm:588,bdm:[11,35,579,588],becaus:[0,13,14,15,16,24,579],been:[7,8,15,16,17,18,19,20,21,24,77,81,85,86,96,126,154,181,193,194,215,271,272,277,329,391,462,474,576],befor:[1,4,7,10,11,12,13,18,22,23,24,193,194,222,316,441],begin:[0,1,4,12,16,17,22,97,118],behavior:[8,271],behaviour:580,behind:[23,579,580],being:[4,139,151,275],below:[7,12,13,25,154,271,532,547,568,576,579,588],berkelei:410,beta:20,between:[2,22,51,57,92,204,209,221,250,254,309,391,426,448,463,470,481,536,617],beyond:[530,531,532,533,534,538],biharmon:25,bilinear:[0,1,2,4,7,10,11,12,13,14,15,16,17,18,19,20,21,24,144,148,149,154,171,546,547,554,558,576],bilinear_form:171,bin:257,binari:[4,193,194,257,328],binary_dump:328,bit:[530,531,532,533,534,538],block:[145,279,300,302,303,304,341,346,347,354,389,579],block_siz:[157,346],blockmatrix:362,blockvector:362,blood:1,bodi:[8,22,157],bool:[15,23,24,50,97,145,147,149,155,156,182,193,194,197,198,199,219,222,257,259,314,337,390,410,463,471,473,474,475,476,477,478,479,492,493,494,495,496,500,512,544,574,589,629],bool_deprec:207,boolparamet:118,boost:[145,212,222,238,378,388,389],boostgraphord:250,boostgraphordering_compute_cuthill_mcke:250,both:[0,1,2,3,4,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,147,221,248,271,300,317,342,463,566,580,613,614],bottom:[11,22,23,422,423],bottom_radiu:422,boudari:[147,390],bound:[181,182,337,391,448,463,574],boundari:[0,2,4,5,8,10,11,12,14,16,17,19,20,22,23,24,25,145,149,155,171,180,181,192,200,202,206,210,211,215,271,390,403,404,424,441,442,463,497,499,512,532,546,547,548,551,552,571,573,576,579,617],boundary_mesh:617,boundary_part:547,boundary_valu:145,boundarymesh:[463,535],boundarysourc:11,boundarysubdomainfind:[617,618,619,620,621,623,624,625,626],bounding_box_tre:463,boundingboxtre:[448,535],boundingboxtree3d:535,box:[3,6,391,401,448,463,535],box_with_d:7,boxmesh:[3,519,535],brezzi:[11,588],broadcast:[59,67],broadcast_mesh_data:462,brought:14,btmp:18,bubbl:[19,588],buffer:262,build:[139,143,144,147,189,190,191,215,221,225,226,227,300,391,393,420,422,423,432,448,501,507,510,516],build_ccfem:189,built:[0,4,8,13,14,15,16,17,24,25,271,307,391,463],c00:24,c00_file:24,c01:24,c01_file:24,c11:24,c11_file:24,c2v:[619,620,621],c_vec:342,cach:[221,594,609],cahn:25,cahnhilliardequ:4,calcul:[19,21,435],call:[0,1,3,4,7,8,10,11,12,13,14,15,16,17,18,19,20,21,23,24,51,57,81,82,91,92,125,145,155,215,223,271,316,329,330,441,460,463,547,548,551,576,579],callback:579,caller:[236,279,463],camera:271,can:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,35,38,41,49,78,91,141,145,148,151,184,185,188,217,221,222,223,243,248,257,271,301,310,316,317,334,342,390,391,393,420,422,423,432,460,463,464,466,467,468,470,475,476,477,478,479,492,493,494,495,496,501,507,509,510,513,516,547,548,551,576,577,579,582,648],canon:[0,1,13,14,15,16,17,24],care:[18,580],carri:[548,579],cast:[4,309,356],cauchi:8,ccfem:[142,143,144,189,191,214,215],ccfemassembl:207,ccfemdofmap:[207,215],ccfemform:207,ccfemfunct:250,ccfemfunctionspac:[144,214,250],ccw:501,cdot:11,cell:[2,3,9,11,19,20,21,22,23,24,91,139,141,145,147,149,153,154,157,179,184,199,205,208,215,217,218,219,222,223,225,226,262,390,391,394,401,416,417,418,419,421,425,441,442,461,462,463,464,465,466,467,468,473,474,481,482,483,484,485,486,488,492,493,494,495,496,508,509,511,512,513,519,520,521,532,535,537,551,577,579,588,589,597,598,599,600,601,603,605,617,620,621,629],cell_color:[464,465],cell_data:579,cell_dim:262,cell_dimens:[157,410,579],cell_dof:157,cell_domain:[139,154,546,547,548],cell_index:[24,493,494,495,496],cell_mark:[199,537,629],cell_norm:[410,416],cell_orient:[153,463],cell_partit:462,cell_shap:[153,579],cell_siz:[421,511],cell_typ:416,cell_vertic:462,cellfunct:[22,412,413,414,415,463,482,486,535,579,629],cellfunctionbool:535,cellfunctiondoubl:535,cellfunctionint:535,cellfunctionsizet:535,celliter:579,cellnorm:607,cellsiz:[2,20,607],celltyp:[463,473,535],celltype_cr:535,celltype_string2typ:535,celltype_type2str:535,cellvolum:607,center:[3,5,6,46,420,421,422,423,432,463,489,490,510,511],certain:[4,78,301,416],cg1:243,cgal:[3,5,6,9,103,395,397,433,434],chang:[2,8,12,77,78,145,460,547,558,577],change_count:[77,78],changeset:102,check:[4,5,6,9,17,18,24,56,78,81,85,86,145,148,154,181,193,194,215,222,249,253,257,259,261,262,391,410,416,460,463,471,472,474,488,509,512,514,530,531,532,533,534,538,551],check_kei:77,check_midpoint:[145,512,551],checkpoint:275,chemic:4,child:[158,159,160,163,170,219,222,451,452,453,454,455],choic:[0,10,11,14,576],choleski:281,cholmod:[104,281],cholmodcholeskysolv:362,cholmodcholeskysolver_default_paramet:362,choos:[0,8,217],choosen:18,chord:579,chorin:12,chosen:[13,44,305],circl:[3,5,401,421,535],circlemesh:[3,535],circumradiu:[410,416,463,482,485,486,607],cise:[281,352],classic:[10,18,19,20,21],clean:[180,463],clear:[56,78,123,133,134,143,144,193,194,331,332,346,462,463,470,471,472,480,488,493,494,495,496],clear_child:[158,159,160,161,162,163,164,165,166,167,168,169,170,228,229,230,231,232,233,234,235,263,264,265,266,267,268,269,270,449,450,451,452,453,454,455,456],clock:131,close:[9,22,145,253,262,425,473,551,566],closest:[193,194,342,391,448],closur:460,cloud:[275,391,448],cmath:579,cn2:[636,648],coarsest:[219,222],code:[38,39,41,47,154,214,216,219,257,394,410,421,426,461,463,473,482,485,486,500,508,511,519,520,521,537,549,577,579],codimens:[410,411,412,413,414,415,441,443,444,445,446,447,463],coeffici:[7,12,14,17,19,21,22,154,199,214,217,219,222,223,547,554,556,559,577,579,580,582,601,604],coefficient_deriv:559,coefficient_nam:154,coefficient_numb:154,col:[89,300],collaps:[157,222,589],collapsed_dof:[222,589],collect:[8,12,15,18,19,20,21,26,476,477,478,479,492,493,494,495,496],collid:[215,391,410,416],collis:[215,391,448,463],collision_map_cut_cel:215,color:[35,154,271,463,464,465,466,467,468,469,488],color_cel:464,coloring_typ:[225,227,463,464,465],colormap:271,column:[17,145,217,283,300,302,317,346],com:463,combin:[10,11,13,14,17,220,346,558,576,582],comm:[38,59,64,69,257,304,341,354,389,394,461,508,519,520,521],command:[14,15,16,24,78,81,84,122,576],common:[8,31,33,35,36,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,140,145,149,154,155,157,172,180,182,185,193,194,210,211,222,223,236,256,262,271,275,298,299,300,301,302,303,304,309,314,317,334,342,395,397,401,416,462,463,471,476,477,478,479,493,494,495,496,532,566,572,574,612,613,614],common_cel:556,commonli:[4,652],commun:[59,74,75,257,302,303,394,461,463,471,508,519,520,521],compabl:145,compar:10,compat:[40,145,221,257,300,317,476,477,478,479],compil:[0,2,4,5,6,8,9,13,14,16,17,18,24,38,40,41,42,44,45,46,47,48,103,104,105,106,107,108,109,110,113,114,115,116,117,256,547,549,556,566,571,573,577,579,580,588,594],compile_express:[42,580],compile_extension_modul:40,compile_subdomain:48,compiledmodul:580,compiledsubdomain:[8,47,48],compilemodul:[8,38,39,41,45,46,47,612],compiletim:49,complement:2,complet:[41,46,47,145,215,652],complex:[7,24,579],complic:[22,579],compon:[2,4,8,10,11,13,17,19,20,21,24,153,157,222,247,410,416,435,441,579,582,584,586,589,593],compos:[18,19,20,21],composit:[142,144,214,215],compress:[4,8,193,197,198,300,378,388],compresss:300,comput:[0,1,2,4,7,8,10,11,12,13,14,15,16,19,20,21,24,79,141,145,149,151,152,157,189,193,204,205,208,209,212,213,219,223,238,244,245,271,298,310,316,327,342,375,378,384,388,391,410,416,426,435,441,448,463,464,468,474,481,482,485,486,497,498,500,536,551,558,559,564,566,567,568,569,576,613,614,646],computation:7,compute_cell_residu:149,compute_closest_ent:[391,448],compute_closest_point:[391,448],compute_collis:[391,448],compute_color:464,compute_cuthill_mcke:[212,213],compute_du:149,compute_dual_graph:225,compute_edge_map:615,compute_entity_collis:[391,448],compute_extrapol:149,compute_facet_residu:149,compute_first_collis:[391,448],compute_first_entity_collis:[391,448],compute_gp:244,compute_ind:149,compute_local_rang:59,compute_partit:244,compute_periodic_pair:497,compute_reord:244,compute_vertex_map:615,compute_vertex_valu:[219,223],conatrained_boundari:147,concret:[309,310,313,354,357,463],condit:[0,2,4,8,10,11,12,14,16,17,19,20,22,23,24,25,145,149,155,171,180,181,192,200,202,206,271,424,497,499,512,546,548,551,552,571,573,576],conduct:24,conductivity_cod:24,cone:[6,401,423,535],configur:[3,7,17,18,59,334,576],conform:[2,137,138,271,541,542],confus:391,connect:[10,11,193,225,226,441,462,463,470,488,530,531,532,533,534,538,621],consequ:17,consid:[0,1,2,7,8,12,13,14,15,16,17,18,19,20,21,22,24,554,566],consider:4,consist:[0,1,7,9,10,11,12,13,14,16,17,24,41,157,463,488,522,523,591],constant:[1,2,8,12,13,14,15,16,17,18,19,20,21,22,24,29,236,250,579,596,646],constrain:[147,181,588],constrained_domain:[15,147,157,588,589,590,592,593],constraint:[8,12,13,17,182,337,574],construct:[2,6,7,10,11,18,22,51,57,91,92,157,222,389,393,395,397,401,403,406,420,422,423,432,493,494,495,496,501,507,510,516,649,650],constructor:[4,6,53,54,93,139,142,143,145,154,180,184,185,188,192,216,217,218,219,220,222,236,242,243,260,261,262,275,280,281,283,284,305,307,313,316,324,327,328,329,340,341,352,354,355,378,379,384,388,389,424,425,435,441,461,470,471,473,474,476,477,478,479,480,488,500,512,514,520,530,531,532,533,534,538,551],conta:582,contain:[0,1,2,4,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,24,41,46,47,49,97,154,217,219,391,410,463,471,472,509,595,613,614],contin:0,continu:[0,1,2,4,7,8,10,11,12,14,16,18,19,20,21,24,125,588],contour:9,control:[0,4,15,16,23,24,137,138,149,199,271,342,390,547,554,576,579],conveni:[4,30,424,471,513],convent:[390,463],converg:[4,14,18,182,314,337,342,574],convergence_criterion:4,convert:[5,78,416,418,419,464,469],convex:4,coordin:[3,6,9,15,22,141,153,157,210,211,217,219,242,283,301,393,410,420,425,432,462,463,473,480,489,490,500,507,512,524,579,604,606],coordinatematrix:362,copi:[4,19,21,51,57,78,92,93,145,147,157,179,216,217,219,220,222,236,243,280,300,304,313,328,341,347,354,378,388,389,463,470,476,477,478,479,480,488,500,514,530,531,532,533,534,538,551,582],corner:[3,5,6,145,393,507,516,551],correct:[12,23,24,300],correctli:78,correspond:[7,8,12,18,19,20,21,22,137,138,154,215,225,401,442,462,463,492,493,494,495,496,513,541,542,547,549,559,562,584,586],cos:[8,579],cost:56,costli:18,could:[4,145,391,551,588],count:[53,77,558],counter:271,coupl:[4,12],cover:[10,11,215],covered_cel:215,cpp:[35,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,507,508,509,510,511,512,513,514,515,516,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,536,537,538,541,542,546,550,551,556,557,571,572,573,574,577,580,582,589,594,601,604,608,612,646,649,650,651],cpp_assembl:549,cpp_optim:[2,4,8],cpparg:41,cppcode:[24,46,47,579],cpu:[131,132,135],crank:4,cranknicolson:648,creat:[0,1,2,3,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,50,51,52,56,57,58,78,79,80,89,90,91,92,93,137,138,141,144,145,147,148,149,153,154,157,171,172,181,182,187,193,194,214,215,216,217,219,221,222,236,243,246,247,257,271,275,279,297,310,311,313,314,320,328,334,337,341,342,346,347,348,354,378,380,388,389,390,391,393,394,399,402,409,410,411,416,417,420,421,422,423,426,427,432,436,442,443,460,462,463,470,472,473,476,477,478,479,480,482,483,484,488,493,494,495,496,500,507,509,510,511,513,514,516,519,521,522,523,524,525,530,531,532,533,534,537,538,541,542,543,544,546,547,550,551,556,558,559,571,572,573,574,577,578,579,580,582,583,584,585,586,588,589,590,591,592,593,601,604,617],create_arrai:471,create_compiled_expression_class:580,create_ent:416,create_krylov_solv:297,create_layout:297,create_linear_oper:297,create_lu_solv:297,create_map:622,create_matrix:297,create_mesh_funct:471,create_parent_path:257,create_python_derived_expression_class:580,create_sub_el:153,create_ufc_function_spac:[595,610],create_vector:297,creation:580,criterion:629,cross:[3,500,508,521],crouzeix:588,crude:279,csg:[25,393,395,397,399,401,402,403,404,406,409,420,422,423,432,463,501,507,510,516],csgcgalmeshgenerator2d:535,csgcgalmeshgenerator2d_default_paramet:535,csgcgalmeshgenerator3d:535,csgcgalmeshgenerator3d_default_paramet:535,csgdiffer:535,csggeometri:[405,406,535],csgintersect:535,csgmeshgener:535,csgmeshgenerator_gener:535,csgoper:[399,402,409,535],csgprimit:[407,408,535],csgprimitive2d:[420,432,501,507,535],csgprimitive3d:[393,422,510,515,516,535],csgunion:535,cube:[3,8,9,18,21,519],cubic:19,curl:[568,588],current:[4,12,23,33,59,67,68,132,143,157,271,277,302,314,316,346,358,359,360,363,364,367,368,369,371,372,373,463,471,530,531,532,533,534,538],curv:[145,551],custom:[139,579],cut:[142,144,214,215],cut_cel:215,cuthil:[212,213],cutting_cell_index:215,cylind:[145,535,551],d2dx:238,damp:53,darci:[10,11],data:[0,1,4,5,6,10,11,13,14,16,22,24,51,56,57,77,78,92,119,145,147,153,154,155,193,197,198,215,217,219,222,257,262,271,275,300,346,354,380,389,391,410,462,463,470,471,472,474,476,477,478,479,480,482,483,488,492,493,494,495,496,513,536,551,577,579,616],data_label:[155,156],databas:54,dataset:[261,262,471],dataset_nam:262,dbc:15,ddx:[236,238],deal:18,dealt:4,debug:[118,124,222,497,499],debug_level:94,decid:[9,145,271,310,463,476,477,478,479,513,551],decim:275,declar:[0,4,8,13,14,16,17,24,38,579],decreas:99,deduc:[592,593],deep:[19,21],deepcopi:[19,21,219,300,354,389,582],def:[2,4,10,11,14,15,16,18,22,23,24,579],default_paramet:[54,145,149,155,172,182,185,193,194,271,281,305,307,311,314,320,324,334,337,342,352,380,395,397,572,574,576],defaultfactori:362,defaultfactory_factori:362,defici:17,defin:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,44,47,54,143,144,145,149,181,182,187,214,215,217,222,243,298,300,303,304,305,310,314,340,355,393,401,410,422,423,460,463,475,476,477,478,479,489,491,492,493,494,495,496,507,509,512,513,516,532,547,551,554,555,557,566,574,577,579,580,588,595,607,629,648],definit:[18,41,512],deform:8,degener:[410,482,485,486],degre:[0,10,11,13,14,16,24,143,145,147,219,222,236,463,489,490,551,560,566,579,588,592,593],degree_rais:566,degree_ris:566,delta:[20,187,579],demo:[0,1,2,3,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],demo_auto:0,demo_bc:1,demo_biharmon:2,demo_built:3,demo_cahn:4,demo_csg:6,demo_csg_2d:5,demo_eigenvalu:7,demo_hyperelast:8,demo_mesh_generaton:9,demo_mix:[10,11],demo_navi:12,demo_neumann:13,demo_nonlinear:14,demo_period:15,demo_poisson:[16,25],demo_singular:17,demo_stok:[18,19,21],demo_subdomain:[22,23],demo_tensorweight:24,demonstr:[1,3,4,5,6,8,22],denot:[0,2,8,11,12,13,14,16,22,24,582],dens:385,depend:[0,4,8,12,14,24,217,441,547,576,579,580],deprec:[47,59,72,73,118,130,304,539,547,612],deprev:304,depth:[78,158,159,160,161,162,163,164,165,166,167,168,169,170,228,229,230,231,232,233,234,235,263,264,265,266,267,268,269,270,449,450,451,452,453,454,455,456],deriv:[0,2,4,8,13,16,17,22,141,153,236,238,239,240,329,561,579,582,646],descret:0,describ:[0,1,9,13,14,16,17,18,22,24,275,393,401,420,422,423,432,501,507,510,515,516,646,651],descript:[0,1,5,6,13,14,16,17,18,19,22,24,77,93,271,416],design:[137,138,448,541,542],desir:[15,16,24],destroi:[91,300,346,354,378,388,389],destruct:[300,354,389],destructor:[81,82],det:8,detail:[10,11,13,15,16,18,22,24],determin:[13,17,59,67,68,131,236,257,304,547,588],develop:[97,100,378,388,391,471],dfdc:4,dg_0:149,diag_val:145,diagion:302,diagnost:12,diagon:[3,145,300,302,508,521,547,551],diagonal_pattern:302,diamet:[410,416,463],dict:[39,78,547,579,589,594],dictionari:8,diff:4,differ:[3,4,12,18,19,20,21,22,23,141,145,192,271,309,346,391,399,401,416,470,492,493,494,495,496,546,547,551,579,580,648],differenti:[0,1,2,4,7,10,11,12,13,14,15,16,17,24,145,551,576],dim0:[217,225,227],dim1:[217,225,227],dim:[23,78,157,215,216,217,222,246,300,302,304,317,348,355,401,410,416,433,434,463,471,472,474,475,476,477,478,479,480,488,492,493,494,495,496,497,498,499,500,509,512,532,547,593],dimems:302,dimens:[4,7,8,23,24,153,154,157,215,217,219,222,223,243,246,262,279,298,300,301,302,303,304,310,317,327,355,384,390,391,401,410,416,425,426,427,428,429,430,431,435,436,437,438,439,440,448,463,464,466,468,469,470,471,472,473,474,475,476,477,478,479,480,488,492,493,494,495,496,497,498,499,500,509,512,513,524,525,526,527,528,529,530,531,532,533,534,538,577,592,593],dimension:[0,6,8,509],dirac:187,direct:[0,3,4,8,13,14,16,24,220,281,324,342,352,394,410,416,461,463,480,508,519,520,521,559],directli:[0,12,51,57,92,298,337,580],directori:49,dirichet:145,dirichlet:[0,1,2,8,10,14,15,16,18,19,20,21,22,24,145,199,202,551],dirichletbc:[0,1,2,8,10,11,12,14,15,16,18,19,20,21,22,24,35,149,155,207,546,548,552,553,570,652],dirichletbc_default_paramet:207,dirichletboundari:[2,14,15],disabl:[51,57,92,271],discard:460,discontinu:[2,10,11,145,551,562,570,588],discret:[0,4,10,11,17,137,138,149,475,476,477,478,479,541,542,582,588,595],disk:262,displac:[8,210,211,243,271,463],displai:[53,624],display_width:631,distanc:[391,410,416,448,460,500],distinct:[22,236],distribut:[225,226,254,262,391,473,537,629],div:[2,11,12,18,19,20,21,568],diverg:12,divid:[0,10,11,13,14,16,17,24],divis:472,dmu:4,doc:[378,388,389],docstr:[27,28,29,30,32,34,37,40,42,43,44,48,49,118,207,250,256,276,362,493,494,495,496,535,540,545,549,553,555,557,561,563,564,567,569,575,578,580,587,595,596,607,610,611,612,615,622,626,627,628,630,632,648,651],document:[144,378,388,389,463,652],doe:[51,57,92,154,181,334,391,462,472,492,493,494,495,496,548,566],doesn:17,dof:[145,147,153,157,204,209,219,221,222,551,589],dof_to_vertex_map:207,dofmap0:[225,227],dofmap1:[225,227],dofmap:[17,143,157,207,215,219,222,225,227,262,579],doing:[19,20,21,22],dolfin:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,31,33,35,36,38,39,41,45,46,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,507,508,509,510,511,512,513,514,515,516,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,536,537,538,539,541,542,543,544,546,547,548,550,551,552,554,556,558,559,560,562,565,566,568,570,571,572,573,574,576,577,579,581,582,583,584,585,586,588,589,590,591,592,593,594,597,598,599,600,601,602,603,604,605,606,608,609,613,614,616,617,618,619,620,621,623,624,625,629,631,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,649,650,652],dolfin_cel:219,dolfin_el:589,dolfin_ep:[0,10,11,12,14,15,16,18,23,24,27,249,253],dolfin_error:[100,118],dolfin_fin:[19,20,21,23],dolfin_fine_subdomain:[19,20,21],dolfin_pi:[15,27],dolfin_plot_:271,dolfin_sqrt_ep:27,dolfin_stage_form:646,dolfin_vers:118,dolfinerrorcontrolgener:555,dolli:271,dolphin:[21,23],domain:[0,1,2,4,5,6,8,9,10,11,12,13,14,15,16,17,19,20,22,23,24,145,154,202,215,221,463,472,475,476,477,478,479,509,512,513,547,551,579],domain_data:462,domain_mark:509,domain_numb:509,domain_vertic:9,domainboundari:535,domian:2,don:[13,215,337,488],done:[7,10,11,13,17,18,19,20,21,23],dorfler:205,dorfler_mark:207,dot:[1,4,7,8,10,11,15,22,426,500,646],doubl:[23,24,38,52,77,78,97,145,155,156,215,261,262,271,331,333,342,347,391,475,482,486,492,500,512,579],doublearrai:118,doubleparamet:118,dougla:[11,588],down:[0,14,15,16,17,24,215,410],down_cast:[313,354,540],download:25,dqdx:236,draw:271,driven:12,drt:[10,588],dt_stage_offset:180,dual:[0,25,137,138,149,151,225,226,541,542,576],dual_variational_solv:0,dualiti:0,dummi:18,dump:328,duplic:391,dure:[8,12,15,16,24,79,579],dynam:[425,580],dynamicmesheditor:535,each:[0,4,8,9,10,11,12,13,14,16,17,22,23,24,47,78,145,147,154,155,215,246,304,394,416,441,462,470,471,472,508,519,521,547,551,579,601,604],eas:391,easi:[7,9,12,18,59,187,566],easiest:22,easili:[0,7,12,13,14,16,17,18,19,20,21,24],edg:[9,22,212,213,302,463,464,467,532,535,603,605,613],edgefunct:[428,429,430,431,535],edgefunctionbool:535,edgefunctiondoubl:535,edgefunctionint:535,edgefunctionsizet:535,edit:[425,473],editor:[425,473],edu:[281,352,410],effect:[11,13,271],effici:[0,8,13,14,16,17,24,51,56,57,92,193,194,237,425,463],eigenfunct:7,eigenpair:[7,342],eigenproblem:[7,342],eigensolv:[7,342],eigenvalu:[25,342],eigenvector:7,either:[0,18,23,41,78,79,148,184,217,271,300,342,470,471,530,531,532,533,534,538,547,576,577,582],elaps:135,element:[0,1,2,4,7,8,9,10,11,12,13,14,15,16,17,18,22,24,25,35,141,142,144,145,153,154,157,214,215,216,217,219,222,223,394,410,482,485,486,519,521,551,559,564,565,566,569,570,579,582,588,589,590,591,592,593,595,652],elemj:410,elev:271,elif:18,elimin:[8,378,388],eliminate_zero:8,ellips:[3,401,433,535],ellipsemesh:[3,421,535],ellipsoid:[3,421,434,511],ellipsoidmesh:[3,433,511,535],ellipt:[0,1,2,13,15,16,17,24],els:[12,18,24,271,579],elsewher:7,embed:[410,416],empti:[9,56,77,78,89,144,184,193,194,215,222,280,297,303,313,328,341,346,348,354,378,388,389,391,410,462,463,470,472,476,477,478,479,480,488,493,494,495,496,547],enabl:[51,57,92,111,112,271,463],encapsul:[210,211,243,463],encod:257,end:[0,4,6,12,91,118,514,530,531,532,533,534,538],end_iter:[514,530,531,532,533,534,538],enforc:11,enhanc:342,enough:[19,21],enrich:19,ensur:[4,7,145,329,547],enter:[271,272,277],entii:488,entinti:463,entir:[145,184,424,470,551],entiri:488,entit:[448,514],entiti:[19,20,21,22,154,157,271,390,391,410,416,425,426,448,463,470,472,473,474,475,476,477,478,479,488,492,493,494,495,496,497,498,499,509,512,514,524,530,531,533,534,535,538,547],entitit:416,entity_dim:154,entity_index:[493,494,495,496],entity_map:390,entri:[24,89,90,157,279,300,302,303,304,313,328,341,346,354,378,388,389,547],envelop:448,epetra:[14,18,89],epetrafactori:362,epetrakrylovsolv:362,epetrakrylovsolver_default_paramet:362,epetrakrylovsolver_method:362,epetrakrylovsolver_precondition:362,epetralusolv:362,epetralusolver_default_paramet:362,epetralusolver_method:362,epetramatrix:362,epetravector:362,equal:[8,23,59,63,69,243,391,470],equat:[5,6,7,23,25,145,206,207,314,548,551],equilater:410,eras:471,erase_arrai:471,erk1:[637,642,644,648],erk4:[647,648],erk:648,error:[0,1,14,15,16,24,97,118,137,138,149,155,199,205,208,329,330,356,378,388,471,472,474,541,542,554,566,576,629],error_control:0,errorcontrol:[137,138,199,207,543,544,554],errorcontrol_default_paramet:207,errorcontrolgener:[554,563],errornorm:567,esdirk3:648,esdirk4:648,essenti:[8,10,11,18,22,206],estim:[0,137,138,149,541,542,576],estimate_error:149,eta_t:149,etc:[144,154,247,391,500,565],euclidean:[426,480,500],euler:4,eulerian:210,eval:[2,4,11,15,24,141,217,219,223,236,238,579],eval_cel:[11,217,223,579],eval_deriv:141,evalu:[2,11,22,24,141,149,153,155,217,219,223,238,239,240,241,243,475,476,477,478,479,547,566,579,582,601,604],evaluate_basi:[141,153],evaluate_basis_al:153,evaluate_basis_deriv:[141,153],evaluate_basis_derivatives_al:153,evaluate_dof:[141,153],evaluate_go:155,evalut:566,even:[81,86,271,272,277,548],event:118,everi:[4,271,547],exactli:4,examin:[7,10,11,13],exampl:[4,7,8,10,11,14,15,16,19,20,21,22,24,35,38,46,47,53,79,89,145,157,214,216,219,236,247,257,271,394,410,421,426,461,463,473,475,476,477,478,479,482,485,486,500,508,511,519,520,521,532,537,547,548,551,565,566,568,570,576,577,579,582,588,591,592,593,594,597,598,599,600,601,602,603,605,606,629],except:[100,463],excess:12,exchang:[51,57,92],exclus:[204,209],exhaust:[5,6,119],exist:[12,13,17,154,257,259,261,262,271,463,471,472,493,494,495,496],exit:[5,6,7,9,17,18],exodu:105,exp:[0,10,11,13,15,16,17,22,24,579],expand:566,expans:[214,219,222,223,582],expansion_coeffici:222,experiment:460,explain:[96,97,576],explicit:[22,279,638,639,640,641,643],expliciteul:648,explicitli:[18,81,82,91,257,463,547],explicitmidpoint:648,explictli:199,expos:256,expr:39,express:[0,1,2,4,8,10,11,12,13,14,15,16,17,18,19,20,21,22,24,30,35,39,41,43,46,47,210,211,216,218,223,237,242,243,246,250,271,278,355,378,388,463,497,499,564,565,566,569,570,596,601,604,652],expression_to_code_frag:40,expressionmetaclass:580,ext_modul:38,extens:[38,40],exterior:[22,139,154,184,390,441],exterior_facet_domain:[139,154,546,547,548],extern:390,extra:[56,342],extract:[7,10,11,13,19,20,21,22,39,153,154,155,157,219,222,243,554,582,589],extract_bc:155,extract_mesh_data:462,extract_sub_dofmap:157,extract_sub_el:153,extract_sub_spac:[222,589],extrapol:[0,149,152,207,219],extrapolation_extrapol:207,extratc:[476,477,478,479],f_e:246,face:[9,422,423,463,532,535],facefunct:[437,438,439,440,535],facefunctionbool:535,facefunctiondoubl:535,facefunctionint:535,facefunctionsizet:535,facet:[2,9,11,19,20,21,22,23,139,145,149,154,157,184,217,218,246,390,410,416,442,463,464,467,471,509,512,532,535,551,579,588,601,602,603,605],facet_area:[410,416],facet_index:442,facet_orient:471,facet_typ:416,facetarea:[250,607],facetcel:535,facetfunct:[22,444,445,446,447,535],facetfunctionbool:535,facetfunctiondoubl:535,facetfunctionint:535,facetfunctionsizet:535,facetnorm:[2,22,607],facilit:221,fact:22,factor:[12,281,324,352,379,482,485,486],factori:[182,284,303,314,416,417,574],factorized_solv:281,fail:[17,18,97],failur:97,fals:[5,6,8,12,14,15,16,23,24,35,77,78,119,123,130,134,193,199,212,213,219,271,272,277,300,328,341,354,389,390,441,471,472,493,494,495,496,547,548,582,589,629],famili:[0,4,10,11,13,14,16,24,588,592,593],familiar:[7,18,22],fanci:35,fashion:[18,548],fast:56,faster:[4,145,551],fastest:346,featur:[8,96,401],feec:[588,593],fem:[137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,256,541,542,543,544,546,547,548,550,551,552,554,556,558,559,560,562,565,566,568,570,571,572,573,574,576,579,612,646,649,650],fem_solv:207,fenic:[14,25,154],ffc:[8,154,547,549,554,557],ffc_option:8,field:[4,8,11,12,566,588,593],figur:[154,215],file:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,49,97,154,193,194,197,198,219,258,259,261,262,271,275,276,462,476,477,478,479,492,493,494,495,496,515,579],file_bool:23,file_create_parent_path:276,file_doubl:23,file_exist:276,file_mod:262,filenam:[193,197,198,219,257,258,259,271,463,475,476,477,478,479,492,493,494,495,496,582],filename_data:193,filename_dofdata:219,filename_tim:193,filename_vector:219,fill:[56,302,391,410],filter:[81,84],finalis:[81,85,86],finalize_tensor:[140,547,548],find:[0,1,2,4,7,8,10,11,13,14,15,16,17,18,19,20,21,22,24,56,59,65,137,138,171,181,541,542,571,573,620,621],find_all_subdomain:622,find_keys_on_one_subdomain:622,find_new_cell_kei:622,find_paramet:78,find_parameter_set:78,find_subdomain:622,finest:[219,222],finish:[425,473],finit:[0,1,2,4,7,8,10,11,13,14,15,16,17,18,19,21,22,24,35,141,142,144,153,154,157,214,215,217,219,222,223,394,410,519,521,559,564,565,569,570,579,582,588,589,590,591,592,593,595,652],finite_el:153,finiteel:[35,141,207,222,579,589,590],first:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,145,216,238,240,247,342,391,393,441,448,462,463,470,473,492,493,494,495,496,507,551,566,582,633,638],first_corn:507,fix:[14,470,475,476,477,478,479],fixm:[23,144,180,185,188,215],flag:[4,33,50,51,52,53,54,56,57,58,59,60,61,77,78,79,80,81,89,90,91,92,93,137,138,139,140,141,142,143,144,145,147,148,149,151,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,179,180,181,182,184,185,187,188,189,192,193,194,203,210,212,214,215,216,217,218,219,220,221,222,223,224,225,228,229,230,231,232,233,234,235,236,237,238,242,243,244,246,247,252,257,260,261,262,263,264,265,266,267,268,269,270,271,275,279,280,281,283,284,296,297,298,299,300,301,302,303,304,305,307,309,310,311,313,314,316,317,318,320,324,327,328,329,331,334,337,340,341,342,344,346,347,348,352,354,355,376,378,379,380,384,385,386,388,389,390,391,392,393,394,395,397,399,400,401,402,403,405,406,407,408,409,410,412,413,414,415,416,420,421,422,423,424,425,426,428,429,430,431,432,433,434,435,437,438,439,440,441,442,444,445,446,447,448,449,450,451,452,453,454,455,456,460,461,462,463,464,470,471,472,473,474,476,477,478,479,480,481,482,487,488,489,493,494,495,496,497,500,501,507,508,509,510,511,512,513,514,515,516,519,520,521,522,523,524,526,527,528,529,530,531,532,533,534,538,572,574],flat:416,flatten:[215,216,410],flip:[18,19,20,21],flow:[10,11,12],flush:262,flux:[10,11],focu:23,focus:[3,5,6,8,9],follow:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,27,38,78,144,149,215,271,342,462,463,471,532,547,576,579,629],foo:[78,539],forc:[8,38],form:[0,1,2,7,8,10,11,12,13,14,15,16,17,19,20,21,24,44,45,137,138,139,142,144,148,149,155,171,181,184,189,190,191,192,199,207,217,223,243,281,314,316,320,324,352,380,541,542,543,544,546,547,548,549,554,555,558,559,563,566,571,573,576,579,580,581,583,585,588,593,594,646],form_compil:[2,4,8,45,547],form_compiler_paramet:[8,546,547,548,556,570,571,573,576],form_degre:[588,593],format:[2,8,9,12,14,16,18,19,20,21,24,96,97,157,193,194,197,198,257,262,275,328,463],formmanipul:[558,559,560,562,563],formul:[0,2,18,19,20,25,149],formula:[0,13,14,16,17,22,24],fortin:588,fortun:7,forwardeul:648,found:[257,391,474],four:[6,9,19,20,21,23,516],fourth:[2,4,15,23,473],fraction:[205,208],fragment:[420,432],framework:[18,19,20,21],free:[12,310],freedom:[11,143,145,147,222,551,588],freeli:12,from:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,38,39,45,51,57,78,92,97,137,138,139,142,145,149,151,152,153,154,157,184,192,215,216,219,222,225,226,227,237,256,262,271,275,310,313,329,347,354,378,388,389,390,391,403,404,416,417,418,419,426,462,463,476,477,478,479,488,492,493,494,495,496,497,498,500,509,513,515,524,543,546,550,551,556,559,566,579,580,582,589,592,593,594,613,614],fs0:594,fs1:594,full:[10,11,13,19,20,21,22,41,390,509],func0:220,func1:220,func:220,function_spac:[144,145,154,215,219,547,556,579,581],function_space_0:144,function_space_1:144,functionassign:250,functionaxpi:250,functionspac:[0,1,2,4,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,24,145,154,204,209,215,219,221,247,248,250,547,551,565,570,579,581,582,589,590,591,592,593,594,596,608,652],functionspacebas:[588,590,591,592,595],functionspacefromcpp:595,further:[0,13,14,16,17,19,21,24,97,566],furthermor:247,futur:[471,547],g2d:5,g3d:6,g_l:22,g_r:22,galerkin:[0,2,14,588],gateaux:559,gather:[59,64,145,304,341,354,389],gather_on_zero:304,gdim:[391,410,425,462,473],gen_hermitian:342,gen_non_hermitian:342,gener:[0,4,5,6,7,8,11,13,14,16,17,22,24,25,38,41,46,47,49,97,137,138,139,154,157,184,220,225,227,255,299,301,302,311,342,348,395,397,403,404,410,416,422,423,433,434,493,494,495,496,532,541,542,549,576,577,579,588,627,646],generate_error_control:545,generate_error_control_form:545,generateswigcod:49,generic_function_memb:[39,41],genericadaptivevariationalsolv:[137,138,207],genericadaptivevariationalsolver_default_paramet:207,genericboundingboxtre:[392,535],genericdofmap:[143,147,207,222,301,579],genericfil:[257,275,276],genericfunct:[145,154,199,217,219,222,237,250,463,551,579],genericlinearalgebrafactori:[284,314,318,344,362,376,386],genericlinearoper:[300,310,327,362,384],genericlinearsolv:[281,296,305,311,314,320,362,380],genericlusolv:[307,324,352,362],genericmatrix:[145,298,313,328,346,362,378,388],genericprecondition:[334,362],genericsparsitypattern:[348,362],generictensor:[139,142,300,304,347,362],genericvector:[145,182,193,194,214,219,222,314,337,341,354,362,389,574,582],genericvetor:[313,354],genericvtkplott:271,genet:[331,333],geometr:[12,145,217,219,243,301,391,425,462,473,512,551,577],geometri:[9,11,12,22,25,393,395,397,399,401,402,403,404,406,409,420,422,423,432,463,480,501,507,510,516],geometric_dimens:[8,153,157,219,482,485,486,512,579],get:[5,6,14,18,19,21,23,78,89,93,101,145,154,261,279,280,300,304,320,324,341,342,347,354,389,390,391,410,463,472,488,492,493,494,495,496,566,579,588],get_block:[279,280],get_boundary_valu:145,get_cell_data:410,get_cell_topolog:410,get_edg:302,get_eigenpair:[7,342],get_eigenvalu:342,get_iteration_numb:342,get_loc:[304,341,354,389],get_log_level:118,get_mark:472,get_number_converg:342,get_oper:[320,324,352,380],get_rang:[77,78],get_tensor_typ:362,get_valu:[89,493,494,495,496],get_vertex_coordin:410,get_widget:271,getrow:300,gettyp:401,getval:347,ghost:[223,304,341,354,389],ghost_indic:[304,341,354,389],gibb:[244,245],git:102,git_commit_hash:118,give:[3,5,6,17,23,24,261,342,470,576],given:[0,1,3,4,5,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,35,56,59,63,69,78,79,93,124,133,137,138,139,141,142,144,145,149,151,153,154,155,157,172,182,184,187,189,190,191,193,194,208,214,215,217,218,219,222,223,236,242,243,247,257,262,279,280,298,300,302,303,304,310,313,314,327,328,337,340,341,342,346,354,356,361,374,378,384,388,389,390,391,394,410,411,416,425,426,427,436,441,442,443,448,461,462,463,464,466,467,468,470,471,472,473,474,476,477,478,479,480,488,489,490,491,492,493,494,495,496,500,508,512,513,514,519,520,521,524,525,530,531,532,533,534,538,541,542,547,548,550,552,556,558,560,562,565,566,568,570,572,574,576,577,578,579,582,589,590,597,598,599,600,601,602,603,604,605,606,629],global:[28,54,59,65,70,71,91,147,157,179,210,211,222,304,341,346,390,410,441,462,463,470,473,474,475,476,477,478,479,488,492,493,494,495,496,513,547,588],global_cell_indic:462,global_dimens:157,global_index:[473,474],global_indic:488,global_norm:463,global_offset:59,global_s:488,global_vertex_indic:410,globalis:337,globalparamet:[29,118],globalparameters_default_paramet:118,glyph:[35,271],gmre:[12,17,576],gmres_restart:78,goal:[0,137,138,149,155,541,542,543,544,576],goalfunct:[137,138],goe:[0,1,5,6,13,14,16,17,18,19,22,24,91],going:[23,649,650],good:410,grad:[0,1,2,4,7,8,10,12,13,14,15,16,17,18,19,20,21,22,24,547],gradient:[8,11,14,22],graph:[212,213,225,226,227,250],graphbuild:250,graphbuilder_compute_dual_graph:250,graphbuilder_local_graph:250,greater:629,green:8,group:[59,75],guess:14,gurante:17,h10:568,h_avg:2,half:24,hand:[2,8,11,12,13,17,18,22,145,148,187,340],handl:[11,59,78,122,143,145,147,551,555,570,580,587],hardcopy_prefix:35,harmon:463,harmonic_smooth:463,has:[0,1,3,4,7,8,17,18,19,20,21,51,57,77,78,81,85,86,92,96,126,154,181,215,222,271,272,277,329,342,346,391,462,463,474,482,485,486,514,530,531,532,533,534,538,547,559,576,629],has_cel:222,has_cgal:[3,5,6,9,118],has_child:[158,159,160,161,162,163,164,165,166,167,168,169,170,228,229,230,231,232,233,234,235,263,264,265,266,267,268,269,270,449,450,451,452,453,454,455,456],has_cholmod:118,has_dataset:262,has_el:222,has_exodu:118,has_hdf5:118,has_index:56,has_jacobian:181,has_kei:78,has_krylov_solver_method:[18,362],has_krylov_solver_precondition:[12,18,362],has_linear_algebra_backend:[7,14,17,18],has_lower_bound:181,has_lu_solver_method:362,has_mpi:118,has_openmp:118,has_par:[158,159,160,161,162,163,164,165,166,167,168,169,170,228,229,230,231,232,233,234,235,263,264,265,266,267,268,269,270,449,450,451,452,453,454,455,456],has_paramet:78,has_parameter_set:78,has_parmeti:118,has_petsc:[1,118],has_petsc_sn:118,has_petsc_tao:118,has_scotch:118,has_slepc:[7,118],has_subdomain:401,has_trilino:118,has_typ:362,has_umfpack:118,has_upper_bound:181,has_zlib:118,hash:[102,153,463,470,480,488],have:[0,1,5,6,7,9,13,14,15,16,17,18,19,20,21,22,23,24,25,145,154,181,193,194,300,391,547,551,579,588,613,614],have_global_indic:488,hcurl0:568,hcurl:568,hdf5:[106,261,262,275],hdf5attribut:276,hdf5file:276,hdiv0:568,hdiv:568,header:[38,579],heavi:580,height:271,help:[39,271],helper:200,helptext:271,henc:[0,7,8,10,11,13,14,16,17,24],her:[340,588],here:[0,1,4,7,8,10,11,12,13,14,15,16,19,20,21,22,24,149,247,423,463,579,588,652],hermit:588,hermitian:342,hex:38,hide:[35,271],hide_abov:271,hide_below:271,hierarchi:[219,222,298],hierarchicaldirichletbc:[145,207],hierarchicalerrorcontrol:[149,207],hierarchicalform:[154,207],hierarchicalfunct:[207,219,250,276,535],hierarchicalfunctionspac:[207,222,250,276,535],hierarchicallinearvariationalproblem:[171,207],hierarchicalmesh:[207,250,276,463,535],hierarchicalmeshfunctionbool:[207,250,276,476,535],hierarchicalmeshfunctiondoubl:[207,250,276,477,535],hierarchicalmeshfunctionint:[207,250,276,478,535],hierarchicalmeshfunctionsizet:[207,250,276,479,535],hierarchicalmeshfunctionuint:[207,250,276,535],hierarchicalnonlinearvariationalproblem:[181,207],high:566,higher:[0,23,151,215,547,559,560,566],highest:559,hilliard:25,histogram:[482,483,484],histor:346,hmax:463,hmin:463,hold:[4,8,12,35,463,547],homogen:[145,149,553],hood:[12,18,25],hookean:8,horizont:[3,432,521],hover:271,how:[0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,38,154,532,576,579],howev:[12,13,15,16,18,22,24,154,547,558,566,579],htm:[378,388,389],http:[275,281,352,378,388,389,410,463],human_form:180,hyperelast:25,hypr:18,hypre_amg:576,ident:[8,300,410,547],ident_zero:[300,547],identifi:[2,22,78,93,145,153,471,488,509,512,551],iff:[149,410,463,547],ifilenam:618,ignor:[12,271,552],illustr:[0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,532,579],ilu:[14,379,576],imaginari:342,immedi:[16,24],impact:629,implement:[38,41,46,47,126,141,142,151,172,182,210,223,281,320,324,328,337,340,341,346,347,348,352,378,379,380,388,389,391,416,448,487,489,547,572,574,579,646],impli:[547,588],implicit:[18,180,633,635,640,641],implicitdomainmeshgener:535,implicitdomainmeshgenerator_gener:535,implicitdomainmeshgenerator_generate_surfac:535,impliciteul:648,implicitsurfac:535,importhandl:612,impos:[2,12,17],improv:12,in_valu:[59,64],inact:215,incarn:346,incid:[442,470,474,488,530,531,532,533,534,538],includ:[25,38,41,145,157,185,188,257,298,337,551,567,568,576,579,588],inclus:[249,461,579],incomplet:[12,379],incompress:[18,25],incorpor:22,increas:94,increase_ord:561,increment:[4,8,192],indefinit:18,indent:[12,94,99],independ:[298,463],index:[9,11,19,20,21,23,24,26,56,59,65,66,141,144,145,154,193,197,204,209,219,222,243,302,304,378,388,389,390,391,410,426,441,442,472,473,474,476,477,478,479,480,488,492,493,494,495,496,497,498,524,532,551,559,579],index_own:59,indexset:118,indic:[0,2,3,4,5,6,22,25,56,119,139,145,149,157,204,205,208,209,215,217,247,304,341,354,389,391,410,472,473,481,482,485,486,488,521,551,576,629],individu:470,inequ:337,infin:568,inflow:[12,18,19,20,21,23],info:[5,6,17,18,51,57,89,92,118,548,576,579],info_stream:118,info_underlin:118,inform:[1,5,6,11,19,20,21,22,23,49,51,57,78,89,92,93,100,145,279,280,310,342,470,471,474,480,488,500,551,570,579,582],ingredi:[0,14,15,16,24],inherit:[271,310,579,580],init:[118,302,303,304,337,341,354,385,389,463,470,472,474,476,477,478,479,480,488,493,494,495,496],init_cel:473,init_cell_orient:463,init_cells_glob:473,init_global_indic:488,init_global_tensor:140,init_layout:[310,327,384],init_mpi:[81,83],init_parent_edge_indic:615,init_petsc:[81,84],init_vector:[300,317],init_vertic:473,init_vertices_glob:473,initi:[0,4,7,8,13,14,15,16,18,19,20,21,22,24,46,78,81,84,122,154,222,300,302,303,304,317,341,354,441,463,470,472,474,476,477,478,479,480,488,544,579,582,616],initialcondit:4,initialis:[10,11,81,83,86,222,304,329,385,493,494,495,496],initialize_data:554,initli:354,inlet:1,inlin:[378,388],inner:[0,2,12,13,14,16,17,18,19,20,21,22,24,187,280,304,547],input:[0,1,2,3,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,301,547],input_kei:271,inradiu:[410,416,463,482,485,486],inscrib:[410,463],insert:[11,56,300,302,472,493,494,495,496],insid:[0,2,14,15,16,22,23,24,47,145,192,391,512,550,551,579],inside_funct:550,instal:[5,6,25,281,352],instanc:[6,7,9,13,15,17,19,20,21,22,23,46,47,137,138,153,284,285,309,310,313,318,319,344,345,354,376,377,386,387,547,548,552,559,580],instanti:[4,580,582,594],instead:[0,11,14,15,16,18,24,47,51,57,92,100,271,298,462,547,548,580,582,588,593],intact:[145,551],intarrai:118,integ:[5,19,20,21,22,23,33,93,271,331,333,342,472,582],integr:[2,10,11,13,22,547,566],intend:[147,219,222],intens:7,intention:[328,341,378,388,389],inter:390,interact:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,35,271,272,276],interest:[0,19,21],interfac:[4,38,141,145,157,217,219,223,238,244,271,298,300,302,303,304,305,310,328,337,340,341,346,347,348,378,385,388,389,416,425,463,512,551,579,580],interior:[2,22,23,139,145,154,184,210,342,390,471,551],interior_facet_domain:[139,154,546,547,548],intermedi:220,intern:[100,131,135,145,147,219,298,463,471,551],interpol:[4,153,193,194,199,210,217,219,222,237,563,566,579],interpolate_vertex_valu:153,interpret:[25,41,46,47,579],intersect:[144,214,215,391,401,402,410,416,481,535],intersected_cel:481,interv:[3,12,185,188,416,425,461,520],intervalmesh:[520,535],intial:4,intialis:[81,87,88],intiti:304,intparamet:118,introduc:[4,10,11,13],invari:8,invers:[59,66,378,388],invert:[342,378,388],invok:576,involv:[0,4,8,10,14,16,17,24,37,579],ipow:250,ipython:[630,631],is_broadcast:59,is_compat:[145,271],is_empti:472,is_linear:[148,149],is_oper:401,is_orthogon:355,is_orthonorm:355,is_receiv:59,is_restrict:147,is_set:77,is_symmetr:300,is_view:157,issu:96,item:[47,78],iter:[8,12,14,17,18,24,78,79,182,271,314,320,337,342,380,442,463,514,530,531,532,533,534,538,574],iterdata:78,iteritem:78,iterkei:78,itervalu:78,its:[8,9,17,22,78,215,316,497,498,579,589],itself:[219,401,410,582],jacobian:[4,8,14,181,314,316,337,573,576],jacobian_form:181,jacobian_index:180,jacobian_indic:180,jit:[24,38,43,549,556,579,580],jonathan:410,jrs:410,jump:2,just:[8,9,10,11,19,21,38,45,423,463,566],keep:[279,300,303,313,328,346,378,388,463],keep_diagon:[140,547,548],kei:[50,52,58,77,78,80,271,274,472,547,620],kept:[7,12,300,354,389,547],key_press:271,keyboard:4,keyword:8,kind:[530,531,532,533,534,538,580,588],kinemat:[8,12],known:[4,18,19,21,22,79,102,425,493,494,495,496],krylov:[17,18,297,305,320,340,342,358,363,368,379,380,385,576],krylov_method:18,krylov_solv:299,krylov_solver_method:[297,362],krylov_solver_precondition:[297,362],krylovsolv:[17,18,362,652],krylovsolver_default_paramet:362,ksp:[320,324],kwarg:[35,38,41,45,46,77,78,81,155,157,223,296,297,298,299,300,302,303,304,317,318,344,376,385,386,392,401,405,406,407,408,416,448,460,463,551,576,579,582],l_r_dt:149,l_r_t:149,l_star:149,la_index:[147,209],la_solv:362,label:[19,20,21,22,93,145,221,271,514,551,579],lagrang:[0,2,4,7,8,10,12,13,14,16,19,24,237,250,565,570,588,591],lagrangeinterpol:250,lagrangian:210,lambda:[7,8,342],lame:8,lanczo:342,lapack:342,larg:[271,566,629],larger:462,largest:[7,342],last:[0,3,4,5,9,19,20,21,646],last_stag:[180,646],later:[2,4,14,15,16,18,22,24,81,86,222,558],latest:401,latex:89,latter:22,layer:[545,575],layout:[157,297,300,303,317,346],lb_func:181,lead:[2,20,154],leaf:[155,391],leaf_nod:[0,158,159,160,163,170,219,222,451,452,453,454,455],least:[138,542],left:[3,8,15,17,18,22,23,24,46,47,148,410,508,521],legendr:250,legendre_d2dx:250,legendre_ddx:250,legendre_ev:250,lego:400,length:[12,218,391,410,416,421,426,500,511,601,603,605],less:[0,14,18,22,24,155,541,542],let:[1,7,10,11,22],letter:448,level:[0,23,38,81,83,94,99,101,124,128,247,271],lhs:[12,22,148],lib:[378,388,389],librari:[7,49,147,219],lie:17,like:[14,24,97,145,217,460,500,530,531,532,533,534,538,551,579],limit:[53,302],line:[4,5,6,8,9,78,81,84,119,122,337,461],linear:[0,1,2,4,7,8,10,11,12,13,14,15,16,17,19,20,21,22,24,137,139,144,145,148,149,153,154,171,172,182,184,199,206,220,281,296,297,298,299,300,303,305,307,309,310,311,313,314,320,324,340,348,352,354,358,359,360,363,364,365,366,367,368,369,370,371,372,373,380,385,389,410,541,546,547,554,571,572,574,576,582,588,652],linear_algebra_backend:[14,17,310,362],linear_form:171,linear_solv:[0,4,314,576],linear_solver_method:362,linearalgebraobject:[298,303,362],linearis:[4,646],linearoper:[298,362],linearsolv:[299,362],linearsolver_default_paramet:362,linearvariationalproblem:[0,137,207,541,543,544,575,652],linearvariationalsolv:[207,575,576,652],linearvariationalsolver_default_paramet:207,linf:568,link:[378,388,463],linux:33,list:[8,9,10,11,12,13,15,38,41,47,78,123,149,154,155,157,171,181,206,215,221,246,257,297,320,322,323,324,326,334,336,337,339,363,364,367,368,369,370,371,372,373,380,382,383,391,441,462,463,480,481,500,546,547,548,552,570,576,577,591],list_krylov_method:576,list_krylov_solver_method:362,list_krylov_solver_precondition:362,list_linear_algebra_backend:362,list_linear_solver_method:362,list_lu_method:576,list_lu_solver_method:362,list_precondition:576,list_solver_method:576,list_tim:[91,118,130],literatur:154,live:[0,1,14,15,16,24,304,341,354],lmbda:[4,8],load:[7,12,18,19,20,21,515,547],local:[0,59,63,69,145,147,157,179,180,204,222,223,225,227,300,302,303,304,317,341,346,354,389,390,391,410,416,425,442,462,463,464,470,473,474,480,481,488,492,493,494,495,496,497,498,537,551,613,614,628],local_ent:[157,493,494,495,496],local_facet:[11,579],local_graph:[225,227],local_index:473,local_nnz:346,local_rang:[59,66,69,302,303,304,317],local_s:[304,488],localassembl:207,localassembler_assembl:207,localassembler_assemble_cel:207,localassembler_assemble_exterior_facet:207,localassembler_assemble_interior_facet:207,localmeshdata:[225,226,535],localsolv:207,locat:[97,145,551],log:[12,23,97,101,118,127,128],logg:149,logic:[47,579,580],longer:[4,471],look:[0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,23,24,576],loop:[4,12,155],low:38,lower:[151,181,219,271,337,422,423,509],lower_bound:181,lowercas:97,lshape:12,lt_coordin:250,lu_solv:299,lu_solver_method:[297,362],lump:[378,388],lusolv:[362,652],lusolver_default_paramet:362,machin:[0,14,15,16,22,24],made:[2,19,20,21,22],magic:[579,580],magnitud:[4,7,187,342],mai:[0,1,4,5,7,12,13,17,19,21,22,23,78,79,81,82,84,91,97,139,145,153,154,184,215,217,223,271,275,342,391,441,463,470,471,475,476,477,478,479,488,492,493,494,495,496,512,547,548,551,559,566,571,573,576,577,579,580,591,629],main:[22,612,622],maintain:18,make:[3,4,5,6,9,12,15,17,23,38,143,145,215,271,272,277,463,580],manag:81,mani:[9,12,530,531,532,533,534,538],manifold:597,manipul:[7,14,15,16,18,24],manner:18,manual:[10,11,12,13],map:[15,22,35,143,145,147,153,154,157,204,209,212,213,215,221,222,244,245,271,346,390,462,471,488,492,493,494,495,496,497,498,499,512,513,559,580,588,589,613,614,617],map_from_reference_cel:153,map_to_reference_cel:153,map_tol:512,map_toler:512,mardal:588,marini:[11,588],mark:[0,8,19,20,21,22,25,145,147,205,207,401,472,475,476,477,478,479,497,499,512,513,547,551,579,629],mark_cel:512,mark_facet:512,marker:[19,20,21,23,145,199,205,208,472,475,476,477,478,479,493,494,495,496,509,512,551,629],marker_valu:[493,494,495,496],marking_fract:[155,156],marking_strategi:[155,156],mass:[463,489,490],master:[497,498,499],masters_slav:497,mat:[317,328,378,388],mat_mumps_icntl_14:[1,331],match:[30,145,154,219,237,391,463,513,514,551,558],materi:[8,22,579],math:[3,29,31,154,579],mathemat:[0,13,14,16,17,24],mathworld:463,matplotlib:[482,484],matric:[12,145,281,298,300,302,317,342,579],matrix:[4,7,17,18,24,41,145,154,157,192,217,279,281,283,297,298,299,300,301,305,310,317,320,324,327,328,342,346,352,354,362,378,380,384,385,388,389,547,548,576,579,652],max:[59,70,280,304,391,394,474,508],max_cell_dimens:157,max_dim:472,max_dimens:[155,156],max_iter:[155,156],max_valu:77,maxcount:53,maxfacetedgelength:607,maxim:463,maximum:[33,53,157,280,304,342,461,463,472,482,485,488,582,603],maximum_iter:342,mayavi:12,mayb:576,mckee:[212,213],mean:[0,13,22,24,51,57,92,145,154,391,492,493,494,495,496,551],measur:[0,2,22,131,410,421,511],mechan:[187,309],media:[8,10,11],member:[4,41,46,47,378,388,463],membership:[50,51,52,53,54,56,57,58,59,60,61,77,78,79,80,81,89,90,91,92,93,137,138,139,140,141,142,143,144,145,147,148,149,151,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,179,180,181,182,184,185,187,188,189,192,193,194,203,210,212,214,215,216,217,218,219,220,221,222,223,224,225,228,229,230,231,232,233,234,235,236,237,238,242,243,244,246,247,252,257,260,261,262,263,264,265,266,267,268,269,270,271,275,279,280,281,283,284,296,297,298,299,300,301,302,303,304,305,307,309,310,311,313,314,316,317,318,320,324,327,328,329,331,334,337,340,341,342,344,346,347,348,352,354,355,376,378,379,380,384,385,386,388,389,390,391,392,393,394,395,397,399,400,401,402,403,405,406,407,408,409,410,412,413,414,415,416,420,421,422,423,424,425,426,428,429,430,431,432,433,434,435,437,438,439,440,441,442,444,445,446,447,448,449,450,451,452,453,454,455,456,460,461,462,463,464,470,471,472,473,474,476,477,478,479,480,481,482,487,488,489,493,494,495,496,497,500,501,507,508,509,510,511,512,513,514,515,516,519,520,521,522,523,524,526,527,528,529,530,531,532,533,534,538,572,574],memori:[1,4,29,33,125],memory_usag:32,mere:462,mesh0:[210,211,613,614],mesh1:[210,211,613,614],mesh2d:5,mesh2svg:630,mesh3d:6,mesh:[0,2,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,35,143,144,145,147,151,154,155,157,184,193,194,199,210,211,214,215,217,218,219,222,223,225,227,237,242,243,256,262,271,275,278,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,460,461,462,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,507,508,509,510,511,512,513,514,515,516,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,536,537,538,546,547,548,550,551,556,565,566,568,570,576,579,588,589,590,591,592,593,594,595,597,598,599,600,601,602,603,604,605,606,608,609,612,613,614,616,617,618,619,620,621,623,624,625,629,631,652],mesh_a:448,mesh_b:448,mesh_copi:463,mesh_displac:243,mesh_fil:24,mesh_funct:[199,471,492,493,494,495,496],mesh_id:474,mesh_identifi:579,mesh_shared_ptr:154,mesh_tim:[193,194],mesh_valu:262,meshcolor:535,meshcoloring_cell_color:535,meshcoloring_color:535,meshcoloring_color_cel:535,meshcoloring_compute_color:535,meshcoloring_type_to_dim:535,meshconnect:535,meshcoordin:[250,607],meshdata:[463,535],meshdisplac:[210,211,250,463],meshdomain:[463,476,477,478,479,535],mesheditor:[425,535],meshent:[410,426,435,441,524,532,535],meshentityiter:[514,532],meshentityiteratorbas:[530,531,533,534,538],meshfunct:[5,19,20,21,22,23,24,35,139,145,149,154,184,205,208,221,262,411,412,413,414,415,427,428,429,430,431,436,437,438,439,440,443,444,445,446,447,464,465,476,477,478,479,488,492,493,494,495,496,497,499,509,512,514,525,526,527,528,529,535,537,547,551,579,588,613,614,629,652],meshfunctionbool:[412,428,437,444,526,535],meshfunctiondoubl:[413,429,438,445,527,535],meshfunctionint:[414,430,439,446,528,535],meshfunctionsizet:[415,431,440,447,529,535],meshgeometri:[463,535],meshpointintersect:[535,536],meshqual:535,meshquality_radius_ratio:535,meshquality_radius_ratio_histogram_data:535,meshquality_radius_ratio_matplotlib_histogram:535,meshquality_radius_ratio_min_max:535,meshrenumb:535,meshtopolog:[463,535],meshtransform:535,meshtransformation_rot:535,meshtransformation_transl:535,meshvaluecollecion:[476,477,478,479],meshvaluecollect:[262,476,477,478,479,493,494,495,496,512,513,535],meshvaluecollectionbool:535,meshvaluecollectiondoubl:535,meshvaluecollectionint:535,meshvaluecollectionsizet:535,mesn:512,mess:[10,11,154,180],messag:[12,23,53,95,96,97,100,120,121,124,329,330,471],meta:580,method:[2,4,7,8,10,11,14,17,18,20,22,145,181,210,217,221,261,271,297,300,305,307,311,320,322,324,326,337,339,340,354,358,360,363,367,368,371,372,373,380,382,389,551,576,579,580],middl:23,midpoint:[24,145,474,512,551],might:[145,566],min:[59,71,280,304,394,508],min_valu:77,minfacetedgelength:607,mini:25,minim:[0,8],minimis:8,minimum:[8,17,280,304,461,463,482,485,605],minr:18,minu:23,minut:7,miscellan:410,miss:[493,494,495,496],misspel:8,mix:[2,13,18,19,20,21,22,25,153,221,248,559,565,582,584,586,589,591],mixedel:559,mixedfunctionspac:[4,10,11,18,19,20,21,204,209,582,593,595],mixtur:4,mode:[8,35,154,271,272,277,278],model:[1,4,8],modifi:[13,15,16,24],modul:[0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,19,20,21,23,24,38,566,612],module_nam:38,modulu:8,momentum:12,monitor:125,monitor_converg:78,monitor_memory_usag:118,mor:588,more:[4,7,8,10,11,13,15,16,18,22,24,35,41,100,139,144,184,214,215,391,425,481,530,531,532,533,534,538,548,570,579],moreov:18,morlei:588,most:[7,8,15,16,17,122,154,348,652],mostli:[220,302],move:[3,12,22,145,210,211,463,551],mpi:[4,72,73,81,83,85,86,87,107,118,257,302,303,394,461,463,480,508,519,520,521],mpi_:[59,65],mpi_barri:118,mpi_comm:[118,283,302,303,348,462,463],mpi_comm_world:[4,38,59,72,73],mpi_compute_local_rang:118,mpi_fin:81,mpi_gath:118,mpi_global_offset:118,mpi_index_own:118,mpi_initi:81,mpi_is_broadcast:118,mpi_is_receiv:118,mpi_local_rang:118,mpi_max:118,mpi_min:118,mpi_num_process:118,mpi_process_numb:118,mpi_rank:118,mpi_siz:118,mpi_sum:[59,65,118],mpiinfo:118,msg:[77,94],mtw:588,mu0:4,mu_:4,mu_mid:4,much:[15,16,23,24],mult:[279,298,310,327,384],multi:154,multigrid:[12,301],multiphys:513,multipl:[25,280,300,304,548,591],multipli:[2,10,11,13],multistag:[612,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,649,650],multistageschem:[207,632,633,634,635,636,637,638,639,640,641,642,643,644,645,647,649,650],multistagesolv:[632,649,650],mump:1,must:[0,1,2,3,4,5,6,9,12,14,16,17,18,19,20,21,22,23,24,25,51,57,92,148,155,157,187,217,221,248,300,304,329,341,342,354,378,388,441,463,500,547,558,582],mutabl:463,my_paramet:78,myexpression0:579,myexpression1:579,myfunc:579,myplot:35,myvectorvalu:582,n1curl:588,n2curl:588,name:[7,8,10,11,35,38,41,45,46,47,78,93,96,97,154,180,193,194,197,198,219,256,257,258,259,260,261,262,271,320,463,471,492,493,494,495,496,513,532,577,579,582,588,613,614],namespac:[38,256,579],natur:[10,11,13],navier:[18,25],ncell:579,ncompact:[5,6],ndofs_per_cel:579,necessari:[13,81,82,145,151,154],necessarili:548,nedelec:588,need:[0,2,4,5,6,7,8,9,10,11,13,14,15,16,17,19,20,21,22,24,38,46,51,53,57,92,122,154,180,217,222,300,310,340,354,389,442,472,488,492,493,494,495,496,547,579,580,582],nef_polyhedron:397,neg:[10,11,192],neighbor:463,neighbour:157,neo:8,nest:[78,577],nested_paramet:78,neumann:[0,8,10,14,16,17,22,24,25],new_boundari:[210,211],newton:[4,8,14,181,182,192,314,316,337,574],newton_solv:14,newtonsolv:[4,362],newtonsolver_default_paramet:362,next:[0,1,2,3,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,271,514,530,531,532,533,534,538],nicolson:4,nls_type:337,nnz:346,nodal:236,node:[14,155],non:[4,8,10,11,17,18,19,20,21,51,57,92,145,214,219,237,280,297,300,302,309,313,342,346,354,378,388,389],non_hermitian:342,non_matching_ev:219,none:[39,41,78,157,271,342,356,546,547,548,556,558,559,566,568,570,571,573,577,579,581,583,585,588,589,590,592,593,594,609,629,633,635,638,639,640,641,643],nonlinear:[4,8,25,138,145,148,181,182,199,206,314,316,337,542,573,574,576],nonlinear_funct:[314,337],nonlinear_poisson:14,nonlinear_problem:337,nonlinearproblem:[4,314,337,362],nonlinearvariationalproblem:[138,207,542,543,544,575,652],nonlinearvariationalsolv:[207,575,576,652],nonlinearvariationalsolver_default_paramet:207,nonloc:157,nonzero:302,norm:[4,17,19,21,271,280,283,300,304,500,563,566],norm_typ:[566,568],normal:[0,2,4,11,13,14,16,17,22,24,145,217,362,390,410,416,435,441,463,482,485,486,579,597,602],noslip:[1,12,18,19,20,21,23],not_working_in_parallel:118,notat:[149,154,588,593],note:[0,4,5,6,7,8,12,13,14,15,16,17,22,24,33,47,51,57,78,81,84,92,97,100,145,154,155,215,217,342,378,388,391,462,463,471,472,488,551,579],notebook:[630,631],noth:12,notic:15,now:[0,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,547],null_spac:17,null_vec:17,nullspac:[157,355],num_assigning_funct:221,num_cel:[463,473,579],num_coeffici:154,num_connect:470,num_edg:463,num_ent:[416,463,470,474],num_entity_dof:157,num_fac:463,num_facet:463,num_facet_dof:157,num_global_cel:[425,462,473],num_global_ent:474,num_global_vertic:[425,462,473],num_iter:463,num_jacobian_comput:185,num_local_cel:473,num_local_nonzero:302,num_local_vertic:473,num_mark:472,num_nonzero:302,num_nonzeros_diagon:302,num_nonzeros_off_diagon:302,num_part:[143,144,215],num_process:59,num_receiving_funct:221,num_row:[300,303,304,347],num_simplic:410,num_sub_el:153,num_sub_spac:589,num_vertic:[410,416,463,473],num_vertices_per_cel:462,number:[0,3,4,8,9,10,11,13,14,15,16,19,20,21,23,24,53,59,72,75,77,79,96,143,144,145,153,154,157,182,204,209,214,215,221,236,248,254,255,275,280,302,303,314,317,320,337,342,346,380,394,416,420,422,423,425,432,461,462,463,470,472,473,474,475,476,477,478,479,480,482,483,488,489,490,492,493,494,495,496,508,512,519,520,521,547,551,559,566,574,581,582,589,593,613,614],number_of_edg:9,number_of_fac:9,number_of_vertic:9,number_of_vertices_on_face_1:9,number_of_vertices_on_face_2:9,number_of_vertices_on_face_3:9,number_of_vertices_on_face_q:9,numer:[22,378,388,389,576],numeric_limit:391,numerical_limit:474,numpi:[38,51,57,92,145,154,157,193,194,204,215,216,217,219,222,300,304,391,410,463,471,473,476,477,478,479,512,551,577,589],nverbos:[5,6],object:[0,4,5,6,8,9,11,17,35,41,51,53,56,57,59,60,61,77,78,79,81,90,91,92,93,119,137,138,140,142,144,145,148,149,151,153,158,159,160,161,162,163,164,165,166,167,168,169,170,174,179,187,188,189,193,194,199,203,210,212,214,215,216,217,219,220,221,222,224,225,228,229,230,231,232,233,234,235,237,238,243,244,252,257,260,261,263,264,265,266,267,268,269,270,271,274,279,280,283,297,301,309,316,320,329,331,334,337,355,385,390,391,400,403,411,416,425,427,436,443,448,449,450,451,452,453,454,455,456,460,463,464,470,472,473,474,475,476,477,478,479,480,481,482,487,488,489,492,497,500,509,512,513,514,525,530,531,532,533,534,538,543,544,551,554,555,558,579,593],obstacl:22,obtain:[0,10,11,12,14,151],occur:[47,591],off:[0,9,12,14,15,16,24,127,223,302,566],off_diagonal_pattern:302,off_process_own:[157,348],offset:[59,65,204,209],ofilenam:618,often:[0,7,12,14,15,16,24],old:[193,194,212,213,222,244,245,589],oldest:12,omit:[3,9,14,559],on_boundari:[2,8,12,14,15,18,22,23,46,512,550],on_surfac:460,onc:[304,389],one:[0,1,3,4,5,6,7,8,9,10,11,12,23,24,38,41,51,57,59,64,92,119,144,145,185,188,205,208,214,215,221,236,247,248,271,300,342,346,391,442,463,464,466,467,468,482,485,486,497,498,547,548,551,559,566,588],ones:[21,23],onli:[3,10,11,12,13,15,17,18,23,24,33,35,53,145,147,154,204,209,217,219,271,298,300,304,310,340,342,354,389,391,401,463,471,475,476,477,478,479,488,492,493,494,495,496,497,498,551,579,588,629],onlin:410,onto:[564,569,570],open:[12,425,460,473],openmp:108,openmpassembl:207,oper:[0,1,2,4,7,10,11,13,14,15,16,17,18,19,20,21,22,24,78,157,216,220,222,243,280,297,298,299,300,301,304,310,313,320,324,328,352,355,378,380,388,395,397,500,558,559],opposit:[2,3,5,6,393,410,507,558],optim:[2,4,8,24,56,566,576],option:[2,3,4,5,6,8,19,21,23,24,78,97,119,123,133,134,145,154,157,193,194,199,217,221,223,257,262,271,275,302,320,331,332,333,390,441,475,492,521,537,546,548,551,566,568,570,571,573,576,577,579,582,589,592,593,629],option_str:78,order:[0,2,4,7,8,10,11,13,14,16,17,18,19,21,22,24,25,47,141,151,153,154,180,187,212,213,238,239,240,241,244,245,390,410,416,425,441,463,473,548,558,566,633,635,638,639,640,641,643,646],org:[275,378,388,389],organ:652,orient:[0,137,138,149,155,390,410,416,463,471,541,542,576],origin:[7,38,151,390,442,500,537,579,607,646],orthogon:[0,17,151,355],orthonorm:355,oscil:12,ostream:257,other:[4,5,6,7,8,11,12,14,22,23,24,51,57,78,79,92,145,154,155,215,391,426,463,497,499,552,558,566,567,576,588],other_paramet:78,otherwis:[8,18,19,20,21,33,77,122,271,300,354,389,471,472,579],our:[0,1,3,5,6,9,10,11,13,14,15,16,17,19,20,21,23,24],out:[91,154,215,378,388,424,463,548],out_valu:[59,64],outcom:154,outfil:257,outfilenam:625,outflow:[12,18,19,20,21,23],outlet:1,outlin:547,output:[4,5,6,12,14,15,16,24,129,275,474,500],outsid:[14,15,16,24],outstream:257,outward:[0,2,4,11,13,14,16,24,390,463],over:[3,10,11,12,19,20,21,22,23,24,78,91,139,142,149,154,184,221,271,390,394,442,463,471,480,488,512,514,519,521,530,531,532,533,534,537,538,547,554,555,588,595,613,614,629],overlap:[215,401],overload:[11,50,51,52,57,58,59,64,69,77,79,80,81,83,84,89,92,93,94,137,138,143,144,145,147,148,153,154,155,171,172,180,181,182,187,192,193,194,199,201,202,206,210,211,212,213,214,215,216,217,219,220,221,222,223,225,227,236,237,243,246,247,248,257,261,262,271,275,278,279,280,281,296,297,299,300,303,304,305,307,309,310,311,313,314,320,324,328,331,333,337,341,342,346,347,348,352,354,378,380,385,388,389,390,391,394,403,404,410,416,417,425,426,435,441,448,461,462,463,464,465,470,471,472,473,474,476,477,478,479,480,488,489,490,493,494,495,496,500,508,509,512,513,514,519,520,521,524,530,531,532,533,534,537,538,551,572,574,579,581,583,584,585,586],overridden:547,overrul:[577,582],overwrit:[22,23,493,494,495,496],own:[35,59,66,157,302,304,334,340,497,498],owner:[497,498],ownership:[51,57,92,157,271,303,304,341,354,389],ownership_rang:[157,348],owns_index:304,p2v:591,p_in:12,packag:14,pair:[12,18,21,145,182,215,220,314,337,346,463,470,488,493,494,495,496,574],paper:410,parabol:4,parallel:[4,12,59,67,68,126,145,147,157,204,223,244,275,300,317,462,475,476,477,478,479],paramet:[0,2,12,14,17,28,41,45,50,52,54,55,58,77,80,81,84,93,118,119,145,146,149,150,155,156,172,173,182,183,185,186,188,193,194,195,196,271,273,278,281,282,299,305,306,307,308,310,311,312,314,315,320,321,324,325,331,334,335,337,338,342,343,352,353,380,381,395,396,397,398,547,570,571,572,573,574,576,579,646],parameter_typ:299,parametervalu:[50,52,58,80,118],paramt:1,paraview:12,parent:[158,159,160,163,170,219,222,451,452,453,454,455,513,613,614],parent_edge_indic:616,parent_vertex_indic:[471,513,613,614],parmeti:109,pars:[78,81,84,462],part:[2,4,7,8,9,10,11,13,14,15,16,19,20,21,22,23,24,143,144,154,214,215,304,342,547,581,583,585],part_numb:215,partial:[0,1,2,7,10,11,12,13,14,15,16,17,24,145,551],particular:[0,1,4,7,10,11,13,14,15,16,24,145,154,210,309,320,334,337,342,380,551,595],particularli:243,partit:[145,157,262,275,302,441,462],partli:588,pass:[4,8,38,51,57,92,185,188,221,356,571,573,576,579,582,648],path:[24,257,258],pattern:[189,190,191,302,304,348,470,547],pbc:15,pde:[549,650],pdf:[271,410],penalti:2,per:[8,204,205,208,209],perform:[4,10,11,12,13,19,20,21,221,271,463],period:[25,147,497,499,512],periodicboundari:15,periodicboundarycomput:535,periodicboundarycomputation_compute_periodic_pair:535,periodicboundarycomputation_masters_slav:535,permit:[4,331],perserv:548,perturb:646,petsc4pi:[317,320,324,337,341],petsc:[1,7,17,18,38,81,84,88,89,110,111,112,122,317,320,324,328,329,330,331,332,333,334,337,341,342],petsc_error:329,petsc_exp:38,petscbasematrix:[327,328,362],petscfactori:362,petscfactory_inst:362,petsckrylovsolv:[317,334,362],petsckrylovsolver_default_paramet:362,petsckrylovsolver_method:362,petsckrylovsolver_precondition:362,petsclinearoper:362,petsclusolv:362,petsclusolver_default_paramet:362,petsclusolver_method:362,petscmatrix:[7,362,547],petscobject:[317,320,324,334,337,340,341,342,362],petscobject_petsc_error:362,petscopt:[1,362],petscoptions_clear:362,petscoptions_set:362,petscprecondition:[320,340,362],petscpreconditioner_default_paramet:362,petscpreconditioner_precondition:362,petscsnessolv:362,petscsnessolver_default_paramet:362,petscsnessolver_method:362,petscuserprecondition:362,petscvec:38,petscvector:[38,362],pfile:12,pfile_pvd:[18,19,20,21],phase:4,phrase:11,physic:[0,606],pick:[18,424],piec:[10,11,342],piecewis:[0,1,7,8,12,14,16,18,19,20,21,24,566],pixel:271,place:[8,10,11,378,388,462,471,559],plai:[6,18],plot:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,271,272,274,276,277,482,484],plot_mesh:[155,156],plotfil:35,plotter:[271,274],png:271,point:[0,1,3,6,8,9,11,14,15,16,23,24,59,62,141,153,187,215,217,219,223,236,238,239,240,241,262,271,275,316,390,391,410,416,421,422,423,425,433,434,448,460,461,462,463,473,474,480,481,489,490,491,510,511,512,516,524,530,531,532,533,534,535,536,538,550],pointer:[51,57,92,143,144,145,154,157,171,172,181,182,184,214,215,310,328,341,472,509,572,574],pointintegr:649,pointintegralsolv:[207,651],pointintegralsolver_default_paramet:207,pointload:[145,551],pointsourc:207,pointwis:[145,551],poisson:[1,2,7,8,18,25],polici:[59,67,68],polygon:[9,401,535],polygonalmeshgener:[9,535],polygonalmeshgenerator_gener:535,polyhedr:[9,422,423],polyhedralmeshgener:[9,535],polyhedralmeshgenerator_gener:535,polyhedralmeshgenerator_generate_surface_mesh:535,polylin:460,polynomi:[0,1,4,7,8,10,11,13,14,16,24,236,238,239,240,241,560,566,593],pool:[244,245],popul:22,porou:[10,11],portion:[8,59,63,69,462],pos:[530,531,532,533,534,538],pos_gen_non_hermitian:342,pose:13,posit:[18,19,20,21,56,342,493,494,495,496,530,531,532,533,534,538],possibilti:[145,551],possibl:[4,8,18,23,35,38,51,57,91,92,141,144,151,214,215,219,237,275,342,460,463,509,547,568,576],post:570,potenti:[4,8,547],pow:[0,10,11,13,16,17,22,24],power:[251,342,579],pprox:460,practic:24,pre:199,prec:12,preced:401,precis:[0,14,15,16,22,24,131],precompil:547,precomput:463,precompute_basis_const:8,precompute_ip_const:8,precondition:[12,18,157,297,299,301,305,311,320,323,334,336,359,364,369,379,380,383,385,576],preconditioner_typ:570,precondtion:334,predefin:22,prefer:97,prefix:[271,320,331],preprocess:549,prescrib:[1,2,8,10,11,19,20,21,22,547],presenc:4,present:[4,155,193,194,310],preserv:[192,546,548],press:[271,272,277],pressur:[12,18,19,20,21,247],pretti:[51,57,78,89,92,93,279,280,310,470,474,480,488,500],prevent:1,previou:[4,8,22],previous:[0,14,15,16,24],primal:[0,137,138,149,151,155,541,542,543,544],primari:302,primary_dim:[302,346,348],primit:[97,406,407,408],print:[3,5,6,7,9,12,19,21,22,23,38,51,53,57,78,89,91,92,93,97,100,119,120,121,124,136,222,279,280,310,329,330,470,471,474,480,488,500,532,568],print_dofmap:222,printf:97,prior:223,priori:425,prism:[3,394],probabl:7,problem:[18,37,137,138,145,149,151,155,171,172,179,181,182,187,199,206,275,314,316,337,342,541,542,543,544,566,571,572,573,574,576,652],problem_typ:342,proce:[13,24],procedur:[0,14,25],process:[4,12,15,16,24,33,59,63,64,66,69,72,73,74,75,125,132,145,157,223,275,300,302,304,341,354,389,390,463,473,480,482,485,488,492,493,494,495,496,497,498,530,531,532,533,534,538,551,570,629],process_numb:59,processor:[204,462],produc:[3,23,390],product:[10,11,12,13,18,19,20,21,187,223,279,280,298,300,304,310,317,327,384,426,500],program:[4,12,23,26,125,154],progress:118,proivd:244,project:[12,22,563],promis:279,propag:41,propel:400,properti:[0,22,579],propos:12,proven:346,provid:[0,4,13,14,16,17,19,20,21,22,24,37,40,42,45,48,51,56,57,59,79,89,92,139,140,157,184,187,189,192,210,223,299,301,309,311,313,314,328,331,341,342,354,378,388,389,416,424,425,463,482,513,530,531,532,533,534,538,545,546,547,549,554,555,558,559,564,567,569,575,592,593,627,628,630],psi:8,ptr:[137,138,309,313,354],punctuat:97,pure:[5,6,9,17,25,547],purpos:[22,51,57,92],put:[15,463],pvd:[1,2,4,8,12,14,15,16,18,19,20,21,23,24,257],pydolfin:[40,581,583,584,585,586],python:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,28,37,38,49,51,57,92,154,217,219,243,545,549,575,579,580,587,627,651],qmr:18,quadrant:12,quadrat:[2,8,12,18,21],quadratur:[4,215,566,588],quadrature_rule_cut_cel:215,qualiti:[410,482,483,484],quantifi:482,quantiti:[0,8,22,347],quasi:192,queri:579,quicker:652,r_dt:149,r_t:149,r_vec:342,radii:[3,6,463,482,485],radiu:[3,5,6,145,410,420,421,422,423,482,485,486,510,511,551],radius_ratio:[410,416,482],radius_ratio_histogram_data:482,radius_ratio_matplotlib_histogram:482,radius_ratio_min_max:482,rand:250,random:[4,254,255],rang:[17,22,53,59,63,69,77,78,79,157,271,302,303,304,317,341,354,389,482,485,486,514],range_max:271,range_min:271,range_str:77,rank:[4,17,41,59,73,74,144,153,154,217,223,243,302,303,547,579],rather:[18,19,20,21],ratio:[8,410,482,483,485,486],raviart:[10,588],raw:257,reach:[4,514,530,531,532,533,534,538],read:[0,1,2,4,10,11,13,14,15,16,17,18,19,20,21,22,23,24,97,193,194,257,260,262,275,492,493,494,495,496],readabl:12,readi:[1,7,9,10,11,18,23],readili:570,readm:97,real:[7,13,342,347,588],realiz:554,realli:[271,272,277],reason:97,rebuild:463,receiv:[59,68,221,248],receive_mesh_data:462,receiving_func:[221,248],receiving_process:[59,64],receiving_spac:221,recent:8,reciev:[221,248],recogn:471,recommend:7,recomput:271,rectangl:[3,5,22,401,508,535],rectanglemesh:[3,521,535],rectangular:[3,394],recurs:78,redefin:13,redistribiut:537,redistribut:[462,537,629],reduc:4,reduct:[59,65],refer:[0,4,8,10,11,12,51,57,92,143,144,153,155,156,215,300,354,378,388,389],refin:[0,199,200,416,475,476,477,478,479,535,576,626],refine_cel:416,refined_mesh:537,reflect:[145,154],regener:[2,12],region:[19,20,21,22,337],regist:45,regular:395,reimplement:[217,549],rel:[0,1,7,14,15,16,17,24,145,149,222,314,390,391,410,416,441,463,492,493,494,495,496,551],relat:[463,470,488,532],relative_residu:314,relative_toler:[4,14,78],releas:96,relev:[10,11,629],reli:[7,141,181,530,531,532,533,534,538,549],remain:[10,11,12,13,18,145,551],remaind:[8,22],remedi:[145,551],rememb:12,remov:[12,17,23,78,96,300,471],renam:[78,93,549],render:[35,271,630,631],renumb:487,renumber_by_color:[463,487],reorder:[147,244,245],reordered_argu:558,repartit:462,repeat:[271,304,389],repeatedli:215,rephras:4,replac:[11,304],repons:236,report:126,repres:[0,4,5,6,9,14,15,16,19,20,21,22,24,90,141,144,148,171,181,214,215,216,217,218,219,220,222,242,247,257,347,442,471,474,481,500,509,571,573,577,579,582,588,590,591,592,593,601,604],represen:566,represent:[4,38,51,57,78,89,92,93,149,243,261,279,280,300,304,310,317,320,324,337,341,463,470,474,480,488,500,566,581,582],request:316,requir:[1,2,4,7,8,11,13,17,81,83,157,181,301,342,544,554,577],required_thread_level:[81,83],rerturn:[334,336],rescal:[12,271],research:[281,352],reserv:8,reset:[77,123,130,134,547],reset_newton_solv:185,reset_spars:[140,547,548],reset_stage_solut:185,resid:[221,248,582],residu:[0,4,14,17,137,138,149,151,181,314,362,541,542,576],residual_form:181,residual_represent:149,resiz:[3,9,304,378,388,389],resolut:[5,6,9,403,404,463],respect:[0,1,2,3,4,8,17,21,22,355,410,416,422,423,442,532,646],respet:1,respons:[81,87,88,463],responsible_mpi:81,responsible_petsc:81,rest:22,restrict:[2,147,157,223,535,588,592,593],result:[4,7,10,11,12,13,17,18,19,21,179,237,401,481,559,580],retain:471,retreiv:331,retriev:[78,193,194],reus:[154,193,194,554],revers:[212,213],rhs:[12,22,148,192,220,582,646],rhs_form:[633,635,638,639,640,641,643,646],rhs_int:148,richard:410,right:[2,3,7,8,11,12,13,15,17,18,22,23,24,46,47,145,148,154,187,340,390,410,508,521,547],right_justifi:89,rigid:157,rk4:648,rksolver:[207,648,651],rmax:463,rmin:463,robust:22,robustli:[492,493,494,495,496],rogn:149,root:12,root_nod:[0,158,159,160,163,170,219,222,451,452,453,454,455],rotat:[3,9,12,157,463,489,490,500],roughli:2,round:[0,14,15,16,24,566],rout:23,routin:38,row:[89,145,217,283,300,301,302,303,304,313,317,328,341,346,347,354,378,388,389],rule:215,run:[0,4,5,6,9,13,14,16,17,23,24,25,147,223,310,576],runtim:[49,580],safe:[51,57,92],safeguard:[530,531,532,533,534,538],safisfi:13,sai:[0,9,14,15,16,24],same:[8,9,10,11,15,18,22,23,47,151,154,193,194,221,248,271,275,391,410,463,476,477,478,479,513,547,559,560,566,582,591],sampl:[193,194,547],satisfi:[0,1,8,10,11,13,15,16,18,22,24,137,138,541,542],save:[1,2,4,8,12,14,15,16,18,19,20,21,23,24,271,275,464,466,467],save_data:[155,156],save_off:397,scalar:[4,8,12,20,41,46,47,187,201,216,217,220,246,271,275,362,500,547,577,579,593],scalarbar:[35,271],scale:[8,35,271],scan:[59,65,579],scene:[23,579],scheme:[180,475,476,477,478,479,488,633,635,638,639,640,641,643,649,650],schur:[279,342],schur_approxim:279,scipi:300,scope:91,scotch:[113,250],scotch_compute_gp:250,screen:[2,4,8,35],script:49,search:[145,337,551],second:[0,2,3,4,5,6,9,10,11,13,14,16,17,19,20,21,23,24,131,216,238,239,391,393,473,492,493,494,495,496,507,582],second_corn:507,see:[2,8,11,271,410,548,566,568,570,579,580,588,592,593],seed:[4,250],seem:131,seen:13,select:[304,341,389],self:[2,4,11,14,15,22,23,78,579],semi:[432,635],semicolon:14,semidefinit:342,semilinear:14,send:[0,6,9],sens:215,sent:[81,84,580],separ:[4,10,11,13,18,19,20,21,22,246,488],sequenc:4,seri:[193,194,197,198],serial:[473,629],series_nam:[193,197,198],set:[0,2,3,4,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,28,35,38,56,59,62,77,78,89,128,129,143,145,154,157,181,184,215,236,261,271,272,277,279,280,299,300,301,303,304,313,320,324,328,331,333,334,337,346,354,378,388,389,390,395,463,470,472,474,475,476,477,478,479,480,488,493,494,495,496,512,532,547,551,579,629],set_al:[22,23,476,477,478,479,629],set_block:[279,280],set_bound:181,set_cell_domain:154,set_child:[158,159,160,161,162,163,164,165,166,167,168,169,170,228,229,230,231,232,233,234,235,263,264,265,266,267,268,269,270,449,450,451,452,453,454,455,456],set_coeffici:154,set_coordin:301,set_current_part:143,set_deflation_spac:342,set_diagon:300,set_exterior_facet_domain:154,set_fieldsplit:334,set_global_index:488,set_global_s:470,set_interior_facet_domain:154,set_kei:271,set_loc:304,set_log_act:118,set_log_level:[23,118],set_mark:472,set_mesh:154,set_min_max:271,set_nullspac:[17,299,301],set_oper:[18,299,320,324],set_options_prefix:320,set_output_stream:118,set_par:[158,159,160,161,162,163,164,165,166,167,168,169,170,228,229,230,231,232,233,234,235,263,264,265,266,267,268,269,270,449,450,451,452,453,454,455,456],set_rang:[77,78],set_some_coeffici:154,set_subdomain:[5,401],set_valu:[145,476,477,478,479,493,494,495,496],set_viewangl:271,set_x:157,setrow:300,setup:340,sever:[0,154,221,248,271,391],shall:[0,1,13,14,15,16,17,18,19,20,21,24],shallow:[19,21,219],shape:[12,23,153,216,217,243,579,592],share:[2,51,57,92,137,138,143,144,145,153,154,157,171,172,181,182,214,215,219,222,309,310,313,354,463,472,488,497,498,509,572,574,582],shared_dof:157,shared_ent:488,shared_inst:[309,310,313,354],shared_ptr:[24,38,182,221,278,320,476,477,478,479,493,494,495,496,574,579],shewchuk:410,shift:[271,342],should:[4,5,6,11,12,14,15,16,18,19,20,21,24,59,67,68,97,100,119,122,131,135,145,154,184,199,204,209,262,271,297,298,331,390,391,463,472,493,494,495,496,512,537,547,551,559,566,579,629],show:[5,7,13,38,271,532],shown:[7,271],side:[2,8,9,11,12,13,17,18,22,145,148,187,340,422,423,549],sigma:[10,11],sign:[18,19,20,21,460],signal:12,signatur:153,significantli:579,similar:514,similarli:463,simpl:[0,6,13,14,15,16,17,24,25,51,57,79,92,153,217,262,328,341,346,378,388,389,473,564,566,567,569,579,627,630],simplest:[35,145,547,551],simpli:[0,14,15,16,24,35],simplic:[22,410],simplici:473,simplifi:78,simul:0,simultan:[18,19,20,21],sin:[0,2,8,10,11,12,13,14,15,16,17,18,19,20,21,565,570,579],sinc:[0,4,8,9,11,12,13,14,16,17,19,20,21,23,24,122,145,391,530,531,532,533,534,538,549,566],singl:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,171,181,206,221,248,391,513,522,523,546,547,559,577,579],singleton:[81,318,319,344,345,376,377,386,387],singular:[25,299,355],size:[2,3,4,9,12,20,51,56,57,59,63,69,72,75,92,212,213,217,221,223,236,248,279,280,283,298,300,303,304,310,317,327,341,346,354,384,389,421,463,470,476,477,478,479,480,488,493,494,495,496,511,598],size_glob:[463,470,488],size_t:[5,19,20,21,22,23,24,97,145,154,199,215,222,463,471,474,475,492,493,494,495,496,512,547,579],size_t_:93,slave:[497,498,499],slepc:[7,114,342],slepceigensolv:[7,362],slepceigensolver_default_paramet:362,slice:[422,423],slip:[12,18,19,20,21,23],slower:579,small:[0,14,15,16,24,342,566,575],smallest:342,smooth:[301,463],smooth_boundari:463,smoother:243,snap:[463,512],snap_boundari:463,sne:[111,337],snippet:39,sole:22,solid:[6,393,395,397,401,403,406,420,422,423,432,501,507,510,516],solut:[0,1,2,4,8,10,11,13,14,15,16,17,18,19,20,21,22,24,137,138,145,149,151,155,171,181,192,215,281,310,324,342,352,541,542,551,576,633,635,638,639,640,641,643,646],solv:[0,1,2,4,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,89,155,172,179,182,206,281,296,299,305,307,311,314,320,324,337,340,342,352,365,378,380,385,388,541,542,563,570,571,572,573,574,649,650,652],solvabl:17,solve_in_plac:[378,388],solve_prim:155,solve_transpos:[296,299,307,324],solver:[0,1,2,4,8,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,172,181,182,185,188,192,296,297,298,299,305,307,311,314,316,320,322,324,326,337,339,342,367,371,379,380,382,385,572,574,575,576,646],solver_paramet:[14,576],solver_typ:570,some:[1,2,3,4,6,7,8,14,18,20,22,30,78,140,154,275,342,390,474,532,547,576,607,629,652],someth:566,sometim:[4,5,6,7,119,145,551],somewhat:580,sorri:18,sort:[7,302,346],sought:[8,13],sourc:[0,1,2,10,11,12,13,14,15,16,17,22,24,25,38,97,187],space:[0,1,2,4,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,24,78,142,143,144,145,151,153,154,157,171,181,187,199,204,209,214,215,217,219,221,222,247,248,299,301,355,416,471,474,500,547,551,559,560,562,564,565,566,569,570,571,573,579,582,584,586,588,589,590,591,592,593,595],space_dimens:153,span:17,sparrai:300,spars:[139,184,279,281,283,300,303,313,328,346,352,378,385,388,470],sparsiti:[189,190,191,302,304,348,547],sparsity_pattern:341,sparsitypattern:362,sparsitypatternbuild:207,sparsitypatternbuilder_build:207,sparsitypatternbuilder_build_ccfem:207,spatial:[4,8,157],spatialcoordin:607,special:[22,81,82,225,227,391,423,580,607],specialfacetfunct:[149,250],specialfunct:[596,597,598,599,600,601,602,603,604,605,606],specialis:[378,388],specif:[7,8,13,28,147,416,474,532,547,588],specifi:[0,1,3,4,5,6,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,35,139,145,154,157,181,184,236,247,257,340,342,385,424,441,463,464,466,468,470,471,473,514,537,547,551,568,571,573,576,579,592,593,629],spectral:342,spectral_shift:342,spectral_transform:342,spectrum:342,sphere:[3,6,145,401,410,460,463,511,535,551],spheremesh:[3,535],split:[2,4,10,11,12,13,18,19,20,21,59,63,69,582,589],sqr:30,squar:[0,2,3,4,10,11,12,13,14,15,16,17,19,22,23,24,410,416,500,521,566,588],squared_dist:[410,416,500],squared_norm:500,stabil:25,stabl:[10,11,18,21,566],stage:[180,646],stage_form:180,stage_solut:[180,646],stand:588,standard:[2,4,7,14,15,16,17,18,21,22,215,328,341,378,388,389,463,500,547,548,565,567,568,588],start:[6,9,18,22,23,91,125,131,154,215],start_vertex:621,statement:[4,548],stationari:149,std:[24,38,97,145,147,154,155,156,199,209,215,221,222,257,346,391,463,471,474,476,477,478,479,492,493,494,495,496,512,521,579],std_out_all_process:12,step:[0,4,7,12,13,14,16,17,18,19,22,24,37,79,185,188,549],step_interv:[185,188],stiff:[7,53,547],still:[145,215,551],stl:[346,530,531,532,533,534,538],stlfactori:362,stlfactory_inst:362,stlmatrix:362,stockmey:[244,245],stoke:[23,25,247],stop:[0,91],storag:[56,89,300,488],store:[1,2,4,10,11,12,13,17,18,19,20,21,22,23,24,78,91,123,134,145,147,155,193,194,219,275,346,462,463,470,471,472,475,476,477,478,479,481,488,492,493,494,495,496,513,547,554],store_connect:193,str:[38,41,47,51,57,77,78,79,92,93,96,97,145,154,193,194,197,198,208,219,257,258,259,261,279,280,310,463,470,471,473,474,475,476,477,478,479,480,488,492,493,494,495,496,500,508,521,551,577,579,582],str_latex:89,strain:8,strategi:[4,8,12,137,138,208,541,542],stream:[120,129,257],string2typ:416,string:[0,4,5,6,13,14,16,17,24,33,41,42,46,47,48,51,53,57,59,64,77,78,80,89,92,93,96,97,98,119,145,153,155,156,261,271,279,280,310,331,333,416,417,418,419,470,471,474,475,480,482,484,488,492,500,521,551,579,588,592,593],string_:390,stringparamet:118,strong:[19,20,145,149,551],structur:[56,215,279,300,303,313,328,346,378,388,391,463,470,579],studi:22,style:97,sub:[4,8,10,11,14,15,18,19,20,21,22,23,81,145,147,153,157,202,219,221,222,223,243,248,280,463,471,475,476,477,478,479,509,513,551,582,589],sub_add:220,sub_compon:247,sub_domain:[19,20,21,23,145,463,509,512,513,551],sub_domains_bool:23,sub_domains_doubl:23,sub_sub:220,subclass:[2,4,11,15,38,41,46,47,51,57,92,154,155,210,211,297,356,357,361,463,550,579,580],subdomain:[1,2,5,8,14,15,16,19,20,21,24,25,30,43,46,47,139,145,147,184,401,424,463,472,476,477,478,479,509,513,535,547,550,551,556,588,625,652],subdomains_bool:23,subdomains_doubl:23,subdomian:8,subel:[584,586],subfunct:[219,243],subject:192,submesh:[471,535,616],subregion:22,subscript:2,subsequ:[12,14,137,138,243,462,541,542],subset:[12,78,145,154,472,492,493,494,495,496,509,513,514,551],subset_it:514,subsetiter:535,subspac:[0,10,11,18,222,250,342,559,582,589],subsystemsmanag:[118,329],subsystemsmanager_fin:118,subsystemsmanager_init_mpi:118,subsystemsmanager_init_petsc:118,subsystemsmanager_mpi_fin:118,subsystemsmanager_mpi_initi:118,subsystemsmanager_responsible_mpi:118,subsystemsmanager_responsible_petsc:118,subsytem:[81,82],subtract:[5,6,12,566],suffer:566,suffix:[12,14,15,16,24,257,271],suggest:[7,18,22],suitabl:[1,2,8,13,14,15,16,17,18,22,24,192,262,275,543],sum:[4,59,76,221,248,304,341,354,389,566],summari:[0,1,5,6,14,15,16,24,91,118,119,123,134,155,271],superspac:222,suppli:[8,154,217,271,340,576],support:[18,81,83,147,271,275,464,471,500,515,588],suppos:[10,11],sure:17,surfac:[4,6,403,404,460,515],surface3d:[401,535],svg:[257,630,631],svgtool:[626,631],swig:[38,49,580,612,627],swigimportinfo:43,symbol:[597,599,600,602,603,605,606],symmetr:[18,19,20,21,24,300,548,592],symmetri:[18,192,279,546,548,592],synchron:[59,62],synonym:14,syntax:[0,2,4,8,13,14,16,17,24,46,47],synthes:271,system:[4,12,14,17,19,20,21,23,33,38,53,81,139,145,184,192,202,281,296,299,305,307,310,311,314,320,324,331,337,340,342,352,365,380,385,480,546,548,576,652],systemassembl:[207,549],tabl:[90,118,134,271],tableentri:118,tabul:157,tabulate_all_coordin:157,tabulate_all_dof:301,tabulate_coordin:157,tabulate_entity_dof:157,tabulate_facet_dof:157,tag:[19,20,21,22],tai:588,take:[0,1,3,4,5,6,7,9,10,11,14,15,16,22,23,24,51,57,92,271,331,333,334,401,462,580,646],taken:[0,18],tan:579,tangent:646,tao:112,target:[15,342],task:[4,8,91,94,97,99,123,133,134],tau:[10,11],taylor:[12,18,25],taylorhood:21,tdim:[391,410,425,448,462,473],tear:561,techniqu:[0,337],tell:[4,8,14],temam:12,tend:7,tensor:[4,7,8,25,139,142,154,184,201,216,217,279,280,297,302,303,304,348,356,357,361,547,548,566,577,579,592],tensor_layout:304,tensorfunctionspac:595,tent:12,term:[0,1,2,8,10,11,13,14,15,16,17,24,26,298,310,566,568,595],termin:[4,18],test:[0,1,2,4,5,6,7,8,10,11,12,13,14,15,16,17,18,22,24,151,154,171,181,300,355,522,523,547,558,571,573,576,583],test_spac:[171,181],testfunct:[0,1,2,4,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,24,587,652],tetrahedr:[8,394,434,519],tetrahedra:[7,394,519],tetrahedron:[9,35,401,416,425,522,535],tetrahedroncel:391,text:271,tfqmr:18,than:[0,12,14,18,19,20,21,23,24,41,145,155,391,541,542,559,579,629],thei:[4,7,9,19,21,22,47,223,566],them:[12,15],themselv:391,therebi:[3,151],therefor:[3,7,8,12,17,18,20,81,87,88,215,579],theri:10,theta:[4,8,500],thi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,33,37,38,40,42,44,47,48,49,51,54,56,57,59,72,73,78,79,81,82,89,90,92,97,100,122,125,130,137,138,139,140,141,142,143,144,145,147,148,151,153,154,157,171,172,180,181,182,184,187,189,192,193,194,210,212,214,215,216,217,218,219,220,221,222,223,225,236,237,242,243,244,247,257,261,271,275,281,296,297,298,299,300,301,302,303,304,305,309,310,311,313,314,316,317,320,324,328,329,334,337,340,341,342,346,347,348,352,354,355,378,379,380,385,388,389,390,391,393,394,401,410,416,420,421,422,423,424,425,426,432,441,442,460,461,462,463,464,471,473,481,482,485,486,487,489,493,494,495,496,497,498,499,500,501,507,508,509,510,511,512,515,516,519,520,521,522,523,537,541,542,545,546,547,549,551,554,555,557,559,564,566,567,569,570,571,572,573,574,575,579,580,581,582,583,584,585,586,587,595,601,604,607,627,628,630,646,648,651],think:22,third:[0,1,3,4,5,9,10,11,13,14,16,23,24,145,216,473,551],thisown:[50,51,52,53,54,56,57,58,59,60,61,77,78,79,80,81,89,90,91,92,93,137,138,139,140,141,142,143,144,145,147,148,149,151,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,179,180,181,182,184,185,187,188,189,192,193,194,203,210,212,214,215,216,217,218,219,220,221,222,223,224,225,228,229,230,231,232,233,234,235,236,237,238,242,243,244,246,247,252,257,260,261,262,263,264,265,266,267,268,269,270,271,275,279,280,281,283,284,296,297,298,299,300,301,302,303,304,305,307,309,310,311,313,314,316,317,318,320,324,327,328,329,331,334,337,340,341,342,344,346,347,348,352,354,355,376,378,379,380,384,385,386,388,389,390,391,392,393,394,395,397,399,400,401,402,403,405,406,407,408,409,410,412,413,414,415,416,420,421,422,423,424,425,426,428,429,430,431,432,433,434,435,437,438,439,440,441,442,444,445,446,447,448,449,450,451,452,453,454,455,456,460,461,462,463,464,470,471,472,473,474,476,477,478,479,480,481,482,487,488,489,493,494,495,496,497,500,501,507,508,509,510,511,512,513,514,515,516,519,520,521,522,523,524,526,527,528,529,530,531,532,533,534,538,572,574],thoma:[10,588],those:[14,15,16,22,24,193,194],thousand:566,thread:[81,83,154],three:[1,3,7,8,9,10,11,12,14,15,16,23,24,145,551,582],through:[0,1,5,6,9,10,11,13,14,16,17,18,19,22,23,24,141,271,463,489,490,492,493,494,495,496],throughout:24,thu:[0,1,13,14,16,17,22,23,24,566,577,580],tic:118,tied:147,tile:271,tile_window:271,time:[0,12,13,14,16,17,24,29,38,45,53,77,89,91,118,123,131,135,185,188,192,193,194,197,198,271,310,410,463,546,577,579,646],timer:118,timeseri:207,timeseries_default_paramet:207,timeseries_filename_data:207,timeseries_filename_tim:207,timeserieshdf5:207,timeserieshdf5_default_paramet:207,timestamp:262,timestep:180,tite:35,titl:[0,3,5,6,12,14,22,24,35,79,89,271,278],to_adm:646,to_dict:78,to_kei:271,to_tlm:646,toc:118,togeth:[0,8,23,41,78,145,221,300,316,354,389,551],toi:38,tol:[0,78,137,138,155,206,252,541,542,576],toler:[0,4,14,137,138,155,342,512,541,542,576],too:[547,629],tool:570,top:[11,22,23,215,271,422,423,545,575],top_bottom:18,top_radiu:422,topic:652,topolog:[23,24,145,391,410,411,412,413,414,415,416,425,426,427,428,429,430,431,435,436,437,438,439,440,441,443,444,445,446,447,462,463,464,466,467,468,469,470,472,473,474,475,476,477,478,479,488,492,493,494,495,496,509,512,513,524,525,526,527,528,529,530,531,532,533,534,538,547,551],topological_dimens:[24,153,579],total:[3,8,302,394,461,470,508,519,520,521,582],tpetsc:17,traction:8,transfer:[199,271],transform:[17,342,489],translat:[9,463,489,491],transpmult:300,transpos:[279,324,355],tree:[97,391,448,463,480],trial:[0,1,2,4,8,10,11,12,13,14,15,16,17,24,145,154,171,181,547,551,558,571,573,585],trial_spac:[171,181],trialfunct:[0,1,2,4,7,8,10,11,12,13,15,16,17,18,19,20,21,22,24,587,652],triangl:[0,10,11,13,14,16,17,24,416,425,435,508,521,523],triangul:[2,410,416,535],triangular:[24,433,508,521],triangulate_intersect:[410,416],triangulate_triangul:535,trigger:12,trilino:[14,18,115],trilinosprecondition:362,trilinospreconditioner_default_paramet:362,trilinospreconditioner_precondition:362,trival:17,trust:337,tupl:[33,41,78,544,552,554,558,559,577,579,584,586,591],turn:[7,12,127,463,474,500],twice:2,two:[0,1,2,3,4,5,6,8,9,10,11,12,13,14,16,17,18,19,20,21,22,24,223,236,247,391,393,399,402,409,416,441,463,476,477,478,479,492,493,494,495,496,507,513,566,576],type2str:416,type:[4,7,8,10,11,13,19,20,21,22,23,24,50,52,58,77,78,80,97,145,154,193,197,198,221,248,257,261,271,299,301,305,309,334,342,374,380,390,410,416,417,418,419,425,460,463,464,466,467,468,469,473,475,492,515,532,547,551,552,566,568,577,579],type_nam:[193,197,198],type_str:[77,261],type_to_dim:464,typemap:38,typic:[4,18,19,20,21,22,37,157,247,355,462,588],u_h:[137,138,541,542,566],u_infti:579,u_init:4,ub_func:181,ubla:[89,300,354,378,379,380,385,388,389],ublas_vector:389,ublasdensefactori:362,ublasdensefactory_inst:362,ublasdensematrix:362,ublasiluprecondition:362,ublaskrylovsolv:362,ublaskrylovsolver_default_paramet:362,ublaskrylovsolver_method:362,ublaskrylovsolver_precondition:362,ublaslinearoper:362,ublasmatrix:[378,388],ublasprecondition:[362,379,380],ublassparsefactori:362,ublassparsefactory_inst:362,ublassparsematrix:362,ublasvector:362,ufc:[24,141,147,153,154,217,219,223,390,410,463,547,557,579,594],ufc_cel:[11,219,579],ufc_dofmap:[147,608],ufc_finite_el:608,ufc_form0:594,ufc_form1:594,ufc_form:[154,594,609],ufc_functionspac:[596,608,609],ufcfunctionspac:610,ufil:12,ufile_pvd:[18,19,20,21],ufl:[0,1,2,4,8,10,11,13,14,15,16,17,22,24,154,281,352,463,476,477,478,479,513,544,546,554,555,558,559,577,579,580,581,582,583,584,585,586,589,590,601,604,646],ufl_cel:[463,513],ufl_domain:[463,513],ufl_el:[579,582,589],ufl_evalu:[579,582],ufl_id:[463,476,477,478,479,513],ufl_stage_form:646,uint:[24,579,589],uintarrai:118,umfpack:[116,352],umfpacklusolv:362,umfpacklusolver_default_paramet:362,unanticip:[51,57,92],unchang:145,uncut:215,uncut_cel:215,undergon:346,underlai:[300,354,389],underli:[147,302,378,388,389],underlin:121,underscor:471,uniform:[394,519,521,628],uniformli:[199,254,416,537,629],union:[2,6,399,401,409],uniqu:[78,93,271,471,474],unit:[0,2,3,4,8,10,11,12,13,14,15,16,17,18,19,21,22,23,24,390,500,519,520,521,522,523,588],unitcirclemesh:3,unitcubemesh:[3,8,18,535],unitintervalmesh:[3,535],unitsquar:[35,463,588,597,598,599,600,601,602,603,605,606],unitsquaremesh:[0,2,3,4,10,11,13,14,15,16,17,22,24,535],unittetrahedronmesh:535,unittrianglemesh:535,unknown:[4,10,11,12,13,17,79,102,554,576,577,593],unless:[8,257],unmark:472,unnam:93,unordered_map:[145,222],unpack_cell_vertic:462,unpack_vertex_coordin:462,unrefin:0,unrestrict:509,unset:[50,52,58,80],unsign:[215,391,475,492],unsort:302,unstructur:[3,421,511],unsupport:261,until:[4,215],unwrap:[309,310,313,354],updat:[12,78,79,145,223,271,299,579],update_ghost_valu:341,update_paramet:299,upon:[0,14,15,16,24,463],upper:[12,24,181,271,337,422,423],upper_bound:181,uppercas:97,usag:[6,33,35,38,46,47,78,89,91,125,144,328,341,378,388,389,547,548,565,568,570,577,588,591,592,593,594,597,598,599,600,601,602,603,605,606,622,629],use:[0,1,3,4,5,6,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,35,38,97,130,141,145,147,181,192,219,222,262,298,328,341,378,388,389,391,425,463,471,476,477,478,479,513,532,547,548,551,554,579,580,630,649,650],use_gpu:[328,341],use_partition_from_fil:262,used:[0,4,8,9,10,12,14,15,16,17,23,24,37,38,79,91,100,131,132,135,140,141,145,149,151,157,184,193,194,217,219,220,221,243,271,275,298,299,301,310,316,317,342,348,355,390,393,420,422,423,432,433,434,460,462,463,464,465,471,475,476,477,478,479,492,493,494,495,496,497,499,501,507,510,512,516,547,549,551,566,576,579,580,582,588,593,646,652],useful:[2,19,20,21,22,23,30,145,154,210,215,222,243,299,442,497,499,522,523,570],user:[4,10,11,13,24,27,139,145,217,271,298,310,331,337,340,471,473,551,558,579,580],user_paramet:579,user_sub_domain:145,uses:[2,13,24,45,59,73,212],using:[0,1,2,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,38,51,57,92,145,154,181,185,188,205,212,213,222,244,245,275,281,301,303,304,314,328,341,352,378,380,388,393,420,422,423,432,501,507,510,512,516,547,549,551,566,579],usual:[4,11,22],utel:49,util:[59,395,397],v2c:[619,621],v_0:154,v_1:154,v_h:[137,138,541,542,562],vaiation:24,valid:[271,548],valu:[1,2,4,8,9,11,12,14,15,16,19,20,21,22,23,24,35,36,41,46,50,52,54,55,58,59,64,70,71,76,77,78,80,89,91,141,145,146,148,149,150,153,155,156,157,172,173,182,183,185,186,193,194,195,196,199,216,217,219,223,236,243,246,261,262,271,273,275,280,281,282,283,300,303,304,305,306,307,308,310,311,312,314,315,320,321,324,325,331,333,334,335,337,338,341,342,343,346,347,352,353,354,380,381,389,390,395,396,397,398,463,471,472,473,476,477,478,479,480,492,493,494,495,496,500,524,547,551,572,574,576,577,578,579,581,583,584,585,586,592,593],value0:216,value1:216,value2:216,value_collect:[476,477,478,479],value_dimens:[153,223],value_rank:[153,223],value_s:223,value_shap:[4,11,216,217,579],value_str:77,vanish:[0,11],vari:[22,24],variabl:[4,8,10,11,12,18,19,20,21,46,47,51,57,89,92,118,119,145,149,154,155,157,172,180,182,185,193,194,222,223,236,262,271,274,275,278,299,302,309,314,317,334,342,395,397,401,462,463,471,476,477,478,479,493,494,495,496,551,572,574,580],variant:[14,581,583,584,585,586],variat:[0,1,2,4,7,8,10,11,12,13,14,15,16,17,18,19,20,21,24,137,138,139,144,148,149,155,171,172,181,182,184,187,199,206,217,337,541,542,547,571,572,573,574,576,579,652],variationalproblem:575,variationalsolv:545,variou:[4,8,14,15,16,22,24,81,225,271,346,489,567,576],vec:[38,341,389],vecexp:38,vector:[4,7,8,10,11,12,17,18,19,20,21,35,41,145,147,154,157,179,187,192,193,194,209,214,215,216,217,219,221,222,246,261,262,271,279,280,297,298,300,302,304,305,310,313,314,317,327,337,341,346,355,362,374,378,384,388,389,391,463,476,477,478,479,489,491,500,547,567,568,576,577,579,582,593,652],vector_:471,vector_tim:[193,194],vectorfloat:261,vectorfunctionspac:[8,12,18,19,20,21,582,591,595],vectorint:261,vectorspacebasi:[17,362],veloc:[12,18,19,20,21,247],verbos:[5,6,119,474,500,582],veri:[5,6,16,18,56,119],version:[3,22,50,51,52,57,58,59,64,69,77,79,80,81,83,84,89,92,93,94,96,98,137,138,143,144,145,147,148,153,154,171,172,180,181,182,185,187,188,192,193,194,199,201,202,206,210,211,212,213,214,215,216,217,219,220,221,222,223,225,227,236,237,243,244,246,247,248,257,261,262,271,275,278,279,280,281,296,299,300,303,304,305,307,309,310,311,313,314,320,324,328,331,333,337,341,342,346,347,348,352,354,378,380,385,388,389,390,391,394,403,404,410,416,417,425,426,435,441,448,461,462,463,464,465,470,471,472,473,474,476,477,478,479,480,488,489,490,493,494,495,496,500,508,509,512,513,514,519,520,521,524,530,531,532,533,534,537,538,551,552,572,574],version_deprec:96,version_remov:96,vertex:[9,145,153,204,209,302,410,425,462,463,464,467,473,488,532,535,604,613,614],vertex_1:9,vertex_2:9,vertex_3:9,vertex_coordin:[153,462],vertex_i:9,vertex_indic:462,vertex_k:9,vertex_l:9,vertex_m:9,vertex_to_dof_map:207,vertex_valu:219,vertexfunct:[526,527,528,529,535],vertexfunctionbool:535,vertexfunctiondoubl:535,vertexfunctionint:535,vertexfunctionsizet:535,vertic:[3,4,8,9,14,145,204,209,210,211,219,223,394,416,425,432,461,462,463,473,489,490,501,508,513,519,520,521,522,523,535,613,614,617],vessel:1,via:[12,13,238,261,331,337,460,579],view:[51,57,92,147,157,410,416,476,477,478,479,588],virtual:[4,385],viscos:12,visit:514,visual:[4,5,6,7,14,15,16,24,35,271,570],visualis:[464,465,497,499],vmtk:[145,551],vol:[597,599,600,603,605,606],volum:[8,410,416,599],vtk:[2,4,8,12,14,15,16,18,19,20,21,23,24,257],vtkplotter:276,vtkplotter_all_interact:276,vtkplotter_default_paramet:276,vtkplotter_to_kei:276,wai:[7,14,15,16,18,19,20,21,22,23,24,79,145,271,424,471,492,493,494,495,496,513,551,564,567,569,576],wait:4,wall:1,want:[0,7,8,10,11,13,14,15,16,17,18,19,21,22,23,24,25,337,579],warn:[59,72,73,96,118,219,460],warn_onc:77,warp:[35,271],weak:[0,2,4,19,20,149],weakli:2,weight:[0,22,25,137,138,215,541,542,576],well:[13,187,575],were:8,wether:361,what:[0,15,22,23,204,209,410,463],when:[0,1,4,5,6,8,12,14,15,18,19,21,23,24,59,91,145,147,151,154,193,194,223,271,275,422,423,425,463,492,512,551,579,580,588,629],where:[0,1,2,4,5,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,145,154,157,171,181,185,188,192,219,220,442,460,472,488,547,549,551,571,573,576,579,582],whether:[5,6,7,22,24,56,59,67,68,119,145,148,181,182,215,249,253,304,314,337,390,410,416,472,509,512,551,574,592,629],which:[0,1,2,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,38,39,41,49,51,53,57,59,66,81,92,96,97,131,141,145,148,151,154,155,181,192,193,194,215,217,219,221,222,243,310,316,342,378,388,389,390,391,393,410,420,422,423,424,432,460,463,464,466,467,468,470,476,477,478,479,489,490,492,493,494,495,496,497,499,501,507,509,510,516,537,546,547,549,551,559,566,568,570,576,577,579,580,588,613,614,629,648],who:139,whole:[23,180,580],wide:17,widget:271,width:271,window:[12,271,272],window_height:271,window_width:271,winther:588,wirefram:[35,271],wirth:[493,494,495,496],wise:[0,14,15,16,24,179],wish:[0,8,139,340],within:[4,22,249,253,488],without:[2,8,12,81,84,154,171,181,206,577],wll:547,wolfram:463,word:[0,14,16,24,154,215],work:[0,23,25,33,126,204,209,215,463],world:7,would:[2,4,10,11,22,145,551],wrap:[38,44,271,549,557],wrapper:[51,57,59,65,92,153,299,320,324,328,334,341,342,378,388,389,550,627,651],write:[0,1,14,15,16,17,19,20,21,22,24,154,193,194,257,260,262,275],write_fil:622,write_pdf:271,write_png:271,written:[2,4,14,257,588],wrong:356,www:[275,281,352,378,388,389,410],x3d:257,xd3:257,xdmf:[257,275],xdmffile:276,xhat:153,xml:[1,7,12,19,20,21,23,24,257,275,462,463,492,493,494,495,496,582],xyz:257,y_n:646,yet:[126,337],you:[0,7,18,22,25],young:8,your:35,yourself:22,zero:[0,8,14,15,16,17,18,19,20,21,24,145,154,236,279,300,302,303,304,313,328,342,346,347,378,388,463,470,471,481,482,485,486,547,566],zero_column:145,zlib:117,zoom:[12,271]},titles:["1. Auto adaptive Poisson equation","2. Set boundary conditions for meshes that include boundary indicators","3. Biharmonic equation","4. Built-in meshes","5. Cahn-Hilliard equation","6. Create CSG 2D-geometry","7. Create CSG 3D-geometry","8. A simple eigenvalue solver","9. Hyperelasticity","10. Generate mesh","11. Dual-mixed formulation for Poisson equation","12. Mixed formulation for Poisson equation","13. Incompressible Navier-Stokes equations","14. Poisson equation with pure Neumann boundary conditions","15. Nonlinear Poisson equation","16. Poisson equation with periodic boundary conditions","17. Poisson equation","18. Singular Poisson","19. Stokes equations","20. Stokes equations with Mini elements","21. Stokes equations with stabilized first order elements","22. Stokes equations with Taylor-Hood elements","23. Poisson equation with multiple subdomains","24. Marking subdomains of a mesh","25. Tensor-weighted Poisson","Collection of documented demos","Documentation for DOLFIN-1.4.0 (Python)","dolfin.common.constants module","dolfin.common.globalparameters module","dolfin.common module","dolfin.common.math module","sqr","dolfin.common.memory module","memory_usage","dolfin.common.plotting module","plot","Time","dolfin.common.time module","compile_extension_module","expression_to_code_fragments","dolfin.compilemodules.compilemodule module","compile_expressions","dolfin.compilemodules.expressions module","dolfin.compilemodules module","dolfin.compilemodules.jit module","jit","CompiledSubDomain","compile_subdomains","dolfin.compilemodules.subdomains module","dolfin.compilemodules.swigimportinfo module","BoolParameter","DoubleArray","DoubleParameter","Event","GlobalParameters","GlobalParameters_default_parameters","IndexSet","IntArray","IntParameter","MPI","MPIInfo","MPI_Comm","MPI_barrier","MPI_compute_local_range","MPI_gather","MPI_global_offset","MPI_index_owner","MPI_is_broadcaster","MPI_is_receiver","MPI_local_range","MPI_max","MPI_min","MPI_num_processes","MPI_process_number","MPI_rank","MPI_size","MPI_sum","ParameterValue","Parameters","Progress","StringParameter","SubSystemsManager","SubSystemsManager_finalize","SubSystemsManager_init_mpi","SubSystemsManager_init_petsc","SubSystemsManager_mpi_finalized","SubSystemsManager_mpi_initialized","SubSystemsManager_responsible_mpi","SubSystemsManager_responsible_petsc","Table","TableEntry","Timer","UIntArray","Variable","begin","debug","deprecation","dolfin_error","dolfin_version","end","error","get_log_level","git_commit_hash","has_cgal","has_cholmod","has_exodus","has_hdf5","has_mpi","has_openmp","has_parmetis","has_petsc","has_petsc_snes","has_petsc_tao","has_scotch","has_slepc","has_trilinos","has_umfpack","has_zlib","dolfin.cpp.common module","info","info_stream","info_underline","init","list_timings","log","monitor_memory_usage","not_working_in_parallel","set_log_active","set_log_level","set_output_stream","summary","tic","time","timing","timings","toc","warning","AdaptiveLinearVariationalSolver","AdaptiveNonlinearVariationalSolver","Assembler","AssemblerBase","BasisFunction","CCFEMAssembler","CCFEMDofMap","CCFEMForm","DirichletBC","DirichletBC_default_parameters","DofMap","Equation","ErrorControl","ErrorControl_default_parameters","Extrapolation","Extrapolation_extrapolate","FiniteElement","Form","GenericAdaptiveVariationalSolver","GenericAdaptiveVariationalSolver_default_parameters","GenericDofMap","HierarchicalDirichletBC","HierarchicalErrorControl","HierarchicalForm","HierarchicalFunction","HierarchicalFunctionSpace","HierarchicalLinearVariationalProblem","HierarchicalMesh","HierarchicalMeshFunctionBool","HierarchicalMeshFunctionDouble","HierarchicalMeshFunctionInt","HierarchicalMeshFunctionSizet","HierarchicalMeshFunctionUInt","HierarchicalNonlinearVariationalProblem","LinearVariationalProblem","LinearVariationalSolver","LinearVariationalSolver_default_parameters","LocalAssembler","LocalAssembler_assemble","LocalAssembler_assemble_cell","LocalAssembler_assemble_exterior_facet","LocalAssembler_assemble_interior_facet","LocalSolver","MultiStageScheme","NonlinearVariationalProblem","NonlinearVariationalSolver","NonlinearVariationalSolver_default_parameters","OpenMpAssembler","PointIntegralSolver","PointIntegralSolver_default_parameters","PointSource","RKSolver","SparsityPatternBuilder","SparsityPatternBuilder_build","SparsityPatternBuilder_build_ccfem","SystemAssembler","TimeSeries","TimeSeriesHDF5","TimeSeriesHDF5_default_parameters","TimeSeries_default_parameters","TimeSeries_filename_data","TimeSeries_filename_times","adapt","adapt_markers","assemble","assemble_system","bool_deprecated","dof_to_vertex_map","dorfler_mark","fem_solve","dolfin.cpp.fem module","mark","vertex_to_dof_map","ALE","ALE_move","BoostGraphOrdering","BoostGraphOrdering_compute_cuthill_mckee","CCFEMFunction","CCFEMFunctionSpace","Constant","Expression","FacetArea","Function","FunctionAXPY","FunctionAssigner","FunctionSpace","GenericFunction","Graph","GraphBuilder","GraphBuilder_compute_dual_graph","GraphBuilder_local_graph","HierarchicalFunction","HierarchicalFunctionSpace","HierarchicalMesh","HierarchicalMeshFunctionBool","HierarchicalMeshFunctionDouble","HierarchicalMeshFunctionInt","HierarchicalMeshFunctionSizet","HierarchicalMeshFunctionUInt","Lagrange","LagrangeInterpolator","Legendre","Legendre_d2dx","Legendre_ddx","Legendre_eval","MeshCoordinates","MeshDisplacement","SCOTCH","SCOTCH_compute_gps","SpecialFacetFunction","SubSpace","assign","between","dolfin.cpp.function module","ipow","lt_coordinate","near","rand","seed","dolfin.cpp module","File","File_create_parent_path","File_exists","GenericFile","HDF5Attribute","HDF5File","HierarchicalFunction","HierarchicalFunctionSpace","HierarchicalMesh","HierarchicalMeshFunctionBool","HierarchicalMeshFunctionDouble","HierarchicalMeshFunctionInt","HierarchicalMeshFunctionSizet","HierarchicalMeshFunctionUInt","VTKPlotter","VTKPlotter_all_interactive","VTKPlotter_default_parameters","VTKPlotter_to_key","XDMFFile","dolfin.cpp.io module","interactive","plot","BlockMatrix","BlockVector","CholmodCholeskySolver","CholmodCholeskySolver_default_parameters","CoordinateMatrix","DefaultFactory","DefaultFactory_factory","EpetraFactory","EpetraKrylovSolver","EpetraKrylovSolver_default_parameters","EpetraKrylovSolver_methods","EpetraKrylovSolver_preconditioners","EpetraLUSolver","EpetraLUSolver_default_parameters","EpetraLUSolver_methods","EpetraMatrix","EpetraVector","GenericLUSolver","GenericLinearAlgebraFactory","GenericLinearOperator","GenericLinearSolver","GenericMatrix","GenericPreconditioner","GenericSparsityPattern","GenericTensor","GenericVector","KrylovSolver","KrylovSolver_default_parameters","LUSolver","LUSolver_default_parameters","LinearAlgebraObject","LinearOperator","LinearSolver","LinearSolver_default_parameters","Matrix","NewtonSolver","NewtonSolver_default_parameters","NonlinearProblem","PETScBaseMatrix","PETScFactory","PETScFactory_instance","PETScKrylovSolver","PETScKrylovSolver_default_parameters","PETScKrylovSolver_methods","PETScKrylovSolver_preconditioners","PETScLUSolver","PETScLUSolver_default_parameters","PETScLUSolver_methods","PETScLinearOperator","PETScMatrix","PETScObject","PETScObject_petsc_error","PETScOptions","PETScOptions_clear","PETScOptions_set","PETScPreconditioner","PETScPreconditioner_default_parameters","PETScPreconditioner_preconditioners","PETScSNESSolver","PETScSNESSolver_default_parameters","PETScSNESSolver_methods","PETScUserPreconditioner","PETScVector","SLEPcEigenSolver","SLEPcEigenSolver_default_parameters","STLFactory","STLFactory_instance","STLMatrix","Scalar","SparsityPattern","TrilinosPreconditioner","TrilinosPreconditioner_default_parameters","TrilinosPreconditioner_preconditioners","UmfpackLUSolver","UmfpackLUSolver_default_parameters","Vector","VectorSpaceBasis","as_backend_type","get_tensor_type","has_krylov_solver_method","has_krylov_solver_preconditioner","has_lu_solver_method","has_type","dolfin.cpp.la module","krylov_solver_methods","krylov_solver_preconditioners","la_solve","linear_algebra_backends","linear_solver_methods","list_krylov_solver_methods","list_krylov_solver_preconditioners","list_linear_algebra_backends","list_linear_solver_methods","list_lu_solver_methods","lu_solver_methods","normalize","residual","uBLASDenseFactory","uBLASDenseFactory_instance","uBLASDenseMatrix","uBLASILUPreconditioner","uBLASKrylovSolver","uBLASKrylovSolver_default_parameters","uBLASKrylovSolver_methods","uBLASKrylovSolver_preconditioners","uBLASLinearOperator","uBLASPreconditioner","uBLASSparseFactory","uBLASSparseFactory_instance","uBLASSparseMatrix","uBLASVector","BoundaryMesh","BoundingBoxTree","BoundingBoxTree3D","Box","BoxMesh","CSGCGALMeshGenerator2D","CSGCGALMeshGenerator2D_default_parameters","CSGCGALMeshGenerator3D","CSGCGALMeshGenerator3D_default_parameters","CSGDifference","CSGGeometries","CSGGeometry","CSGIntersection","CSGMeshGenerator","CSGMeshGenerator_generate","CSGOperator","CSGPrimitive","CSGPrimitive2D","CSGPrimitive3D","CSGUnion","Cell","CellFunction","CellFunctionBool","CellFunctionDouble","CellFunctionInt","CellFunctionSizet","CellType","CellType_create","CellType_string2type","CellType_type2string","Circle","CircleMesh","Cone","Cylinder","DomainBoundary","DynamicMeshEditor","Edge","EdgeFunction","EdgeFunctionBool","EdgeFunctionDouble","EdgeFunctionInt","EdgeFunctionSizet","Ellipse","EllipseMesh","EllipsoidMesh","Face","FaceFunction","FaceFunctionBool","FaceFunctionDouble","FaceFunctionInt","FaceFunctionSizet","Facet","FacetCell","FacetFunction","FacetFunctionBool","FacetFunctionDouble","FacetFunctionInt","FacetFunctionSizet","GenericBoundingBoxTree","HierarchicalFunction","HierarchicalFunctionSpace","HierarchicalMesh","HierarchicalMeshFunctionBool","HierarchicalMeshFunctionDouble","HierarchicalMeshFunctionInt","HierarchicalMeshFunctionSizet","HierarchicalMeshFunctionUInt","ImplicitDomainMeshGenerator","ImplicitDomainMeshGenerator_generate","ImplicitDomainMeshGenerator_generate_surface","ImplicitSurface","IntervalMesh","LocalMeshData","Mesh","MeshColoring","MeshColoring_cell_colors","MeshColoring_color","MeshColoring_color_cells","MeshColoring_compute_colors","MeshColoring_type_to_dim","MeshConnectivity","MeshData","MeshDomains","MeshEditor","MeshEntity","MeshFunction","MeshFunctionBool","MeshFunctionDouble","MeshFunctionInt","MeshFunctionSizet","MeshGeometry","MeshPointIntersection","MeshQuality","MeshQuality_radius_ratio_histogram_data","MeshQuality_radius_ratio_matplotlib_histogram","MeshQuality_radius_ratio_min_max","MeshQuality_radius_ratios","MeshRenumbering","MeshTopology","MeshTransformation","MeshTransformation_rotate","MeshTransformation_translate","MeshValueCollection","MeshValueCollectionBool","MeshValueCollectionDouble","MeshValueCollectionInt","MeshValueCollectionSizet","PeriodicBoundaryComputation","PeriodicBoundaryComputation_compute_periodic_pairs","PeriodicBoundaryComputation_masters_slaves","Point","Polygon","PolygonalMeshGenerator","PolygonalMeshGenerator_generate","PolyhedralMeshGenerator","PolyhedralMeshGenerator_generate","PolyhedralMeshGenerator_generate_surface_mesh","Rectangle","RectangleMesh","Restriction","Sphere","SphereMesh","SubDomain","SubMesh","SubsetIterator","Surface3D","Tetrahedron","Triangulate","Triangulate_triangulate","UnitCubeMesh","UnitIntervalMesh","UnitSquareMesh","UnitTetrahedronMesh","UnitTriangleMesh","Vertex","VertexFunction","VertexFunctionBool","VertexFunctionDouble","VertexFunctionInt","VertexFunctionSizet","cells","edges","entities","faces","facets","dolfin.cpp.mesh module","intersect","refine","vertices","down_cast","dolfin.deprecation module","AdaptiveLinearVariationalSolver","AdaptiveNonlinearVariationalSolver","generate_error_control","generate_error_control_forms","dolfin.fem.adaptivesolving module","SystemAssembler","assemble","assemble_system","dolfin.fem.assembling module","AutoSubDomain","DirichletBC","homogenize","dolfin.fem.bcs module","DOLFINErrorControlGenerator","dolfin.fem.errorcontrolgenerator module","Form","dolfin.fem.form module","adjoint","derivative","increase_order","dolfin.fem.formmanipulations module","tear","dolfin.fem module","dolfin.fem.interpolation module","interpolate","errornorm","dolfin.fem.norms module","norm","dolfin.fem.projection module","project","LinearVariationalProblem","LinearVariationalSolver","NonlinearVariationalProblem","NonlinearVariationalSolver","dolfin.fem.solving module","solve","Constant","dolfin.functions.constant module","Expression","dolfin.functions.expression module","Argument","Function","TestFunction","TestFunctions","TrialFunction","TrialFunctions","dolfin.functions.function module","FunctionSpace","FunctionSpaceBase","FunctionSpaceFromCpp","MixedFunctionSpace","TensorFunctionSpace","VectorFunctionSpace","create_ufc_function_spaces","dolfin.functions.functionspace module","dolfin.functions module","CellNormal","CellSize","CellVolume","Circumradius","FacetArea","FacetNormal","MaxFacetEdgeLength","MeshCoordinates","MinFacetEdgeLength","SpatialCoordinate","dolfin.functions.specialfunctions module","UFCFunctionSpace","create_ufc_function_spaces","dolfin.functions.ufc_functionspace module","dolfin.importhandler module","Programmer&#8217;s reference for DOLFIN (Python)","compute_edge_map","compute_vertex_map","dolfin.mesh.ale module","init_parent_edge_indices","create_maps","find_all_subdomains","find_keys_on_one_subdomain","find_new_cell_key","find_subdomain","dolfin.mesh.boundarysubdomainfinder module","main","usage","write_file","dolfin.mesh module","dolfin.mesh.meshes module","dolfin.mesh.refinement module","refine","dolfin.mesh.svgtools module","mesh2svg","dolfin.multistage module","BDF1","BackwardEuler","CN2","CrankNicolson","ERK","ERK1","ERK4","ESDIRK3","ESDIRK4","ExplicitEuler","ExplicitMidPoint","ForwardEuler","ImplicitEuler","MultiStageScheme","RK4","dolfin.multistage.multistagescheme module","PointIntegralSolver","RKSolver","dolfin.multistage.multistagesolvers module","Quick Programmer&#8217;s Reference (Python)"],titleterms:{"function":[219,250,578,580,582,587,595,596,607,610],ALE:210,The:26,adapt:[0,199],adapt_mark:200,adaptivelinearvariationalsolv:[137,541],adaptivenonlinearvariationalsolv:[138,542],adaptivesolv:545,adjoint:558,ale:615,ale_mov:211,argument:581,as_backend_typ:356,assembl:[139,201,547,549],assemble_system:[202,548],assemblerbas:140,assign:248,auto:0,autosubdomain:550,backwardeul:634,basisfunct:141,bcs:553,bdf1:633,begin:94,between:249,biharmon:2,blockmatrix:279,blockvector:280,bool_deprec:203,boolparamet:50,boostgraphord:212,boostgraphordering_compute_cuthill_mcke:213,boundari:[1,13,15,18,21],boundarymesh:390,boundarysubdomainfind:622,boundingboxtre:391,boundingboxtree3d:392,box:393,boxmesh:394,built:3,cahn:4,ccfemassembl:142,ccfemdofmap:143,ccfemform:144,ccfemfunct:214,ccfemfunctionspac:215,cell:[410,530],cellfunct:411,cellfunctionbool:412,cellfunctiondoubl:413,cellfunctionint:414,cellfunctionsizet:415,cellnorm:597,cellsiz:598,celltyp:416,celltype_cr:417,celltype_string2typ:418,celltype_type2str:419,cellvolum:599,cholmodcholeskysolv:281,cholmodcholeskysolver_default_paramet:282,circl:420,circlemesh:421,circumradiu:600,cn2:635,code:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],collect:25,common:[27,28,29,30,32,34,37,118],compile_express:41,compile_extension_modul:38,compile_subdomain:47,compiledsubdomain:46,compilemodul:[40,42,43,44,48,49],complet:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],compute_edge_map:613,compute_vertex_map:614,condit:[1,13,15,18,21],cone:422,constant:[27,216,577,578],coordinatematrix:283,cpp:[118,207,250,256,276,362,535],cranknicolson:636,creat:[5,6],create_map:617,create_ufc_function_spac:[594,609],csg:[5,6],csgcgalmeshgenerator2d:395,csgcgalmeshgenerator2d_default_paramet:396,csgcgalmeshgenerator3d:397,csgcgalmeshgenerator3d_default_paramet:398,csgdiffer:399,csggeometri:[400,401],csgintersect:402,csgmeshgener:403,csgmeshgenerator_gener:404,csgoper:405,csgprimit:406,csgprimitive2d:407,csgprimitive3d:408,csgunion:409,cylind:423,debug:95,defaultfactori:284,defaultfactory_factori:285,definit:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24],demo:[4,8,25,26],densiti:8,deprec:[96,540],deriv:559,dirichletbc:[145,551],dirichletbc_default_paramet:146,discretis:4,document:[25,26],dof_to_vertex_map:204,dofmap:147,dolfin:[26,27,28,29,30,32,34,37,40,42,43,44,48,49,118,207,250,256,276,362,535,540,545,549,553,555,557,561,563,564,567,569,575,578,580,587,595,596,607,610,611,612,615,622,626,627,628,630,632,648,651],dolfin_error:97,dolfin_vers:98,dolfinerrorcontrolgener:554,domain:[18,21],domainboundari:424,dorfler_mark:205,doublearrai:51,doubleparamet:52,down_cast:539,dual:10,dynamicmesheditor:425,edg:[426,531],edgefunct:427,edgefunctionbool:428,edgefunctiondoubl:429,edgefunctionint:430,edgefunctionsizet:431,eigenvalu:7,elast:8,element:[19,20,21],ellips:432,ellipsemesh:433,ellipsoidmesh:434,end:99,energi:8,entiti:532,epetrafactori:286,epetrakrylovsolv:287,epetrakrylovsolver_default_paramet:288,epetrakrylovsolver_method:289,epetrakrylovsolver_precondition:290,epetralusolv:291,epetralusolver_default_paramet:292,epetralusolver_method:293,epetramatrix:294,epetravector:295,equat:[0,1,2,4,8,10,11,12,13,14,15,16,17,18,19,20,21,22,24,148],erk1:638,erk4:639,erk:637,error:100,errorcontrol:149,errorcontrol_default_paramet:150,errorcontrolgener:555,errornorm:566,esdirk3:640,esdirk4:641,event:53,expliciteul:642,explicitmidpoint:643,express:[42,217,579,580],expression_to_code_frag:39,extrapol:151,extrapolation_extrapol:152,face:[435,533],facefunct:436,facefunctionbool:437,facefunctiondoubl:438,facefunctionint:439,facefunctionsizet:440,facet:[441,534],facetarea:[218,601],facetcel:442,facetfunct:443,facetfunctionbool:444,facetfunctiondoubl:445,facetfunctionint:446,facetfunctionsizet:447,facetnorm:602,fem:[207,545,549,553,555,557,561,563,564,567,569,575],fem_solv:206,file:257,file_create_parent_path:258,file_exist:259,find_all_subdomain:618,find_keys_on_one_subdomain:619,find_new_cell_kei:620,find_subdomain:621,finiteel:153,first:20,form:[4,18,22,154,556,557],formmanipul:561,formul:[10,11,21],forwardeul:644,functionassign:221,functionaxpi:220,functionspac:[222,588,595],functionspacebas:589,functionspacefromcpp:590,gener:9,generate_data:24,generate_error_control:543,generate_error_control_form:544,genericadaptivevariationalsolv:155,genericadaptivevariationalsolver_default_paramet:156,genericboundingboxtre:448,genericdofmap:157,genericfil:260,genericfunct:223,genericlinearalgebrafactori:297,genericlinearoper:298,genericlinearsolv:299,genericlusolv:296,genericmatrix:300,genericprecondition:301,genericsparsitypattern:302,generictensor:303,genericvector:304,geometri:[5,6],get_log_level:101,get_tensor_typ:357,git_commit_hash:102,globalparamet:[28,54],globalparameters_default_paramet:55,graph:224,graphbuild:225,graphbuilder_compute_dual_graph:226,graphbuilder_local_graph:227,has_cgal:103,has_cholmod:104,has_exodu:105,has_hdf5:106,has_krylov_solver_method:358,has_krylov_solver_precondition:359,has_lu_solver_method:360,has_mpi:107,has_openmp:108,has_parmeti:109,has_petsc:110,has_petsc_sn:111,has_petsc_tao:112,has_scotch:113,has_slepc:114,has_trilino:115,has_typ:361,has_umfpack:116,has_zlib:117,hdf5attribut:261,hdf5file:262,hierarchicaldirichletbc:158,hierarchicalerrorcontrol:159,hierarchicalform:160,hierarchicalfunct:[161,228,263,449],hierarchicalfunctionspac:[162,229,264,450],hierarchicallinearvariationalproblem:163,hierarchicalmesh:[164,230,265,451],hierarchicalmeshfunctionbool:[165,231,266,452],hierarchicalmeshfunctiondoubl:[166,232,267,453],hierarchicalmeshfunctionint:[167,233,268,454],hierarchicalmeshfunctionsizet:[168,234,269,455],hierarchicalmeshfunctionuint:[169,235,270,456],hierarchicalnonlinearvariationalproblem:170,hilliard:4,homogen:552,hood:21,hyperelast:8,implement:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],implicitdomainmeshgener:457,implicitdomainmeshgenerator_gener:458,implicitdomainmeshgenerator_generate_surfac:459,impliciteul:645,implicitsurfac:460,importhandl:611,includ:1,incompress:12,increase_ord:560,indexset:56,indic:1,info:119,info_stream:120,info_underlin:121,init:122,init_parent_edge_indic:616,intarrai:57,interact:277,interpol:[564,565],intersect:536,intervalmesh:461,intparamet:58,ipow:251,jit:[44,45],krylov_solver_method:363,krylov_solver_precondition:364,krylovsolv:305,krylovsolver_default_paramet:306,la_solv:365,lagrang:236,lagrangeinterpol:237,legendr:238,legendre_d2dx:239,legendre_ddx:240,legendre_ev:241,linear:18,linear_algebra_backend:366,linear_solver_method:367,linearalgebraobject:309,linearoper:310,linearsolv:311,linearsolver_default_paramet:312,linearvariationalproblem:[171,571],linearvariationalsolv:[172,572],linearvariationalsolver_default_paramet:173,list_krylov_solver_method:368,list_krylov_solver_precondition:369,list_linear_algebra_backend:370,list_linear_solver_method:371,list_lu_solver_method:372,list_tim:123,localassembl:174,localassembler_assembl:175,localassembler_assemble_cel:176,localassembler_assemble_exterior_facet:177,localassembler_assemble_interior_facet:178,localmeshdata:462,localsolv:179,log:124,lt_coordin:252,lu_solver_method:373,lusolv:307,lusolver_default_paramet:308,main:623,mark:[23,208],math:30,matrix:313,maxfacetedgelength:603,memori:32,memory_usag:33,mesh2svg:631,mesh:[1,3,9,23,463,535,615,622,626,627,628,630],meshcolor:464,meshcoloring_cell_color:465,meshcoloring_color:466,meshcoloring_color_cel:467,meshcoloring_compute_color:468,meshcoloring_type_to_dim:469,meshconnect:470,meshcoordin:[242,604],meshdata:471,meshdisplac:243,meshdomain:472,mesheditor:473,meshent:474,meshfunct:475,meshfunctionbool:476,meshfunctiondoubl:477,meshfunctionint:478,meshfunctionsizet:479,meshgeometri:480,meshpointintersect:481,meshqual:482,meshquality_radius_ratio:486,meshquality_radius_ratio_histogram_data:483,meshquality_radius_ratio_matplotlib_histogram:484,meshquality_radius_ratio_min_max:485,meshrenumb:487,meshtopolog:488,meshtransform:489,meshtransformation_rot:490,meshtransformation_transl:491,meshvaluecollect:492,meshvaluecollectionbool:493,meshvaluecollectiondoubl:494,meshvaluecollectionint:495,meshvaluecollectionsizet:496,method:12,minfacetedgelength:605,mini:19,mix:[4,10,11],mixedfunctionspac:591,modul:[26,27,28,29,30,32,34,37,40,42,43,44,48,49,118,207,250,256,276,362,535,540,545,549,553,555,557,561,563,564,567,569,575,578,580,587,595,596,607,610,611,615,622,626,627,628,630,632,648,651],monitor_memory_usag:125,mpi:59,mpi_barri:62,mpi_comm:61,mpi_compute_local_rang:63,mpi_gath:64,mpi_global_offset:65,mpi_index_own:66,mpi_is_broadcast:67,mpi_is_receiv:68,mpi_local_rang:69,mpi_max:70,mpi_min:71,mpi_num_process:72,mpi_process_numb:73,mpi_rank:74,mpi_siz:75,mpi_sum:76,mpiinfo:60,multipl:22,multistag:[632,648,651],multistageschem:[180,646,648],multistagesolv:651,navier:12,neumann:13,newtonsolv:314,newtonsolver_default_paramet:315,nonlinear:14,nonlinearproblem:316,nonlinearvariationalproblem:[181,573],nonlinearvariationalsolv:[182,574],nonlinearvariationalsolver_default_paramet:183,norm:[567,568],normal:374,not_working_in_parallel:126,openmpassembl:184,order:20,paramet:[4,8,78],parametervalu:77,period:15,periodicboundarycomput:497,periodicboundarycomputation_compute_periodic_pair:498,periodicboundarycomputation_masters_slav:499,petscbasematrix:317,petscfactori:318,petscfactory_inst:319,petsckrylovsolv:320,petsckrylovsolver_default_paramet:321,petsckrylovsolver_method:322,petsckrylovsolver_precondition:323,petsclinearoper:327,petsclusolv:324,petsclusolver_default_paramet:325,petsclusolver_method:326,petscmatrix:328,petscobject:329,petscobject_petsc_error:330,petscopt:331,petscoptions_clear:332,petscoptions_set:333,petscprecondition:334,petscpreconditioner_default_paramet:335,petscpreconditioner_precondition:336,petscsnessolv:337,petscsnessolver_default_paramet:338,petscsnessolver_method:339,petscuserprecondition:340,petscvector:341,plot:[34,35,278],point:500,pointintegralsolv:[185,649],pointintegralsolver_default_paramet:186,pointsourc:187,poisson:[0,10,11,13,14,15,16,17,22,24],polygon:501,polygonalmeshgener:502,polygonalmeshgenerator_gener:503,polyhedralmeshgener:504,polyhedralmeshgenerator_gener:505,polyhedralmeshgenerator_generate_surface_mesh:506,precondit:18,problem:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24],programm:[26,612,652],progress:79,project:[569,570],pure:13,python:[26,612,652],quick:652,rand:254,rectangl:507,rectanglemesh:508,refer:[26,612,652],refin:[537,628,629],residu:375,restrict:509,rk4:647,rksolver:[188,650],scalar:347,scotch:244,scotch_compute_gp:245,seed:255,set:1,set_log_act:127,set_log_level:128,set_output_stream:129,simpl:7,singular:17,slepceigensolv:342,slepceigensolver_default_paramet:343,solut:12,solv:[575,576],solver:7,sparsitypattern:348,sparsitypatternbuild:189,sparsitypatternbuilder_build:190,sparsitypatternbuilder_build_ccfem:191,spatialcoordin:606,specialfacetfunct:246,specialfunct:607,sphere:510,spheremesh:511,sqr:31,stabil:20,stlfactori:344,stlfactory_inst:345,stlmatrix:346,stoke:[12,18,19,20,21],store:8,stringparamet:80,strong:[18,21],subdomain:[22,23,48,512],submesh:513,subsetiter:514,subspac:247,subsystemsmanag:81,subsystemsmanager_fin:82,subsystemsmanager_init_mpi:83,subsystemsmanager_init_petsc:84,subsystemsmanager_mpi_fin:85,subsystemsmanager_mpi_initi:86,subsystemsmanager_responsible_mpi:87,subsystemsmanager_responsible_petsc:88,summari:130,surface3d:515,svgtool:630,swigimportinfo:49,system:18,systemassembl:[192,546],tabl:89,tableentri:90,taylor:21,tear:562,tensor:24,tensorfunctionspac:592,testfunct:[583,584],tetrahedron:516,tic:131,time:[4,36,37,132,133,134],timer:91,timeseri:193,timeseries_default_paramet:196,timeseries_filename_data:197,timeseries_filename_tim:198,timeserieshdf5:194,timeserieshdf5_default_paramet:195,toc:135,trialfunct:[585,586],triangul:517,triangulate_triangul:518,trilinosprecondition:349,trilinospreconditioner_default_paramet:350,trilinospreconditioner_precondition:351,ublasdensefactori:376,ublasdensefactory_inst:377,ublasdensematrix:378,ublasiluprecondition:379,ublaskrylovsolv:380,ublaskrylovsolver_default_paramet:381,ublaskrylovsolver_method:382,ublaskrylovsolver_precondition:383,ublaslinearoper:384,ublasprecondition:385,ublassparsefactori:386,ublassparsefactory_inst:387,ublassparsematrix:388,ublasvector:389,ufc_functionspac:610,ufcfunctionspac:608,uintarrai:92,umfpacklusolv:352,umfpacklusolver_default_paramet:353,unitcubemesh:519,unitintervalmesh:520,unitsquaremesh:521,unittetrahedronmesh:522,unittrianglemesh:523,usag:624,variabl:93,variat:22,vector:354,vectorfunctionspac:593,vectorspacebasi:355,vertex:524,vertex_to_dof_map:209,vertexfunct:525,vertexfunctionbool:526,vertexfunctiondoubl:527,vertexfunctionint:528,vertexfunctionsizet:529,vertic:538,vtkplotter:271,vtkplotter_all_interact:272,vtkplotter_default_paramet:273,vtkplotter_to_kei:274,warn:136,weak:[18,21],weight:24,write_fil:625,xdmffile:275}})